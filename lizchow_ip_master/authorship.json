[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lizchow":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"# User Guide - Duke","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"*Duke* is an app that helps *you* track and manage ***all*** your tasks!","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"## Contents","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"- [QuickStart](#quickstart)","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"  - [List all tasks](#list-all-tasks)","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"  - [Add task](#add-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"  - [Update task](#update-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"  - [Delete task](#delete-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"  - [Mark task as done](#mark-task-done)","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"  - [Find tasks](#find-tasks)","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"  - [Exit Duke](#exit-duke)","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"- [Usage](#usage)","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"  - [`bye`](#bye---exit-duke)","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"  - [`deadline`](#deadline---add-deadline-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"  - [`delete`](#delete---delete-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"  - [`done`](#done---mark-task-done)","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"  - [`event`](#event---add-event-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"  - [`find`](#find---filter-tasks)","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"  - [`list`](#list---list-all-tasks)","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"  - [`todo`](#todo---add-todo-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"  - [`update`](#update---update-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"## QuickStart","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"1. Ensure that you have Java 11 or above installed in your computer.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"2. Download the latest release from [here](https://github.com/lizchow/ip/releases/tag/A-Release).","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"3. Copy the file to the folder you want to use as the home folder for you Duke.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"4. Run `java -jar duke.jar` in the terminal at the folder. The GUI should appear and look like something below","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"   after a few commands.  ","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"   ![QuickStart of Duke](https://github.com/lizchow/ip/blob/master/docs/QuickStart.png)","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"5. Type in some command in the input box and press Enter. Here are some example commands:","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"   - `list`: List all the tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"   - `todo try app` Add a Todo task with description `try app`","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"   - `bye`: Exit the app","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"6. Refer to the [Features](#features) sections for more features of Duke.","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"### List All Tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"List all the tasks in Duke.  ","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"*Command*: [`list`](#list---list-all-tasks)","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"### Add Task","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"Add a task to the list of tasks in Duke.   ","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"There are 3 types of tasks: ","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"- **Deadline**: Contains the description and deadline of task  ","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"  *Command*: [`deadline [DESCRIPTION] /by [TIME]`](#deadline---add-deadline-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"- **Event**: Contains the descriptions and start and end time of task  ","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"  *Command*: [`event [DESRCRIPTION] /at [TIME]`](#event---add-event-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"- **Todo**: Contains the description of task  ","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"  *Command*: [`todo [DESCRIPTION]`](#todo---add-todo-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"### Update Task","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"Update a task at the given index in Duke.  ","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"*Command*: [`update INDEX [DESCRIPTION] [/date TIME]`](#update---update-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"### Delete Task","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"Delete a task at the given index in Duke.   ","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"*Command*: [`delete INDEX`](#delete---delete-task)","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"### Mark Task Done","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"Mark a task at the given index as done in Duke.  ","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"*Command*: [`done INDEX`](#done---mark-task-done)","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"### Find Tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"Returns a list of tasks that contains the search query in the **description** of the tasks.  ","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"*Command*: [`find KEYWORD`](#find---filter-tasks)","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"### Exit Duke","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"Exit Duke and close the application.  ","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"*Command*: [`bye`](#bye---exit-duke)","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"### `bye` - Exit Duke","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"Exit the application.","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"lizchow"},"content":"Command: ","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"lizchow"},"content":"`bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"lizchow"},"content":"`bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"lizchow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"lizchow"},"content":"Displays exit message and the application closes.","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"lizchow"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"lizchow"},"content":"### `deadline` - Add Deadline Task","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"lizchow"},"content":"Adds a Deadline task to the list of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"lizchow"},"content":"A deadline task contains the description and the deadline of the task.  ","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"lizchow"},"content":"Note that deadline time should be in the format of `dd-M-YYYY HH:mm`.","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"lizchow"},"content":"Command: ","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"lizchow"},"content":"`deadline [DESCRIPTION] /by [TIME]`","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"lizchow"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"lizchow"},"content":"`deadline return book /by 09-09-2021 17:00`","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"lizchow"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"lizchow"},"content":"Displays the new task and the number of tasks in Duke.","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"lizchow"},"content":"Got it. I\u0027ve  added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"lizchow"},"content":"  [D][ ] return book (by: Sep 09 2021 5:00PM)","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"lizchow"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"lizchow"},"content":"### `delete` - Delete Task","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"lizchow"},"content":"Delete a task at the given index.","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"lizchow"},"content":"If no task exist at the index, Duke will display an error message.","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"lizchow"},"content":"Command:","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"lizchow"},"content":"`delete INDEX`","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"lizchow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"lizchow"},"content":"`delete 1`","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"lizchow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"lizchow"},"content":"Displays the \"deleted\" task and number of tasks left.","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"lizchow"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"lizchow"},"content":"  [D][ ] return book (by: Sep 09 2021 5:00PM)","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"lizchow"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"lizchow"},"content":"### `done` - Mark Task Done","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"lizchow"},"content":"Mark a task at the given index as done. ","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"lizchow"},"content":"If the task is already done, Duke will display an error message.","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"lizchow"},"content":"Command:","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"lizchow"},"content":"`done INDEX`","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"lizchow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"lizchow"},"content":"`done 1`","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"lizchow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"lizchow"},"content":"Displays the \"marked\" task and success message.","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"lizchow"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"lizchow"},"content":"  [D][X] return book (by: Sep 09 2021 5:00PM)","lastModifiedDate":"2021-09-15"},{"lineNumber":158,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"lizchow"},"content":"### `event` - Add Event Task","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"lizchow"},"content":"Adds an Event task to the list of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"lizchow"},"content":"An event task contains the description and the start and end time of the task.  ","lastModifiedDate":"2021-09-15"},{"lineNumber":162,"author":{"gitId":"lizchow"},"content":"Note that start and end time can be any string (i.e. `Monday 2-4pm`)","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"lizchow"},"content":"Command:","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"lizchow"},"content":"`event [DESCRIPTION] /at [TIME]`","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"lizchow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"lizchow"},"content":"`event watch movie /at Monday 2-4pm`","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"lizchow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"lizchow"},"content":"Displays the new task and the number of tasks in Duke.","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"lizchow"},"content":"Got it. I\u0027ve  added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"lizchow"},"content":"  [E][ ] watch movie (at: Monday 2-4pm)","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"lizchow"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"lizchow"},"content":"### `find` - Filter Tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"lizchow"},"content":"Finds all the tasks with descriptions containing the search query.","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"lizchow"},"content":"Command:","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":187,"author":{"gitId":"lizchow"},"content":"`find [KEYWORD]`","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"lizchow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"lizchow"},"content":"`find movie`","lastModifiedDate":"2021-09-15"},{"lineNumber":192,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"lizchow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":194,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"lizchow"},"content":"Displays all the tasks with the keyword.","lastModifiedDate":"2021-09-15"},{"lineNumber":196,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"lizchow"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":199,"author":{"gitId":"lizchow"},"content":"1. [E][ ] watch movie (at: Monday 2-4pm)","lastModifiedDate":"2021-09-15"},{"lineNumber":200,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":201,"author":{"gitId":"lizchow"},"content":"### `list` - List All Tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":202,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":203,"author":{"gitId":"lizchow"},"content":"List all the tasks in Duke.","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":205,"author":{"gitId":"lizchow"},"content":"Command:","lastModifiedDate":"2021-09-15"},{"lineNumber":206,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":207,"author":{"gitId":"lizchow"},"content":"`list`","lastModifiedDate":"2021-09-15"},{"lineNumber":208,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":209,"author":{"gitId":"lizchow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":210,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":211,"author":{"gitId":"lizchow"},"content":"`list`","lastModifiedDate":"2021-09-15"},{"lineNumber":212,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":213,"author":{"gitId":"lizchow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":214,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":215,"author":{"gitId":"lizchow"},"content":"Displays all the tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":216,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":217,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":218,"author":{"gitId":"lizchow"},"content":"1. [D][ ] return book (by: Sep 09 2021 5:00PM)","lastModifiedDate":"2021-09-15"},{"lineNumber":219,"author":{"gitId":"lizchow"},"content":"2. [E][ ] watch movie (at: Monday 2-4pm)","lastModifiedDate":"2021-09-15"},{"lineNumber":220,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":221,"author":{"gitId":"lizchow"},"content":"### `todo` - Add Todo Task","lastModifiedDate":"2021-09-15"},{"lineNumber":222,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":223,"author":{"gitId":"lizchow"},"content":"Adds a Todo task to the list of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":224,"author":{"gitId":"lizchow"},"content":"A Todo task contains the description of the task.","lastModifiedDate":"2021-09-15"},{"lineNumber":225,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":226,"author":{"gitId":"lizchow"},"content":"Command:","lastModifiedDate":"2021-09-15"},{"lineNumber":227,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":228,"author":{"gitId":"lizchow"},"content":"`todo [DESCRIPTION]`","lastModifiedDate":"2021-09-15"},{"lineNumber":229,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":230,"author":{"gitId":"lizchow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":231,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":232,"author":{"gitId":"lizchow"},"content":"`todo finish report`","lastModifiedDate":"2021-09-15"},{"lineNumber":233,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":234,"author":{"gitId":"lizchow"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":235,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":236,"author":{"gitId":"lizchow"},"content":"Displays the new task and the number of tasks in Duke.","lastModifiedDate":"2021-09-15"},{"lineNumber":237,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":238,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":239,"author":{"gitId":"lizchow"},"content":"Got it. I\u0027ve  added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":240,"author":{"gitId":"lizchow"},"content":"  [T][ ] finish report","lastModifiedDate":"2021-09-15"},{"lineNumber":241,"author":{"gitId":"lizchow"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":242,"author":{"gitId":"lizchow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":243,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":244,"author":{"gitId":"lizchow"},"content":"### `update` - Update Task","lastModifiedDate":"2021-09-15"},{"lineNumber":245,"author":{"gitId":"lizchow"},"content":"Update the description and time of a task.","lastModifiedDate":"2021-09-15"},{"lineNumber":246,"author":{"gitId":"lizchow"},"content":"Note that the time format follows the type of the task ","lastModifiedDate":"2021-09-15"},{"lineNumber":247,"author":{"gitId":"lizchow"},"content":"(i.e. If the task is a **Deadline**, the time should be in `dd-M-YYYY HH:mm` ","lastModifiedDate":"2021-09-15"},{"lineNumber":248,"author":{"gitId":"lizchow"},"content":"and if it is a **Todo** task, a new time cannot be inserted.)","lastModifiedDate":"2021-09-15"},{"lineNumber":249,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":250,"author":{"gitId":"lizchow"},"content":"Command:","lastModifiedDate":"2021-09-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":252,"author":{"gitId":"lizchow"},"content":"`update INDEX [DESCRIPTION] [/date time]`","lastModifiedDate":"2021-09-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":256,"author":{"gitId":"lizchow"},"content":"`update 2 watch Avenger /date Monday 10-12pm`","lastModifiedDate":"2021-09-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":260,"author":{"gitId":"lizchow"},"content":"Displays the updated task.","lastModifiedDate":"2021-09-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":262,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":263,"author":{"gitId":"lizchow"},"content":"Nice! I\u0027ve updated this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":264,"author":{"gitId":"lizchow"},"content":"  [E][ ] watch Avenger (at: Monday 10-12pm)","lastModifiedDate":"2021-09-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"lizchow":239,"-":26}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"        // Some magic numbers to get the circle to fit nicely","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"        double circleHeight \u003d displayPicture.getFitHeight() / 2;","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"        double circleWidth \u003d displayPicture.getFitWidth() / 2;","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"        displayPicture.setClip(","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"                new Circle(circleWidth - 2, circleHeight, displayPicture.getFitHeight() / 2.1));","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"        db.dialog.getStyleClass().add(\"user-fill\");","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"        return db;","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"    public static DialogBox getDukeDialog(Pair\u003cString, Boolean\u003e response, Image img) {","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"        String dukeResponse \u003d response.getFirst();","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"        boolean isError \u003d response.getSecond();","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"        DialogBox db \u003d new DialogBox(dukeResponse, img);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"        db.flip();","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"        if (isError) {","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"            db.dialog.getStyleClass().add(\"error-fill\");","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"            db.dialog.getStyleClass().add(\"duke-fill\");","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"        return db;","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lizchow":76}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code Duke} object. {@code Duke} responds to","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":" * predefined user inputs and outputs various messages in response to the user","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" * input.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"public class Duke {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"     * Constructs a {@code Duke} object.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"    public Duke() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"        this.storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"     * Shows a welcome message when {@code Duke} starts running. Continuously takes","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"     * in user inputs until \"bye\" is entered.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"                Command c \u003d Parser.parse(scanner.nextLine().trim());","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"        scanner.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"     * Returns a {@code Pair} where the first element is Duke\u0027s response to the input","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"     * and the second element contains the validness of the input.","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"     * @return {@code Pair\u003cString, Boolean\u003e} where first element is Duke\u0027s response","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"     *         and the second element is true if input is invalid, false otherwise.q","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"    public Pair\u003cString, Boolean\u003e getResponse(String input) {","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"            Command c \u003d Parser.parse(input.trim());","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"            return new Pair\u003cString, Boolean\u003e(c.execute(tasks, ui, storage), false);","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"            return new Pair\u003cString, Boolean\u003e(ui.showError(e.getMessage()), true);","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"    public Pair\u003cString, Boolean\u003e getWelcomeMessage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"        return new Pair\u003cString, Boolean\u003e(ui.showWelcome(), false);","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lizchow":77,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code DukeException}. This custom exception extends","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":" * {@code RuntimeException} is thrown whenever {@code Duke} runs into a known","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":" * error or exception.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"     * Constructs a new {@code DukeException} with the given error message.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"     * @param errMessage Error message to be displayed.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    public DukeException(String errMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"        super(errMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lizchow":17}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"public class Launcher {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lizchow":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"            stage.show();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lizchow":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/pokemon.jpg\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/snorlax.png\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"                DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage)","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"            handleExit();","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"        Pair\u003cString, Boolean\u003e response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"    private void handleExit() {","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"        new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"            public void run () {","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"                System.exit(0);","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"        }, 1000);","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lizchow":69}},{"path":"src/main/java/duke/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code Pair}. A {@code Pair} is made up of 2 items.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":" * It is mostly used when there is a need to return 2 items.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"public class Pair\u003cS, T\u003e {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    private final S first;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"    private final T second;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"     * Constructs a new Pair with the given first and second arguments.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"     * @param first  First generic item.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"     * @param second Second generic item.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    public Pair(S first, T second) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"        this.first \u003d first;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"        this.second \u003d second;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     * Returns the first item.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * @return The first item.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"    public S getFirst() {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"        return first;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"     * Returns the second item.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"     * @return The second item.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"    public T getSecond() {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"        return second;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"        if (other instanceof Pair) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"            Pair\u003c?, ?\u003e otherPair \u003d (Pair\u003c?, ?\u003e) other;","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"            return otherPair.first.equals(this.first) \u0026\u0026 this.second.equals(otherPair.second);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":53}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"import duke.command.UpdateCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code Parser}. It parses user inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"     * Returns a {@code Command} that contains parsed and trimmed inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"     * @param input Raw user input.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     * @return A {@code Command} containing parsed inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     * @throws DukeException User input not in the list of predefined keywords.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"        String inputCommand \u003d input.split(\" \")[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"        String parsedMessage \u003d input.replace(inputCommand, \"\").trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"        switch (inputCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"            return parseByeInput();","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"            return parseDeadlineInput(parsedMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"            return parseDeleteInput(parsedMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"        case \"done\":","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"            return parseDoneInput(parsedMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"            return parseEventInput(parsedMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"        case \"find\":","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"            return parseFindInput(parsedMessage);","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"        case \"list\":","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"            return parseListInput();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"            return parseTodoInput(parsedMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"        case \"update\":","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"            return parseUpdateInput(parsedMessage);","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"    private static Command parseByeInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"    private static Command parseDeadlineInput(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"            String taskDescription \u003d input.replaceAll(\"/by.*\", \"\").trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"            validateDescription(taskDescription, \"deadline\");","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"            String deadline \u003d input.split(\"/by\")[1].trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"            return new DeadlineCommand(taskDescription, deadline);","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"The end time of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"    private static Command parseDeleteInput(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"            validateDescription(input, \"delete\");","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"            int taskNo \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"            return new DeleteCommand(String.valueOf(taskNo));","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Enter a number for a delete action\");","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"lizchow"},"content":"    private static Command parseDoneInput(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"lizchow"},"content":"            validateDescription(input, \"done\");","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"lizchow"},"content":"            int taskNo \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"lizchow"},"content":"            return new DoneCommand(String.valueOf(taskNo));","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"lizchow"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Enter a number for a done action!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"lizchow"},"content":"    private static Command parseEventInput(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"lizchow"},"content":"            String taskDescription \u003d input.replaceAll(\"/at.*\", \"\").trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"lizchow"},"content":"            validateDescription(taskDescription, \"event\");","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"lizchow"},"content":"            String deadline \u003d input.split(\"/at\")[1].trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"lizchow"},"content":"            return new EventCommand(taskDescription, deadline);","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"lizchow"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"The start and end time of a event cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"lizchow"},"content":"    private static Command parseFindInput(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"lizchow"},"content":"        validateDescription(input, \"find\");","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"lizchow"},"content":"        return new FindCommand(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"lizchow"},"content":"    private static Command parseListInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"lizchow"},"content":"        return new ListCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"lizchow"},"content":"    private static Command parseTodoInput(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"lizchow"},"content":"        validateDescription(input, \"todo\");","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"lizchow"},"content":"        return new TodoCommand(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"lizchow"},"content":"    private static Command parseUpdateInput(String input) {","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"lizchow"},"content":"            validateDescription(input, \"update\");","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"lizchow"},"content":"            String[] splitInputs \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"lizchow"},"content":"            String[] splitTaskTitleDate \u003d splitInputs[1].split(\"/date\", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"lizchow"},"content":"            int taskNo \u003d Integer.parseInt(splitInputs[0]) - 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"lizchow"},"content":"            if (splitTaskTitleDate.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"lizchow"},"content":"                return new UpdateCommand(UpdateCommand.UpdateType.TITLE, String.valueOf(taskNo),","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"lizchow"},"content":"                        splitTaskTitleDate[0].trim());","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"lizchow"},"content":"            } else if (splitTaskTitleDate.length \u003d\u003d 2 \u0026\u0026 splitTaskTitleDate[0].equals(\"\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"lizchow"},"content":"                return new UpdateCommand(UpdateCommand.UpdateType.DATE, String.valueOf(taskNo),","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"lizchow"},"content":"                        splitTaskTitleDate[1].trim());","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"lizchow"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"lizchow"},"content":"                return new UpdateCommand(UpdateCommand.UpdateType.DATE_TITLE, String.valueOf(taskNo),","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"lizchow"},"content":"                        splitTaskTitleDate[0].trim(), splitTaskTitleDate[1].trim());","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":134,"author":{"gitId":"lizchow"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":135,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Enter a number for a update action!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":136,"author":{"gitId":"lizchow"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Invalid format for update command.\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":138,"author":{"gitId":"lizchow"},"content":"                    + \"Only the following formats are accepted:\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"lizchow"},"content":"                    + \"1. update [taskNo] [task title] /date [date]\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":140,"author":{"gitId":"lizchow"},"content":"                    + \"2. update [taskNo] [task title]\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":141,"author":{"gitId":"lizchow"},"content":"                    + \"3. update [taskNo] /date [date]\");","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":145,"author":{"gitId":"lizchow"},"content":"    private static void validateDescription(String input, String type) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"lizchow"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(String.format(\"The description of a %s cannot be empty.\", type));","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":150}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code Storage} to read and write to files.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     * Constructs a new {@code Storage} with the given filePath.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * @param filePath File path of the txt file.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"     * Reads file from the file path and returns a list of {@code Task} in the file.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"     * @return An ArrayList of {@code Task}","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"     * @throws DukeException unknown input when parsing file","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"        Scanner scanner \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"            int lineCount \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"            scanner \u003d new Scanner(new File(filePath));","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"                lineCount++;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"                tasks.add(handleFileInput(scanner.nextLine(), lineCount));","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"            createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"        } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"            if (scanner !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"                scanner.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"    private Task handleFileInput(String input, int lineNo) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"            String fileSplitRegex \u003d \" \\\\| \";","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"            String action \u003d input.split(fileSplitRegex)[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"            boolean isDone \u003d convertIsDoneStrToBool(input.split(fileSplitRegex)[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"            String title \u003d input.split(fileSplitRegex)[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"            switch (action) {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"            case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"                return new Todo(title, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"            case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"                String endDate \u003d input.split(fileSplitRegex)[3];","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"                return new Deadline(title, endDate, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"            case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"                String deadline \u003d input.split(fileSplitRegex)[3];","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"                return new Event(title, deadline, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"            default:","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"                throw new DukeException(String.format(","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"                        \"Unknown action type at line %d. \" + \"Only \\\"T\\\", \\\"D\\\", \\\"E\\\" are accepted.\", lineNo));","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"lizchow"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(String.format(\"Line %d is missing input values!\", lineNo));","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"lizchow"},"content":"     * Writes to file at the specified file path with the given tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"lizchow"},"content":"     * @param tasks Tasks to be written to be file.","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"lizchow"},"content":"     * @throws DukeException IOException occured when writing to file.","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"lizchow"},"content":"    public void writeToFile(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"lizchow"},"content":"        PrintWriter printWriter \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"lizchow"},"content":"            printWriter \u003d new PrintWriter(new FileWriter(filePath));","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"lizchow"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"lizchow"},"content":"                printWriter.println(task.toFileString());","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"lizchow"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"lizchow"},"content":"            createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"lizchow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Unable to write to file\");","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"lizchow"},"content":"        } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"lizchow"},"content":"            if (printWriter !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"lizchow"},"content":"                printWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"lizchow"},"content":"    private boolean convertIsDoneStrToBool(String s) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"lizchow"},"content":"        if (s.equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"lizchow"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"lizchow"},"content":"        } else if (s.equals(\"0\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"lizchow"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"lizchow"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Invalid input for isDone. Only 0 or 1 is accepted.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"lizchow"},"content":"    private void createNewFile() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"lizchow"},"content":"            File dir \u003d new File(\"./data\");","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"lizchow"},"content":"            dir.mkdirs();","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"lizchow"},"content":"            File file \u003d new File(dir, \"duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"lizchow"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"lizchow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Unable to create new file!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":128}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code TaskList} which handles all the task","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" * operations related to {@code Task}.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"     * Constructs a new {@code TaskList} with the given tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"     * @param tasks An ArrayList of {@code Task}.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * Returns all the tasks in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"     * @return All tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"     * Returns the size of the tasks in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"     * @return Integer representing the size of the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"    public int size() {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"     * Returns the last task in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"     * @return A {@code Task}.","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"    public Task lastTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"        return tasks.get(tasks.size() - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"     * Adds a {@code Todo} task into tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"     * @param title Title of new {@code Todo}.","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"    public void addTodoTask(String title) {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Todo(title));","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"     * Adds a {@code Deadline} task into tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"     * @param title    Title of new {@code Deadline}.","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"     * @param deadline Deadline of new {@code Deadline}.","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"    public void addDeadlineTask(String title, String deadline) {","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Deadline(title, deadline));","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"     * Adds a {@code Event} task into tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"     * @param title    Title of new {@code Event}.","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"     * @param deadline Deadline of new {@code Event}.","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"lizchow"},"content":"    public void addEventTask(String title, String deadline) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Event(title, deadline));","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"lizchow"},"content":"     * Deletes a task at the given taskNo, starting at index 0.","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"lizchow"},"content":"     * @param taskNo Index of task to be deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"lizchow"},"content":"     * @return The deleted {@code Task}.","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"lizchow"},"content":"     * @throws DukeException Nothing in the list to be deleted, or task number out","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"lizchow"},"content":"     *                       of valid range.","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"lizchow"},"content":"    public Task deleteTask(int taskNo) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"lizchow"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Nothing in the list to delete!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"lizchow"},"content":"            Task task \u003d tasks.get(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"lizchow"},"content":"            tasks.remove(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"lizchow"},"content":"            return task;","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"lizchow"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(String.format(\"Enter a valid number between 1 - %d\", tasks.size()));","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"lizchow"},"content":"     * Marks a {@code Task} as done in the given task number, starting with index 0.","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"lizchow"},"content":"     * @param taskNo Index of {@code Task} to be marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"lizchow"},"content":"     * @return A {@code Pair} containing the previous status of {@code Task} and the","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"lizchow"},"content":"     * {@code Task} at the given index.","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"lizchow"},"content":"     * @throws DukeException Nothing in the list to be marked, or task number out","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"lizchow"},"content":"     *                       of valid range.","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"lizchow"},"content":"    public Pair\u003cBoolean, Task\u003e markTaskDone(int taskNo) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"lizchow"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Nothing in the list!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"lizchow"},"content":"            Task task \u003d tasks.get(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"lizchow"},"content":"            return new Pair\u003cBoolean, Task\u003e(!task.markAsDone(), task);","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"lizchow"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(String.format(\"Enter a valid number between 1 - %d\", tasks.size()));","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"lizchow"},"content":"     * Filters tasks with title containing the given query keyword.","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"lizchow"},"content":"     * @param query filter term.","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"lizchow"},"content":"     * @return An arraylist of tasks with title containing the query keyword.","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"lizchow"},"content":"    public ArrayList\u003cTask\u003e searchTasks(String query) {","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"lizchow"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"lizchow"},"content":"            if (task.contains(query)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"lizchow"},"content":"                result.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"lizchow"},"content":"        return result;","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"lizchow"},"content":"     * Updates the date of a {@code Task} in the tasklist.","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"lizchow"},"content":"     * @param taskNo Index of {@code Task} to be updated.","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"lizchow"},"content":"     * @param date   New date of the {@code Task}","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":151,"author":{"gitId":"lizchow"},"content":"     * @return Updated Task","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"lizchow"},"content":"     * @throws DukeException Invalid taskNo","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"lizchow"},"content":"    public Task updateDate(int taskNo, String date) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":155,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":156,"author":{"gitId":"lizchow"},"content":"            Task task \u003d tasks.get(taskNo);","lastModifiedDate":"2021-09-07"},{"lineNumber":157,"author":{"gitId":"lizchow"},"content":"            return task.setDate(date);","lastModifiedDate":"2021-09-07"},{"lineNumber":158,"author":{"gitId":"lizchow"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":159,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(String.format(\"Enter a valid number between 1 - %d\", tasks.size()));","lastModifiedDate":"2021-09-07"},{"lineNumber":160,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":161,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":162,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":163,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":164,"author":{"gitId":"lizchow"},"content":"     * Updates the title of a {@code Task} in the tasklist.","lastModifiedDate":"2021-09-07"},{"lineNumber":165,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":166,"author":{"gitId":"lizchow"},"content":"     * @param taskNo Index of {@code Task} to be updated.","lastModifiedDate":"2021-09-07"},{"lineNumber":167,"author":{"gitId":"lizchow"},"content":"     * @param title  New title of the {@code Task}","lastModifiedDate":"2021-09-07"},{"lineNumber":168,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":169,"author":{"gitId":"lizchow"},"content":"     * @return Updated Task","lastModifiedDate":"2021-09-07"},{"lineNumber":170,"author":{"gitId":"lizchow"},"content":"     * @throws DukeException Invalid taskNo","lastModifiedDate":"2021-09-07"},{"lineNumber":171,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":172,"author":{"gitId":"lizchow"},"content":"    public Task updateTitle(int taskNo, String title) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":173,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":174,"author":{"gitId":"lizchow"},"content":"            Task task \u003d tasks.get(taskNo);","lastModifiedDate":"2021-09-07"},{"lineNumber":175,"author":{"gitId":"lizchow"},"content":"            return task.setTitle(title);","lastModifiedDate":"2021-09-07"},{"lineNumber":176,"author":{"gitId":"lizchow"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":177,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(String.format(\"Enter a valid number between 1 - %d\", tasks.size()));","lastModifiedDate":"2021-09-07"},{"lineNumber":178,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":179,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":180,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":181,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":182,"author":{"gitId":"lizchow"},"content":"     * Updates the title and date of a {@code Task} in the tasklist.","lastModifiedDate":"2021-09-07"},{"lineNumber":183,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":184,"author":{"gitId":"lizchow"},"content":"     * @param taskNo Index of {@code Task} to be updated.","lastModifiedDate":"2021-09-07"},{"lineNumber":185,"author":{"gitId":"lizchow"},"content":"     * @param title  New title of the {@code Task}","lastModifiedDate":"2021-09-07"},{"lineNumber":186,"author":{"gitId":"lizchow"},"content":"     * @param date   New date of the {@code Task}","lastModifiedDate":"2021-09-07"},{"lineNumber":187,"author":{"gitId":"lizchow"},"content":"     * @return Updated Task","lastModifiedDate":"2021-09-07"},{"lineNumber":188,"author":{"gitId":"lizchow"},"content":"     * @throws DukeException Invalid taskNo","lastModifiedDate":"2021-09-07"},{"lineNumber":189,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":190,"author":{"gitId":"lizchow"},"content":"    public Task updateDateTitle(int taskNo, String title, String date) {","lastModifiedDate":"2021-09-07"},{"lineNumber":191,"author":{"gitId":"lizchow"},"content":"        Task updatedDateTask \u003d updateDate(taskNo, date);","lastModifiedDate":"2021-09-07"},{"lineNumber":192,"author":{"gitId":"lizchow"},"content":"        return updatedDateTask.setTitle(title);","lastModifiedDate":"2021-09-07"},{"lineNumber":193,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":194,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":195,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":196,"author":{"gitId":"lizchow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-27"},{"lineNumber":197,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":198,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"lizchow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-26"},{"lineNumber":200,"author":{"gitId":"lizchow"},"content":"        if (other instanceof TaskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":201,"author":{"gitId":"lizchow"},"content":"            TaskList otherTaskList \u003d (TaskList) other;","lastModifiedDate":"2021-08-26"},{"lineNumber":202,"author":{"gitId":"lizchow"},"content":"            return this.tasks.equals(otherTaskList.tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":203,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":204,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":205,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":206,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":206}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code Ui} and handles all the interactions with the","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" * user.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    private static final String HORIZONTAL_LINE \u003d \"-------------------------------------------------------------\";","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    private static final String ADD_FORMAT \u003d \"Got it. I\u0027ve  added this task:\\n  %s\";","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    private static final String ERROR_FORMAT \u003d \"☹ OOPS!!! %s\";","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    private static final String TASK_COUNT_FORMAT \u003d \"Now you have %d %s in the list.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    private static final String DONE_FORMAT \u003d \"Nice! I\u0027ve marked this task as done:\\n  %s\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"    private static final String DELETE_FORMAT \u003d \"Noted. I\u0027ve removed this task:\\n  %s\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    private static final String UPDATE_FORMAT \u003d \"Nice! I\u0027ve updated this task:\\n  %s\";","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     * Displays the welcome message when the app starts running.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * @return String representation of the welcome message.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"        return printMessage(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"     * Displays a nicely formatted error message with the given message.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"     * @param message Error message to be displayed.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"     * @return String representation of the error message.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"    public String showError(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"        return printMessage(String.format(ERROR_FORMAT, message));","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"     * Displays a nicely formatted message of the new task and the current task","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"     * count.","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"     * @param task       {@code Task} to be displayed.","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"     * @param taskLength Number of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"     * @return String representation of the task and the task count.","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"    public String showNewTask(Task task, int taskLength) {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"        return printMessageWithTaskCount(ADD_FORMAT, task, taskLength);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"     * Displays a nicely formatted message of the deleted task and the task count.","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"     * @param task       {@code Task} to be displayed.","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"     * @param taskLength Number of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"     * @return String representation of the task and the task count.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"    public String showDeletedTask(Task task, int taskLength) {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"        return printMessageWithTaskCount(DELETE_FORMAT, task, taskLength);","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"     * Displays a nicely formatted message of the done task.","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"     * @param task {@code Task} to be displayed.","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"    public String showDoneTask(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"        return printMessage(String.format(DONE_FORMAT, task));","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"lizchow"},"content":"    public String showUpdatedTask(Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"lizchow"},"content":"        return printMessage(String.format(UPDATE_FORMAT, task));","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"lizchow"},"content":"     * Shows the exit message.","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"lizchow"},"content":"    public String showExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"lizchow"},"content":"        return printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"lizchow"},"content":"     * Displays the given tasks in a nicely formatted manner.","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"lizchow"},"content":"     * @param tasks An ArrayList of {@code Task} to be displayed.","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"lizchow"},"content":"     * @return String representation of the tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"lizchow"},"content":"    public String showTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"lizchow"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"lizchow"},"content":"            message.add(\"Nothing in the list!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"lizchow"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"lizchow"},"content":"            message \u003d IntStream.range(0, tasks.size())","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"lizchow"},"content":"                    .mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, tasks.get(i).toString()))","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"lizchow"},"content":"                    .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"lizchow"},"content":"        return printMessage(message);","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"lizchow"},"content":"     * Displays the filtered tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"lizchow"},"content":"     * @param tasks Tasks to be displayed.","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"lizchow"},"content":"     * @return String representation of the tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"lizchow"},"content":"    public String showFilteredTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cString\u003e message \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"lizchow"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"lizchow"},"content":"            message.add(\"No matching tasks found in the list.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"lizchow"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"lizchow"},"content":"            message.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"lizchow"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"lizchow"},"content":"                message.add(String.format(\"%d. %s\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"lizchow"},"content":"        return printMessage(message);","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"lizchow"},"content":"    private void printWithTabIndent(String str) {","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"lizchow"},"content":"        System.out.println(\"\\t\" + str);","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"lizchow"},"content":"    private void printLine() {","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"lizchow"},"content":"        printWithTabIndent(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"lizchow"},"content":"    private String printMessage(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"lizchow"},"content":"        printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"lizchow"},"content":"        printWithTabIndent(message.replace(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"lizchow"},"content":"        printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"lizchow"},"content":"        return message;","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"lizchow"},"content":"    private String printMessage(ArrayList\u003cString\u003e message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"lizchow"},"content":"        String joinedMessages \u003d String.join(\"\\n\", message);","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"lizchow"},"content":"        printLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"lizchow"},"content":"        printWithTabIndent(joinedMessages.replace(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"lizchow"},"content":"        printLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"lizchow"},"content":"        return joinedMessages;","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"lizchow"},"content":"    private String printMessageWithTaskCount(String format, Task task, int taskLength) {","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"lizchow"},"content":"        return printMessage(","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"lizchow"},"content":"                String.format(format + \"\\n\" + TASK_COUNT_FORMAT, task, taskLength, taskLength \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":157}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":" * The {@code Command} class represents a user input command.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"    protected String[] args;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"     * Constructs a new {@code Command} class.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    public Command() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"        this.args \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     * Constructs a new {@code Command} class with the specified args.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * @param args An array of {@code String} required to construct a {@code Task}","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     *             object.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    public Command(String ... args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"        this.args \u003d args;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"     * Prints to the terminal of the status of operations performed by the","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"     * {@code Command}. Writes to the storage if tasks is modified.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"     * @param tasks   the tasklist to be modified.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"     * @param ui      responsible for printing to the terminal.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"     * @param storage stores all the tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"     * @return String message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"     * Indicates whether the program should exit after this {@code Command}.","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"     * @return {@code true} if the program should exit, {@code false} otherwise.","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"    };","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"        if (other instanceof Command) {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"            return Arrays.equals(((Command) other).args, this.args);","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":62}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code DeadlineCommand}. User input for a","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":" * {@code DeadlineCommand} starts with \"deadline\".","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"     * Constructor for a {@code DeadlineCommand}","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"     * @param title   Title of the new task.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"     * @param endDate End date of the new task.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    public DeadlineCommand(String title, String endDate) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"        super(title, endDate);","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     * Adds {@code Deadline} to tasks and writes to storage. Displays the new task in the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * @param tasks   the tasklist to be modified.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     * @param ui      responsible for printing to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"     * @param storage stores all the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"     * @return String message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"        assert args.length \u003d\u003d 2 : \"Deadline Command should only store 2 arguments\";","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"        tasks.addDeadlineTask(args[0], args[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"        return ui.showNewTask(tasks.lastTask(), tasks.size());","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":40}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code DeleteCommand}. User input for a","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":" * {@code DeleteCommand} starts with \"delete\".","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"     * Constructor for a {@code DeleteCommand}","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"     * @param taskNo String representation of the task","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"     *               number of the task to be deleted.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"    public DeleteCommand(String taskNo) {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"        super(taskNo);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     * Deletes a task with the given task number. Writes to storage after deletion.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * Displays the deleted task in the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"     * @param tasks   the tasklist to be modified.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"     * @param ui      responsible for printing to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"     * @param storage stores all the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"     * @return String message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"        assert args.length \u003d\u003d 1 : \"Delete Command should only store 1 argument\";","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"        Task task \u003d tasks.deleteTask(Integer.parseInt(args[0]));","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"        return ui.showDeletedTask(task, tasks.size());","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":42}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import duke.Pair;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code DoneCommand}. User input for a","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" * {@code DoneCommand} starts with \"done\".","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"     * Constructor for a {@code DeleteCommand}","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"     * @param taskNo String representation of the task number.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    public DoneCommand(String taskNo) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"        super(taskNo);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * Marks a {@code Task} as done and writes to storage. If task is","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     * already done, ui will display an error message.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"     * @param tasks   the tasklist to be modified.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"     * @param ui      responsible for printing to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"     * @param storage stores all the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"     * @return String message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"        assert args.length \u003d\u003d 1 : \"Done Command should only store 1 argument\";","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"        int taskNo \u003d Integer.parseInt(args[0]);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"        Pair\u003cBoolean, Task\u003e statusTaskPair \u003d tasks.markTaskDone(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"        boolean isTaskAlreadyDone \u003d statusTaskPair.getFirst();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"        Task task \u003d statusTaskPair.getSecond();","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"        if (isTaskAlreadyDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(String.format(\"Task %s is already done!\\n  %s\", taskNo + 1, task));","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"            return ui.showDoneTask(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":52}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code EventCommand}. User input for a","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":" * {@code EventCommand} starts with \"event\".","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"     * Constructor for a {@code EventCommand}","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"     * @param title    Title of the new task.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"     * @param deadline Deadline of the new task.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    public EventCommand(String title, String deadline) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"        super(title, deadline);","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     * Adds a {@code Event} to tasks and writes to storage. Displays the new task in the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * @param tasks   the tasklist to be modified.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     * @param ui      responsible for printing to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"     * @param storage stores all the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"     * @return String message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"        assert args.length \u003d\u003d 2 : \"Event Command should only store 2 arguments\";","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"        tasks.addEventTask(args[0], args[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"        return ui.showNewTask(tasks.lastTask(), tasks.size());","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":40}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code ExitCommand}. User input for a","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":" * {@code ExitCommand} starts with \"bye\".","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"     * Constructor for a {@code ExitCommand}.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"        super();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"     * Writes to storage and ui displays an exit message.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"     * @param tasks   the tasklist to be modified.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     * @param ui      responsible for printing to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     * @param storage stores all the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     * @return String message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"        return ui.showExit();","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"     * Returns {@code true}. Program should terminate after this {@code ExitCommand}.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"     * @return {@code true}","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"        return other instanceof ExitCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":50}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"     * Constructor for a {@code DeleteCommand}","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"     * @param keyword Search term.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"        super(keyword);","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"     * Searches for a tasks based on the given keyword and displays the filtered tasks in the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"     * @param tasks   the tasklist to be modified.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"     * @param ui      responsible for printing to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     * @param storage stores all the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * @return String message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d tasks.searchTasks(args[0]);","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"        return ui.showFilteredTasks(filteredTasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"lizchow":34}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code ListCommand}. User input for a","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":" * {@code ListCommand} starts with \"list\".","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"     * Constructor for {@code ListCommand}.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"        super();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"     * Shows all the tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"     * @param tasks   the tasklist to be modified.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     * @param ui      responsible for printing to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     * @param storage stores all the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     * @return String message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"        return ui.showTasks(tasks.getTasks());","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"        return other instanceof ListCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":39}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code TodoCommand}. User input for a","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":" * {@code TodoCommand} starts with \"todo\".","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"     * Constructor for a {@code DeleteCommand}","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"     * @param title Title of the new task.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    public TodoCommand(String title) {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"        super(title);","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"     * Adds a {@code Todo} to tasks and writes to storage. Displays the new task in the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     * @param tasks   the tasklist to be modified.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * @param ui      responsible for printing to the terminal.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     * @param storage stores all the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"     * @return String message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"        assert args.length \u003d\u003d 1 : \"Todo Command should only store 1 argument\";","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"        tasks.addTodoTask(args[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"        return ui.showNewTask(tasks.lastTask(), tasks.size());","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":38}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.command;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code UpdateCommand}. User input for a","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" * {@code UpdateCommand} starts with \"update\".","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":" * @author Elizabeth Chow","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    public enum UpdateType { TITLE, DATE, DATE_TITLE }","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    private UpdateType updateType;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"     * Constructor for a {@code UpdateCommand}","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"     * @param type        Type of update","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"     * @param taskNo      String representation of the task number.","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     * @param description Either a new date or description of a {@code Task}","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"    public UpdateCommand(UpdateType type, String taskNo, String description) {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"        super(taskNo, description);","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"        this.updateType \u003d type;","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"     * Constructor for a {@code UpdateCommand}","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"     * @param type        Type of update","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"     * @param taskNo      String representation of the task number.","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"     * @param description New description of a {@code Task}","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"     * @param deadline    New date of a {@code Task}","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"    public UpdateCommand(UpdateType type, String taskNo, String description, String deadline) {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"        super(taskNo, description, deadline);","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"        this.updateType \u003d type;","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"        Task task;","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"        switch (updateType) {","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"        case TITLE:","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"            task \u003d tasks.updateTitle(Integer.parseInt(args[0]), args[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"        case DATE:","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"            task \u003d tasks.updateDate(Integer.parseInt(args[0]), args[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"        case DATE_TITLE:","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"            task \u003d tasks.updateDateTitle(Integer.parseInt(args[0]), args[1], args[2]);","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Unknown update type!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"        return ui.showUpdatedTask(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"lizchow":64}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code Deadline} task.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":" * @author Eizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy H:mm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    private static final DateTimeFormatter PRINT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    // End date of the Deadline object","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"     * Constructs a {@code Deadline} object with the given title and end date.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"     * @param title   Title of {@code Deadline}.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"     * @param endDate End date of {@code Deadline}.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"    public Deadline(String title, String endDate) {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"        super(title);","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"        this.endDate \u003d parseDateTime(endDate.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"     * Constructs a {@code Deadline} object with the given title, end date and","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"     * status.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"     * @param title   Title of {@code Deadline}.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"     * @param endDate End date of {@code Deadline}.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"     * @param isDone  Status of {@code Deadline}.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"    public Deadline(String title, String endDate, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"        super(title, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"        this.endDate \u003d parseDateTime(endDate.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"    public Deadline setDate(String endDate) {","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"        this.endDate \u003d parseDateTime(endDate);","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"        return this;","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"    private LocalDateTime parseDateTime(String date) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"            LocalDateTime parsedDateTime \u003d LocalDateTime.parse(date, FORMATTER);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"            return parsedDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Invalid datetime format for Deadline task.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"                    + \"Only take in datetime with the format d-M-yyyy H:mm\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"                    + \"Note that time should be in 24 hour format.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"     * {@inheritDoc} Adds \"D |\" infront to indicate that it is a {@code Deadline}","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"     * task.","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"        return String.format(\"D | %s | %s\", super.toFileString(), endDate.format(FORMATTER));","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"     * Returns a String representation of a Deadline task. Starts \"[D]\" to indicate","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"     * that it is a Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"     * @return String representation of an Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), endDate.format(PRINT_FORMATTER));","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"lizchow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"lizchow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"lizchow"},"content":"        if (other instanceof Deadline) {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"lizchow"},"content":"            Deadline otherDeadline \u003d (Deadline) other;","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"lizchow"},"content":"            return this.endDate.equals(otherDeadline.endDate) \u0026\u0026 super.equals(other);","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lizchow":90}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code Event}.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":" * @author Eizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"    // deadline of the Event task","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    private String deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"     * Constructs a {@code Event} object with the given title and deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"     * @param title    Title of {@code Event}.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"     * @param deadline Deadline of {@code Event}.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    public Event(String title, String deadline) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"        super(title);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"        this.deadline \u003d deadline.trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"     * Constructs a {@code Event} object with the givem title, deadline and status.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     * @param title    Title of {@code Event}.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * @param deadline Deadline of {@code Event}.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     * @param isDone   Status of {@code Event}.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    public Event(String title, String deadline, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"        super(title, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"        this.deadline \u003d deadline.trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"    public Event setDate(String deadline) {","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"        return this;","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"     * {@inheritDoc} Adds \"E |\" infront to indicate that it is a {@code Event} task.","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"        return String.format(\"E | %s | %s\", super.toFileString(), deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"     * Returns a String representation of an Event task. Starts \"[E]\" to indicate","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"     * that it is an Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"     * @return String representation of an Event.","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), deadline);","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"        if (other instanceof Event) {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"            Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"            return this.deadline.equals(otherEvent.deadline) \u0026\u0026 super.equals(other);","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lizchow":68}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code Task}.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":" * @author Eizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"    private String title;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"     * Constructs a new {@code Task} with the given title.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"     * @param title Title of Task","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    public Task(String title) {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"        this.title \u003d title.trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"     * Constructs a new {@code Task} with the given title and status.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"     * @param title  Title of {@code Task}","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     * @param isDone Status of {@code Task}","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"    public Task(String title, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"        this.title \u003d title.trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"     * Returns \"X\" if task is done, else \" \".","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"     * @return String \"X\" or \" \".","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"     * Converts boolean isDone to int.","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"     * @return 1 if task is done, 0 otherwise.","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"    private int convertIsDoneToInt() {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"     * @return {@code true} if the task is done, {@code false} otherwise.","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"        return isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"     * Marks the {@code Task} as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"     * @return {@code false} if {@code Task} is done, {@code true} otherwise.","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"     * Returns {@code true} if title contains the query keyword, {@code false} otherwise.","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"     * @param query filter keyword.","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"lizchow"},"content":"     * @return {@code true} if the title contains the query string, {@code false} otherwise.","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"lizchow"},"content":"    public boolean contains(String query) {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"lizchow"},"content":"        return title.contains(query);","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"lizchow"},"content":"    public Task setTitle(String title) {","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"lizchow"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"lizchow"},"content":"        return this;","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"lizchow"},"content":"    public abstract Task setDate(String date);","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"lizchow"},"content":"     * Returns a {@code String} containing the description of the {@code Task} to be","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"lizchow"},"content":"     * saved to storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"lizchow"},"content":"     * @return a {@code String} representation of {@code Task} for file storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"lizchow"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"lizchow"},"content":"        return String.format(\"%d | %s\", convertIsDoneToInt(), title);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"lizchow"},"content":"     * Returns a {@code String} format of the {@code Task} containing the status and","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"lizchow"},"content":"     * title of {@code Task}.","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"lizchow"},"content":"     * @return String representation of {@code Task}.","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"lizchow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"lizchow"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), title);","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"lizchow"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"lizchow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"lizchow"},"content":"        if (other instanceof Task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"lizchow"},"content":"            Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"lizchow"},"content":"            return (this.isDone \u003d\u003d otherTask.isDone) \u0026\u0026 this.title.equals(otherTask.title);","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lizchow":122}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":" * This class represents a {@code Todo} task.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":" * @author Eizabeth Chow","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"     * Constructs a {@code Todo} task with the given title.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"     * @param title Title of {@code Todo} task.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    public Todo(String title) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"        super(title);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"     * Constructs a {@code Todo} task with the given title and status.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"     * @param title  Title of {@code Todo}.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"     * @param isDone Status of {@code Todo}.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"    public Todo(String title, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"        super(title, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    public Todo setDate(String deadline) {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"        throw new DukeException(\"Cannot update deadline for TODO task.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"     * {@inheritDoc} Adds \"T |\" infront to indicate that it is a {@code Todo} task.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"        return String.format(\"T | %s\", super.toFileString());","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"     * Returns a String representation of a Todo task. Starts \"[T]\" to indicate that","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"     * it is a Todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"     * @return String representation of a Todo.","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lizchow":50}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"450.0\" stylesheets\u003d\"@../stylesheets/dialogBox.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"        \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialog-box\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"    \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"        \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"    \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lizchow":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"495.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/16\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"418.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"418.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"77.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"657.0\" prefWidth\u003d\"495.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_LEFT\" prefWidth\u003d\"472.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lizchow":33}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    public void testListInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(Parser.parse(\"list\"), new ListCommand());","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"    public void testByeInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(Parser.parse(\"bye\"), new ExitCommand());","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"    public void testTodoInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(Parser.parse(\"todo read book\"), new TodoCommand(\"read book\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"    public void testValidDoneInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(Parser.parse(\"done 1\"), new DoneCommand(\"0\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"    public void testInvalidDoneInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e Parser.parse(\"done ab\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"    public void testValidDeleteInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(Parser.parse(\"delete 1\"), new DeleteCommand(\"0\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"    public void testInvalidDeleteInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e Parser.parse(\"delete ab\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"    public void testValidDeadlineInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(Parser.parse(\"deadline return book /by 06-06-2021 18:00\"),","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"                new DeadlineCommand(\"return book\", \"06-06-2021 18:00\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"    public void testInvalidDeadlineInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline return book\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"    public void testValidEventInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(Parser.parse(\"event return book /at 06-06-2021 18:00\"),","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"                new EventCommand(\"return book\", \"06-06-2021 18:00\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"    public void testInvalidEventInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline return book\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"    public void testInvalidCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e Parser.parse(\"blah\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"lizchow"},"content":"    public void testMissingDoneDescription() {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"lizchow"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e Parser.parse(\"done\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"lizchow"},"content":"    public void testMissingDeadlineDescription() {","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"lizchow"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"lizchow"},"content":"    public void testMissingDeleteDescription() {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"lizchow"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e Parser.parse(\"delete\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"lizchow"},"content":"    public void testMissingEventDescription() {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"lizchow"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e Parser.parse(\"event\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"lizchow"},"content":"    public void testMissingTodoDescription() {","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"lizchow"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e Parser.parse(\"todo\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":101}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"    public void testGetTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Todo(\"return book\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Deadline(\"return book\", \"06-06-2021 18:00\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Event(\"return book\", \"2-4pm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(tasks, taskList.getTasks());","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"    public void testLastTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Todo(\"return book\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Deadline(\"return book\", \"06-06-2021 18:00\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Event(\"return book\", \"2-4pm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(taskList.lastTask(), new Event(\"return book\", \"2-4pm\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"    public void testAddTodoTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"        taskList.addTodoTask(\"return book\");","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e expectedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"        expectedTasks.add(new Todo(\"return book\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(taskList, new TaskList(expectedTasks));","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"    public void testAddDeadlineTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"        taskList.addDeadlineTask(\"return book\", \"06-06-2021 18:00\");","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e expectedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"        expectedTasks.add(new Deadline(\"return book\", \"06-06-2021 18:00\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(taskList, new TaskList(expectedTasks));","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"    public void testAddEventTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"        taskList.addEventTask(\"return book\", \"06-06-2021 18:00\");","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e expectedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"        expectedTasks.add(new Event(\"return book\", \"06-06-2021 18:00\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(taskList, new TaskList(expectedTasks));","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"    public void testValidDeleteTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Todo(\"return book\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Deadline(\"return book\", \"06-06-2021 18:00\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Event(\"return book\", \"2-4pm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"        taskList.deleteTask(2);","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e expectedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"        expectedTasks.add(new Todo(\"return book\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"lizchow"},"content":"        expectedTasks.add(new Deadline(\"return book\", \"06-06-2021 18:00\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(taskList, new TaskList(expectedTasks));","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"lizchow"},"content":"    public void testInvalidDeleteTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Todo(\"return book\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"lizchow"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"lizchow"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e taskList.deleteTask(2));","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"lizchow"},"content":"    public void testMarkTaskDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"lizchow"},"content":"        Task task \u003d new Todo(\"return book\", false);","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"lizchow"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"lizchow"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(taskList.markTaskDone(0), new Pair\u003cBoolean, Task\u003e(false, task));","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"lizchow"},"content":"    public void testMarkAlreadyDoneTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"lizchow"},"content":"        Task task \u003d new Todo(\"return book\", true);","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"lizchow"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"lizchow"},"content":"        TaskList taskList \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"lizchow"},"content":"        Assertions.assertEquals(taskList.markTaskDone(0), new Pair\u003cBoolean, Task\u003e(true, task));","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"lizchow"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"lizchow"},"content":"    public void testInvalidMarkTaskDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"lizchow"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"lizchow"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e taskList.markTaskDone(2));","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":114}}]
