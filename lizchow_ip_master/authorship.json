[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    protected String[] args;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"    public Command() {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"        this.args \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"    public Command(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"        this.args \u003d args;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":15}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    // End date of the Deadline object","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"    private LocalDateTime endDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"    private final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy H:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"    private final DateTimeFormatter PRINT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"     * Constructor of a Deadline object.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"     * @param title   title of the Deadline task","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"     * @param endDate endDate of the Deadline task","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    public Deadline(String title, String endDate) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"        super(title);","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"        this.endDate \u003d parseDateTime(endDate.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    public Deadline(String title, String endDate, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"        super(title, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"        this.endDate \u003d parseDateTime(endDate.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"    private LocalDateTime parseDateTime(String date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"            LocalDateTime parsedDateTime \u003d LocalDateTime.parse(date, FORMATTER);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"            return parsedDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Invalid datetime format for Deadline task.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"                    + \"Only take in datetime with the format d-M-yyyy H:mm\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"                    + \"Note that time should be in 24 hour format.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"        return String.format(\"D | %s | %s\", super.toFileString(), endDate.format(FORMATTER));","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"     * Return a String representation of a Deadline task. Starts \"[D]\" to indicate","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"     * that it is a Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"     * @return String representation of an Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), endDate.format(PRINT_FORMATTER));","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lizchow":53}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    public DeadlineCommand(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"        super(args);","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"        tasks.addDeadlineTask(args[0], args[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"        ui.showNewTask(tasks.lastTask(), tasks.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":15}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    public DeleteCommand(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"        super(args);","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"        Task task \u003d tasks.deleteTask(Integer.valueOf(args[0]));","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"        ui.showDeletedTask(task, tasks.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":15}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"    public DoneCommand(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"        super(args);","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"        int taskNo \u003d Integer.valueOf(args[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"        Pair\u003cBoolean, Task\u003e statusTaskPair \u003d tasks.markTaskDone(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"        boolean isTaskAlreadyDone \u003d statusTaskPair.getFirst();","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"        Task task \u003d statusTaskPair.getSecond();","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"        if (isTaskAlreadyDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"            ui.showError(String.format(\"Task %s is already done!\\n  %s\", taskNo, task));","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"            ui.showDoneTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"    public Duke() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"        this.storage \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"                Command c \u003d Parser.parse(scanner.nextLine().trim());","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"        scanner.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lizchow":36,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    public DukeException(String errMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"        super(errMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lizchow":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    // deadline of the Event task","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"    private final String deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"     * Constructor of the Event object.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"     * @param title    title of the Event","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"     * @param deadline deadline of the Event","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"    public Event(String title, String deadline) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"        super(title);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"        this.deadline \u003d deadline.trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    public Event(String title, String deadline, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"        super(title, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"        this.deadline \u003d deadline.trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"        return String.format(\"E | %s | %s\", super.toFileString(), deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"     * Return a String representation of an Event task. Starts \"[E]\" to indicate","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"     * that it is an Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"     * @return String representation of an Event.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), deadline);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lizchow":34}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    public EventCommand(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"        super(args);","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"        tasks.addEventTask(args[0], args[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"        ui.showNewTask(tasks.lastTask(), tasks.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":15}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"        super();","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"        ui.showExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":14}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"        super();","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"        ui.showTasks(tasks.getTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":13}},{"path":"src/main/java/Pair.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public class Pair\u003cS, T\u003e {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    private S first;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"    private T second;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"    public Pair(S first, T second) {","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"        this.first \u003d first;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"        this.second \u003d second;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    public S getFirst(){","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"        return first;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    public T getSecond() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"        return second;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":17}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"        String inputCommand \u003d input.split(\" \")[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"        String parsedMessage \u003d input.replace(inputCommand, \"\").trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"        switch (inputCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"                return parseByeInput();","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"                return parseDeadlineInput(parsedMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"                return parseDeleteInput(parsedMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"            case \"done\":","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"                return parseDoneInput(parsedMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"            case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"                return parseEventInput(parsedMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"            case \"list\":","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"                return parseListInput();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"                return parseTodoInput(parsedMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"            default:","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"    private static Command parseByeInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    private static Command parseDeadlineInput(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"            String taskDescription \u003d input.replaceAll(\"/by.*\", \"\");","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"            validateDescription(taskDescription, \"deadline\");","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"            String deadline \u003d input.split(\"/by\")[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"            return new DeadlineCommand(new String[] { taskDescription, deadline });","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"The end time of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"    private static Command parseDeleteInput(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"            validateDescription(input, \"delete\");","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"            int taskNo \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"            return new DeleteCommand(new String[] { String.valueOf(taskNo) });","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Enter a number for a delete action\");","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"    private static Command parseDoneInput(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"            validateDescription(input, \"done\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"            int taskNo \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"            return new DoneCommand(new String[] { String.valueOf(taskNo) });","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Enter a number for a done action!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"    private static Command parseEventInput(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"            String taskDescription \u003d input.replaceAll(\"/at.*\", \"\");","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"            validateDescription(taskDescription, \"event\");","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"            String deadline \u003d input.split(\"/at\")[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"            return new EventCommand(new String[] { taskDescription, deadline });","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"The start and end time of a event cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"    private static Command parseListInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"        return new ListCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"    private static Command parseTodoInput(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"        validateDescription(input, \"todo\");","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"lizchow"},"content":"        return new TodoCommand(new String[] { input });","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"lizchow"},"content":"    private static void validateDescription(String input, String type) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"lizchow"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(String.format(\"The description of a %s cannot be empty.\", type));","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":86}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    private String filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"        Scanner scanner \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"            int lineCount \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"            scanner \u003d new Scanner(new File(filePath));","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"                lineCount++;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"                tasks.add(handleFileInput(scanner.nextLine(), lineCount));","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"            createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"        } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"            if (scanner !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"                scanner.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"    private Task handleFileInput(String input, int lineNo) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"            String fileSplitRegex \u003d \" \\\\| \";","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"            String action \u003d input.split(fileSplitRegex)[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"            boolean isDone \u003d convertIsDoneStrToBool(input.split(fileSplitRegex)[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"            String title \u003d input.split(fileSplitRegex)[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"            switch (action) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"                case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"                    return new Todo(title, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"                case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"                    String endDate \u003d input.split(fileSplitRegex)[3];","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"                    return new Deadline(title, endDate, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"                case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"                    String deadline \u003d input.split(fileSplitRegex)[3];","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"                    return new Event(title, deadline, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"                default:","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"                    throw new DukeException(String.format(","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"                            \"Unknown action type at line %d. \" + \"Only \\\"T\\\", \\\"D\\\", \\\"E\\\" are accepted.\", lineNo));","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(String.format(\"Line %d is missing input values!\", lineNo));","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"    public void writeToFile(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"        PrintWriter printWriter \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"            printWriter \u003d new PrintWriter(new FileWriter(filePath));","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"            for (Task task : tasks.getTasks()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"                printWriter.println(task.toFileString());","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"            createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Unable to write to file\");","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"        } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"            if (printWriter !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"                printWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"lizchow"},"content":"    private boolean convertIsDoneStrToBool(String s) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"lizchow"},"content":"        if (s.equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"lizchow"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"lizchow"},"content":"        } else if (s.equals(\"0\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"lizchow"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"lizchow"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(\"Invalid input for isDone. Only 0 or 1 is accepted.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"lizchow"},"content":"    private void createNewFile() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"lizchow"},"content":"            File dir \u003d new File(\"./data\");","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"lizchow"},"content":"            dir.mkdirs();","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"lizchow"},"content":"            File file \u003d new File(dir, \"duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"lizchow"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"lizchow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":101}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"    private final String title;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"     * Constructor of Task. Create a new task with the given title.","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"     * @param title Title of Task","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    public Task(String title) {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"        this.title \u003d title.trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    public Task(String title, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"        this.title \u003d title.trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"     * If task is done, return \"X\" else \" \"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"     * @return String \"X\" or \" \"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"    private int convertIsDoneToInt() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"     * @return Boolean true if the task is done, false otherwise","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"        return isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"     * Mark the Task as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"        return String.format(\"%d | %s\", convertIsDoneToInt(), title);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"     * Return a String format of the Task containing the status and title of task.","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"     * @return String representation of Task","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), title);","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lizchow":65}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    public int size() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"    public Task lastTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"        return tasks.get(tasks.size() - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"    public void addTodoTask(String title) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Todo(title));","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"    public void addDeadlineTask(String title, String deadline) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Deadline(title, deadline));","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"    public void addEventTask(String title, String deadline) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"        tasks.add(new Event(title, deadline));","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"    public Task deleteTask(int taskNo) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"            Task task \u003d tasks.get(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"            tasks.remove(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"            return task;","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"                throw new DukeException(\"Nothing in the list to delete!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(String.format(\"Enter a valid number between 1 - %d\", tasks.size()));","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"    public Pair\u003cBoolean, Task\u003e markTaskDone(int taskNo) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"            Task task \u003d tasks.get(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"            return new Pair\u003cBoolean, Task\u003e(task.markAsDone(), task);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"                throw new DukeException(\"Nothing in the list!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"            throw new DukeException(String.format(\"Enter a valid number between 1 - %d\", tasks.size()));","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":59}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"     * Constructor of a Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"     * @param title title of the Todo task","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"    public Todo(String title) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"        super(title);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"    public Todo(String title, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"        super(title, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"    public String toFileString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"        return String.format(\"T | %s\", super.toFileString());","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"     * Returns a String representation of a Todo task. Starts \"[T]\" to indicate that","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"     * it is a Todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"     * @return String representation of a Todo.","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lizchow":28}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"    public TodoCommand(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"        super(args);","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"        tasks.addTodoTask(args[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"        ui.showNewTask(tasks.lastTask(), tasks.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":15}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"    private final String HORIZONTAL_LINE \u003d \"-------------------------------------------------------------\";","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"    private final String ADD_FORMAT \u003d \"Got it. I\u0027ve  added this task:\\n  %s\";","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"    private final String ERROR_FORMAT \u003d \"☹ OOPS!!! %s\";","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"    private final String TASK_COUNT_FORMAT \u003d \"Now you have %d %s in the list.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"    private final String DONE_FORMAT \u003d \"Nice! I\u0027ve marked this task as done:\\n %s\";","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"    private final String DELETE_FORMAT \u003d \"Noted. I\u0027ve removed this task:\\n  %s\";","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"        printMessage(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"        printMessage(String.format(ERROR_FORMAT, message));","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"    public void showNewTask(Task task, int taskLength) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"        printMessageWithTaskCount(ADD_FORMAT, task, taskLength);;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"lizchow"},"content":"    public void showDeletedTask(Task task, int taskLength) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"lizchow"},"content":"        printMessageWithTaskCount(DELETE_FORMAT, task, taskLength);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"lizchow"},"content":"    public void showDoneTask(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"lizchow"},"content":"        printMessage(String.format(DONE_FORMAT, task));","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"lizchow"},"content":"    public void showExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"lizchow"},"content":"        printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"lizchow"},"content":"    public void showTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"lizchow"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"lizchow"},"content":"            printMessage(\"Nothing in the list!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"lizchow"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"lizchow"},"content":"            printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"lizchow"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"lizchow"},"content":"                printWithTabIndent(String.format(\"%d. %s\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"lizchow"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"lizchow"},"content":"            printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"lizchow"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"lizchow"},"content":"    public void showReadFile(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"lizchow"},"content":"        printMessage(String.format(\"Reading tasks from %s...\", filePath));","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"lizchow"},"content":"     * Print with 4 spaces infront of param str.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"lizchow"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"lizchow"},"content":"     * @param str A String to be printed","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"lizchow"},"content":"    private void printWithTabIndent(String str) {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"lizchow"},"content":"        System.out.println(\"\\t\" + str);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"lizchow"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"lizchow"},"content":"     * Print horizontal line.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"lizchow"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"lizchow"},"content":"    private void printLine() {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"lizchow"},"content":"        printWithTabIndent(HORIZONTAL_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"lizchow"},"content":"    private void printMessage(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"lizchow"},"content":"        printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"lizchow"},"content":"        printWithTabIndent(message.replace(\"\\n\", \"\\n\\t\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"lizchow"},"content":"        printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"lizchow"},"content":"    private void printMessageWithTaskCount(String format, Task task, int taskLength) {","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"lizchow"},"content":"        printMessage(String.format(format + \"\\n\" + TASK_COUNT_FORMAT, task, taskLength,","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"lizchow"},"content":"                taskLength \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"lizchow"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"lizchow"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"lizchow":83}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lizchow"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lizchow"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lizchow"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lizchow"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lizchow"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lizchow"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lizchow"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lizchow"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lizchow"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lizchow"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lizchow"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lizchow"},"content":"event project meeting","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lizchow"},"content":"event /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lizchow"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"deadline do homework /by no idea :-P","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"deadline do homework","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lizchow"},"content":"deadline /by sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lizchow"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lizchow"},"content":"done 5","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lizchow"},"content":"done ab","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lizchow"},"content":"delete ab","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lizchow"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lizchow"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lizchow":26}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"lizchow"},"content":"if [ -e \"./data/duke.txt\" ]","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"lizchow"},"content":"then","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"lizchow"},"content":"    rm ./data/duke.txt","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"lizchow"},"content":"fi","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"lizchow"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lizchow":5,"-":38}}]
