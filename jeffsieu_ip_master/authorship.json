[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import duke.command.DukeCommandWithArgs;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"    private static final String SAVE_FILE_LOCATION \u003d \"duke-task-list.txt\";","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"     * Duke constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"    public Duke() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"        this.ui \u003d new Ui(System.in, System.out);","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"        this.storage \u003d new Storage(SAVE_FILE_LOCATION);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"        TaskList taskList;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"            taskList \u003d storage.loadTaskList();","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"        } catch (DukeStorageException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"            ui.outputLine(e.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"     * Runs Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"     * @param args The arguments passed in from the command line","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"        duke.start();","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jeffsieu"},"content":"     * Starts duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jeffsieu"},"content":"    public void start() {","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"jeffsieu"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"jeffsieu"},"content":"        ui.printHelp();","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"jeffsieu"},"content":"        while (ui.shouldContinue()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jeffsieu"},"content":"            String commandStr \u003d ui.nextCommand();","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"jeffsieu"},"content":"            DukeCommandWithArgs command \u003d parser.parse(commandStr);","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"jeffsieu"},"content":"            if (command \u003d\u003d null) {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"jeffsieu"},"content":"                // Command not found","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"jeffsieu"},"content":"                ui.outputLine(String.format(\"Unknown command: %s. Type \\\"help\\\" for a list of available commands.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"jeffsieu"},"content":"                        commandStr));","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"jeffsieu"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"jeffsieu"},"content":"                try {","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"jeffsieu"},"content":"                    command.runWith(taskList, ui, storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jeffsieu"},"content":"                } catch (InvalidCommandException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"jeffsieu"},"content":"                    ui.outputLine(","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"jeffsieu"},"content":"                            String.format(\"Error in \\\"%s\\\": %s\\nType \\\"help %s\\\" to view proper usage of the command.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"jeffsieu"},"content":"                                    command.getBaseCommand().getName(), e.getMessage(),","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"jeffsieu"},"content":"                                    command.getBaseCommand().getName()));","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"jeffsieu"},"content":"                }","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"jeffsieu"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jeffsieu"},"content":"        ui.printExitMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jeffsieu":65,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"import duke.command.DukeCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"import duke.command.DukeCommandWithArgs;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":" * Parses the raw commands (in string form) to objects representing them.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"public class Parser {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"     * Parses the command given as a raw text input, and returns a {@link DukeCommandWithArgs} representing it","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"     * @param command the command as a string","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"     * @return a {@link DukeCommandWithArgs} representing the full command","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"    public DukeCommandWithArgs parse(String command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"        // Get the longest duke command that matches to command","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"        Optional\u003cDukeCommand\u003e dukeCommand \u003d DukeCommand.getClosestMatch(command);","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"        if (dukeCommand.isPresent()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"            DukeCommand actualCommand \u003d dukeCommand.get();","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"            String arguments \u003d command.substring(actualCommand.getName().length());","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"            String[] tokens \u003d arguments.split(\"/\");","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"            String positionalArg \u003d tokens[0].trim();","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"            Map\u003cString, String\u003e namedArgs \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"            for (int i \u003d 1; i \u003c tokens.length; i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"                String[] namedArg \u003d tokens[i].trim().split(\" \", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"                namedArgs.put(namedArg[0].trim(), namedArg[1].trim());","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"            return new DukeCommandWithArgs(actualCommand, positionalArg, namedArgs);","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"            return null;","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jeffsieu":38}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"import java.util.List;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"import duke.exception.DukeStorageException;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"import duke.exception.TaskParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"import duke.task.DukeTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":" * Loads and reads the list of tasks from a save file.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"public class Storage {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"    private final String saveFileLocation;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"    public Storage(String saveFileLocation) {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"        this.saveFileLocation \u003d saveFileLocation;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"     * Loads the task list from the save file","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"     * @return the loaded task list","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"     * @throws DukeStorageException if there is an error when reading the save file","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"    public TaskList loadTaskList() throws DukeStorageException {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"            FileInputStream fileInputStream \u003d new FileInputStream(saveFileLocation);","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"            Scanner scanner \u003d new Scanner(fileInputStream);","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"            List\u003cDukeTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"                tasks.add(DukeTask.fromSerializedString(scanner.nextLine()));","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"            scanner.close();","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"            fileInputStream.close();","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"            return new TaskList(tasks);","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"jeffsieu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"jeffsieu"},"content":"            return new TaskList();","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"jeffsieu"},"content":"        } catch (TaskParseException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"jeffsieu"},"content":"            throw new DukeStorageException(String.format(\"Error when reading %s; file ignored\", saveFileLocation));","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jeffsieu"},"content":"     * Saves the task list to the save file, overwriting it if it already exists.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"jeffsieu"},"content":"     * @param taskList the task list to save","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jeffsieu"},"content":"    public void saveTaskList(TaskList taskList) {","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"jeffsieu"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"jeffsieu"},"content":"            FileOutputStream fileOutputStream \u003d new FileOutputStream(saveFileLocation);","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"jeffsieu"},"content":"            for (DukeTask task : taskList.getTasks()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"jeffsieu"},"content":"                fileOutputStream.write(task.toSerializedString().getBytes());","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"jeffsieu"},"content":"                fileOutputStream.write(\"\\n\".getBytes());","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"jeffsieu"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"jeffsieu"},"content":"            fileOutputStream.close();","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"jeffsieu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"jeffsieu"},"content":"            // File not found","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"jeffsieu"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jeffsieu":67}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"import duke.command.DukeCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"import duke.task.DukeDeadlineTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"import duke.task.DukeEvent;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"import duke.task.DukeTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":" * Represents the UI interactions in the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"public class Ui {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"    private static final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"    private final PrintStream outputStream;","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"    private boolean exit;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"     * Creates a new user interface with the given input and output streams.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"     * @param inputStream The stream containing user command input","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"     * @param outputStream The stream to output Duke\u0027s response to","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"    public Ui(InputStream inputStream, PrintStream outputStream) {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"        this.scanner \u003d new Scanner(inputStream);","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"        this.outputStream \u003d outputStream;","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"        this.exit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jeffsieu"},"content":"     * Prints a prompt for the next command, and returns the submitted user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"jeffsieu"},"content":"     * @return the raw command input by the user","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jeffsieu"},"content":"    public String nextCommand() {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"jeffsieu"},"content":"        outputStream.print(\"Duke\u003e \");","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"jeffsieu"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jeffsieu"},"content":"     * Outputs the given string with a newline.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"jeffsieu"},"content":"     * @param output the string to output","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jeffsieu"},"content":"    public void outputLine(String output) {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"jeffsieu"},"content":"        outputStream.println(output);","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jeffsieu"},"content":"     * Prints a welcome message greeting the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jeffsieu"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"jeffsieu"},"content":"        outputLine(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jeffsieu"},"content":"     * Prints an exit message greeting the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jeffsieu"},"content":"    public void printExitMessage() {","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"jeffsieu"},"content":"        outputLine(\"Goodbye from\\n\" + logo);","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jeffsieu"},"content":"     * Prints the list of commands available using the {@link DukeCommand#HELP} command.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jeffsieu"},"content":"    public void printHelp() {","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"jeffsieu"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"jeffsieu"},"content":"            DukeCommand.HELP.apply(null, this, null, \"\", Map.of());","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"jeffsieu"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"jeffsieu"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"jeffsieu"},"content":"     * Marks Duke as to be exited after the latest command is done processing.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jeffsieu"},"content":"    public void markExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"jeffsieu"},"content":"        exit \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"jeffsieu"},"content":"     * Returns if Duke should continue accepting commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"jeffsieu"},"content":"     * @return if Duke should continue accepting commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"jeffsieu"},"content":"    public boolean shouldContinue() {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"jeffsieu"},"content":"        return !exit;","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"jeffsieu"},"content":"     * Prints the given task list to the output stream in a neat format.","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"jeffsieu"},"content":"     * @param taskList The task list to print","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"jeffsieu"},"content":"    public void printTaskList(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"jeffsieu"},"content":"        taskList.getTasks().stream()","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"jeffsieu"},"content":"                .collect(Collectors.groupingBy(t -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"jeffsieu"},"content":"                    if (t instanceof DukeEvent) {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"jeffsieu"},"content":"                        return \"Events\";","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"jeffsieu"},"content":"                    } else if (t instanceof DukeDeadlineTask) {","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"jeffsieu"},"content":"                        return \"Tasks with deadlines\";","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"jeffsieu"},"content":"                    } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"jeffsieu"},"content":"                        return \"Tasks\";","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"jeffsieu"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"jeffsieu"},"content":"                }))","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"jeffsieu"},"content":"                .forEach((String group, List\u003cDukeTask\u003e tasks) -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"jeffsieu"},"content":"                    outputLine(group);","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"jeffsieu"},"content":"                    for (DukeTask task : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"jeffsieu"},"content":"                        int index \u003d taskList.indexOf(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"jeffsieu"},"content":"                        outputLine(String.format(\"%d. %s\", index + 1, task));","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"jeffsieu"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"jeffsieu"},"content":"                    outputLine(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"jeffsieu"},"content":"                });","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jeffsieu":125}},{"path":"src/main/java/duke/command/DukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import java.util.List;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"import duke.task.DukeDeadlineTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"import duke.task.DukeEvent;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"import duke.task.DukeSimpleTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"import duke.task.DukeTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"public enum DukeCommand implements DukeCommandAction {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"    ADD_TASK(","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"        \"add\",","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"        \"Add a task (with optionally a deadline or a date)\",","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"        new DukeCommandConfig(","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"            new DukeCommandArgument(","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"                \"task\",","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"                \"The name of the task\",","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"                DukeCommandArgumentType.REQUIRED","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"            ),","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"            Map.of(","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"                \"by\", new DukeCommandArgument(\"deadline\", \"The deadline of the task\",","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"                            DukeCommandArgumentType.OPTIONAL),","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"                \"at\", new DukeCommandArgument(\"date\", \"The date of the event\",","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"                            DukeCommandArgumentType.OPTIONAL)","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"            )","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"        ),","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"        (TaskList taskList, Ui ui, Storage storage, String arg, Map\u003cString, String\u003e namedArgs) -\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"            DukeTask task;","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"            if (namedArgs.containsKey(\"by\") \u0026\u0026 namedArgs.containsKey(\"at\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"                throw new InvalidCommandException(\"Task cannot be added with both a deadline and a date.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"            } else if (namedArgs.containsKey(\"by\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"                task \u003d new DukeDeadlineTask(arg, namedArgs.get(\"by\"));","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"jeffsieu"},"content":"            } else if (namedArgs.containsKey(\"at\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"jeffsieu"},"content":"                task \u003d new DukeEvent(arg, namedArgs.get(\"at\"));","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"jeffsieu"},"content":"            } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"jeffsieu"},"content":"                task \u003d new DukeSimpleTask(arg);","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"jeffsieu"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"jeffsieu"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"jeffsieu"},"content":"            storage.saveTaskList(taskList);","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"jeffsieu"},"content":"            ui.outputLine(String.format(\"Task added with title: %s\", arg));","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"jeffsieu"},"content":"    ),","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"jeffsieu"},"content":"    DELETE_TASK(","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"jeffsieu"},"content":"        \"delete\",","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"jeffsieu"},"content":"        \"Delete a task\",","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"jeffsieu"},"content":"        new DukeCommandConfig(","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"jeffsieu"},"content":"            new DukeCommandArgument(","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"jeffsieu"},"content":"                \"index\",","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"jeffsieu"},"content":"                \"The position of the task in the list\",","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"jeffsieu"},"content":"                DukeCommandArgumentType.REQUIRED","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"jeffsieu"},"content":"            ),","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"jeffsieu"},"content":"            Map.of()","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"jeffsieu"},"content":"        ),","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"jeffsieu"},"content":"        (TaskList taskList, Ui ui, Storage storage, String arg, Map\u003cString, String\u003e namedArgs) -\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"jeffsieu"},"content":"            DukeTask task \u003d taskList.removeTaskAt(parseTaskIndex(taskList, arg));","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"jeffsieu"},"content":"            storage.saveTaskList(taskList);","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"jeffsieu"},"content":"            ui.outputLine(\"I\u0027ve removed the following task.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"jeffsieu"},"content":"            ui.outputLine(task.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"jeffsieu"},"content":"    ),","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"jeffsieu"},"content":"    EXIT(","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"jeffsieu"},"content":"        \"bye\",","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"jeffsieu"},"content":"        \"Exit Duke\",","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"jeffsieu"},"content":"        DukeCommandConfig.NO_ARGUMENTS,","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"jeffsieu"},"content":"        (TaskList taskList, Ui ui, Storage storage, String arg, Map\u003cString, String\u003e namedArgs) -\u003e {","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"jeffsieu"},"content":"            ui.markExit();","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"jeffsieu"},"content":"    ),","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"jeffsieu"},"content":"    FIND_TASK(","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"jeffsieu"},"content":"        \"find\",","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"jeffsieu"},"content":"        \"Find a task\",","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"jeffsieu"},"content":"        new DukeCommandConfig(","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"jeffsieu"},"content":"            new DukeCommandArgument(","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"jeffsieu"},"content":"                \"keyword\",","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"jeffsieu"},"content":"                \"The keyword to filter tasks by\",","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"jeffsieu"},"content":"                DukeCommandArgumentType.REQUIRED","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"jeffsieu"},"content":"            ),","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"jeffsieu"},"content":"            Map.of()","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"jeffsieu"},"content":"        ),","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"jeffsieu"},"content":"        (TaskList taskList, Ui ui, Storage storage, String arg, Map\u003cString, String\u003e namedArgs) -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"jeffsieu"},"content":"            List\u003cDukeTask\u003e dukeTasks \u003d taskList.getTasks().stream()","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"jeffsieu"},"content":"                    .filter(dukeTask -\u003e dukeTask.name.toLowerCase().contains(arg.toLowerCase()))","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"jeffsieu"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"jeffsieu"},"content":"            TaskList filteredTaskList \u003d new TaskList(dukeTasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"jeffsieu"},"content":"            ui.outputLine(String.format(\"Here are the tasks with titles containing \\\"%s\\\"\", arg));","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"jeffsieu"},"content":"            ui.printTaskList(filteredTaskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"jeffsieu"},"content":"    ),","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"jeffsieu"},"content":"    HELP(","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"jeffsieu"},"content":"        \"help\",","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"jeffsieu"},"content":"        \"Display all commands, or detailed info of given command\",","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"jeffsieu"},"content":"        new DukeCommandConfig(","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"jeffsieu"},"content":"            new DukeCommandArgument(","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"jeffsieu"},"content":"                \"command_name\",","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"jeffsieu"},"content":"                \"The name of the command to view help for\",","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"jeffsieu"},"content":"                DukeCommandArgumentType.OPTIONAL","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"jeffsieu"},"content":"            ),","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"jeffsieu"},"content":"            Map.of()","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"jeffsieu"},"content":"        ),","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"jeffsieu"},"content":"        (TaskList taskList, Ui ui, Storage storage, String arg, Map\u003cString, String\u003e namedArgs) -\u003e {","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"jeffsieu"},"content":"            if (arg.isEmpty()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"jeffsieu"},"content":"                ui.outputLine(\"ALL COMMANDS:\");","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"jeffsieu"},"content":"                Arrays.stream(DukeCommand.values())","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"jeffsieu"},"content":"                        .sorted(Comparator.comparing(DukeCommand::getName))","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"jeffsieu"},"content":"                        .map(DukeCommand::toString)","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"jeffsieu"},"content":"                        .forEach(ui::outputLine);","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"jeffsieu"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"jeffsieu"},"content":"                Optional\u003cDukeCommand\u003e command \u003d getClosestMatch(arg);","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"jeffsieu"},"content":"                if (command.isEmpty()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"jeffsieu"},"content":"                    throw new InvalidCommandException(String.format(\"No command named \\\"%s\\\".\", arg));","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"jeffsieu"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"jeffsieu"},"content":"                    ui.outputLine(command.get().toDetailedString());","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"jeffsieu"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"jeffsieu"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"jeffsieu"},"content":"    ),","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"jeffsieu"},"content":"    LIST_TASKS(","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"jeffsieu"},"content":"        \"list\",","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"jeffsieu"},"content":"        \"List all tasks\",","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"jeffsieu"},"content":"        DukeCommandConfig.NO_ARGUMENTS,","lastModifiedDate":"2021-08-14"},{"lineNumber":130,"author":{"gitId":"jeffsieu"},"content":"        (TaskList taskList, Ui ui, Storage storage, String arg, Map\u003cString, String\u003e namedArgs) -\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"jeffsieu"},"content":"            ui.outputLine(String.format(\"You have %d %s.\", taskList.size(), taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"jeffsieu"},"content":"            ui.printTaskList(taskList);","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"jeffsieu"},"content":"    ),","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"jeffsieu"},"content":"    MARK_DONE(","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"jeffsieu"},"content":"        \"done\",","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"jeffsieu"},"content":"        \"Mark the task as done\",","lastModifiedDate":"2021-08-14"},{"lineNumber":138,"author":{"gitId":"jeffsieu"},"content":"        new DukeCommandConfig(","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"jeffsieu"},"content":"            new DukeCommandArgument(","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"jeffsieu"},"content":"                \"index\",","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"jeffsieu"},"content":"                \"The position of the task in the list\",","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"jeffsieu"},"content":"                DukeCommandArgumentType.REQUIRED","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"jeffsieu"},"content":"            ),","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"jeffsieu"},"content":"            Map.of()","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"jeffsieu"},"content":"        ),","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"jeffsieu"},"content":"        (TaskList taskList, Ui ui, Storage storage, String arg, Map\u003cString, String\u003e namedArgs) -\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":147,"author":{"gitId":"jeffsieu"},"content":"            DukeTask task \u003d taskList.getTaskAt(parseTaskIndex(taskList, arg));","lastModifiedDate":"2021-08-16"},{"lineNumber":148,"author":{"gitId":"jeffsieu"},"content":"            if (task.isDone()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"jeffsieu"},"content":"                ui.outputLine(\"The following task is already marked as done! Good job!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":150,"author":{"gitId":"jeffsieu"},"content":"            } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":151,"author":{"gitId":"jeffsieu"},"content":"                task.markAsDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":152,"author":{"gitId":"jeffsieu"},"content":"                storage.saveTaskList(taskList);","lastModifiedDate":"2021-08-16"},{"lineNumber":153,"author":{"gitId":"jeffsieu"},"content":"                ui.outputLine(\"I\u0027ve marked the following task as done!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":154,"author":{"gitId":"jeffsieu"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":155,"author":{"gitId":"jeffsieu"},"content":"            ui.outputLine(task.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":156,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"jeffsieu"},"content":"    );","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":159,"author":{"gitId":"jeffsieu"},"content":"    private final String command;","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"jeffsieu"},"content":"    private final String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"jeffsieu"},"content":"    private final DukeCommandConfig config;","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"jeffsieu"},"content":"    private final DukeCommandAction action;","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":164,"author":{"gitId":"jeffsieu"},"content":"    DukeCommand(String command, String description, DukeCommandConfig config, DukeCommandAction action) {","lastModifiedDate":"2021-08-14"},{"lineNumber":165,"author":{"gitId":"jeffsieu"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-14"},{"lineNumber":166,"author":{"gitId":"jeffsieu"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":167,"author":{"gitId":"jeffsieu"},"content":"        this.config \u003d config;","lastModifiedDate":"2021-08-14"},{"lineNumber":168,"author":{"gitId":"jeffsieu"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-08-14"},{"lineNumber":169,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":170,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":171,"author":{"gitId":"jeffsieu"},"content":"    public static Optional\u003cDukeCommand\u003e getClosestMatch(String command) {","lastModifiedDate":"2021-08-14"},{"lineNumber":172,"author":{"gitId":"jeffsieu"},"content":"        return Arrays.stream(DukeCommand.values())","lastModifiedDate":"2021-08-14"},{"lineNumber":173,"author":{"gitId":"jeffsieu"},"content":"                .sorted(Comparator.comparingInt(c -\u003e -c.getName().length()))","lastModifiedDate":"2021-08-14"},{"lineNumber":174,"author":{"gitId":"jeffsieu"},"content":"                .filter(c -\u003e command.startsWith(c.getName()))","lastModifiedDate":"2021-08-14"},{"lineNumber":175,"author":{"gitId":"jeffsieu"},"content":"                .findFirst();","lastModifiedDate":"2021-08-14"},{"lineNumber":176,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":177,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":178,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"jeffsieu"},"content":"     * Returns the name of the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":181,"author":{"gitId":"jeffsieu"},"content":"     * @return the name of the command","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"jeffsieu"},"content":"    public String getName() {","lastModifiedDate":"2021-08-14"},{"lineNumber":184,"author":{"gitId":"jeffsieu"},"content":"        return command;","lastModifiedDate":"2021-08-14"},{"lineNumber":185,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":186,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":187,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"jeffsieu"},"content":"     * Returns the command formatted to print in the help function.","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":190,"author":{"gitId":"jeffsieu"},"content":"     * @return the command formatted to print in the help function.","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"jeffsieu"},"content":"    private String formatCommand() {","lastModifiedDate":"2021-08-14"},{"lineNumber":193,"author":{"gitId":"jeffsieu"},"content":"        return String.format(\"%s%s%s\", command, formatPositionalArgument(), formatNamedArguments());","lastModifiedDate":"2021-08-14"},{"lineNumber":194,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":195,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":196,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"jeffsieu"},"content":"     * Returns the name of the positional argument, if any. Otherwise, returns an empty string.","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":199,"author":{"gitId":"jeffsieu"},"content":"     * @return the name of the positional argument","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"jeffsieu"},"content":"    private String formatPositionalArgument() {","lastModifiedDate":"2021-08-14"},{"lineNumber":202,"author":{"gitId":"jeffsieu"},"content":"        if (config.getPositionalArg() \u003d\u003d DukeCommandArgument.NONE) {","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"jeffsieu"},"content":"            return \"\";","lastModifiedDate":"2021-08-14"},{"lineNumber":204,"author":{"gitId":"jeffsieu"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":205,"author":{"gitId":"jeffsieu"},"content":"            return \" \" + config.getPositionalArg().toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":206,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":207,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":208,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":209,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"jeffsieu"},"content":"     * Returns a formatted string containing the named arguments.","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":212,"author":{"gitId":"jeffsieu"},"content":"     * @return a formatted string containing the named arguments","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"jeffsieu"},"content":"    private String formatNamedArguments() {","lastModifiedDate":"2021-08-14"},{"lineNumber":215,"author":{"gitId":"jeffsieu"},"content":"        if (config.getAcceptedNamedArgs().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":216,"author":{"gitId":"jeffsieu"},"content":"            return \"\";","lastModifiedDate":"2021-08-14"},{"lineNumber":217,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":218,"author":{"gitId":"jeffsieu"},"content":"        return \" \" + String.join(\" \", config.getAcceptedNamedArgs().entrySet().stream().map(entry -\u003e String.format(","lastModifiedDate":"2021-08-25"},{"lineNumber":219,"author":{"gitId":"jeffsieu"},"content":"                \"[/%s %s]\", entry.getKey(), entry.getValue())).toArray(String[]::new));","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":221,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":222,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"jeffsieu"},"content":"     * Returns the help message of the command containing usage information. Used in {@link DukeCommand#HELP}.","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":225,"author":{"gitId":"jeffsieu"},"content":"     * @return the help message of the command","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"jeffsieu"},"content":"    public String toDetailedString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":228,"author":{"gitId":"jeffsieu"},"content":"        String argsString \u003d getDetailedArgumentsString();","lastModifiedDate":"2021-08-14"},{"lineNumber":229,"author":{"gitId":"jeffsieu"},"content":"        return String.format(\"usage: %s\\n  %s.%s\",","lastModifiedDate":"2021-08-14"},{"lineNumber":230,"author":{"gitId":"jeffsieu"},"content":"                formatCommand(),","lastModifiedDate":"2021-08-14"},{"lineNumber":231,"author":{"gitId":"jeffsieu"},"content":"                description,","lastModifiedDate":"2021-08-14"},{"lineNumber":232,"author":{"gitId":"jeffsieu"},"content":"                argsString.isEmpty() ? \"\" : String.format(\"\\n\\nArguments:\\n%s\", argsString));","lastModifiedDate":"2021-08-14"},{"lineNumber":233,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":234,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":235,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":236,"author":{"gitId":"jeffsieu"},"content":"     * Returns a formatted list of arguments accepted by the command. Used by {@link #toDetailedString}.","lastModifiedDate":"2021-08-14"},{"lineNumber":237,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":238,"author":{"gitId":"jeffsieu"},"content":"     * @return A formatted list of arguments.","lastModifiedDate":"2021-08-14"},{"lineNumber":239,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":240,"author":{"gitId":"jeffsieu"},"content":"    private String getDetailedArgumentsString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":241,"author":{"gitId":"jeffsieu"},"content":"        String positionalArgDesc \u003d config.getPositionalArg() \u003d\u003d DukeCommandArgument.NONE ? \"\" : String.format(\"  %s\",","lastModifiedDate":"2021-08-25"},{"lineNumber":242,"author":{"gitId":"jeffsieu"},"content":"                config.getPositionalArg().toDetailedString());","lastModifiedDate":"2021-08-25"},{"lineNumber":243,"author":{"gitId":"jeffsieu"},"content":"        String namedArgsDesc \u003d String.join(\"\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":244,"author":{"gitId":"jeffsieu"},"content":"                config.getAcceptedNamedArgs().entrySet().stream().map(entry -\u003e String.format(\"  /%s %s\",","lastModifiedDate":"2021-08-25"},{"lineNumber":245,"author":{"gitId":"jeffsieu"},"content":"                        entry.getKey(), entry.getValue().toDetailedString())).toArray(String[]::new));","lastModifiedDate":"2021-08-25"},{"lineNumber":246,"author":{"gitId":"jeffsieu"},"content":"        return String.join(\"\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":247,"author":{"gitId":"jeffsieu"},"content":"                Arrays.stream(new String[]{positionalArgDesc, namedArgsDesc}).filter(s -\u003e !s.isEmpty())","lastModifiedDate":"2021-08-25"},{"lineNumber":248,"author":{"gitId":"jeffsieu"},"content":"                        .toArray(String[]::new));","lastModifiedDate":"2021-08-25"},{"lineNumber":249,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":250,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":251,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":252,"author":{"gitId":"jeffsieu"},"content":"     * Runs the command with the given input arguments and objects. Throws an {@link InvalidCommandException} if","lastModifiedDate":"2021-08-24"},{"lineNumber":253,"author":{"gitId":"jeffsieu"},"content":"     * arguments provided are incompatible or malformed.","lastModifiedDate":"2021-08-24"},{"lineNumber":254,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":255,"author":{"gitId":"jeffsieu"},"content":"     * @param taskList  The list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":256,"author":{"gitId":"jeffsieu"},"content":"     * @param ui        The {@link duke.Duke} object which the command uses to execute its commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":257,"author":{"gitId":"jeffsieu"},"content":"     * @param storage   The storage object representing the file in which the tasks are stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":258,"author":{"gitId":"jeffsieu"},"content":"     * @param arg       The positional argument to the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":259,"author":{"gitId":"jeffsieu"},"content":"     * @param namedArgs The named arguments to the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":260,"author":{"gitId":"jeffsieu"},"content":"     * @throws InvalidCommandException if the arguments provided are incompatible or malformed","lastModifiedDate":"2021-08-25"},{"lineNumber":261,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":262,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":263,"author":{"gitId":"jeffsieu"},"content":"    public void apply(TaskList taskList, Ui ui, Storage storage, String arg, Map\u003cString, String\u003e namedArgs)","lastModifiedDate":"2021-08-27"},{"lineNumber":264,"author":{"gitId":"jeffsieu"},"content":"            throws InvalidCommandException {","lastModifiedDate":"2021-08-27"},{"lineNumber":265,"author":{"gitId":"jeffsieu"},"content":"        config.assertCompatibilityWith(arg, namedArgs);","lastModifiedDate":"2021-08-14"},{"lineNumber":266,"author":{"gitId":"jeffsieu"},"content":"        action.apply(taskList, ui, storage, arg, namedArgs);","lastModifiedDate":"2021-08-24"},{"lineNumber":267,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":268,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":269,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":270,"author":{"gitId":"jeffsieu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":271,"author":{"gitId":"jeffsieu"},"content":"        return String.format(\"%-11s %s\", command, description);","lastModifiedDate":"2021-08-14"},{"lineNumber":272,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":273,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":274,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":275,"author":{"gitId":"jeffsieu"},"content":"     * Returns the given argument parsed as an integer representing an index in the task list.","lastModifiedDate":"2021-08-14"},{"lineNumber":276,"author":{"gitId":"jeffsieu"},"content":"     * Used by {@link DukeCommand#DELETE_TASK} and {@link DukeCommand#MARK_DONE}.","lastModifiedDate":"2021-08-14"},{"lineNumber":277,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":278,"author":{"gitId":"jeffsieu"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2021-08-16"},{"lineNumber":279,"author":{"gitId":"jeffsieu"},"content":"     * @param arg      The argument to parse as an index.","lastModifiedDate":"2021-08-14"},{"lineNumber":280,"author":{"gitId":"jeffsieu"},"content":"     * @throws InvalidCommandException If the given index is invalid.","lastModifiedDate":"2021-08-14"},{"lineNumber":281,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":282,"author":{"gitId":"jeffsieu"},"content":"    private static int parseTaskIndex(TaskList taskList, String arg) throws InvalidCommandException {","lastModifiedDate":"2021-08-16"},{"lineNumber":283,"author":{"gitId":"jeffsieu"},"content":"        int index;","lastModifiedDate":"2021-08-14"},{"lineNumber":284,"author":{"gitId":"jeffsieu"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":285,"author":{"gitId":"jeffsieu"},"content":"            index \u003d Integer.parseInt(arg);","lastModifiedDate":"2021-08-14"},{"lineNumber":286,"author":{"gitId":"jeffsieu"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":287,"author":{"gitId":"jeffsieu"},"content":"            throw new InvalidCommandException(\"Index must be a number.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":288,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":289,"author":{"gitId":"jeffsieu"},"content":"        if (index \u003c 1) {","lastModifiedDate":"2021-08-14"},{"lineNumber":290,"author":{"gitId":"jeffsieu"},"content":"            throw new InvalidCommandException(\"Index must be at least 1.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":291,"author":{"gitId":"jeffsieu"},"content":"        } else if (taskList.size() \u003c index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":292,"author":{"gitId":"jeffsieu"},"content":"            int listSize \u003d taskList.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":293,"author":{"gitId":"jeffsieu"},"content":"            String listSizeMessage \u003d listSize \u003d\u003d 0 ? \"task list is empty\" : String.format(\"list only has %d %s\",","lastModifiedDate":"2021-08-25"},{"lineNumber":294,"author":{"gitId":"jeffsieu"},"content":"                    listSize, listSize \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":295,"author":{"gitId":"jeffsieu"},"content":"            throw new InvalidCommandException(String.format(\"Cannot access task %d; %s.\", index, listSizeMessage));","lastModifiedDate":"2021-08-14"},{"lineNumber":296,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":297,"author":{"gitId":"jeffsieu"},"content":"        return index - 1;","lastModifiedDate":"2021-08-14"},{"lineNumber":298,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":299,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jeffsieu":299}},{"path":"src/main/java/duke/command/DukeCommandAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"@FunctionalInterface","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"interface DukeCommandAction {","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"     * Processes the given command (a line). Returns true if more commands are to be listened to.","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"     * @param taskList  The list of tasks.","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"     * @param ui        The {@link duke.Duke} object which the command uses to execute its commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"     * @param storage   The storage object representing the file in which the tasks are stored.","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"     * @param arg       The positional argument to the command.","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"     * @param namedArgs The named arguments to the command.","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"    void apply(TaskList taskList, Ui ui, Storage storage,","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"               String arg, Map\u003cString, String\u003e namedArgs) throws InvalidCommandException;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jeffsieu":23}},{"path":"src/main/java/duke/command/DukeCommandArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"public class DukeCommandArgument {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"    public static final DukeCommandArgument NONE \u003d new DukeCommandArgument(\"Positional argument\", \"\",","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"            DukeCommandArgumentType.NOT_ALLOWED);","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"    private final String name;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"    private final String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"    private final DukeCommandArgumentType type;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"    DukeCommandArgument(String name, String description, DukeCommandArgumentType type) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"        return String.format(\"\u003c%s\u003e\", name);","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"     * Returns the argument formatted for use in the {@link DukeCommand#HELP} command.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"     * @return the formatted string","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"    public String toDetailedString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"        return String.format(\"%s - %s (%s)\", toString(), description, type.toString());","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"     * Asserts that the argument type can be fulfilled by the given argument value. Otherwise, throws an","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"     * {@link InvalidCommandException}","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"     * @param argValue the argument value","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"     * @throws InvalidCommandException if the argument value is incompatible with the argument type","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"    void assertCompatibilityWith(String argValue) throws InvalidCommandException {","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"        if (type \u003d\u003d DukeCommandArgumentType.REQUIRED) {","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"jeffsieu"},"content":"            if (argValue \u003d\u003d null || argValue.equals(\"\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"jeffsieu"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"jeffsieu"},"content":"                        String.format(\"%s is required but not present.\", this \u003d\u003d NONE ? name : toString()));","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"jeffsieu"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"jeffsieu"},"content":"        } else if (type \u003d\u003d DukeCommandArgumentType.NOT_ALLOWED) {","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"jeffsieu"},"content":"            if (argValue !\u003d null \u0026\u0026 !argValue.equals(\"\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"jeffsieu"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"jeffsieu"},"content":"                        String.format(\"%s \\\"%s\\\" is not allowed but present.\", name, argValue));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"jeffsieu"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jeffsieu":53}},{"path":"src/main/java/duke/command/DukeCommandArgumentType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"public enum DukeCommandArgumentType {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"    REQUIRED, OPTIONAL, NOT_ALLOWED;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"        switch (this) {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"        case REQUIRED:","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"            return \"required\";","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"        case OPTIONAL:","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"            return \"optional\";","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"        case NOT_ALLOWED:","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"            return \"not allowed\";","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"            return null;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jeffsieu":19}},{"path":"src/main/java/duke/command/DukeCommandConfig.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"class DukeCommandConfig {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"    static final DukeCommandConfig NO_ARGUMENTS \u003d new DukeCommandConfig(DukeCommandArgument.NONE, Map.of());","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"    private final DukeCommandArgument positionalArg;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"    private final Map\u003cString, DukeCommandArgument\u003e acceptedNamedArgs;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"    DukeCommandConfig(DukeCommandArgument positionalArg, Map\u003cString, DukeCommandArgument\u003e acceptedNamedArgs) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"        this.positionalArg \u003d positionalArg;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"        this.acceptedNamedArgs \u003d acceptedNamedArgs;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"     * Returns the positional argument.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"     * @return the positional argument","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"    public DukeCommandArgument getPositionalArg() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"        return positionalArg;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"     * Returns the named arguments that were accepted for this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"     * @return the named arguments that were accepted for this command","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"    public Map\u003cString, DukeCommandArgument\u003e getAcceptedNamedArgs() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"        return acceptedNamedArgs;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"     * Asserts that the given positional and named arguments are compatible with the configuration.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"     * @param arg       the positional argument","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"     * @param namedArgs the named arguments","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"     * @throws InvalidCommandException if given arguments are incompatible","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jeffsieu"},"content":"    void assertCompatibilityWith(String arg, Map\u003cString, String\u003e namedArgs) throws InvalidCommandException {","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"jeffsieu"},"content":"        positionalArg.assertCompatibilityWith(arg);","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"jeffsieu"},"content":"        for (Map.Entry\u003cString, String\u003e entry : namedArgs.entrySet()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"jeffsieu"},"content":"            String argName \u003d entry.getKey();","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"jeffsieu"},"content":"            String argValue \u003d entry.getValue();","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"jeffsieu"},"content":"            if (!acceptedNamedArgs.containsKey(argName)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"jeffsieu"},"content":"                throw new InvalidCommandException(","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"jeffsieu"},"content":"                        String.format(\"Unexpected named argument \\\"%s\\\" with value \\\"%s\\\".\", argName, argValue));","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"jeffsieu"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"jeffsieu"},"content":"            acceptedNamedArgs.get(argName).assertCompatibilityWith(argValue);","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jeffsieu":55}},{"path":"src/main/java/duke/command/DukeCommandWithArgs.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"public class DukeCommandWithArgs {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"    private final DukeCommand baseCommand;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"    private final String positionalArg;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"    private final Map\u003cString, String\u003e namedArgs;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"     * Creates a duke command along with a set of given arguments.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"     * @param baseCommand The command that this is based of","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"     * @param positionalArg The positional argument to apply to the command","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"     * @param namedArgs The named arguments to apply to the command","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"    public DukeCommandWithArgs(DukeCommand baseCommand, String positionalArg, Map\u003cString, String\u003e namedArgs) {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"        this.baseCommand \u003d baseCommand;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"        this.positionalArg \u003d positionalArg;","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"        this.namedArgs \u003d namedArgs;","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"     * Runs the command with the given objects.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"     * @param taskList the list containing all the tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"     * @param ui       the ui of the program","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"     * @param storage  the storage","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"     * @throws InvalidCommandException if an error occurs when the command is ran with the given arguments","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"    public void runWith(TaskList taskList, Ui ui, Storage storage) throws InvalidCommandException {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"        baseCommand.apply(taskList, ui, storage, positionalArg, namedArgs);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"    public DukeCommand getBaseCommand() {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"        return baseCommand;","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jeffsieu":42}},{"path":"src/main/java/duke/exception/DukeStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"public class DukeStorageException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"    public DukeStorageException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jeffsieu":7}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"        super(message);","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jeffsieu":7}},{"path":"src/main/java/duke/exception/TaskParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"public class TaskParseException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jeffsieu":4}},{"path":"src/main/java/duke/task/DukeDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":" * Represents a date in Duke. Can be any arbitrary string or an actual date.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"public abstract class DukeDate {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"     * Returns a {@link DukeDate} representing the given string. The given date","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"     * is converted to a {@link java.util.Date} type, if possible. Otherwise, a string representation","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"     * is returned.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"     * @param date the date as a string","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"     * @return a {@link DukeDate} representing the given string","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"    public static DukeDate of(String date) {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"            return new DukeLocalDate(LocalDate.parse(date));","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"            return new DukeStringDate(date);","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"    private static class DukeStringDate extends DukeDate {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"        private final String date;","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"        private DukeStringDate(String date) {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"        @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"        public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"            return date;","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"jeffsieu"},"content":"    private static class DukeLocalDate extends DukeDate {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"jeffsieu"},"content":"        private final LocalDate date;","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"jeffsieu"},"content":"        private DukeLocalDate(LocalDate date) {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"jeffsieu"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"jeffsieu"},"content":"        @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"jeffsieu"},"content":"        public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"jeffsieu"},"content":"            return date.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jeffsieu":54}},{"path":"src/main/java/duke/task/DukeDeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"public class DukeDeadlineTask extends DukeTask {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"    private final DukeDate deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"     * Creates a task with a name and a deadline. The task is marked as not done.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"     * @param name The name of the event","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"     * @param deadline The deadline of the event","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"    public DukeDeadlineTask(String name, String deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"        super(name);","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"        this.deadline \u003d DukeDate.of(deadline);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"     * Creates a task with a name, deadline and whether or not it is marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"     * @param name THe name of the event","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"     * @param isDone If the event is marked as done","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"     * @param deadline The deadline of the event","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"    public DukeDeadlineTask(String name, boolean isDone, String deadline) {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"        this.deadline \u003d DukeDate.of(deadline);","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"        return String.format(\"%s (by %s)\", super.toString(), deadline);","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"    public String toSerializedString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"        return String.format(\"%s/%d/by/%s\", name, isDone ? 1 : 0, deadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jeffsieu":37}},{"path":"src/main/java/duke/task/DukeEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"public class DukeEvent extends DukeTask {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"    private final DukeDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"     * Creates an event with a name and a date. The event is marked as not done.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"     * @param name The name of the event","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"     * @param date The date of the event","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"    public DukeEvent(String name, String date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"        super(name);","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"        this.date \u003d DukeDate.of(date);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"     * Creates an event with a name, date and whether or not it is marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"     * @param name THe name of the event","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"     * @param isDone If the event is marked as done","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"     * @param date The date of the event","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"    public DukeEvent(String name, boolean isDone, String date) {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"        this.date \u003d DukeDate.of(date);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"        return String.format(\"%s (at %s)\", super.toString(), date);","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"    public String toSerializedString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"        return String.format(\"%s/%d/at/%s\", name, done ? 1 : 0, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jeffsieu":36}},{"path":"src/main/java/duke/task/DukeSimpleTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"public class DukeSimpleTask extends DukeTask {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"    public DukeSimpleTask(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"        super(name);","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"    public DukeSimpleTask(String name, boolean isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"    public String toSerializedString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"        return String.format(\"%s/%d/simple\", name, done ? 1 : 0);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jeffsieu":16}},{"path":"src/main/java/duke/task/DukeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import duke.exception.TaskParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"public abstract class DukeTask {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"    public final String name;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"    public DukeTask(String name) {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"        this(name, false);","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"    DukeTask(String name, boolean isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"        return isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", name);","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"     * Returns the task as a serialized string. Used by {@link duke.Storage} to store tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"     * @return a serialized string representing the task","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"    public abstract String toSerializedString();","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"     * Creates a task from the given string. Used by {@link duke.Storage} to read stored tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"     * @param str the serialized task","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jeffsieu"},"content":"     * @return the task","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jeffsieu"},"content":"     * @throws TaskParseException if the given string is in the wrong format","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jeffsieu"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jeffsieu"},"content":"    public static DukeTask fromSerializedString(String str) throws TaskParseException {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"jeffsieu"},"content":"        // Either","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"jeffsieu"},"content":"        // name/done/simple","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"jeffsieu"},"content":"        // name/done/by/deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"jeffsieu"},"content":"        // name/done/at/date","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"jeffsieu"},"content":"        String[] tokens \u003d str.split(\"/\", 4);","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"jeffsieu"},"content":"        String name \u003d tokens[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"jeffsieu"},"content":"        boolean isDone \u003d Integer.parseInt(tokens[1]) \u003d\u003d 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"jeffsieu"},"content":"        String type \u003d tokens[2];","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"jeffsieu"},"content":"        switch (type) {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"jeffsieu"},"content":"        case \"simple\":","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"jeffsieu"},"content":"            return new DukeSimpleTask(name, isDone);","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"jeffsieu"},"content":"        case \"by\":","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"jeffsieu"},"content":"            String deadline \u003d tokens[3];","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"jeffsieu"},"content":"            return new DukeDeadlineTask(name, isDone, deadline);","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"jeffsieu"},"content":"        case \"at\":","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"jeffsieu"},"content":"            String date \u003d tokens[3];","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"jeffsieu"},"content":"            return new DukeEvent(name, isDone, date);","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"jeffsieu"},"content":"        default:","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"jeffsieu"},"content":"            throw new TaskParseException();","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jeffsieu":69}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"import java.util.Collection;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import java.util.List;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"public class TaskList {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"    private final List\u003cDukeTask\u003e list;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"    public TaskList(List\u003cDukeTask\u003e list) {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"    public Collection\u003cDukeTask\u003e getTasks() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"        return this.list;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"    public DukeTask getTaskAt(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"        return list.get(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"    public DukeTask removeTaskAt(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"        return list.remove(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"jeffsieu"},"content":"    public void addTask(DukeTask task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"jeffsieu"},"content":"        list.add(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"jeffsieu"},"content":"    public int indexOf(DukeTask task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"jeffsieu"},"content":"        return list.indexOf(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"jeffsieu"},"content":"    public int size() {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"jeffsieu"},"content":"        return list.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jeffsieu":41}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"    public void invalidCommandReturnsNull() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"        assertNull(new Parser().parse(\"garbage\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jeffsieu":12}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jeffsieu"},"content":"    public void emptyListHasZeroSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jeffsieu"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jeffsieu"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jeffsieu"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jeffsieu"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jeffsieu"},"content":"    public void getReturnsCorrectElement() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jeffsieu"},"content":"        List\u003cDukeTask\u003e dukeTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jeffsieu"},"content":"        dukeTaskList.add(new DukeSimpleTask(\"task 1\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jeffsieu"},"content":"        dukeTaskList.add(new DukeSimpleTask(\"task 2\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jeffsieu"},"content":"        dukeTaskList.add(new DukeSimpleTask(\"task 3\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jeffsieu"},"content":"        dukeTaskList.add(new DukeSimpleTask(\"task 4\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jeffsieu"},"content":"        TaskList taskList \u003d new TaskList(dukeTaskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jeffsieu"},"content":"        for (int i \u003d 0; i \u003c dukeTaskList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jeffsieu"},"content":"            assertEquals(dukeTaskList.get(i), taskList.getTaskAt(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jeffsieu"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jeffsieu"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jeffsieu"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jeffsieu":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeffsieu"},"content":"help","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"jeffsieu"},"content":"add hello","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"jeffsieu"},"content":"add byebye","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"jeffsieu"},"content":"add random event /at today","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"jeffsieu"},"content":"add some other thing /by tomorrow","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"jeffsieu"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"jeffsieu"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"jeffsieu"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"jeffsieu"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"jeffsieu"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"jeffsieu"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"jeffsieu":11}}]
