[{"path":"data/inputs.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"T | 1 | read book","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"T | 1 | join sports club","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":4}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"T | 1 | borrow book","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"E | 1 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"T | 1 | join sports club","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"T | 0 | read book","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"E | 0 | meeting | 6pm","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"T | 0 | read book","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"T | 0 | read book","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"D | 0 | return book | 7pm","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"D | 0 | return book | 7pm","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"seaweediman":13}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":" * Represents the chatbot Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"     * @param pathname the path of the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"     * @param dir      the directory containing the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"     * @throws IOException when an IO operation fails.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"    public Duke(String pathname, String dir) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"        this.storage \u003d new Storage(pathname, dir);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"        this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"        this.ui \u003d new Ui(new Scanner(System.in));","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"     * Method used to run the program.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"    public void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"                String commandLine \u003d ui.readCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"                Command c \u003d parser.parse(commandLine, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"                c.execute(tasks, storage);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"                System.out.println(\"***WARNING*** An error has occurred Master Wayne: \" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"seaweediman"},"content":"     * The main method of Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"seaweediman"},"content":"     * @param args","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"seaweediman"},"content":"     * @throws IOException when an IO operations fails.","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"seaweediman"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"seaweediman"},"content":"        new Duke(\"data/tasks.txt\", \"data\").run();","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"seaweediman":57,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":" * Exception specifically for the Duke class.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"     * Constructor for DukeException","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"     * @param message the error message.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"    DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"seaweediman":15}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"import duke.commands.AddDeadlineCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"import duke.commands.AddEventCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"import duke.commands.AddTodoCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"import duke.commands.UnknownCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":" * Represents the Parser class which makes sense of what the user typed.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"     * Method to parse and make sense what the user typed in.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"     * @param commandLine the user\u0027s input.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"     * @param tasks       the TaskList that contains all the user\u0027s tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"     * @return Command command deciphered from the user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"     * @throws DukeException If the user gives a bad input.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"    public Command parse(String commandLine, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"        String[] fullCommand \u003d commandLine.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"        String command \u003d fullCommand[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"        String desc;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"        switch (command) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"            return new ExitCommand(\"exit\");","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"        case \"list\":","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"            return new ListCommand(\"list\");","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"        case \"done\":","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"            checkIndex(fullCommand.length);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"            int doneIndex \u003d Integer.parseInt(fullCommand[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"            checkIndex(doneIndex, tasks.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"            return new DoneCommand(\"done\", doneIndex);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"            checkIndex(fullCommand.length);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"            int deleteIndex \u003d Integer.parseInt(fullCommand[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"            checkIndex(deleteIndex, tasks.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"seaweediman"},"content":"            return new DeleteCommand(\"delete\", deleteIndex);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"seaweediman"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"seaweediman"},"content":"            StringBuilder todoBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"seaweediman"},"content":"            for (int i \u003d 1; i \u003c fullCommand.length; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"seaweediman"},"content":"                if (i !\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"seaweediman"},"content":"                    todoBuilder.append(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"seaweediman"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"seaweediman"},"content":"                todoBuilder.append(fullCommand[i]);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"seaweediman"},"content":"            desc \u003d todoBuilder.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"seaweediman"},"content":"            checkDesc(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"seaweediman"},"content":"            return new AddTodoCommand(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"seaweediman"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"seaweediman"},"content":"            StringBuilder deadlineBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"seaweediman"},"content":"            StringBuilder byBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"seaweediman"},"content":"            String by;","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"seaweediman"},"content":"            boolean byFound \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"seaweediman"},"content":"            LocalDate deadlineDate \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"seaweediman"},"content":"            DateTimeFormatter deadlineDateFormatter \u003d DateTimeFormatter","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"seaweediman"},"content":"                    .ofPattern(\"[d/M/yyyy][d-MMM-yyyy][d-M-yyyy][d/MMM/yyyy]\");","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"seaweediman"},"content":"            for (int i \u003d 1; i \u003c fullCommand.length; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"seaweediman"},"content":"                if (byFound) {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"seaweediman"},"content":"                    try {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"seaweediman"},"content":"                        deadlineDate \u003d LocalDate.parse(fullCommand[i], deadlineDateFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"seaweediman"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"seaweediman"},"content":"                        if (!byBuilder.toString().equals(\"\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"seaweediman"},"content":"                            byBuilder.append(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"seaweediman"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"seaweediman"},"content":"                        byBuilder.append(fullCommand[i]);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"seaweediman"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"seaweediman"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"seaweediman"},"content":"                    if (i \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"seaweediman"},"content":"                        deadlineBuilder.append(fullCommand[i]);","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"seaweediman"},"content":"                    } else if (fullCommand[i].equals(\"/by\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"seaweediman"},"content":"                        byFound \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"seaweediman"},"content":"                    } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"seaweediman"},"content":"                        deadlineBuilder.append(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"seaweediman"},"content":"                        deadlineBuilder.append(fullCommand[i]);","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"seaweediman"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"seaweediman"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"seaweediman"},"content":"            desc \u003d deadlineBuilder.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"seaweediman"},"content":"            by \u003d byBuilder.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"seaweediman"},"content":"            checkDesc(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"seaweediman"},"content":"            if (deadlineDate \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"seaweediman"},"content":"                return new AddDeadlineCommand(desc, by);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"seaweediman"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"seaweediman"},"content":"                return new AddDeadlineCommand(desc, by, deadlineDate);","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"seaweediman"},"content":"        case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"seaweediman"},"content":"            StringBuilder eventBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"seaweediman"},"content":"            StringBuilder atBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"seaweediman"},"content":"            String at;","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"seaweediman"},"content":"            boolean atFound \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"seaweediman"},"content":"            LocalDate eventDate \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"seaweediman"},"content":"            DateTimeFormatter eventDateFormatter \u003d DateTimeFormatter","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"seaweediman"},"content":"                .ofPattern(\"[d/M/yyyy][d-MMM-yyyy][d-M-yyyy][d/MMM/yyyy]\");","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"seaweediman"},"content":"            for (int i \u003d 1; i \u003c fullCommand.length; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"seaweediman"},"content":"                if (atFound) {","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"seaweediman"},"content":"                    try {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"seaweediman"},"content":"                        eventDate \u003d LocalDate.parse(fullCommand[i], eventDateFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"seaweediman"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"seaweediman"},"content":"                        if (!atBuilder.toString().equals(\"\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"seaweediman"},"content":"                            atBuilder.append(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"seaweediman"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"seaweediman"},"content":"                        atBuilder.append(fullCommand[i]);","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"seaweediman"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"seaweediman"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"seaweediman"},"content":"                    if (i \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"seaweediman"},"content":"                        eventBuilder.append(fullCommand[i]);","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"seaweediman"},"content":"                    } else if (fullCommand[i].equals(\"/at\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"seaweediman"},"content":"                        atFound \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"seaweediman"},"content":"                    } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"seaweediman"},"content":"                        eventBuilder.append(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"seaweediman"},"content":"                        eventBuilder.append(fullCommand[i]);","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"seaweediman"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"seaweediman"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"seaweediman"},"content":"            desc \u003d eventBuilder.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"seaweediman"},"content":"            at \u003d atBuilder.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"seaweediman"},"content":"            checkDesc(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"seaweediman"},"content":"            if (eventDate \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"seaweediman"},"content":"                return new AddEventCommand(desc, at);","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"seaweediman"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"seaweediman"},"content":"                return new AddEventCommand(desc, at, eventDate);","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"seaweediman"},"content":"        case \"find\":","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"seaweediman"},"content":"            StringBuilder keywordBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"seaweediman"},"content":"            for (int i \u003d 1; i \u003c fullCommand.length; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"seaweediman"},"content":"                if (i !\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"seaweediman"},"content":"                    keywordBuilder.append(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"seaweediman"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"seaweediman"},"content":"                keywordBuilder.append(fullCommand[i]);","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"seaweediman"},"content":"            return new FindCommand(\"find\", keywordBuilder.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"seaweediman"},"content":"        default :","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"seaweediman"},"content":"        return new UnknownCommand(\"unknown\");","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"seaweediman"},"content":"     * Checks whether there is a description in the command line. Throws DukeException if description is missing.","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"seaweediman"},"content":"     * @param test the description the user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"seaweediman"},"content":"     * @throws DukeException if there is no description in the command line.","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"seaweediman"},"content":"    public static void checkDesc(String test) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"seaweediman"},"content":"        if (test.equals(\"\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"seaweediman"},"content":"            throw new DukeException(\"The description is empty\");","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"seaweediman"},"content":"     * Checks if the user input an index number when using the commands: done, delete.","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"seaweediman"},"content":"     * @param length the number of words in the command line that the user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"seaweediman"},"content":"     * @throws DukeException If the user did not enter an index number.","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":180,"author":{"gitId":"seaweediman"},"content":"    public static void checkIndex(int length) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":181,"author":{"gitId":"seaweediman"},"content":"        if (length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"seaweediman"},"content":"            throw new DukeException(\"Please give an index number\");","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"seaweediman"},"content":"     * Checks if the index number that the user input is valid.","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"seaweediman"},"content":"     * @param i            the index number that the user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"seaweediman"},"content":"     * @param lengthOfList the length of the user\u0027s TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"seaweediman"},"content":"     * @throws DukeException If the index number is negative or more than length of the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"seaweediman"},"content":"    public static void checkIndex(int i, int lengthOfList) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"seaweediman"},"content":"        if (i \u003c\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"seaweediman"},"content":"            throw new DukeException(\"Please give an index number \u003e 0\");","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"seaweediman"},"content":"        } else if (i \u003e lengthOfList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":197,"author":{"gitId":"seaweediman"},"content":"            throw new DukeException(\"Maximum index number is \" + lengthOfList);","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":200,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":200}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"    private File data;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"     * @param pathname of the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"     * @param dir      directory of the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"     * @throws IOException when an IO operations fails.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"    public Storage(String pathname, String dir) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"        File directory \u003d new File(dir);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"        File data \u003d new File(pathname);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"        if (!data.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"            data.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"        this.data \u003d data;","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"     * Returns the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"     * @return the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"    public File load() {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"        return this.data;","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"seaweediman"},"content":"     * Adds a task to the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"seaweediman"},"content":"     * @param task the task to be added to the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"seaweediman"},"content":"     * @throws IOException when an IO operation fails.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"seaweediman"},"content":"    public void add(Task task) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"seaweediman"},"content":"        FileWriter fw \u003d new FileWriter(\"data/tasks.txt\", true);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"seaweediman"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"seaweediman"},"content":"            Todo todo \u003d (Todo) task;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"seaweediman"},"content":"            fw.write(\"T | 0 | \" + task.getDescription() + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"seaweediman"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"seaweediman"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"seaweediman"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"seaweediman"},"content":"            fw.write(\"D | 0 | \" + task.getDescription() + \" | \" + deadline.getBy() + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"seaweediman"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"seaweediman"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"seaweediman"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"seaweediman"},"content":"            fw.write(\"E | 0 | \" + event.getDescription() + \" | \" + event.getAt() + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"seaweediman"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"seaweediman"},"content":"     * Deletes task from save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"seaweediman"},"content":"     * @param deleteIndex the index of the task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"seaweediman"},"content":"     * @throws IOException when an IO operation fails.","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"seaweediman"},"content":"    public void delete(int deleteIndex) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"seaweediman"},"content":"        List\u003cString\u003e content \u003d new ArrayList\u003c\u003e(Files.readAllLines(Path.of(\"data/tasks.txt\"), StandardCharsets.UTF_8));","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"seaweediman"},"content":"        content.remove(deleteIndex - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"seaweediman"},"content":"        Files.write(Path.of(\"data/tasks.txt\"), content, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"seaweediman"},"content":"     * Marks a task in the save file as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"seaweediman"},"content":"     * @param doneIndex the index of the task to be marked as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"seaweediman"},"content":"     * @throws IOException when an IO operation fails.","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"seaweediman"},"content":"    public void markAsDone(int doneIndex) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"seaweediman"},"content":"        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Path.of(\"data/tasks.txt\"),","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"seaweediman"},"content":"                        StandardCharsets.UTF_8));","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"seaweediman"},"content":"        String oldLine \u003d fileContent.get(doneIndex - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"seaweediman"},"content":"        StringBuilder newLine \u003d new StringBuilder(oldLine);","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"seaweediman"},"content":"        newLine.setCharAt(4, \u00271\u0027);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"seaweediman"},"content":"        fileContent.set(doneIndex - 1, newLine.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"seaweediman"},"content":"        Files.write(Path.of(\"data/tasks.txt\"), fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":103}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":" * Class containing the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"     * Constructor of TaskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"     * @param data the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"     * @throws FileNotFoundException when the file cannot be found.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"    public TaskList(File data) throws FileNotFoundException {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"        Scanner dataScanner \u003d new Scanner(data);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"        while (dataScanner.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"            String dataLine \u003d dataScanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"            String[] split \u003d dataLine.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"            String type \u003d split[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"            boolean taskDone \u003d split[2].equals(\"1\"); //if taskDone \u003d 1, task was done","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"            String desc;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"            switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"            case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"                StringBuilder todoBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"                for (int i \u003d 4; i \u003c split.length; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"                    if (i !\u003d 4) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"                        todoBuilder.append(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"                    todoBuilder.append(split[i]);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"                desc \u003d todoBuilder.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"                list.add(new Todo(desc, taskDone));","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"seaweediman"},"content":"            case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"seaweediman"},"content":"                StringBuilder deadlineBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"seaweediman"},"content":"                StringBuilder byBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"seaweediman"},"content":"                String by;","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"seaweediman"},"content":"                boolean byFound \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"seaweediman"},"content":"                for (int i \u003d 4; i \u003c split.length; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"seaweediman"},"content":"                    if (byFound) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"seaweediman"},"content":"                        if (!byBuilder.toString().equals(\"\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"seaweediman"},"content":"                            byBuilder.append(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"seaweediman"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"seaweediman"},"content":"                        byBuilder.append(split[i]);","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"seaweediman"},"content":"                    } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"seaweediman"},"content":"                        if (i \u003d\u003d 4) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"seaweediman"},"content":"                            deadlineBuilder.append(split[i]);","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"seaweediman"},"content":"                        } else if (split[i].equals(\"|\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"seaweediman"},"content":"                            byFound \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"seaweediman"},"content":"                        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"seaweediman"},"content":"                            deadlineBuilder.append(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"seaweediman"},"content":"                            deadlineBuilder.append(split[i]);","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"seaweediman"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"seaweediman"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"seaweediman"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"seaweediman"},"content":"                desc \u003d deadlineBuilder.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"seaweediman"},"content":"                by \u003d byBuilder.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"seaweediman"},"content":"                list.add(new Deadline(desc, by, taskDone));","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"seaweediman"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"seaweediman"},"content":"            case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"seaweediman"},"content":"                StringBuilder eventBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"seaweediman"},"content":"                StringBuilder atBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"seaweediman"},"content":"                String at;","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"seaweediman"},"content":"                boolean atFound \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"seaweediman"},"content":"                for (int i \u003d 4; i \u003c split.length; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"seaweediman"},"content":"                    if (atFound) {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"seaweediman"},"content":"                        if (!atBuilder.toString().equals(\"\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"seaweediman"},"content":"                            atBuilder.append(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"seaweediman"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"seaweediman"},"content":"                        atBuilder.append(split[i]);","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"seaweediman"},"content":"                    } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"seaweediman"},"content":"                        if (i \u003d\u003d 4) {","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"seaweediman"},"content":"                            eventBuilder.append(split[i]);","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"seaweediman"},"content":"                        } else if (split[i].equals(\"|\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"seaweediman"},"content":"                            atFound \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"seaweediman"},"content":"                        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"seaweediman"},"content":"                            eventBuilder.append(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"seaweediman"},"content":"                            eventBuilder.append(split[i]);","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"seaweediman"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"seaweediman"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"seaweediman"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"seaweediman"},"content":"                desc \u003d eventBuilder.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"seaweediman"},"content":"                at \u003d atBuilder.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"seaweediman"},"content":"                list.add(new Event(desc, at, taskDone));","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"seaweediman"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"seaweediman"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"seaweediman"},"content":"     * Returns the task in the task list at the index passed in.","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"seaweediman"},"content":"     * @param index index of the desired task.","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"seaweediman"},"content":"     * @return the task at that index.","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"seaweediman"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"seaweediman"},"content":"        return list.get(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"seaweediman"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"seaweediman"},"content":"     * @return size of the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"seaweediman"},"content":"    public int size() {","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"seaweediman"},"content":"        return list.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"seaweediman"},"content":"     * Removes the task at the index passed in.","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"seaweediman"},"content":"     * @param index the index of the task to be removed.","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"seaweediman"},"content":"    public void remove(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"seaweediman"},"content":"        list.remove(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"seaweediman"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"seaweediman"},"content":"     * @param task the task to be added.","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"seaweediman"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"seaweediman"},"content":"        list.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"seaweediman"},"content":"     * Returns a list of task whose description includes the keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"seaweediman"},"content":"     * @param keyword","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"seaweediman"},"content":"     * @return","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"seaweediman"},"content":"    public ArrayList\u003cTask\u003e filter(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"seaweediman"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"seaweediman"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"seaweediman"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"seaweediman"},"content":"                temp.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"seaweediman"},"content":"        return temp;","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":165}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":" * The class that deals with interactions with the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"     * The constructor for Ui.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"     * @param scanner","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"    public Ui(Scanner scanner) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"        this.scanner \u003d scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"     * Displays a line.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"-------------------------------------\");","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"-------------------------------------\");","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"Good Morning Master Wayne, Alfred here.\\nWhat can I do for you today?\");","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"-------------------------------------\");","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"     * Reads the command line that the user inputs.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"     * @return The command line that the user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"        String command \u003d scanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"        return command;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":45}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":" * Command that adds deadline to task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"    private final String by;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"     * Constructor for AddDeadlineCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"     * @param desc The description of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"     * @param by   when the deadline is.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"    public AddDeadlineCommand(String desc, String by) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"        super(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"        this.date \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"     * Constructor for AddDeadlineCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"     * @param desc The description of the deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"     * @param by   when the deadline is.","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"     * @param date date of deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"    public AddDeadlineCommand(String desc, String by, LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"        super(desc);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"     * Returns if the command is the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"     * @return false since this command is not the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"seaweediman"},"content":"     * Executes the command. Adds deadline to task list. Updates the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"seaweediman"},"content":"     * @param tasks   the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"seaweediman"},"content":"     * @param storage the storage of the programme.","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"seaweediman"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"seaweediman"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"seaweediman"},"content":"            Deadline deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"seaweediman"},"content":"            if (date \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"seaweediman"},"content":"                deadline \u003d new Deadline(super.getDesc(), by, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"seaweediman"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"seaweediman"},"content":"                deadline \u003d new Deadline(super.getDesc(), by, false, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"seaweediman"},"content":"            tasks.add(deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"seaweediman"},"content":"            storage.add(deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"seaweediman"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"seaweediman"},"content":"            System.out.println(deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"seaweediman"},"content":"            if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"seaweediman"},"content":"                System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"seaweediman"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"seaweediman"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"seaweediman"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"seaweediman"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":81}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":" * Command that adds event to task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"    private final String at;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"     * Constructor for AddEventCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"     * @param desc description of event.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"     * @param at   when the event is.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"    public AddEventCommand(String desc, String at) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"        super(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"        this.date \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"     * Constructor for AddEventCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"     * @param desc description of event.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"     * @param at   when the event is.","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"     * @param date date of event.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"    public AddEventCommand(String desc, String at, LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"        super(desc);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"     * returns when the event is.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"     * @return when the event is.","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"        return this.at;","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"seaweediman"},"content":"     * Returns if the command is the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"seaweediman"},"content":"     * @return false since this command is not the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"seaweediman"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"seaweediman"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"seaweediman"},"content":"     * Executes the command. Adds deadline to task list. Updates the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"seaweediman"},"content":"     * @param tasks   the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"seaweediman"},"content":"     * @param storage the storage of the programme.","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"seaweediman"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"seaweediman"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"seaweediman"},"content":"            Event event;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"seaweediman"},"content":"            if (date \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"seaweediman"},"content":"                event \u003d new Event(super.getDesc(), at, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"seaweediman"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"seaweediman"},"content":"                event \u003d new Event(super.getDesc(), at, false, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"seaweediman"},"content":"            tasks.add(event);","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"seaweediman"},"content":"            storage.add(event);","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"seaweediman"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"seaweediman"},"content":"            System.out.println(event);","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"seaweediman"},"content":"            if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"seaweediman"},"content":"                System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"seaweediman"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"seaweediman"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"seaweediman"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"seaweediman"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":91}},{"path":"src/main/java/duke/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":" * Command that adds todo to task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"     * Constructor for AddTodoCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"     * @param desc description for todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"    public AddTodoCommand(String desc) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"        super(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"     * Returns if the command is the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"     * @return false since this command is not the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"     * Executes the command. Adds deadline to task list. Updates the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"     * @param tasks   the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"     * @param storage the storage of the programme.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"            FileWriter fw \u003d new FileWriter(\"data/tasks.txt\", true);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"            Todo todo \u003d new Todo(super.getDesc(), false);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"            tasks.add(todo);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"            storage.add(todo);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"            System.out.println(todo);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"seaweediman"},"content":"            if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"seaweediman"},"content":"                System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"seaweediman"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"seaweediman"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"seaweediman"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"seaweediman"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":60}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":" * Abstract class for commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"    private String desc;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"     * Constructor for Command.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"     * @param desc description of the command.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"    public Command(String desc) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"     * Returns the description of the command.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"     * @return the description of the command.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"    public String getDesc() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"        return this.desc;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"     * Returns if the command is the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"     * Executes the command. Adds deadline to task list. Updates the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"    public abstract void execute(TaskList tasks, Storage storage);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":39}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":" * Command that deletes a task.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"    private int deleteIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"     * @param desc        description of the delete command.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"     * @param deleteIndex the index of the task to be deleted.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"    public DeleteCommand(String desc, int deleteIndex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"        super(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"        this.deleteIndex \u003d deleteIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"     * Returns if the command is the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"     * @return false since this command is not the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"     * Executes the command. Adds deadline to task list. Updates the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"     * @param tasks   the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"     * @param storage the storage of the programme.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"-------------------------------------\");","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"Very well, Master Wayne. This task has been deleted as per your request.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"        System.out.println((deleteIndex) + \". \" + tasks.get(deleteIndex - 1)); //actual index is index - 1","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"        tasks.remove(deleteIndex - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"seaweediman"},"content":"            System.out.println(\"Now you have 1 task in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"seaweediman"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"seaweediman"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"-------------------------------------\");","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"seaweediman"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"seaweediman"},"content":"            storage.delete(deleteIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"seaweediman"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"seaweediman"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":62}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":" * Command that marks task.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"    private int doneIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"     * Constructor for DoneCommand","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"     * @param desc","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"     * @param doneIndex","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"    public DoneCommand(String desc, int doneIndex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"        super(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"        this.doneIndex \u003d doneIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"     * Returns if the command is the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"     * @return false since this command is not the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"     * Executes the command. Adds deadline to task list. Updates the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"     * @param tasks   the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"     * @param storage the storage of the programme.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"        tasks.get(doneIndex - 1).markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"-------------------------------------\");","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"Very well, Master Wayne. This task has been marked as per your request.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"        System.out.println((doneIndex) + \". \" + tasks.get(doneIndex - 1)); //actual index is index - 1","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"-------------------------------------\");","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"seaweediman"},"content":"            storage.markAsDone(doneIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"seaweediman"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"seaweediman"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":55}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":" * Command that exits the programme.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"     * Constructor for ExitCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"     * @param desc","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"    public ExitCommand(String desc) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"        super(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"     * Returns if the command is the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"     * @return true since this command is the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"     * Executes the command. Adds deadline to task list. Updates the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"     * @param tasks   the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"     * @param storage the storage of the programme.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"Have a pleasant day, Master Wayne.\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":39}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"    private String keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"     * Constructor for Command.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"     * @param keyword the keywords entered.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"    public FindCommand(String desc, String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"        super(desc);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"        ArrayList\u003cTask\u003e filtered \u003d tasks.filter(keyword);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"-------------------------------------\");","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"        if (filtered.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"            System.out.println(\"Unfortunately, no match can be found, Master Wayne.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"            System.out.println(\"Here are the matching tasks in your list, Master Wayne:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"            for (int i \u003d 0; i \u003c filtered.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"                System.out.println((i + 1) + \". \" + filtered.get(i));","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"-------------------------------------\");","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"seaweediman":40}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":" * Command that lists the tasks in the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"     * Constructor for ListCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"     * @param desc","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"    public ListCommand(String desc) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"        super(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"     * Returns if the command is the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"     * @return false since this command is not the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"     * Executes the command. Adds deadline to task list. Updates the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"     * @param tasks   the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"     * @param storage the storage of the programme.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"            System.out.println(\"You have not added anything to the list, Master Wayne.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"            System.out.println(\"-------------------------------------\");","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"                System.out.println((i + 1) + \". \" + \" \" + task.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"            System.out.println(\"-------------------------------------\");","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":49}},{"path":"src/main/java/duke/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":" * Command that is not supported by the programme.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"     * Constructor for UnknownCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"     * @param desc description of the UnknownCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"    public UnknownCommand(String desc) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"        super(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"     * Returns if the command is the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"     * @return false since this command is not the exit command.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"     * Executes the command. Adds deadline to task list. Updates the save file.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"     * @param tasks   the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"     * @param storage the storage of the programme.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"        System.out.println(\"*** Apologies, Master Wayne. But I don\u0027t know what that means ***\");","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":39}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":" * Represents a deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"    private final String by;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"     * @param description of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"     * @param by          when the deadline is.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"     * @param isDone      if the task is done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"        this.date \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"     * @param description of the deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"     * @param by          when the deadline is.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"     * @param isDone      if the task is done or not.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"     * @param date        date of deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"    public Deadline(String description, String by, boolean isDone, LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"        return by;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"        return date;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"seaweediman"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"seaweediman"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"seaweediman"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"seaweediman"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"seaweediman"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"seaweediman"},"content":"                    + \" \" + by + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"seaweediman":59}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":" * Represents an Event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"    protected String at;","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"     * Constructor for Event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"     * @param description of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"     * @param at          when the event is.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"     * @param isDone      if the task is done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"    public Event(String description, String at, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"     * Constructor for Event task.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"     * @param description of the event.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"     * @param at          when the event is.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"     * @param isDone      if the task is done or not.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"     * @param date        date of event.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"    public Event(String description, String at, boolean isDone, LocalDate date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"        return at;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"        return date;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"seaweediman"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"seaweediman"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"seaweediman"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"seaweediman"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"seaweediman"},"content":"                    + \" \" + at + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"seaweediman":57}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":" * Class representing the Task type.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"    protected String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"     * @param description of the Task.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"     * @param isDone      if the task is done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"     * Returns the status icon of the task depending on if it is done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"     * @return the status icon of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"seaweediman"},"content":"     * Returns the description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"seaweediman"},"content":"     * @return description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"seaweediman"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"seaweediman"},"content":"        return this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"seaweediman"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"seaweediman"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"seaweediman":50}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":" * Represents Todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"     * @param description of the Todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"     * @param isDone      if the task is done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"seaweediman":21}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"import duke.commands.AddEventCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"            File input \u003d new File(\"java/duke/input.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"            TaskList tasks \u003d new TaskList(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"            AddEventCommand c \u003d (AddEventCommand) parser.parse(\"event project meeting /at Aug 6th 2-4pm\", tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"            assertEquals(c.getDesc(), \"project meeting\");","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"            assertEquals(c.getAt(), \"Aug 6th 2-4pm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":26}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"seaweediman"},"content":"    public void sizeTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"seaweediman"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"seaweediman"},"content":"            File input \u003d new File(\"java/duke/input.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"seaweediman"},"content":"            TaskList tasks \u003d new TaskList(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"seaweediman"},"content":"            assertEquals(tasks.size(), 4);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"seaweediman"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"seaweediman"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"seaweediman"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"seaweediman"},"content":"    public void descTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"seaweediman"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"seaweediman"},"content":"            File input \u003d new File(\"java/duke/input.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"seaweediman"},"content":"            TaskList tasks \u003d new TaskList(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"seaweediman"},"content":"            assertEquals(tasks.get(1).getDescription(), \"return book\");","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"seaweediman"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"seaweediman"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"seaweediman"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"seaweediman"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"seaweediman"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":37}},{"path":"src/test/java/duke/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"T | 1 | read book","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"T | 1 | join sports club","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"seaweediman":4}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"seaweediman":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"seaweediman"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"seaweediman"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"seaweediman"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"seaweediman"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"seaweediman"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"seaweediman"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"seaweediman"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"seaweediman"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"seaweediman"},"content":"blah","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"find book","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"seaweediman"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"seaweediman"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"seaweediman"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"seaweediman":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"seaweediman"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"seaweediman"},"content":"javac  -cp ..\\src\\main\\java\\duke\\commands -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\commands\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"seaweediman"},"content":"javac  -cp ..\\src\\main\\java\\duke\\tasks -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\tasks\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"seaweediman"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"seaweediman":4,"-":20}}]
