[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.7.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Py0000":21,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"T/[X]/clean room/No Data","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"D/[X]/finish reading/2021-09-01","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"E/[ ]/convention/2021-09-17","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"T/[X]/sweep floor/No Data","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"T/[X]/eat lunch/No Data","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"T/[ ]/break/No Data","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"Iron Bot (also known as Your Friendly Neighbourhood Chat Bot) is a task organiser that helps you, the user, to keep track of your tasks. ","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"## Getting Started","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"1. Ensure that you have `Java 11` or above installed.","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"2. Download the `ironbot.jar` file from `Releases`.","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"3. Double-click on the `ironbot.jar` file.","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"4. Start using the application.","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"Alternatively, you can: ","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"1. Ensure that you have `Java 11` or above installed.","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"2. Download the `ironbot.jar` file from `Releases`.","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"3. Open up `command prompt`.","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"4. Change the working directory to the directory where the `ironbot.jar` file is located.","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"5. Run the program using `java -jar ironbot.jar`.","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"6. Start using the application!","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"* Add Task (3 different categories: Todo, Deadline, Event)","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"* View Task","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"* Delete Task","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"* Complete Task","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"* Search Tasklist by Keyword","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"* Update Task (3 different modes for the 3 categories: title, status, date)","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"## Usage","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"### `todo` - Add a todo task to your tasklist","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"Adds a new todo task to your tasklist, with the specified title/description.","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"Format: `todo \u003ctitle/description\u003e` ","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"Example of usage: ","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"`todo CS2103T Assignment`","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"You will receive a message from Iron Bot telling you that your todo task has been added.","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"Roger. I\u0027ve added this task:","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"[T][ ] CS2103T Assigment","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"1 task(s) are in your list now!","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"### `deadline` - Add a deadline task to your tasklist","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"Adds a new deadline task to your tasklist, with the specified title/description and due date.","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"Format: `deadline \u003ctitle/description\u003e /by \u003cyyyy-mm-dd\u003e` ","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"`deadline CS2103T iP /by 2021-09-17`","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"You will receive a message from Iron Bot telling you that your deadline task has been added.","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"Roger. I\u0027ve added this task:","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"[D][ ] CS2103T iP (by: Sep 17 2021)","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"2 task(s) are in your list now!","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"### `event` - Add an event task to your tasklist","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"Adds a new event task to your tasklist, with the specified title/description and due date.","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"Format: `event \u003ctitle/description\u003e /at \u003cyyyy-mm-dd\u003e` ","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"Example of usage: ","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"Py0000"},"content":"`event start of recess week /at 2021-09-20`","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"Py0000"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"Py0000"},"content":"You will receive a message from Iron Bot telling you that your event task has been added.","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"Py0000"},"content":"Roger. I\u0027ve added this task:","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"Py0000"},"content":"[E][ ] start of recess week (at: Sep 20 2021)","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"Py0000"},"content":"3 task(s) are in your list now!","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"Py0000"},"content":"### `list` - Shows the all the tasks in the tasklist","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"Py0000"},"content":"Displays all the tasks in your tasklist.","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"Py0000"},"content":"Format: `list` ","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"Py0000"},"content":"Example of usage: ","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"Py0000"},"content":"`list`","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"Py0000"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"Py0000"},"content":"You will receive a message from Iron Bot showing your current tasklist.","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"Py0000"},"content":"These are the task(s) you have:","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"Py0000"},"content":"1.[T][ ] CS2103T Assigment","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"Py0000"},"content":"2.[D][ ] CS2103T iP (by: Sep 17 2021)","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"Py0000"},"content":"3.[E][ ] start of recess week (at: Sep 20 2021) ","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"Py0000"},"content":"### `delete` - Delete a task from your tasklist","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"Py0000"},"content":"Deletes an existing task from your tasklist, with the specified task id.","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"Py0000"},"content":"The task id follows the numbering shown when you enter the `list` command.","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"Py0000"},"content":"A valid id is required for this action to be executed by Iron Bot.","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"Py0000"},"content":"Format: `delete \u003cid\u003e` ","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"Py0000"},"content":"Example of usage: ","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"Py0000"},"content":"`delete 1`","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"Py0000"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"Py0000"},"content":"You will receive a message from Iron Bot telling you that your task has been deleted.","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"Py0000"},"content":"Roger. I\u0027ve deleted this task:","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"Py0000"},"content":"[T][ ] CS2103T Assignment","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"Py0000"},"content":"2 task(s) are in your list now!","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":132,"author":{"gitId":"Py0000"},"content":"### `done` - Mark a task in your tasklist as completed","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"Py0000"},"content":"Marks an existing task in your tasklist as completed, with the specified task id.","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"Py0000"},"content":"The task id follows the numbering shown when you enter the `list` command.","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"Py0000"},"content":"A valid id is required for this action to be executed by Iron Bot.","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"Py0000"},"content":"Format: `done \u003cid\u003e` ","lastModifiedDate":"2021-09-11"},{"lineNumber":139,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":140,"author":{"gitId":"Py0000"},"content":"Example of usage: ","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"Py0000"},"content":"`done 1`","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":144,"author":{"gitId":"Py0000"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":145,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"Py0000"},"content":"You will receive a message from Iron Bot telling you that your task has been marked as completed.","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":149,"author":{"gitId":"Py0000"},"content":"Well done! You have completed\"","lastModifiedDate":"2021-09-11"},{"lineNumber":150,"author":{"gitId":"Py0000"},"content":"[D][X] CS2103T iP (by: Sep 17 2021)","lastModifiedDate":"2021-09-11"},{"lineNumber":151,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":152,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":153,"author":{"gitId":"Py0000"},"content":"### `find` - Find all the tasks that contains the specified keyword","lastModifiedDate":"2021-09-11"},{"lineNumber":154,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":155,"author":{"gitId":"Py0000"},"content":"Gives a list of tasks that contains the specified keyword.","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"Py0000"},"content":"A valid keyword is required for this action to be executed by Iron Bot. (i.e. keyword cannot be blank)","lastModifiedDate":"2021-09-11"},{"lineNumber":157,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"Py0000"},"content":"Format: `find \u003ckeyword\u003e` ","lastModifiedDate":"2021-09-11"},{"lineNumber":159,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":160,"author":{"gitId":"Py0000"},"content":"Example of usage: ","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":162,"author":{"gitId":"Py0000"},"content":"`find CS2103T`","lastModifiedDate":"2021-09-11"},{"lineNumber":163,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":164,"author":{"gitId":"Py0000"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":165,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":166,"author":{"gitId":"Py0000"},"content":"You will receive a message from Iron Bot showing the list of tasks containing the `CS2103T` keyword.","lastModifiedDate":"2021-09-11"},{"lineNumber":167,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":168,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":169,"author":{"gitId":"Py0000"},"content":"These are the task(s) you have:","lastModifiedDate":"2021-09-11"},{"lineNumber":170,"author":{"gitId":"Py0000"},"content":"1.[D][X] CS2103T iP (by: Sep 17 2021)","lastModifiedDate":"2021-09-11"},{"lineNumber":171,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":172,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":173,"author":{"gitId":"Py0000"},"content":"### `update` - Updates the task in your tasklist","lastModifiedDate":"2021-09-11"},{"lineNumber":174,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":175,"author":{"gitId":"Py0000"},"content":"Updates the task, as specified by the id, in the tasklist.","lastModifiedDate":"2021-09-11"},{"lineNumber":176,"author":{"gitId":"Py0000"},"content":"The task id follows the numbering shown when you enter the `list` command.","lastModifiedDate":"2021-09-11"},{"lineNumber":177,"author":{"gitId":"Py0000"},"content":"A valid id is required for this action to be executed by Iron Bot.","lastModifiedDate":"2021-09-11"},{"lineNumber":178,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":179,"author":{"gitId":"Py0000"},"content":"Format: `update \u003cid\u003e \u003ctag\u003e \u003cinfo\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":180,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":181,"author":{"gitId":"Py0000"},"content":"There are 3 update options for you to choose from:","lastModifiedDate":"2021-09-11"},{"lineNumber":182,"author":{"gitId":"Py0000"},"content":"1) title `update \u003cid\u003e title \u003cnew title\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":183,"author":{"gitId":"Py0000"},"content":"2) date (only for deadline and event tasks) `update \u003cid\u003e date \u003cyyyy-mm-dd\u003e` ","lastModifiedDate":"2021-09-11"},{"lineNumber":184,"author":{"gitId":"Py0000"},"content":"3) completion status `update \u003cid\u003e status \u003ctrue/false\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":185,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":186,"author":{"gitId":"Py0000"},"content":"Example of usage: ","lastModifiedDate":"2021-09-11"},{"lineNumber":187,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":188,"author":{"gitId":"Py0000"},"content":"`update 2 date 2021-09-16`","lastModifiedDate":"2021-09-11"},{"lineNumber":189,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":190,"author":{"gitId":"Py0000"},"content":"Expected outcome:","lastModifiedDate":"2021-09-11"},{"lineNumber":191,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":192,"author":{"gitId":"Py0000"},"content":"You will receive a message from Iron Bot showing the task that has been updated.","lastModifiedDate":"2021-09-11"},{"lineNumber":193,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":194,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":195,"author":{"gitId":"Py0000"},"content":"Roger! I have updated this task:","lastModifiedDate":"2021-09-11"},{"lineNumber":196,"author":{"gitId":"Py0000"},"content":"[D][ ] CS2103T iP (by: Sep 16 2021)","lastModifiedDate":"2021-09-11"},{"lineNumber":197,"author":{"gitId":"Py0000"},"content":"```","lastModifiedDate":"2021-09-11"},{"lineNumber":198,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":199,"author":{"gitId":"Py0000"},"content":"## Summary ","lastModifiedDate":"2021-09-11"},{"lineNumber":200,"author":{"gitId":"Py0000"},"content":"Feature | Command","lastModifiedDate":"2021-09-11"},{"lineNumber":201,"author":{"gitId":"Py0000"},"content":"------------ | -------------","lastModifiedDate":"2021-09-11"},{"lineNumber":202,"author":{"gitId":"Py0000"},"content":"Add Todo task | `todo \u003ctitle/description\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":203,"author":{"gitId":"Py0000"},"content":"Add Deadline task | `deadline \u003ctitle/description\u003e /by \u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":204,"author":{"gitId":"Py0000"},"content":"Add Event task | `event \u003ctitle/description\u003e /at \u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":205,"author":{"gitId":"Py0000"},"content":"View tasklist | `list`","lastModifiedDate":"2021-09-11"},{"lineNumber":206,"author":{"gitId":"Py0000"},"content":"Delete task | `delete \u003cid\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":207,"author":{"gitId":"Py0000"},"content":"Mark task as complete | `done \u003cid\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":208,"author":{"gitId":"Py0000"},"content":"Find task by keyword | `find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":209,"author":{"gitId":"Py0000"},"content":"Update task | `update \u003cid\u003e \u003ctag\u003e \u003cinfo\u003e`","lastModifiedDate":"2021-09-11"},{"lineNumber":210,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":211,"author":{"gitId":"Py0000"},"content":"## Acknowledgement","lastModifiedDate":"2021-09-11"},{"lineNumber":212,"author":{"gitId":"Py0000"},"content":"* Iron Bot Icon by Ega Maulana from Pixabay (https://pixabay.com/vectors/iron-man-chibi-cartoon-superhero-5783522/).","lastModifiedDate":"2021-09-11"},{"lineNumber":213,"author":{"gitId":"Py0000"},"content":"* User Icon by André Santana AndreMS from Pixabay (https://pixabay.com/vectors/captain-america-marvel-hero-6192855/).","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"Py0000":193,"-":20}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Py0000":4,"-":85}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import duke.gui.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for a Duke object that contains a Storage, Parser and TaskList object.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"public class Duke {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    private TaskList items;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"     * Constructs a Duke object with the specified file path for the data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    public Duke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        this.items \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"        this.storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"        this.start();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"     * Starts the chat bot by attempting to load the previously stored data.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"     * Chat bot will receive, interpret, execute and save data from the recognisable commands from user.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"    private void start() {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"            this.items \u003d this.storage.loadTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"        } catch (IOException | NoSuchTaskException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"            Ui.notifyError(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"     * Generates a response to the user after the user enter an input in the GUI.","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the response of the chat bot to the user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"            Command action \u003d this.parser.checkCommandTag(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"            this.storage.saveTask(this.items);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"            return action.executeCommand(this.items);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"            return Ui.notifyError(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":59}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    private final Duke chatBot \u003d new Duke();","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setChatBot(chatBot);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"            stage.setTitle(\"Your Friendly Neighbourhood Iron Bot\");","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"            stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Py0000":30}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"import duke.commands.UpdateCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.IllegalFormatException;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.UnknownTagException;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for a Parser objects that helps to check an input and return a command for","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":" * the chat bot to execute accordingly.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    private final boolean IS_DEFAULT_STATUS \u003d false;","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    // Command Tags for the chat bot","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    private final String LIST_TAG \u003d \"list\";","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    private final String DONE_TAG \u003d \"done\";","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"    private final String TODO_TAG \u003d \"todo\";","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    private final String DEADLINE_TAG \u003d \"deadline\";","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"    private final String EVENT_TAG \u003d \"event\";","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"    private final String DELETE_TAG \u003d \"delete\";","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"    private final String FIND_TAG \u003d \"find\";","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"    private final String EXIT_TAG \u003d \"bye\";","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"    private final String UPDATE_TAG \u003d \"update\";","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"     * Returns the command tag of the input.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the command tag.","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"    private String getCommandTag(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"        if (!input.contains(\" \")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"            return input;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"            String key \u003d \" \";","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"            String[] details \u003d spiltInputByKey(input, key);","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"            return details[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"    private String[] spiltInputByKey(String input, String key) {","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"        return input.split(key);","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"    private String[] spiltInputByKey(String input, String key, int limit) {","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"        return input.split(key, limit);","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"     * Returns a command that allows the chat bot to know the next course of action to take","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"     * based on the user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"     * @return A Command.","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"     * @throws UnknownTagException Unrecognised keyword entered by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"    public Command checkCommandTag(String input) throws IllegalFormatException, UnknownTagException {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"        String commandTag \u003d getCommandTag(input).toLowerCase();","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Py0000"},"content":"        switch (commandTag) {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Py0000"},"content":"        case EXIT_TAG:","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"Py0000"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"Py0000"},"content":"        case LIST_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Py0000"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Py0000"},"content":"        case TODO_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Py0000"},"content":"            Todo todoTask \u003d new Todo(getTodoDesc(input), IS_DEFAULT_STATUS);","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"Py0000"},"content":"            return new TodoCommand(todoTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Py0000"},"content":"        case DEADLINE_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Py0000"},"content":"            Deadline deadlineTask \u003d new Deadline(getTaskDesc(\"deadline\", input),","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"Py0000"},"content":"                    getDeadlineDates(input), IS_DEFAULT_STATUS);","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"Py0000"},"content":"            return new DeadlineCommand(deadlineTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Py0000"},"content":"        case EVENT_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Py0000"},"content":"            Event eventTask \u003d new Event(getTaskDesc(\"event\", input), getEventDates(input), IS_DEFAULT_STATUS);","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"Py0000"},"content":"            return new EventCommand(eventTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Py0000"},"content":"        case DONE_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Py0000"},"content":"            int doneId \u003d getTaskId(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Py0000"},"content":"            return new DoneCommand(doneId);","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Py0000"},"content":"        case DELETE_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Py0000"},"content":"            int deleteId \u003d getTaskId(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Py0000"},"content":"            return new DeleteCommand(deleteId);","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Py0000"},"content":"        case FIND_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Py0000"},"content":"            String keyword \u003d getKeyword(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Py0000"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Py0000"},"content":"        case UPDATE_TAG:","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"Py0000"},"content":"            int taskId \u003d getUpdateId(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"Py0000"},"content":"            String tag \u003d getUpdateTag(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"Py0000"},"content":"            String information \u003d getUpdateInformation(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"Py0000"},"content":"            return new UpdateCommand(taskId, tag, information);","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"Py0000"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Py0000"},"content":"            throw new UnknownTagException();","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Py0000"},"content":"     * Returns the description of the Todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the description.","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"Py0000"},"content":"    private String getTodoDesc(String input) throws IllegalFormatException {","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Py0000"},"content":"        String key \u003d \"todo \";","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d spiltInputByKey(input, key);","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"Py0000"},"content":"        if (details.length !\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d \"Please ensure that you have typed todo keyword.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"Py0000"},"content":"        return details[1].trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"Py0000"},"content":"     * Returns the description of the Deadline/Event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the description.","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"Py0000"},"content":"    private String getTaskDesc(String type, String input) throws IllegalFormatException {","lastModifiedDate":"2021-09-11"},{"lineNumber":138,"author":{"gitId":"Py0000"},"content":"        String key \u003d type + \" \";","lastModifiedDate":"2021-09-11"},{"lineNumber":139,"author":{"gitId":"Py0000"},"content":"        String[] initialSplit \u003d spiltInputByKey(input, key);","lastModifiedDate":"2021-09-11"},{"lineNumber":140,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"Py0000"},"content":"        if (initialSplit.length !\u003d 2) {","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d \"Please follow the format:\\n type description /xx yyyy-mm-dd\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":143,"author":{"gitId":"Py0000"},"content":"                    + \" Use /by for deadline, /at for event.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":144,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":145,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"Py0000"},"content":"        String nextKey \u003d \"/\";","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d spiltInputByKey(initialSplit[1], nextKey);","lastModifiedDate":"2021-09-11"},{"lineNumber":149,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":150,"author":{"gitId":"Py0000"},"content":"        if (details.length !\u003d 2) {","lastModifiedDate":"2021-09-11"},{"lineNumber":151,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d \"Please follow the format:\\n type description /xx yyyy-mm-dd\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":152,"author":{"gitId":"Py0000"},"content":"                    + \" Use /by for deadline, /at for event.\";","lastModifiedDate":"2021-09-11"},{"lineNumber":153,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-11"},{"lineNumber":154,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":155,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"Py0000"},"content":"        return details[0].trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":157,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"Py0000"},"content":"     * Returns the date of the Deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"Py0000"},"content":"     * @return A LocalDate representing the date.","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"Py0000"},"content":"    private LocalDate getDeadlineDates(String input) throws IllegalFormatException {","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"Py0000"},"content":"        String key \u003d \"/by \";","lastModifiedDate":"2021-09-04"},{"lineNumber":168,"author":{"gitId":"Py0000"},"content":"        return getTaskDate(key, input);","lastModifiedDate":"2021-09-04"},{"lineNumber":169,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"Py0000"},"content":"     * Returns the date of the Event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"Py0000"},"content":"     * @return A LocalDate representing the date.","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"Py0000"},"content":"    private LocalDate getEventDates(String input) throws IllegalFormatException {","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"Py0000"},"content":"        String key \u003d \"/at \";","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"Py0000"},"content":"        return getTaskDate(key, input);","lastModifiedDate":"2021-09-04"},{"lineNumber":181,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":182,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":183,"author":{"gitId":"Py0000"},"content":"    private LocalDate getTaskDate(String key, String input) throws IllegalFormatException {","lastModifiedDate":"2021-09-04"},{"lineNumber":184,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d spiltInputByKey(input, key);","lastModifiedDate":"2021-09-04"},{"lineNumber":185,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"Py0000"},"content":"        if (details.length !\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d String.format(\"Please follow the format:\\n type title %s yyyy-mm-dd.\", key);","lastModifiedDate":"2021-09-04"},{"lineNumber":188,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":189,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":190,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":191,"author":{"gitId":"Py0000"},"content":"        String dateString \u003d details[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":192,"author":{"gitId":"Py0000"},"content":"        return getLocalDate(dateString, key);","lastModifiedDate":"2021-09-04"},{"lineNumber":193,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"Py0000"},"content":"    private LocalDate getLocalDate(String detail, String key) throws IllegalFormatException {","lastModifiedDate":"2021-09-04"},{"lineNumber":196,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":197,"author":{"gitId":"Py0000"},"content":"            return LocalDate.parse(detail);","lastModifiedDate":"2021-09-04"},{"lineNumber":198,"author":{"gitId":"Py0000"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d String.format(\"Please follow the format:\\n type title %s yyyy-mm-dd.\", key);","lastModifiedDate":"2021-09-04"},{"lineNumber":200,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":201,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":202,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":203,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":204,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":205,"author":{"gitId":"Py0000"},"content":"     * Returns the index of the task in the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":206,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":208,"author":{"gitId":"Py0000"},"content":"     * @return An int representing the index.","lastModifiedDate":"2021-08-22"},{"lineNumber":209,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":210,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":211,"author":{"gitId":"Py0000"},"content":"    private int getTaskId(String input) throws IllegalFormatException {","lastModifiedDate":"2021-08-22"},{"lineNumber":212,"author":{"gitId":"Py0000"},"content":"        String key \u003d \" \";","lastModifiedDate":"2021-09-04"},{"lineNumber":213,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d spiltInputByKey(input, key);","lastModifiedDate":"2021-09-04"},{"lineNumber":214,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":215,"author":{"gitId":"Py0000"},"content":"        if (details.length !\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":216,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d \"Please follow the format:\\n \u0027command\u0027 \u0027id\u0027.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":217,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":218,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":219,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":220,"author":{"gitId":"Py0000"},"content":"        if (!isInteger(details[1])) {","lastModifiedDate":"2021-09-02"},{"lineNumber":221,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d \"Please enter a valid id.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":222,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":223,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":224,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":225,"author":{"gitId":"Py0000"},"content":"        return Integer.parseInt(details[1]) - 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":226,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":227,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":228,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":229,"author":{"gitId":"Py0000"},"content":"     * Returns true is the input is an integer.","lastModifiedDate":"2021-09-02"},{"lineNumber":230,"author":{"gitId":"Py0000"},"content":"     * Otherwise, returns false.","lastModifiedDate":"2021-09-02"},{"lineNumber":231,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":232,"author":{"gitId":"Py0000"},"content":"     * @param input The string to be checked.","lastModifiedDate":"2021-09-02"},{"lineNumber":233,"author":{"gitId":"Py0000"},"content":"     * @return A boolean indicating if the input is an integer.","lastModifiedDate":"2021-09-02"},{"lineNumber":234,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":235,"author":{"gitId":"Py0000"},"content":"    private boolean isInteger(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":236,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":237,"author":{"gitId":"Py0000"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":238,"author":{"gitId":"Py0000"},"content":"            return true;","lastModifiedDate":"2021-09-02"},{"lineNumber":239,"author":{"gitId":"Py0000"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":240,"author":{"gitId":"Py0000"},"content":"            return false;","lastModifiedDate":"2021-09-02"},{"lineNumber":241,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":242,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":243,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":244,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":245,"author":{"gitId":"Py0000"},"content":"     * Returns the keyword that will be used to search the list of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":246,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":247,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":248,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the keyword to be used for the search.","lastModifiedDate":"2021-08-22"},{"lineNumber":249,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":250,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":251,"author":{"gitId":"Py0000"},"content":"    private String getKeyword(String input) throws IllegalFormatException {","lastModifiedDate":"2021-08-22"},{"lineNumber":252,"author":{"gitId":"Py0000"},"content":"        String key \u003d \"find \";","lastModifiedDate":"2021-09-04"},{"lineNumber":253,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d spiltInputByKey(input, key);","lastModifiedDate":"2021-09-04"},{"lineNumber":254,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":255,"author":{"gitId":"Py0000"},"content":"        if (details.length !\u003d 2) {","lastModifiedDate":"2021-09-04"},{"lineNumber":256,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d \"Please follow the format:\\n find \u0027keyword\u0027.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":257,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":258,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":259,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":260,"author":{"gitId":"Py0000"},"content":"        String keyword \u003d details[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":261,"author":{"gitId":"Py0000"},"content":"        if (keyword.isBlank()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":262,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d \"Did you forget to enter a keyword?\";","lastModifiedDate":"2021-09-04"},{"lineNumber":263,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":264,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":265,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":266,"author":{"gitId":"Py0000"},"content":"        return keyword;","lastModifiedDate":"2021-09-04"},{"lineNumber":267,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":268,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":269,"author":{"gitId":"Py0000"},"content":"    private int getUpdateId(String input) throws IllegalFormatException {","lastModifiedDate":"2021-09-04"},{"lineNumber":270,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d getDetails(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":271,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":272,"author":{"gitId":"Py0000"},"content":"        String id \u003d details[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":273,"author":{"gitId":"Py0000"},"content":"        if (!isInteger(id)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":274,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d \"Please enter a valid id.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":275,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":276,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":277,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":278,"author":{"gitId":"Py0000"},"content":"        return Integer.parseInt(id) - 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":279,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":280,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":281,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":282,"author":{"gitId":"Py0000"},"content":"     * Returns the information that needs to be updated.","lastModifiedDate":"2021-09-04"},{"lineNumber":283,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":284,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-09-04"},{"lineNumber":285,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the information that needs to be updated.","lastModifiedDate":"2021-09-04"},{"lineNumber":286,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":287,"author":{"gitId":"Py0000"},"content":"    private String getUpdateTag(String input) throws IllegalFormatException {","lastModifiedDate":"2021-09-04"},{"lineNumber":288,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d getDetails(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":289,"author":{"gitId":"Py0000"},"content":"        return details[2];","lastModifiedDate":"2021-09-04"},{"lineNumber":290,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":291,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":292,"author":{"gitId":"Py0000"},"content":"    private String getUpdateInformation(String input) throws IllegalFormatException {","lastModifiedDate":"2021-09-04"},{"lineNumber":293,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d getDetails(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":294,"author":{"gitId":"Py0000"},"content":"        return details[3];","lastModifiedDate":"2021-09-04"},{"lineNumber":295,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":296,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":297,"author":{"gitId":"Py0000"},"content":"    private String[] getDetails(String input) throws IllegalFormatException {","lastModifiedDate":"2021-09-04"},{"lineNumber":298,"author":{"gitId":"Py0000"},"content":"        String key \u003d \" \";","lastModifiedDate":"2021-09-04"},{"lineNumber":299,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d spiltInputByKey(input, key, 4);","lastModifiedDate":"2021-09-04"},{"lineNumber":300,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":301,"author":{"gitId":"Py0000"},"content":"        if (details.length !\u003d 4) {","lastModifiedDate":"2021-09-04"},{"lineNumber":302,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d \"Please follow the format:\\n update \u0027id\u0027 \u0027tag\u0027 \u0027info\u0027\";","lastModifiedDate":"2021-09-04"},{"lineNumber":303,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":304,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":305,"author":{"gitId":"Py0000"},"content":"        return details;","lastModifiedDate":"2021-09-04"},{"lineNumber":306,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":307,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":307}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for storing and accessing user\u0027s data.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"     * @param filePath File path of the data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"        assert (!this.filePath.isEmpty()) : \"filePath is empty\";","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"     * Checks if the specified files and directories exist.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"     * Creates the files and directories if it does not exist.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"     * @throws IOException Error in creation of files and/or directories.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"    private void checkToMake() throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"        checkDirectoryToMake();","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"        checkFileToMake();","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"    private void checkDirectoryToMake() {","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"        Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"        File dir \u003d path.getParent().toFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"        // makes the specified directory if it does not exist","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"            dir.mkdir();","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"    private void checkFileToMake() throws IOException {","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"        File dataFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"        // makes the specified file if it does not exist","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"     * Saves the tasks added by the user into the data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"     * @param taskList The list containing the tasks added by the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"     * @throws IOException Data file cannot be found or written to.","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"    public void saveTask(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"        writeToDataFile(taskList, fw);","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"        fw.close();","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"Py0000"},"content":"    private void writeToDataFile(TaskList taskList, FileWriter fw) throws IOException {","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"Py0000"},"content":"        BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Py0000"},"content":"        for (int i \u003d 0; i \u003c taskList.getTaskCount(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Py0000"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Py0000"},"content":"            bw.write(formatDataToSave(task));","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Py0000"},"content":"        bw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"Py0000"},"content":"    private String formatDataToSave(Task task) {","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"Py0000"},"content":"        return String.format(\"%s/%s/%s/%s\\n\",","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"Py0000"},"content":"                task.getTag(), task.getStatusIcon(), task.getDescription(), task.getDueDate());","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Py0000"},"content":"     * Retrieves the data saved from the data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Py0000"},"content":"     * @return An arraylist containing all the activities that were added by the user previously.","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Py0000"},"content":"     * @throws FileNotFoundException Data file could not be found.","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Py0000"},"content":"     * @throws NoSuchTaskException The data file contains information/tag that is not recognised by the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Py0000"},"content":"    private TaskList loadData() throws FileNotFoundException, NoSuchTaskException {","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Py0000"},"content":"        File dataFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Py0000"},"content":"        return readAndLoad(dataFile);","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"Py0000"},"content":"    private TaskList readAndLoad(File file) throws FileNotFoundException, NoSuchTaskException {","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"Py0000"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"Py0000"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Py0000"},"content":"        interpretLineAndAdd(scanner, taskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Py0000"},"content":"        scanner.close();","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"Py0000"},"content":"        return taskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"Py0000"},"content":"    private void interpretLineAndAdd(Scanner scanner, TaskList taskList) throws NoSuchTaskException {","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"Py0000"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"Py0000"},"content":"            String nextData \u003d scanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"Py0000"},"content":"            // get the relevant details from the data","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"Py0000"},"content":"            String[] details \u003d nextData.split(\"/\");","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"Py0000"},"content":"            String type \u003d details[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"Py0000"},"content":"            boolean isDone \u003d (details[1].equals(\"[X]\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"Py0000"},"content":"            String desc \u003d details[2];","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"Py0000"},"content":"            String dueDate \u003d details[3];","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"Py0000"},"content":"            categorizeAndLoad(taskList, type, isDone, desc, dueDate);","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"Py0000"},"content":"    private void categorizeAndLoad(TaskList list, String type, boolean isDone, String desc, String dueDate)","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"Py0000"},"content":"            throws NoSuchTaskException {","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"Py0000"},"content":"        if (type.equals(Todo.TAG)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"Py0000"},"content":"            Task t \u003d new Todo(desc, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"Py0000"},"content":"            list.addTask(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":136,"author":{"gitId":"Py0000"},"content":"        } else if (type.equals(Deadline.TAG)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"Py0000"},"content":"            Task t \u003d new Deadline(desc, LocalDate.parse(dueDate), isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"Py0000"},"content":"            list.addTask(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":139,"author":{"gitId":"Py0000"},"content":"        } else if (type.equals(Event.TAG)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"Py0000"},"content":"            Task t \u003d new Event(desc, LocalDate.parse(dueDate), isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"Py0000"},"content":"            list.addTask(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":142,"author":{"gitId":"Py0000"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"Py0000"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"Py0000"},"content":"     * Loads the task into the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"Py0000"},"content":"     * @return An arraylist containing all the activities that were retrieved from the data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"Py0000"},"content":"     * @throws IOException Data file cannot be created, found or opened.","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"Py0000"},"content":"     * @throws NoSuchTaskException The data file contains information/tag that is not recognised by the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"Py0000"},"content":"    public TaskList loadTask() throws IOException, NoSuchTaskException {","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"Py0000"},"content":"        checkToMake();","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"Py0000"},"content":"        return loadData();","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":158}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.IllegalFormatException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.UnknownTagException;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.UpdateFailException;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for a Command object.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":" * Subclasses of Command has to implement the body for executeCommand method.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"     * @param taskList The list containing the tasks of the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"     * @throws NoSuchTaskException May be thrown if the chat bot cannot find the task to execute the command.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    public abstract String executeCommand(TaskList taskList) throws NoSuchTaskException, UpdateFailException, UnknownTagException, IllegalFormatException;","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":22}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.gui.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a DeadlineCommand object that contains a Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    private final Deadline task;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    public DeadlineCommand(Deadline task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    public String executeCommand(TaskList taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        return Ui.printAddTaskMessage(this.task, taskList.getTaskCount());","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":23}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.gui.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a DeleteCommand object that contains an id of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    private final int id;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    public DeleteCommand(int id) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    public String executeCommand(TaskList taskList) throws NoSuchTaskException {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        boolean isIdPositive \u003d this.id \u003e\u003d 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        boolean isIdLessThanTaskCount \u003d this.id \u003c taskList.getTaskCount();","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"        boolean isIdWithinRange \u003d isIdPositive \u0026\u0026 isIdLessThanTaskCount;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        if (isIdWithinRange) {","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"            Task task \u003d taskList.getTask(this.id);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"            taskList.deleteTask(this.id);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"            return Ui.printDeleteTaskMessage(task, taskList.getTaskCount());","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":32}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.gui.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a DoneCommand object that contains an id of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    private final int id;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    public DoneCommand(int id) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    public String executeCommand(TaskList taskList) throws NoSuchTaskException {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        boolean isIdPositive \u003d this.id \u003e\u003d 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        boolean isIdLessThanTaskCount \u003d this.id \u003c taskList.getTaskCount();","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"        boolean isIdWithinRange \u003d isIdPositive \u0026\u0026 isIdLessThanTaskCount;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        if (isIdWithinRange) {","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"            Task task \u003d taskList.getTask(this.id);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"            taskList.markTaskAsComplete(this.id);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"            return Ui.printTaskCompleteMessage(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":32}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.gui.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a EventCommand object that contains an Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    private final Event task;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    public EventCommand(Event task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    public String executeCommand(TaskList taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        return Ui.printAddTaskMessage(this.task, taskList.getTaskCount());","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":23}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.gui.Ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    public String executeCommand(TaskList taskList) throws NoSuchTaskException {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"        return closeApplicationAfterMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"     * Closes the GUI of the Application after 1.25 seconds.","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"     * Prints the goodbye message on the GUI before closing.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the goodbye message.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    private String closeApplicationAfterMessage() {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        new Thread(() -\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"            try {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"                Thread.sleep(1250);","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"            } finally {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"                System.exit(0);","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"        }).start();","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"        return Ui.exit();","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"Py0000":33}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.gui.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a FindCommand object that contains a keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    public String executeCommand(TaskList taskList) throws NoSuchTaskException {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        TaskList result \u003d taskList.searchTaskByKeyword(this.keyword);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"        if (result.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"            return Ui.printNoneMatchMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"            return Ui.displayList(result);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":28}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.gui.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a ListCommand object.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    public String executeCommand(TaskList taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"        return Ui.displayList(taskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":15}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.gui.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a TodoCommand object that contains a Todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    private final Todo task;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    public TodoCommand(Todo task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    public String executeCommand(TaskList taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        return Ui.printAddTaskMessage(this.task, taskList.getTaskCount());","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":23}},{"path":"src/main/java/duke/commands/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.IllegalFormatException;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.UpdateFailException;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import duke.gui.Ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for the UpdateCommand object.","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":" * Format to activate the update command: \"update taskIndex tag newUpdate\"","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":" * There is a total of 3 tags:","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":" * 1) title, to update the description of the task","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":" * 2) date, to update the due date of the task if it exist","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":" * 3) status, to update the completion status of the task","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    private final String TITLE_TAG \u003d \"title\";","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    private final String DATE_TAG \u003d \"date\";","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    private final String STATUS_TAG \u003d \"status\";","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    private final int id;","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"    private final String tag;","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    private final String information;","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"     * Constructor for UpdateCommand object.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"     * @param id The id of the task to be updated","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"     * @param tag The thing that is needed to be updated","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"     * @param information The new information","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"    public UpdateCommand(int id, String tag, String information) {","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"        this.information \u003d information;","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"    public String executeCommand(TaskList taskList) throws NoSuchTaskException, UpdateFailException,","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"            IllegalFormatException {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"        Task task \u003d taskList.getTask(this.id);","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"        checkTag(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"        return Ui.printUpdateMessage(taskList, this.id);","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"    private void checkTag(Task task) throws IllegalFormatException, UpdateFailException {","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"        switch (tag) {","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"        case TITLE_TAG:","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"            updateTitle(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"        case STATUS_TAG:","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"            updateStatus(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"        case DATE_TAG:","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"            updateDate(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"        default:","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"            invalidUpdate();","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"            return;","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"     * Updates the description of the task specified.","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"     * @param task The task to be updated.","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"    private void updateTitle(Task task) {","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"        task.setDescription(information);","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"Py0000"},"content":"     * Updates the status of the task specified.","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"Py0000"},"content":"     * The word that follows after \"status\" in the command indicates:","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"Py0000"},"content":"     * true indicates that the user wants to update the completion status to completed.","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"Py0000"},"content":"     * false indicates that the user wants to reset the completion status. (Not completed)","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"Py0000"},"content":"     * @param task The task to be updated.","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"Py0000"},"content":"    private void updateStatus(Task task) throws IllegalFormatException {","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"Py0000"},"content":"        final String markAsComplete \u003d \"true\";","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"Py0000"},"content":"        final String markAsIncomplete \u003d \"false\";","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"Py0000"},"content":"        if (information.equalsIgnoreCase(markAsComplete)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"Py0000"},"content":"            task.markAsComplete();","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"Py0000"},"content":"        } else if (information.equalsIgnoreCase(markAsIncomplete)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"Py0000"},"content":"            task.markAsIncomplete();","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"Py0000"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d \"Please key in true/false only!\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"Py0000"},"content":"                    + \"true - for completed\\nfalse - for incomplete\";","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"Py0000"},"content":"     * Updates the date of the task specified, if this field exist.","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"Py0000"},"content":"     * @param task The task to be updated.","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"Py0000"},"content":"     * @throws UpdateFailException User tries to update a task without a date field.","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"Py0000"},"content":"    private void updateDate(Task task) throws UpdateFailException, IllegalFormatException {","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"Py0000"},"content":"        String taskType \u003d task.getTag();","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"Py0000"},"content":"        boolean isInformationDate \u003d tag.equalsIgnoreCase(\"date\");","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"Py0000"},"content":"        boolean isTaskTodo \u003d taskType.equalsIgnoreCase(\"T\");","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"Py0000"},"content":"        boolean isUnableToUpdate \u003d isInformationDate \u0026\u0026 isTaskTodo;","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"Py0000"},"content":"        // User tries to update the date of a Todo task.","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"Py0000"},"content":"        if (isUnableToUpdate) {","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"Py0000"},"content":"            throw new UpdateFailException();","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"Py0000"},"content":"            task.setDate(information);","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"Py0000"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"Py0000"},"content":"            String errorMsg \u003d \"Date format is wrong. It should be yyyy-mm-dd\";","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"Py0000"},"content":"     * Throws an IllegalFormatException as user entered a tag that is unrecognised by the chat bot.","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"Py0000"},"content":"    private void invalidUpdate() throws IllegalFormatException {","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"Py0000"},"content":"        String errorMsg \u003d \"Plase check if you have used the correct format.\\n \"","lastModifiedDate":"2021-09-04"},{"lineNumber":135,"author":{"gitId":"Py0000"},"content":"                + \"Also, Please note that tag can only be either one of the 3:\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":136,"author":{"gitId":"Py0000"},"content":"                + \"\\t1) title - to update task description\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":137,"author":{"gitId":"Py0000"},"content":"                + \"\\t2) date - to update due date of task\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":138,"author":{"gitId":"Py0000"},"content":"                + \"\\t3) status - to update completion status of the task\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":139,"author":{"gitId":"Py0000"},"content":"        throw new IllegalFormatException(errorMsg);","lastModifiedDate":"2021-09-04"},{"lineNumber":140,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"Py0000":141}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Represents the possible exception that can be thrown by this chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":14}},{"path":"src/main/java/duke/exceptions/IllegalFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Represents an exception for the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" * Thrown when user did not use the correct format when using the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":" * Example: deadline without /by, event without /at, etc","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"public class IllegalFormatException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    public IllegalFormatException(String msg) {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"        super(\"Wrong format! \" + msg);","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":15}},{"path":"src/main/java/duke/exceptions/NoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Represents an exception for the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" * Thrown when user tries to mark/delete tasks that are not in the list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":" * i.e User has enter the wrong value.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"public class NoSuchTaskException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    public NoSuchTaskException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"        super(\"You do not have this many task added yet, please check and try again.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":14}},{"path":"src/main/java/duke/exceptions/UnknownTagException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Represents an exception for the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" * Thrown when an unknown tag is entered by the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"public class UnknownTagException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    public UnknownTagException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"        super(\"No such tag! Please input the correct tag!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":13}},{"path":"src/main/java/duke/exceptions/UpdateFailException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Represents an exception for the chat bot.","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" * Thrown when chat bot cannot update the task specified by user.","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"public class UpdateFailException extends DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"    public UpdateFailException() {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"        super(\"Sorry, I am unable to update it. Did you try to update the deadline of a Todo Task?\");","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"Py0000":11}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.gui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":" * This class represents a dialog box consisting of an ImageView to represent the duke\u0027s and user\u0027s face and","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":" * a label containing text from the user and duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"            setUpDialogBox(text, img);","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"    private void setUpDialogBox(String text, Image img) throws IOException {","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"        String resourceString \u003d \"/view/DialogBox.fxml\";","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(resourceString));","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"        fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"        fxmlLoader.load();","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"        dialog.setFont(Font.font(\"Comic Sans MS\", 13));","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"     * Returns the dialog box when user type in something.","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"     * @param text User\u0027s input","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"     * @param img User\u0027s icon","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"     * @return A DialogBox for the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"        db.setStyle(\"-fx-background-color: #000042; -fx-border-color: #FFFFFF\");","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"        return db;","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"     * Returns the dialog box when chatBot replies something.","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"     * @param text ChatBot\u0027s input","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"     * @param img ChatBot\u0027s icon","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"     * @return A DialogBox for the chatBot.","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"Py0000"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"Py0000"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"Py0000"},"content":"        db.setStyle(\"-fx-background-color: #4b0908; -fx-border-color: #b97d10\");","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"Py0000"},"content":"        db.flip();","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Py0000"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Py0000":82}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.gui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.Main;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":" * A launcher class that launches the application.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Py0000":13}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.gui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":" * Controller for MainWindow.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":" * Provides the layout for the other controls.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    private Duke chatBot;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    // Image by André Santana AndreMS from Pixabay","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    // Image from: https://pixabay.com/vectors/captain-america-marvel-hero-6192855/","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"    private final Image userIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserIcon.png\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    // Image by Ega Maulana from Pixabay","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    // Image from: https://pixabay.com/vectors/iron-man-chibi-cartoon-superhero-5783522/","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"    private final Image botImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/BotIcon.png\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"     * Sets up the application UI when started.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"        assert (botImage !\u003d null) : \"Image resource cannot be null\";","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"        assert (!botImage.isBackgroundLoading()) : \"Chat Bot Icon not loaded in GUI\";","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.greetUser(), botImage));","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"    public void setChatBot(Duke duke) {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"        chatBot \u003d duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"     * then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"        String response \u003d chatBot.getResponse(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"        assert (botImage !\u003d null) : \"Image resource cannot be null\";","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"        assert (userIcon !\u003d null) : \"Image resource cannot be null\";","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"        assert (!userIcon.isBackgroundLoading()) : \"User Icon not loaded in GUI\";","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"        assert (!botImage.isBackgroundLoading()) : \"Chat Bot Icon not loaded in GUI\";","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"                DialogBox.getUserDialog(input + \"    \", userIcon),","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"                DialogBox.getDukeDialog(response, botImage)","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Py0000":71}},{"path":"src/main/java/duke/gui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.gui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"public class Ui {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"    private enum Message {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"        WELCOME_MSG(\"Hello! I am Iron Bot!\\nWhat can I do for you?\"),","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"        EXIT_MSG(\"Good Bye. Don\u0027t have a good day... Have a great day!!!\"),","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"        DISPLAY_LIST_MSG(\"These are the task(s) you have:\"),","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"        EMPTY_LIST_MSG(\"There is current no task in your list!\"),","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"        TASK_DONE_MSG(\"Well done! You have completed: \\n\"),","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        TASK_ADDED_MSG(\"Roger. I\u0027ve added this task: \\n\"),","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"        TASK_DELETED_MSG(\"Roger. I\u0027ve deleted this task: \\n\"),","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"        CHECK_TASK_COUNT_MSG(\" task(s) are in your list now!\"),","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"        NONE_MATCH_MSG(\"Sorry, I can\u0027t find anything that matches the keyword.\"),","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"        UPDATE_TASK_MSG(\"Roger! I have updated this task: \\n\");","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        private final String msg;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"        Message(String msg) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"            this.msg \u003d msg;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"     * Returns the welcome message when the chat bot is started.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the welcome message.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    public static String greetUser() {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"        return Message.WELCOME_MSG.msg;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"     * Returns the goodbye message when the chat bot is terminated.","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the goodbye message.","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"    public static String exit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"        return Message.EXIT_MSG.msg;","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"     * Returns the message when the user has completed a task.","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"     * @param task The task completed","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the task completed message to be displayed.","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"    public static String printTaskCompleteMessage(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"        return Message.TASK_DONE_MSG.msg + task;","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"     * Returns a String containing the contents in the list when the user asked for it.","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"     * @param taskList The list containing the tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the contents in the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"    public static String displayList(TaskList taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"        if (taskList.isListEmpty()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"            return Message.EMPTY_LIST_MSG.msg;","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"        return listToString(taskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"    private static String listToString(TaskList taskList) {","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"        StringBuilder content \u003d new StringBuilder(Message.DISPLAY_LIST_MSG.msg);","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"        for (int i \u003d 0; i \u003c taskList.getTaskCount(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"            Task item \u003d taskList.getTask(i);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"            String itemDetails \u003d String.format(\"\\n%s.%s\", (i + 1), item);","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"Py0000"},"content":"            content.append(itemDetails);","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"Py0000"},"content":"        return content.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"Py0000"},"content":"     * Returns a String indicating that there is nothing in the list that matches the input.","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the none matched message to be displayed.","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"Py0000"},"content":"    public static String printNoneMatchMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"Py0000"},"content":"        return Message.NONE_MATCH_MSG.msg;","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"Py0000"},"content":"     * Returns the message to be shown when the user deletes a task from the list.","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"Py0000"},"content":"     * @param task The task to be deleted","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"Py0000"},"content":"     * @param count Number of task in the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the message from the chat Bot.","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"Py0000"},"content":"    public static String printDeleteTaskMessage(Task task, int count) {","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"Py0000"},"content":"        String deletedTaskInfo \u003d Message.TASK_DELETED_MSG.msg + task;","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"Py0000"},"content":"        String updatedListInfo \u003d String.format(\"%d %s\", count, Message.CHECK_TASK_COUNT_MSG.msg);","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"Py0000"},"content":"        return deletedTaskInfo + \"\\n\" + updatedListInfo;","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"Py0000"},"content":"     * Returns the message to be shown when the user adds a task to the list.","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"Py0000"},"content":"     * @param task The task to be deleted","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"Py0000"},"content":"     * @param count Number of task in the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the message from the chat Bot.","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"Py0000"},"content":"    public static String printAddTaskMessage(Task task, int count) {","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"Py0000"},"content":"        String addedTaskInfo \u003d Message.TASK_ADDED_MSG.msg + task;","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"Py0000"},"content":"        String updatedListInfo \u003d String.format(\"%d %s\", count, Message.CHECK_TASK_COUNT_MSG.msg);","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"Py0000"},"content":"        return addedTaskInfo + \"\\n\" + updatedListInfo;","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"Py0000"},"content":"     * Returns the error message when an error has occurred.","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"Py0000"},"content":"     * @param errorMsg The message to be shown when error occurred.","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the error message.","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"Py0000"},"content":"    public static String notifyError(String errorMsg) {","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"Py0000"},"content":"        return errorMsg;","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"Py0000"},"content":"     * Returns the message when a task is updated successfully.","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"Py0000"},"content":"     * @param taskList The list containing the task","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"Py0000"},"content":"     * @param id The id of the task that was updated","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"Py0000"},"content":"     * @return A String representing hte message to be shown.","lastModifiedDate":"2021-09-04"},{"lineNumber":135,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":136,"author":{"gitId":"Py0000"},"content":"    public static String printUpdateMessage(TaskList taskList, int id) {","lastModifiedDate":"2021-09-04"},{"lineNumber":137,"author":{"gitId":"Py0000"},"content":"        String message \u003d Message.UPDATE_TASK_MSG.msg + taskList.getTask(id);","lastModifiedDate":"2021-09-04"},{"lineNumber":138,"author":{"gitId":"Py0000"},"content":"        return message;","lastModifiedDate":"2021-09-04"},{"lineNumber":139,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":140,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Py0000":142}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for a Deadline object that contains the description, completion status and due date.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    public static final String TAG \u003d \"D\";","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    private LocalDate dateOfDeadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"     * Constructs a new Deadline object with the specified task description, due date and task status.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"     * @param description Description/Tile of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"     * @param dateOfDeadline Due date of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    public Deadline(String description, LocalDate dateOfDeadline, boolean isDone) {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"        this.dateOfDeadline \u003d dateOfDeadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    public String getTag() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"        return Deadline.TAG;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    public String getDueDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"        return this.dateOfDeadline.toString().trim();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"    public void setDate(String date) throws DateTimeParseException {","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"        this.dateOfDeadline \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"        return \"[\" + Deadline.TAG + \"]\" + super.toString()","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"                + \" (by: \" + this.dateOfDeadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":46}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.IllegalFormatException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for an Event object that contains the description, completion status and due date.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    public static final String TAG \u003d \"E\";","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    private LocalDate dateOfEvent;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"     * Constructs a new Event object with the specified task description, due date and task status.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"     * @param description Description/Tile of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"     * @param dateOfEvent Due date of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    public Event(String description, LocalDate dateOfEvent, boolean isDone) {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"        this.dateOfEvent \u003d dateOfEvent;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"    public String getTag() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"        return Event.TAG;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    public String getDueDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"        return this.dateOfEvent.toString().trim();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"    public void setDate(String date) throws DateTimeParseException {","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"        this.dateOfEvent \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"        return \"[\" + Event.TAG + \"]\" + super.toString()","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"                + \" (at: \" + this.dateOfEvent.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":48}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Encapsulates information of a Task object than contains the description and completion status.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"    // fields of each task","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"    private String description;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"     * Constructs a new Task object with the specified task description and task status.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"     * @param description Description/Tile of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"     * Checks if the task is completed and returns the corresponding icon.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the status of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"     * Marks the task has been completed.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"    public void markAsComplete() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"     * Marks the task as incomplete.","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"    public void markAsIncomplete() {","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"     * Returns the tag of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"     * Indicates which type of task is it.","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"     * @return A String represent the type of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"     *         An empty String is the type if not recognised by the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"    public String getTag() {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"        return \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"     * Returns the description/title of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the description/title of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"        return this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"     * Sets the description of the task to the new description.","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"     * @param desc New description of the task","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"    public void setDescription(String desc) {","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"        this.description \u003d desc;","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"Py0000"},"content":"     * Sets the date of the task to the new date if it is a Deadline task or Event task.","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"Py0000"},"content":"     * Otherwise, do nothing.","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"Py0000"},"content":"     * @param date New date of the task","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"Py0000"},"content":"    public void setDate(String date) { }","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Py0000"},"content":"     * Returns the due date of the task if it belongs to the Deadline/Event type.","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Py0000"},"content":"     * Otherwise, return a string stating no data, as there is no due that for this task type.","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Py0000"},"content":"     * @return A String indicating that there is not due date if it does not exist.","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Py0000"},"content":"     *         A String indicating the due date if it exists.","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Py0000"},"content":"    public String getDueDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Py0000"},"content":"        return \"No Data\";","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Py0000"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Py0000"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":98}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a TaskList object which contains an ArrayList of Task objects.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"    private final ArrayList\u003cTask\u003e items;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"     * Constructor that creates a TaskList object with the items properly initialised.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"     * @param task The task to be added","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        this.items.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"     * Removes a task from the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"     * @param id The index of the task to be removed in the TaskList","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    public void deleteTask(int id) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"        this.items.remove(id);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"     * Marks a task as completed","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"     * @param id The index of the task to be marked as completed in the TaskList","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"    public void markTaskAsComplete(int id) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"        this.items.get(id).markAsComplete();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"     * @return An int representing the number of tasks in the TaskList","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"    public int getTaskCount() {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"        return this.items.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"     * Returns the Task requested.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"     * @param id The index of the task to be retrieved from the TaskList","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"     * @return A Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"    public Task getTask(int id) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"        return this.items.get(id);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"     * Returns a TaskList containing all the tasks that contains the specified keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"     * @param keyword The word used for the search.","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"     * @return A TaskList containing all the tasks that contains the specified keyword.","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"    public TaskList searchTaskByKeyword(String keyword) {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"        TaskList resultList \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"        for (Task task : items) {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"            String taskToStr \u003d task.toString().toLowerCase();","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Py0000"},"content":"            if (taskToStr.contains(keyword.trim().toLowerCase())) {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Py0000"},"content":"                resultList.addTask(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Py0000"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Py0000"},"content":"        return resultList;","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"Py0000"},"content":"     * Returns true if taskList is empty.","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"Py0000"},"content":"     * Otherwise, returns false.","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"Py0000"},"content":"     * @return A boolean indicating if the taskList is empty.","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"Py0000"},"content":"    public boolean isListEmpty() {","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"Py0000"},"content":"        return items.size() \u003d\u003d 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Py0000":94}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for a Todo object that contains the description and completion status.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"    public static final String TAG \u003d \"T\";","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"     * Constructs a new Todo object with the specified task description and task status.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"     * @param description Description/Tile of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    public String getTag() {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        return Todo.TAG;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"        return \"[\" + Todo.TAG + \"]\" + super.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":28}},{"path":"src/main/java/test/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package test;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"class ParserTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    void checkCommandTag_unknownTag_excpetionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"\", new Parser().checkCommandTag(\"schedule meeting\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"No such tag! Please input the correct tag!\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    void checkCommandTag_nonIntegerIdTaskCompleted_excpetionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"\", new Parser().checkCommandTag(\"done x\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"Wrong format! Please enter a valid id.\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"    void checkCommandTag_wrongDateFormat_excpetionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"\", new Parser().checkCommandTag(\"event conference /at 01/10/2021\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"Wrong format! Please follow the format: type description /at yyyy-mm-dd.\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"    void checkCommandTag_wrongDeadlineFormat_excpetionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"\", new Parser().checkCommandTag(\"deadline conference by 2021-09-18\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"Wrong format! Please follow the format: type description /xx yyyy-mm-dd\\n\\t \"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"                    + \"Use /by for deadline, /at for event.\", e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":54}},{"path":"src/main/java/test/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package test;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"class TaskListTest {","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    void getTaskCount_emptyList_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"        assertEquals(0, testList.getTaskCount());","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    void getTaskCount_filledList_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"            testList.addTask(new Todo(\"make bread\", false));","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"        assertEquals(5, testList.getTaskCount());","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    void isListEmpty_emptyList_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"        assertTrue(new TaskList().isListEmpty());","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"    void isListEmpty_filledList_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"        TaskList testList \u003d new TaskList();","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"        testList.addTask(new Todo(\"make coffee\", false));","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"        assertFalse(testList.isListEmpty());","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"Py0000":40}},{"path":"src/main/java/test/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package test;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"class TaskTest {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    void getStatusIcon_completedTask_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        Task task \u003d new Todo(\"make coffee\", true);","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"        assertEquals(\"[X]\", task.getStatusIcon());","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    void getStatusIcon_incompleteTask_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        Task task \u003d new Todo(\"make lunch\", false);","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        assertEquals(\"[ ]\", task.getStatusIcon());","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    void getTag_todoTask_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"        Task task \u003d new Todo(\"make lunch\", false);","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"        assertEquals(\"T\", task.getTag());","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    void getDescription_todoTask_success() {","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"        Task task \u003d new Todo(\"make lunch\", false);","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"        assertEquals(\"make lunch\", task.getDescription());","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"Py0000":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"\u003cfx:root","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"        alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"        maxHeight\u003d\"Infinity\"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"        maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"        prefWidth\u003d\"500.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"        type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"        \u003cLabel fx:id\u003d\"dialog\"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"               text\u003d\"Label\"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"               textFill\u003d\"whitesmoke\"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"               wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        \u003cImageView","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"                fx:id\u003d\"displayPicture\"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"                fitHeight\u003d\"85.0\"","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"                fitWidth\u003d\"85.0\"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"                pickOnBounds\u003d\"true\"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"                preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"        \u003cInsets","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"                bottom\u003d\"8.0\"","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"                left\u003d\"5.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"                right\u003d\"5.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"                top\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Py0000":35}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"\u003cAnchorPane","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"        maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"        maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"        minHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"        minWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"        xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"        fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        \u003cTextField","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"                fx:id\u003d\"userInput\"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"                prefWidth\u003d\"324.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"        \u003cButton","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"                fx:id\u003d\"sendButton\"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"                text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"                    hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"                    hvalue\u003d\"1.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"                    prefHeight\u003d\"557.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"                    prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"                \u003cVBox","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"                        fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"                        prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Py0000":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"todo make coffee","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"todo-wash cup","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"list ","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"deadline watch movie /by 2021-09-18","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"deadline watch movie trailer by 2021-09-17","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"deadline watch movie teaser /by 2021/09/16","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"event wedding /at 2021-09-18","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"event wedding at 2021-09-19","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"event wedding /at 2021/09/20","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"done 1","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"done 10","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"done x","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"done one","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"todo read book","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"delete 1","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"delete 10","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"delete x","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"delete 1x","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"delete one","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"todo buy monkey","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"todo feed monkey","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"todo play monkey","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"find money","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"find monkey","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"schedule meeting","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":32}}]
