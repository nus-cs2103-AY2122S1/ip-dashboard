[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"    private String by;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Py0000":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"    // list used to store text entered by user","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"    private ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"    // Lines used to indicate a block of message","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"    private final String HORIZONTAL_LINE_HEAD \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    private final String HORIZONTAL_LINE_TAIL \u003d String.format(\"\\n%s\\n\", HORIZONTAL_LINE_HEAD);","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    // Default messages sent by the chat bot","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    private final String WELCOME_MSG \u003d \"Hello! I am Matthew!\\n\\t What can I do for you?\";","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    private final String EXIT_MSG \u003d \"Bye. Don\u0027t have a good day... Have a great day!!!\";","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    private final String DISPLAY_LIST_MSG \u003d \"\\t Here are the tasks in your list:\";","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    private final String TASK_DONE_MSG \u003d \"Nice! I\u0027ve marked this task as done: \\n\\t  \";","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    private final String TASK_ADDED_MSG \u003d \"Got it. I\u0027ve added this task:\\n\\t   \";","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    private final String TASK_DELETED_MSG \u003d \"Got it. I\u0027ve deleted this task:\\n\\t   \";","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    // Command Tags for the chat bot","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    private final String EXIT_TAG \u003d \"bye\";","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    private final String LIST_TAG \u003d \"list\";","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"    private final String DONE_TAG \u003d \"done\";","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    private final String TODO_TAG \u003d \"todo\";","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"    private final String DEADLINE_TAG \u003d \"deadline\";","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    private final String EVENT_TAG \u003d \"event\";","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    private final String DELETE_TAG \u003d \"delete\";","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"        Duke chatBot \u003d new Duke();","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"        chatBot.start();","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"     * Starts the chat bot.","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"     * Chat bot starts receiving commands from user and echo back the command until terminated.","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"    public void start() {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"        greet();","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"        // scanner to take in user\u0027s input(s)","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"        while(!input.equalsIgnoreCase(EXIT_TAG)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"                checkTag(input);","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"                printFormattedMsg(e.getMessage());","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"            } finally {","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"                input \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"        // close the scanner as the bot is terminated.","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"        scanner.close();","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"        exit();","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"     * Greets the users when chat bot is started.","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"    private void greet() {","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"        printFormattedMsg(WELCOME_MSG);","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"     * Greets the users when chat bot is terminated.","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"    private void exit() {","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"        printFormattedMsg(EXIT_MSG);","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"Py0000"},"content":"     * Check if the inputted string match the \u0027list\u0027 tag.","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"Py0000"},"content":"     * Prints the list of items if inputted msg is \u0027list.","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"Py0000"},"content":"     * Otherwise, adds the item to the list.","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"Py0000"},"content":"     * @param msg User\u0027s input.","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"Py0000"},"content":"     * @throws UnknownTagException Tag used is undefined.","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"Py0000"},"content":"    private void checkTag(String msg) throws UnknownTagException {","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"Py0000"},"content":"        String msgToCheck \u003d msg.toLowerCase();","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"Py0000"},"content":"            if (msgToCheck.equals(LIST_TAG)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"Py0000"},"content":"                displayTasks();","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"Py0000"},"content":"            } else if (msgToCheck.contains(DONE_TAG)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"Py0000"},"content":"                taskDone(msg);","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"Py0000"},"content":"            } else if (msgToCheck.contains(TODO_TAG)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"Py0000"},"content":"                addTodo(msg);","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"Py0000"},"content":"            } else if (msgToCheck.contains(DEADLINE_TAG)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"Py0000"},"content":"                addDeadline(msg);","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"Py0000"},"content":"            } else if (msgToCheck.contains(EVENT_TAG)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"Py0000"},"content":"                addEvent(msg);","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"Py0000"},"content":"            } else if (msg.contains(DELETE_TAG)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"Py0000"},"content":"                deleteTask(msg);","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"Py0000"},"content":"            } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"Py0000"},"content":"                throw new UnknownTagException();","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"Py0000"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"Py0000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"Py0000"},"content":"            printFormattedMsg(e.getMessage());","lastModifiedDate":"2021-08-15"},{"lineNumber":104,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"Py0000"},"content":"     * Add an event to the list.","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"Py0000"},"content":"     * @param msg Input from user","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":113,"author":{"gitId":"Py0000"},"content":"    private void addEvent(String msg) throws IllegalFormatException{","lastModifiedDate":"2021-08-15"},{"lineNumber":114,"author":{"gitId":"Py0000"},"content":"        Task newTask \u003d new Event(getTaskDesc(msg), getTaskDates(msg));","lastModifiedDate":"2021-08-15"},{"lineNumber":115,"author":{"gitId":"Py0000"},"content":"        addTask(newTask);","lastModifiedDate":"2021-08-15"},{"lineNumber":116,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"Py0000"},"content":"     * Add a deadline to the list.","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"Py0000"},"content":"     * @param msg Input from user","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"Py0000"},"content":"    private void addDeadline(String msg) throws IllegalFormatException{","lastModifiedDate":"2021-08-15"},{"lineNumber":125,"author":{"gitId":"Py0000"},"content":"        Task newTask \u003d new Deadline(getTaskDesc(msg), getTaskDates(msg));","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"Py0000"},"content":"        addTask(newTask);","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"Py0000"},"content":"     * Add a todo to the list.","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"Py0000"},"content":"     * @param msg Input from user.","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"Py0000"},"content":"    private void addTodo(String msg) throws IllegalFormatException{","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"Py0000"},"content":"        Task newTask \u003d new Todo(getTodoDesc(msg));","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"Py0000"},"content":"        addTask(newTask);","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"Py0000"},"content":"     * Display the list of task that has been added.","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"Py0000"},"content":"    private void displayTasks() {","lastModifiedDate":"2021-08-15"},{"lineNumber":144,"author":{"gitId":"Py0000"},"content":"        System.out.println(HORIZONTAL_LINE_HEAD);","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"Py0000"},"content":"        System.out.println(DISPLAY_LIST_MSG);","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"Py0000"},"content":"        for (int i \u003d 0; i \u003c this.items.size(); i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"Py0000"},"content":"            Task item \u003d this.items.get(i);","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"Py0000"},"content":"            String formattedMsg \u003d String.format(\"\\t %s.%s\", (i + 1), item);","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"Py0000"},"content":"            System.out.println(formattedMsg);","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":154,"author":{"gitId":"Py0000"},"content":"        System.out.println(HORIZONTAL_LINE_TAIL);","lastModifiedDate":"2021-08-15"},{"lineNumber":155,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":156,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":157,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":158,"author":{"gitId":"Py0000"},"content":"     * Mark the task as completed once it is done.","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"Py0000"},"content":"     * @param msg Input from user.","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"Py0000"},"content":"     * @throws NoSuchTaskException Invalid id used.","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"Py0000"},"content":"    private void taskDone(String msg) throws NoSuchTaskException, IllegalFormatException{","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"Py0000"},"content":"        int index \u003d getTaskId(msg);","lastModifiedDate":"2021-08-15"},{"lineNumber":166,"author":{"gitId":"Py0000"},"content":"        Task item \u003d this.items.get(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"Py0000"},"content":"        item.taskCompleted();","lastModifiedDate":"2021-08-15"},{"lineNumber":168,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":169,"author":{"gitId":"Py0000"},"content":"        String content \u003d String.format(TASK_DONE_MSG + item);","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"Py0000"},"content":"        printFormattedMsg(content);","lastModifiedDate":"2021-08-15"},{"lineNumber":171,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":172,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":173,"author":{"gitId":"Py0000"},"content":"    private void deleteTask(String msg) throws NoSuchTaskException, IllegalFormatException {","lastModifiedDate":"2021-08-15"},{"lineNumber":174,"author":{"gitId":"Py0000"},"content":"        int index \u003d getTaskId(msg);","lastModifiedDate":"2021-08-15"},{"lineNumber":175,"author":{"gitId":"Py0000"},"content":"        Task task \u003d this.items.get(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":176,"author":{"gitId":"Py0000"},"content":"        this.items.remove(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":177,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":178,"author":{"gitId":"Py0000"},"content":"        printFormattedMsg(TASK_DELETED_MSG + task + \"\\n\\t Now you have \" + getTaskCount() + \" tasks in the list.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":179,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":180,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":181,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":182,"author":{"gitId":"Py0000"},"content":"     * Returns the id of the task that has been completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":183,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":184,"author":{"gitId":"Py0000"},"content":"     * @param msg Input of user","lastModifiedDate":"2021-08-15"},{"lineNumber":185,"author":{"gitId":"Py0000"},"content":"     * @return An integer indicating the id of the task that has been completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":186,"author":{"gitId":"Py0000"},"content":"     * @throws NoSuchTaskException Invalid id enter.","lastModifiedDate":"2021-08-15"},{"lineNumber":187,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Invalid id enter.","lastModifiedDate":"2021-08-15"},{"lineNumber":188,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":189,"author":{"gitId":"Py0000"},"content":"    private int getTaskId(String msg) throws NoSuchTaskException, IllegalFormatException {","lastModifiedDate":"2021-08-15"},{"lineNumber":190,"author":{"gitId":"Py0000"},"content":"        int position \u003d msg.indexOf(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":191,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":192,"author":{"gitId":"Py0000"},"content":"        if (position \u003e\u003d msg.length() || position \u003c 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":193,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException();","lastModifiedDate":"2021-08-15"},{"lineNumber":194,"author":{"gitId":"Py0000"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":195,"author":{"gitId":"Py0000"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":196,"author":{"gitId":"Py0000"},"content":"                int index \u003d Integer.parseInt(msg.substring(position + 1)) - 1;","lastModifiedDate":"2021-08-15"},{"lineNumber":197,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":198,"author":{"gitId":"Py0000"},"content":"                if (index \u003e\u003d items.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":199,"author":{"gitId":"Py0000"},"content":"                    throw new NoSuchTaskException();","lastModifiedDate":"2021-08-15"},{"lineNumber":200,"author":{"gitId":"Py0000"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":201,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":202,"author":{"gitId":"Py0000"},"content":"                if (index \u003e msg.length() || index \u003c 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":203,"author":{"gitId":"Py0000"},"content":"                    throw new IllegalFormatException();","lastModifiedDate":"2021-08-15"},{"lineNumber":204,"author":{"gitId":"Py0000"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":205,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":206,"author":{"gitId":"Py0000"},"content":"                return index;","lastModifiedDate":"2021-08-15"},{"lineNumber":207,"author":{"gitId":"Py0000"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":208,"author":{"gitId":"Py0000"},"content":"                // input after a whitespace is not a number.","lastModifiedDate":"2021-08-16"},{"lineNumber":209,"author":{"gitId":"Py0000"},"content":"                throw new IllegalFormatException();","lastModifiedDate":"2021-08-15"},{"lineNumber":210,"author":{"gitId":"Py0000"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":211,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":212,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":213,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":214,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":215,"author":{"gitId":"Py0000"},"content":"     * Returns the description for a todo type task.","lastModifiedDate":"2021-08-15"},{"lineNumber":216,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":217,"author":{"gitId":"Py0000"},"content":"     * @param msg Input from user","lastModifiedDate":"2021-08-15"},{"lineNumber":218,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the description of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":219,"author":{"gitId":"Py0000"},"content":"     * @throws StringIndexOutOfBoundsException Wrong Format used by the user.","lastModifiedDate":"2021-08-15"},{"lineNumber":220,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":221,"author":{"gitId":"Py0000"},"content":"    private String getTodoDesc(String msg) throws IllegalFormatException{","lastModifiedDate":"2021-08-15"},{"lineNumber":222,"author":{"gitId":"Py0000"},"content":"        int position \u003d msg.indexOf(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":223,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":224,"author":{"gitId":"Py0000"},"content":"        if (position \u003e\u003d msg.length() || position \u003c 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":225,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException();","lastModifiedDate":"2021-08-15"},{"lineNumber":226,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":227,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":228,"author":{"gitId":"Py0000"},"content":"        return msg.substring(position).trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":229,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":230,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":231,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":232,"author":{"gitId":"Py0000"},"content":"     * Returns the description for a deadline or event type task.","lastModifiedDate":"2021-08-15"},{"lineNumber":233,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":234,"author":{"gitId":"Py0000"},"content":"     * @param msg Input from user","lastModifiedDate":"2021-08-15"},{"lineNumber":235,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the description of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":236,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong Format used by the user.","lastModifiedDate":"2021-08-15"},{"lineNumber":237,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":238,"author":{"gitId":"Py0000"},"content":"    private String getTaskDesc(String msg) throws IllegalFormatException{","lastModifiedDate":"2021-08-15"},{"lineNumber":239,"author":{"gitId":"Py0000"},"content":"        int startPosition \u003d msg.indexOf(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":240,"author":{"gitId":"Py0000"},"content":"        int endPosition \u003d msg.indexOf(\"/\");","lastModifiedDate":"2021-08-15"},{"lineNumber":241,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":242,"author":{"gitId":"Py0000"},"content":"        if (startPosition \u003c 0 || startPosition \u003e\u003d msg.length() || endPosition \u003c 0 || endPosition \u003e\u003d msg.length()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":243,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException();","lastModifiedDate":"2021-08-15"},{"lineNumber":244,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":245,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":246,"author":{"gitId":"Py0000"},"content":"        return msg.substring(startPosition, endPosition).trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":247,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":248,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":249,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":250,"author":{"gitId":"Py0000"},"content":"     * Returns the date/time for the deadline/event respectively.","lastModifiedDate":"2021-08-15"},{"lineNumber":251,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":252,"author":{"gitId":"Py0000"},"content":"     * @param msg Input from user.","lastModifiedDate":"2021-08-15"},{"lineNumber":253,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the date (deadline type) / time (event type).","lastModifiedDate":"2021-08-15"},{"lineNumber":254,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong Format used by the user.","lastModifiedDate":"2021-08-15"},{"lineNumber":255,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":256,"author":{"gitId":"Py0000"},"content":"    private String getTaskDates(String msg) throws IllegalFormatException{","lastModifiedDate":"2021-08-15"},{"lineNumber":257,"author":{"gitId":"Py0000"},"content":"        int position \u003d msg.indexOf(\"/\") + 2;","lastModifiedDate":"2021-08-15"},{"lineNumber":258,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":259,"author":{"gitId":"Py0000"},"content":"        if (position \u003c 2 || position \u003e\u003d msg.length()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":260,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException();","lastModifiedDate":"2021-08-15"},{"lineNumber":261,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":262,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":263,"author":{"gitId":"Py0000"},"content":"        return msg.substring(position + 1).trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":264,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":265,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":266,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":267,"author":{"gitId":"Py0000"},"content":"     * Add a new task to the list.","lastModifiedDate":"2021-08-15"},{"lineNumber":268,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":269,"author":{"gitId":"Py0000"},"content":"     * @param task The new task to be added","lastModifiedDate":"2021-08-15"},{"lineNumber":270,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":271,"author":{"gitId":"Py0000"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":272,"author":{"gitId":"Py0000"},"content":"        this.items.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":273,"author":{"gitId":"Py0000"},"content":"        printFormattedMsg(TASK_ADDED_MSG + task + \"\\n\\t Now you have \" + getTaskCount() + \" tasks in the list.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":274,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":275,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":276,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":277,"author":{"gitId":"Py0000"},"content":"     * Returns the current number of items in the list.","lastModifiedDate":"2021-08-15"},{"lineNumber":278,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":279,"author":{"gitId":"Py0000"},"content":"     * @return An int representing the current number of items in th list.","lastModifiedDate":"2021-08-15"},{"lineNumber":280,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":281,"author":{"gitId":"Py0000"},"content":"    private int getTaskCount() {","lastModifiedDate":"2021-08-15"},{"lineNumber":282,"author":{"gitId":"Py0000"},"content":"        return this.items.size();","lastModifiedDate":"2021-08-15"},{"lineNumber":283,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":284,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":285,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":286,"author":{"gitId":"Py0000"},"content":"     * Formats the message; puts the message in a block.","lastModifiedDate":"2021-08-15"},{"lineNumber":287,"author":{"gitId":"Py0000"},"content":"     * Horizontal lines - message - Horizontal lines.","lastModifiedDate":"2021-08-15"},{"lineNumber":288,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":289,"author":{"gitId":"Py0000"},"content":"     * @param msg The message to be printed by the chat bot.","lastModifiedDate":"2021-08-15"},{"lineNumber":290,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":291,"author":{"gitId":"Py0000"},"content":"    private void printFormattedMsg(String msg) {","lastModifiedDate":"2021-08-15"},{"lineNumber":292,"author":{"gitId":"Py0000"},"content":"        String formattedMsg \u003d String.format(\"%s\\n\\t %s%s\", HORIZONTAL_LINE_HEAD, msg, HORIZONTAL_LINE_TAIL);","lastModifiedDate":"2021-08-15"},{"lineNumber":293,"author":{"gitId":"Py0000"},"content":"        System.out.println(formattedMsg);","lastModifiedDate":"2021-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Py0000":291,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" * Thrown when the user input an unknown string to the chat bot.","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":" * Chat bot does not recognise the input given.","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"class UnknownTagException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    public UnknownTagException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        super(\"No such tag! Please input the correct tag!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":" * Thrown when user tries to mark/delete tasks that are not in the list of tasks.","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":" * User has enter the wrong value.","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"class NoSuchTaskException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    public NoSuchTaskException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        super(\"You do not have this many task added yet, please check and try again.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":" * Thrown when user did not use the correct format when using the chat bot.","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":" * Example: deadline without /by, event without /at, etc","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"class IllegalFormatException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"    public IllegalFormatException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"        super(\"Wrong Format used! Please you the correct format!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Py0000":37}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"    private String at;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Py0000":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"    // fields of each task","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"    private String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"     * Check if the task is completed and returns the corresponding icon.","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the status of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"     * Mark the task has been completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    public void taskCompleted() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Py0000":31}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Py0000":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"todo read book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"deadline finish book /by Monday","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"event meeting /at Tuesday 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"todo top up card","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"event birthday party /at Saturday 10am-10pm","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"done 4","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"todo borrow new book","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"event book convention /at Wednesday 3-6pm","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"done 7","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"done 10","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"done 5s","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"done s","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"deadline assignment by Monday","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"event Meeting Again at Thursday 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"delete 4","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"delete -1","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"delete xs","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Py0000":29}}]
