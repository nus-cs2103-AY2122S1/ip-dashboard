[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"T/[X]/clean room/No Data","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"D/[X]/finish reading/2021-09-01","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"E/[ ]/convention/2021-09-17","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"T/[X]/sweep floor/No Data","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"T/[X]/eat lunch/No Data","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"T/[ ]/break/No Data","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for a Duke object that contains a Storage, Parser and TaskList object.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"public class Duke {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    private TaskList items;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        Duke chatBot \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"        chatBot.start();","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"     * Constructs a Duke object with the specified file path for the data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"     * @param filePath A String representing the file path of the data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"        this.items \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"     * Starts the chat bot by attempting to load the previously stored data.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"     * Chat bot will receive, interpret, execute and save data from the recognisable commands from user.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"    public void start() {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"            this.items \u003d this.storage.loadTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"        } catch (IOException | NoSuchTaskException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"            Ui.notifyError(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"        Ui.greetUser();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"        // scanner to take in user\u0027s input(s)","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"        String input \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"        String exitTag \u003d \"bye\";","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"        while(!input.equalsIgnoreCase(exitTag)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"                Command action \u003d this.parser.checkCommandTag(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"                action.executeCommand(this.items);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"                this.storage.saveTask(this.items);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"                Ui.notifyError(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"            } finally {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"                if (scanner.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"                    input \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"        // close the scanner as the bot is terminated.","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"        scanner.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"        Ui.exit();","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":75}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.commands.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.IllegalFormatException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.UnknownTagException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    private final boolean DEFAULT_STATUS \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    // duke.commands.Command Tags for the chat bot","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    private final String LIST_TAG \u003d \"list\";","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    private final String DONE_TAG \u003d \"done\";","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    private final String TODO_TAG \u003d \"todo\";","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    private final String DEADLINE_TAG \u003d \"deadline\";","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    private final String EVENT_TAG \u003d \"event\";","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    private final String DELETE_TAG \u003d \"delete\";","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    private final String FIND_TAG \u003d \"find\";","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"     * Returns the command tag of the input.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the command tag.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    private String getCommandTag(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"        if (!input.contains(\" \")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"            return input;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"            String[] details \u003d input.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"            return details[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"     * Returns a command that allows the chat bot to know the next course of action to take","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"     * based on the user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"     * @return A Command.","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"     * @throws UnknownTagException Unrecognised keyword entered by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"    public Command checkCommandTag(String input) throws IllegalFormatException, UnknownTagException {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"        String commandTag \u003d getCommandTag(input).toLowerCase();","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"        switch (commandTag) {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"        case LIST_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"        case TODO_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"            Todo todoTask \u003d new Todo(getTodoDesc(input), DEFAULT_STATUS);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"            return new TodoCommand(todoTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"        case DEADLINE_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"            Deadline deadlineTask \u003d new Deadline(getTaskDesc(input), getDeadlineDates(input), DEFAULT_STATUS);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"            return new DeadlineCommand(deadlineTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"        case EVENT_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"            Event eventTask \u003d new Event(getTaskDesc(input), getEventDates(input), DEFAULT_STATUS);","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"            return new EventCommand(eventTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"        case DONE_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"            int doneId \u003d getTaskId(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"            return new DoneCommand(doneId);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"        case DELETE_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"            int deleteId \u003d getTaskId(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"            return new DeleteCommand(deleteId);","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"            case FIND_TAG:","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"                String keyword \u003d getKeyword(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"                return new FindCommand(keyword);","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"            throw new UnknownTagException();","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Py0000"},"content":"     * Returns the description of the Todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the description.","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Py0000"},"content":"    private String getTodoDesc(String input) throws IllegalFormatException {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d input.split(\"todo \");","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Py0000"},"content":"        if (details.length !\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(\"Please ensure that you have typed todo keyword.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Py0000"},"content":"        return details[1].trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Py0000"},"content":"     * Returns the description of the Deadline/Event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the description.","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Py0000"},"content":"    private String getTaskDesc(String input) throws IllegalFormatException {","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"Py0000"},"content":"        int startPosition \u003d input.indexOf(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Py0000"},"content":"        int endPosition \u003d input.indexOf(\"/\");","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Py0000"},"content":"        if (startPosition \u003c 0 || startPosition \u003e\u003d input.length()","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"Py0000"},"content":"                || endPosition \u003c 0 || endPosition \u003e\u003d input.length()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(\"Please follow the format: type description /xx yyyy-mm-dd\\n\\t \"","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Py0000"},"content":"                    + \"Use /by for deadline, /at for event.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"Py0000"},"content":"        return input.substring(startPosition, endPosition).trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"Py0000"},"content":"     * Returns the date of the Deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"Py0000"},"content":"     * @return A LocalDate representing the date.","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"Py0000"},"content":"    private LocalDate getDeadlineDates(String input) throws IllegalFormatException{","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d input.split(\"/by \");","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"Py0000"},"content":"        if (details.length !\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(\"Please follow the format: type description /by yyyy-mm-dd.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"Py0000"},"content":"            return LocalDate.parse(details[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"Py0000"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(\"Please follow the format: type description /by yyyy-mm-dd.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"Py0000"},"content":"     * Returns the date of the Event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"Py0000"},"content":"     * @return A LocalDate representing the date.","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"Py0000"},"content":"    private LocalDate getEventDates(String input) throws IllegalFormatException{","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d input.split(\"/at \");","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"Py0000"},"content":"        if (details.length !\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(\"Please follow the format: type description /at yyyy-mm-dd.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"Py0000"},"content":"            return LocalDate.parse(details[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"Py0000"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(\"Please follow the format: type description /at yyyy-mm-dd.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"Py0000"},"content":"     * Returns the index of the task in the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"Py0000"},"content":"     * @return An int representing the index.","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"Py0000"},"content":"    private int getTaskId(String input) throws IllegalFormatException {","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d input.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"Py0000"},"content":"        if (details.length !\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(\"Please follow the format: command 0.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"Py0000"},"content":"            return Integer.parseInt(details[1]) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"Py0000"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(\"Please enter a valid id.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":180,"author":{"gitId":"Py0000"},"content":"     * Returns the keyword that will be used to search the list of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":181,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"Py0000"},"content":"     * @param input User\u0027s input","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the keyword to be used for the search.","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"Py0000"},"content":"     * @throws IllegalFormatException Wrong format used by user.","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"Py0000"},"content":"    private String getKeyword(String input) throws IllegalFormatException{","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"Py0000"},"content":"        String[] details \u003d input.split(\"find \");","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"Py0000"},"content":"        if (details.length \u003c 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"Py0000"},"content":"            throw new IllegalFormatException(\"Please follow the format: find keyword.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"Py0000"},"content":"        return details[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":196}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for storing and accessing user\u0027s data.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"     * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"     * @param filePath File path of the data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"     * Checks if the specified files and directories exist.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"     * Creates the files and directories if it does not exist.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"     * @throws IOException Error in creation of files and/or directories.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"    private void checkToMake() throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"        Path path \u003d Paths.get(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"        File dir \u003d path.getParent().toFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"        // makes the specified directory if it does not exist","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"            dir.mkdir();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"        File dataFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"        // makes the specified file if it does not exist","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"     * Saves the tasks added by the user into the data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"     * @param taskList The list containing the tasks added by the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"     * @throws IOException Data file cannot be found or written to.","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"    public void saveTask(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"        BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"        for (int i \u003d 0; i \u003c taskList.getTaskCount(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"            bw.write(String.format(\"%s/%s/%s/%s\\n\",","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"                    task.getTag(), task.getStatusIcon(), task.getDescription(), task.getDueDate()));","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"        bw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Py0000"},"content":"        fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Py0000"},"content":"     * Retrieves the data saved from the data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Py0000"},"content":"     * @return An arraylist containing all the activities that were added by the user previously.","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Py0000"},"content":"     * @throws FileNotFoundException Data file could not be found.","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Py0000"},"content":"     * @throws NoSuchTaskException The data file contains information/tag that is not recognised by the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Py0000"},"content":"    private TaskList loadData() throws FileNotFoundException, NoSuchTaskException {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Py0000"},"content":"        File dataFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Py0000"},"content":"        Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Py0000"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Py0000"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Py0000"},"content":"            String nextData \u003d scanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Py0000"},"content":"            // get the relevant details from the data","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Py0000"},"content":"            String[] details \u003d nextData.split(\"/\");","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Py0000"},"content":"            String type \u003d details[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Py0000"},"content":"            boolean isDone \u003d (details[1].equals(\"[X]\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Py0000"},"content":"            String desc \u003d details[2];","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Py0000"},"content":"            String dueDate \u003d details[3];","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Py0000"},"content":"            if (type.equals(Todo.TAG)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"Py0000"},"content":"                Task t \u003d new Todo(desc, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Py0000"},"content":"                taskList.addTask(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Py0000"},"content":"            } else if (type.equals(Deadline.TAG)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Py0000"},"content":"                Task t \u003d new Deadline(desc, LocalDate.parse(dueDate), isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"Py0000"},"content":"                taskList.addTask(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Py0000"},"content":"            } else if (type.equals(Event.TAG)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Py0000"},"content":"                Task t \u003d new Event(desc, LocalDate.parse(dueDate), isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Py0000"},"content":"                taskList.addTask(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Py0000"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"Py0000"},"content":"                throw new NoSuchTaskException();","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"Py0000"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"Py0000"},"content":"        scanner.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"Py0000"},"content":"        return taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"Py0000"},"content":"     * Loads the task into the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"Py0000"},"content":"     * @return An arraylist containing all the activities that were retrieved from the data file.","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"Py0000"},"content":"     * @throws IOException Data file cannot be created, found or opened.","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"Py0000"},"content":"     * @throws NoSuchTaskException The data file contains information/tag that is not recognised by the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"Py0000"},"content":"    public TaskList loadTask() throws IOException, NoSuchTaskException {","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"Py0000"},"content":"        checkToMake();","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"Py0000"},"content":"        return loadData();","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":132}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"    // Lines used to indicate a block of message","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"    private static final  String HORIZONTAL_LINE_HEAD \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"    private static final String HORIZONTAL_LINE_TAIL \u003d String.format(\"\\n%s\\n\", HORIZONTAL_LINE_HEAD);","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    private enum Message {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"        WELCOME_MSG(\"Hello! I am Matthew!\\n\\t What can I do for you?\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"        EXIT_MSG(\"Good Bye. Don\u0027t have a good day... Have a great day!!!\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        DISPLAY_LIST_MSG(\"\\t There are the tasks you have:\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"        TASK_DONE_MSG(\"Well done! You have completed: \\n\\t  \"),","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"        TASK_ADDED_MSG(\"Got it. I\u0027ve added this task:\\n\\t   \"),","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"        TASK_DELETED_MSG(\"Got it. I\u0027ve deleted this task:\\n\\t   \"),","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"        CHECK_TASK_COUNT_MSG(\" tasks are in your list now!\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"        NONE_MATCH_MSG(\"Sorry, I can\u0027t find anything that matches the keyword.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"        private final String msg;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        Message(String msg) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"            this.msg \u003d msg;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    private static void wrapMessageInLines(String msg) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"        String formattedMsg \u003d String.format(\"%s\\n\\t %s%s\", HORIZONTAL_LINE_HEAD, msg, HORIZONTAL_LINE_TAIL);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"        System.out.println(formattedMsg);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"    public static void greetUser() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"        wrapMessageInLines(Message.WELCOME_MSG.msg);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"    public static void exit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"        wrapMessageInLines(Message.EXIT_MSG.msg);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"    private static void displayListStart() {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"        System.out.println(String.format(\"%s\\n%s\", HORIZONTAL_LINE_HEAD, Message.DISPLAY_LIST_MSG.msg));","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"    private static void displayListEnd() {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"        System.out.println(HORIZONTAL_LINE_TAIL);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"    public static void printTaskCompleteMessage(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"        wrapMessageInLines(Message.TASK_DONE_MSG.msg + task);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"    public static void displayList(TaskList taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"        displayListStart();","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"        for (int i \u003d 0; i \u003c taskList.getTaskCount(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"            Task item \u003d taskList.getTask(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"            String itemDetails \u003d String.format(\"\\t %s.%s\", (i + 1), item);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"            System.out.println(itemDetails);","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"        displayListEnd();","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"    public static void printNoneMatchMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"        wrapMessageInLines(Message.NONE_MATCH_MSG.msg);","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"    public static void printDeleteTaskMessage(Task task, int count) {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"        String deletedTaskInfo \u003d Message.TASK_DELETED_MSG.msg + task;","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"        String updatedListInfo \u003d String.format(\"%d %s\", count, Message.CHECK_TASK_COUNT_MSG.msg);","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"        wrapMessageInLines(deletedTaskInfo + \"\\n\\t \" + updatedListInfo);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Py0000"},"content":"    public static void printAddTaskMessage(Task task, int count) {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Py0000"},"content":"        String addedTaskInfo \u003d Message.TASK_ADDED_MSG.msg + task;","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Py0000"},"content":"        String updatedListInfo \u003d String.format(\"%d %s\", count, Message.CHECK_TASK_COUNT_MSG.msg);","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Py0000"},"content":"        wrapMessageInLines(addedTaskInfo + \"\\n\\t \" + updatedListInfo);","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Py0000"},"content":"    public static void notifyError(String errorMsg) {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Py0000"},"content":"        wrapMessageInLines(errorMsg);","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":91}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for a Command object.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" * Subclasses of Command has to implement the body for executeCommand method.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"     * The action to be taken by the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"     * @param taskList The list containing the tasks of the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"     * @throws NoSuchTaskException May be thrown if the chat bot cannot find the task to execute the command.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    public abstract void executeCommand(TaskList taskList) throws NoSuchTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":19}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a DeadlineCommand object that contains a Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    private final Deadline task;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    public DeadlineCommand(Deadline task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    public void executeCommand(TaskList taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        Ui.printAddTaskMessage(this.task, taskList.getTaskCount());","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":22}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a DeleteCommand object that contains an id of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    private final int id;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    public DeleteCommand(int id) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    public void executeCommand(TaskList taskList) throws NoSuchTaskException {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        if (this.id \u003e\u003d 0 \u0026\u0026 this.id \u003c taskList.getTaskCount()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"            Task task \u003d taskList.getTask(this.id);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"            taskList.deleteTask(this.id);","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"            Ui.printDeleteTaskMessage(task, taskList.getTaskCount());","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":28}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a DoneCommand object that contains an id of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    private final int id;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    public DoneCommand(int id) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    public void executeCommand(TaskList taskList) throws NoSuchTaskException {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        if (this.id \u003e\u003d 0 \u0026\u0026 this.id \u003c taskList.getTaskCount()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"            Task task \u003d taskList.getTask(this.id);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"            taskList.markTaskAsComplete(this.id);","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"            Ui.printTaskCompleteMessage(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"            throw new NoSuchTaskException();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":28}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a EventCommand object that contains an Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    private final Event task;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    public EventCommand(Event task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    public void executeCommand(TaskList taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        Ui.printAddTaskMessage(this.task, taskList.getTaskCount());","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":22}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.NoSuchTaskException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a FindCommand object that contains a keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    public void executeCommand(TaskList taskList) throws NoSuchTaskException {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        TaskList result \u003d taskList.searchTaskByKeyword(this.keyword);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"        if (result.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"            Ui.printNoneMatchMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"            Ui.displayList(result);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":28}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a ListCommand object.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    public void executeCommand(TaskList taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"        Ui.displayList(taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":15}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information of a TodoCommand object that contains a Todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    private final Todo task;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    public TodoCommand(Todo task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    public void executeCommand(TaskList taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        Ui.printAddTaskMessage(this.task, taskList.getTaskCount());","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":22}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Represents the possible exception that can be thrown by this chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":14}},{"path":"src/main/java/duke/exceptions/IllegalFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Represents an exception for the chatbot.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" * Thrown when user did not use the correct format when using the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":" * Example: deadline without /by, event without /at, etc","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"public class IllegalFormatException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    public IllegalFormatException(String msg) {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"        super(\"Wrong format! \" + msg);","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":15}},{"path":"src/main/java/duke/exceptions/NoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Represents an exception for the chatbot.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" * Thrown when user tries to mark/delete tasks that are not in the list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":" * i.e User has enter the wrong value.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"public class NoSuchTaskException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    public NoSuchTaskException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"        super(\"You do not have this many task added yet, please check and try again.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":14}},{"path":"src/main/java/duke/exceptions/UnknownTagException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Represents an exception for the chatbot.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" * Thrown when an unknown tag is entered by the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"public class UnknownTagException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    public UnknownTagException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"        super(\"No such tag! Please input the correct tag!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":13}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for a Deadline object that contains the description, completion status and due date.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    public static final String TAG \u003d \"D\";","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"     * Constructs a new Deadline object with the specified task description, due date and task status.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"     * @param description Description/Tile of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"     * @param by Due date of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"    public String getTag() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"        return Deadline.TAG;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    public String getDueDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"        return this.by.toString().trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"        return \"[\" + Deadline.TAG + \"]\" + super.toString()","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"                + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":40}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for an Event object that contains the description, completion status and due date.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    public static final String TAG \u003d \"E\";","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"    private LocalDate at;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"     * Constructs a new Event object with the specified task description, due date and task status.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"     * @param description Description/Tile of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"     * @param at Due date of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    public Event(String description, LocalDate at, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"    public String getTag() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"        return Event.TAG;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"    public String getDueDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"        return this.at.toString().trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"        return \"[\" + Event.TAG + \"]\" + super.toString()","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"                + \" (at: \" + this.at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":40}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Encapsulates information of a Task object than contains the description and completion status.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"    // fields of each task","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"    private String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"     * Constructs a new Task object with the specified task description and task status.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"     * @param description Description/Tile of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"     * Checks if the task is completed and returns the corresponding icon.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the status of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"     * Marks the task has been completed.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"    public void markAsComplete() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"     * Returns the tag of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"     * Indicates which type of task is it.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"     * @return A String represent the type of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"     *         An empty String is the type if not recognised by the chat bot.","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"    public String getTag() {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"        return \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"     * Returns the description/title of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Py0000"},"content":"     * @return A String representing the description/title of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Py0000"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Py0000"},"content":"        return this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Py0000"},"content":"     * Returns the due date of the task if it belongs to the Deadline/Event type.","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Py0000"},"content":"     * Otherwise, return a string stating no data, as there is no due that for this task type.","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Py0000"},"content":"     * @return A String indicating that there is not due date if it does not exist.","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Py0000"},"content":"     *         A String indicating the due date if it exists.","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Py0000"},"content":"    public String getDueDate() {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Py0000"},"content":"        return \"No Data\";","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Py0000"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Py0000"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":75}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"    private ArrayList\u003cTask\u003e items;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"        this.items.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"    public void deleteTask(int id) {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"        this.items.remove(id);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    public void markTaskAsComplete(int id) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        this.items.get(id).markAsComplete();","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"    public int getTaskCount() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"        return this.items.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"    public Task getTask(int id) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"        return this.items.get(id);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"     * Returns a TaskList containing all the tasks that contains the specified keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"     * @param keyword The word used for the search.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"     * @return A TaskList contating all the tasks that contains the specified keyword.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"    public TaskList searchTaskByKeyword(String keyword) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"        TaskList resultList \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"        for (Task task : items) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"            String taskToStr \u003d task.toString().toLowerCase();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"            if (taskToStr.contains(keyword.trim().toLowerCase())) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"                resultList.addTask(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"        return resultList;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"    ","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":52}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":" * Encapsulates the information for a Todo object that contains the description and completion status.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"    public static final String TAG \u003d \"T\";","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"     * Constructs a new Todo object with the specified task description and task status.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"     * @param description Description/Tile of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    public String getTag() {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"        return Todo.TAG;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"        return \"[\" + Todo.TAG + \"]\" + super.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":28}},{"path":"src/main/java/test/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"package test;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"class ParserTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"    void checkCommandTag_unknownTag_excpetionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"\", new Parser().checkCommandTag(\"schedule meeting\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"No such tag! Please input the correct tag!\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"    void checkCommandTag_nonIntegerIdTaskCompleted_excpetionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"\", new Parser().checkCommandTag(\"done x\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"Wrong format! Please enter a valid id.\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Py0000"},"content":"    void checkCommandTag_wrongDateFormat_excpetionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"\", new Parser().checkCommandTag(\"event conference /at 01/10/2021\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Py0000"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Py0000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"Wrong format! Please follow the format: type description /at yyyy-mm-dd.\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Py0000"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Py0000"},"content":"    void checkCommandTag_wrongDeadlineFormat_excpetionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Py0000"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"\", new Parser().checkCommandTag(\"deadline conference by 2021-09-18\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Py0000"},"content":"            fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Py0000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Py0000"},"content":"            assertEquals(\"Wrong format! Please follow the format: type description /xx yyyy-mm-dd\\n\\t Use /by for deadline, /at for event.\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Py0000"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Py0000"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Py0000"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Py0000"},"content":"todo make coffee","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Py0000"},"content":"todo-wash cup","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Py0000"},"content":"list ","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Py0000"},"content":"deadline watch movie /by 2021-09-18","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Py0000"},"content":"deadline watch movie trailer by 2021-09-17","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Py0000"},"content":"deadline watch movie teaser /by 2021/09/16","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Py0000"},"content":"event wedding /at 2021-09-18","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Py0000"},"content":"event wedding at 2021-09-19","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Py0000"},"content":"event wedding /at 2021/09/20","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Py0000"},"content":"done 1","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Py0000"},"content":"done 10","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Py0000"},"content":"done x","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Py0000"},"content":"done one","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Py0000"},"content":"todo read book","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Py0000"},"content":"delete 1","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Py0000"},"content":"delete 10","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Py0000"},"content":"delete x","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Py0000"},"content":"delete 1x","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Py0000"},"content":"delete one","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Py0000"},"content":"todo buy monkey","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Py0000"},"content":"todo feed monkey","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Py0000"},"content":"todo play monkey","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Py0000"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Py0000"},"content":"find money","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Py0000"},"content":"find monkey","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Py0000"},"content":"schedule meeting","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Py0000"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Py0000":32}}]
