[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amzhy":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amzhy":17,"-":45}},{"path":"data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"[T] | 1 | write book","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"[E] | 0 | meeting | 19/08/2021 19:00","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"amzhy":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"1. [**Add tasks**](#add-tasks)","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"   - [`todo`](#todo)","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"   - [`deadline`](#deadline)","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"   - [`event`](#event)","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"2. [**View tasks**](#view-tasks)","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"   - [`list`](#list)","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"3. [**Update tasks**](#update-tasks)","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"   - [`done`](#done)","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"   - [`delete`](#delete)","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"4. [**Search tasks**](#search-tasks)","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"   - [`find`](#find)","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"5. [**Additional Features**](#additional-features)","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"   - [`help`](#help)","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"   - [`bye`](#bye)","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"   - [save](#save)","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":" ","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"## [Download here](https://github.com/amzhy/ip/releases/download/A-Release/duke.jar)","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"## Add Tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"---","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"Adds a task of type `todo` / `deadline` / `event` to your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"### `todo`","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"Add a todo task that is not time-sensitive to your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"**Format**: `todo [detail]`","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"| Argument | Remarks |","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"| ------------ | ------------- |","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"| [detail] | description of the task |","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"**Example of Usage**: `todo write book`","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"**Expected outcome**: ","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"![Screenshot 2021-09-16 at 5 15 17 PM](https://user-images.githubusercontent.com/76540550/133602205-c19cc254-7348-4e2a-aa59-3aed2acf5104.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"### `deadline`","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"Add a deadline task with a specified date and time your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"**Format**: `deadline [detail] /by [dd/MM/yyyy HH:mm]`","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"| Argument | Remarks |","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"| ------------ | ------------- |","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"| [detail] | description of the deadline |","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"| [dd/MM/yyyy HH:mm] | date and time of the deadline |","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"amzhy"},"content":"**Example of Usage**: `deadline math hw /by 19/02/2021 19:00`","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"amzhy"},"content":"**Expected outcome**:","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"amzhy"},"content":"![Screenshot 2021-09-16 at 5 37 26 PM](https://user-images.githubusercontent.com/76540550/133602163-86e99996-2c38-4a73-9905-31fe3ffe1c8f.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"amzhy"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"amzhy"},"content":"### `event`","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"amzhy"},"content":"Add an event with a specified date and time to your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"amzhy"},"content":"**Format**: `event meeting /at [dd/MM/yyyy HH:mm]`","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"amzhy"},"content":"| Argument | Remarks |","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"amzhy"},"content":"| ------------ | ------------- |","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"amzhy"},"content":"| [detail] | description of the event |","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"amzhy"},"content":"| [dd/MM/yyyy HH:mm] | date and time of the event |","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"amzhy"},"content":"**Example of Usage**: `event meeting /at 19/08/2021 09:00`","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"amzhy"},"content":"**Expected outcome**:","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"amzhy"},"content":"![Screenshot 2021-09-16 at 5 42 44 PM](https://user-images.githubusercontent.com/76540550/133602124-1bbc3501-806d-4240-9bd9-ee72f135d32f.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"amzhy"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"amzhy"},"content":"## View Tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"amzhy"},"content":"---","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"amzhy"},"content":"### `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"amzhy"},"content":"Shows all your current tasks with the completion status and task type.","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"amzhy"},"content":"**Format**: `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"amzhy"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"amzhy"},"content":"![Screenshot 2021-09-17 at 12 29 22 AM](https://user-images.githubusercontent.com/76540550/133650158-94655cea-737b-4c40-806e-da5ff677b502.png)","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"amzhy"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"amzhy"},"content":"## Update Tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"amzhy"},"content":"---","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"amzhy"},"content":"### `done`","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"amzhy"},"content":"Complete a task in your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"amzhy"},"content":"**Format**: `done [index]`","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"amzhy"},"content":"| Argument | Remarks |","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"amzhy"},"content":"| ------------ | ------------- |","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"amzhy"},"content":"| [index] | index of task starting from 1 |","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"amzhy"},"content":"**Example of Usage**: `done 1`","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"amzhy"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"amzhy"},"content":"![Screenshot 2021-09-16 at 6 05 20 PM](https://user-images.githubusercontent.com/76540550/133601954-40b78698-65c8-43c3-ac9c-9032467316d8.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"amzhy"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"amzhy"},"content":"### `delete`","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"amzhy"},"content":"Remove a task from your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"amzhy"},"content":"**Format**: `delete [index]`","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"amzhy"},"content":"| Argument | Remarks |","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"amzhy"},"content":"| ------------ | ------------- |","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"amzhy"},"content":"| [index] | index of task starting from 1 |","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"amzhy"},"content":"**Example of Usage**: `delete 2`","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"amzhy"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"amzhy"},"content":"![Screenshot 2021-09-16 at 6 07 02 PM](https://user-images.githubusercontent.com/76540550/133601901-5028d4ba-b37e-40f7-96c7-373c1fb6c542.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"amzhy"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"amzhy"},"content":"## Search Tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"amzhy"},"content":"---","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"amzhy"},"content":"### `find`","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"amzhy"},"content":"Find relevant tasks with keyword.","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"amzhy"},"content":"**Format**: `find [keyword]`","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":154,"author":{"gitId":"amzhy"},"content":"| Argument | Remarks |","lastModifiedDate":"2021-09-16"},{"lineNumber":155,"author":{"gitId":"amzhy"},"content":"| ------------ | ------------- |","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"amzhy"},"content":"| [keyword] | string that appears in the detail of a task |","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"amzhy"},"content":"**Example of Usage**: `find meet`","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"amzhy"},"content":"**Expected Outcome**:","lastModifiedDate":"2021-09-16"},{"lineNumber":162,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":164,"author":{"gitId":"amzhy"},"content":"![Screenshot 2021-09-16 at 6 11 45 PM](https://user-images.githubusercontent.com/76540550/133601607-c24acd3d-c661-4bd7-8bbf-43a95f38f149.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":165,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":166,"author":{"gitId":"amzhy"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":167,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":168,"author":{"gitId":"amzhy"},"content":"## Additional Features","lastModifiedDate":"2021-09-16"},{"lineNumber":169,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":170,"author":{"gitId":"amzhy"},"content":"---","lastModifiedDate":"2021-09-16"},{"lineNumber":171,"author":{"gitId":"amzhy"},"content":"### `help`","lastModifiedDate":"2021-09-16"},{"lineNumber":172,"author":{"gitId":"amzhy"},"content":"List all  supported commands with their respective formats.","lastModifiedDate":"2021-09-16"},{"lineNumber":173,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":174,"author":{"gitId":"amzhy"},"content":"**Format**: `help`","lastModifiedDate":"2021-09-16"},{"lineNumber":175,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":176,"author":{"gitId":"amzhy"},"content":"### `bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":177,"author":{"gitId":"amzhy"},"content":"Exits the application.","lastModifiedDate":"2021-09-16"},{"lineNumber":178,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":179,"author":{"gitId":"amzhy"},"content":"**Format**: `bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":181,"author":{"gitId":"amzhy"},"content":"### save ","lastModifiedDate":"2021-09-16"},{"lineNumber":182,"author":{"gitId":"amzhy"},"content":"Saves and loads your current tasks from your local file`data/list.txt` whenever you use the application. ","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"amzhy":162,"-":20}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":" * Class to create dialog box with user photo and message.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"    private Label label;","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize Dialog Box.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     * @param text String representation of message.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     * @param iv Image of duke or user.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"     * @param i Integer to determine layout of Dialog box.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"    public DialogBox(String text, Image iv, int i) {","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/DialogBox.fxml\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"        displayPicture.setImage(iv);","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"        label.setWrapText(true);","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"        label.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"        label.setPadding(new Insets(10));","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"        label.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"#95d0d0\"),","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"                new CornerRadii(12), null)));","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"            label.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"#1a94a9\"),","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"                    new CornerRadii(12), null)));","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"            label.setTextFill(Paint.valueOf(\"fff\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"        label.setText(text);","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"        setPadding(new Insets(4, 10, 4, 10));","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"amzhy"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"amzhy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"amzhy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"amzhy"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"amzhy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"amzhy"},"content":"     * Returns a dialog box with appropriate message and photo.","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"amzhy"},"content":"     * @param fullCommand Message of user/duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"amzhy"},"content":"     * @param iv Image of user/duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"amzhy"},"content":"     * @param i Integer to determine position of Imageview.","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"amzhy"},"content":"     * @return DialogBox with appropriate message and photo.","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"amzhy"},"content":"    public static DialogBox getUserDialog(String fullCommand, Image iv, int i) {","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"amzhy"},"content":"        var db \u003d new DialogBox(fullCommand, iv, i);","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"amzhy"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"amzhy"},"content":"            db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"amzhy"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"amzhy":84}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":" * Class used to start ChatBot.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"public class Duke {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    public Duke() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"            taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"            ui.showError(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    protected String run(String fullCommand) {","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"            return c.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"            return ui.showError(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"amzhy":35,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":" * Class used to throw Exceptions.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"    private final String error;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize DukeException.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"     * @param error Error message to be thrown.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    public DukeException(String error) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"        this.error \u003d error;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"     * Returns a string representation of the object. In general, the","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"     * {@code toString} method returns a string that","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"     * \"textually represents\" this object. The result should","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"     * be a concise but informative representation that is easy for a","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"     * person to read.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"     * It is recommended that all subclasses override this method.","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     * The {@code toString} method for class {@code Object}","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     * returns a string consisting of the name of the class of which the","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     * object is an instance, the at-sign character `{@code @}\u0027, and","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"     * the unsigned hexadecimal representation of the hash code of the","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"     * object. In other words, this method returns a string equal to the","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"     * value of:","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"     * \u003cblockquote\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     * \u003c/pre\u003e\u003c/blockquote\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"        assert error !\u003d null;","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"        return this.error;","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":43}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":" * Launcher class to implement GUI.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"amzhy":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":" * Class that handles GUI for Duke using FXML.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"     * The main entry point for all JavaFX applications.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"     * The start method is called after the init method has returned,","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"     * and after the system is ready for the application to begin running.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"     * NOTE: This method is called on the JavaFX Application Thread.","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     * @param primaryStage the primary stage for this application, onto which","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     *                     the application scene can be set.","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"     *                     Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"     *                     primary stages.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/views/MainWindow.fxml\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"            scene.getStylesheets().add(\"/views/style.css\");","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"            primaryStage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"            primaryStage.setResizable(false);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"            primaryStage.show();","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"amzhy":47}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":" * Controller that manages layout of the main chat.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"    private final Image admin \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/duke.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    private final Image user \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     * Initialize Main Window.","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"        dukeResponse(\"Hello! I\u0027m Duke. What can I do for you?\");","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"     * Set Duke.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"     * @param duke Duke.","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"        if (!input.isEmpty()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"            dialogContainer.getChildren()","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"                    .addAll(DialogBox.getUserDialog(input, user, 0),","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"                            DialogBox.getUserDialog(duke.run(input), admin, 1));","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"    private void dukeResponse(String response) {","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(response, admin, 1));","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"amzhy":59}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":" * Class to convert user inputs to Commands.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"     * Returns appropriate Command based on user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"     * @param cmd User input.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"     * @return A Command to be executed.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException Thrown if user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    public static Command parse(String cmd) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"        if (cmd.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"        } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"        } else if (cmd.equals(\"help\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"            return parseSpecialCommand(cmd);","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"    private static Command parseSpecialCommand(String cmd) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"        String[] arr \u003d cmd.split(\" \", 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"        if (validateCommand(arr)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"            if (arr[0].equals(\"find\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"                return new FindCommand(arr[1].trim());","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"            if (arr[0].equals(\"done\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"                return new DoneCommand(arr[1].trim());","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"            if (arr[0].equals(\"delete\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"                return new DeleteCommand(arr[1].trim());","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"            if (arr[0].equals(\"todo\") || arr[0].equals(\"event\") || arr[0].equals(\"deadline\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"                return new AddTaskCommand(arr);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"        throw new DukeException(\"Invalid Command: please try again!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"    private static boolean validateCommand(String[] arr) {","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"        return arr.length \u003e 1 \u0026\u0026 arr[1].trim().length() \u003e 0;","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":58}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":" * Class that loads and saves a user\u0027s tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    private String filePath \u003d \"data/list.txt\";","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize Storage.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"    public Storage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"     * Saves user\u0027s current list of tasks to disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     * @param tasks List of tasks to be saved to disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"        FileWriter w;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"        if (!f.getParentFile().exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"            f.getParentFile().mkdir();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"        if (!f.exists()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"                ui.echo(\"Error writing tasks to file: \" + e.getLocalizedMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"            w \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"            w.write(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"                Task t \u003d tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"                String taskDesc \u003d t.getType() + (t.isDone() ? \" | 1 | \" : \" | 0 | \") + t.getDetail();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"                if (t instanceof Deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"                    Deadline d \u003d (Deadline) t;","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"                    taskDesc +\u003d \" | \" + d.getTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"                } else if (t instanceof Event) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"amzhy"},"content":"                    Event e \u003d ((Event) t);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"amzhy"},"content":"                    taskDesc +\u003d \" | \" + e.getTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"amzhy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"amzhy"},"content":"                w.write(taskDesc + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"amzhy"},"content":"            w.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"amzhy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"amzhy"},"content":"            ui.echo(\"Error writing to file : \" + e.getLocalizedMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"amzhy"},"content":"     * Returns a list of tasks loaded from disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"amzhy"},"content":"     * @return List of tasks loaded from disk.","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException Thrown if there are errors with loading / creating a file.","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"amzhy"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"amzhy"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"amzhy"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"amzhy"},"content":"        if (!f.getParentFile().exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"amzhy"},"content":"            f.getParentFile().mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"amzhy"},"content":"        if (!f.exists()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"amzhy"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"amzhy"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"amzhy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"amzhy"},"content":"                throw new DukeException(\"Error loading file\");","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"amzhy"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"amzhy"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"amzhy"},"content":"                Task newTask \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"amzhy"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"amzhy"},"content":"                String[] t \u003d sc.nextLine().split(\"\\\\|\", 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"amzhy"},"content":"                if (t[0].contains(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"amzhy"},"content":"                    newTask \u003d new ToDo(t[2].trim());","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"amzhy"},"content":"                } else if (t[0].contains(\"D\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"amzhy"},"content":"                    newTask \u003d new Deadline(t[2].trim(), LocalDateTime.parse(t[3].trim(), formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"amzhy"},"content":"                } else if (t[0].contains(\"E\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"amzhy"},"content":"                    newTask \u003d new Event(t[2].trim(), LocalDateTime.parse(t[3].trim(), formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"amzhy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"amzhy"},"content":"                if (t.length \u003e 1 \u0026\u0026 t[1].contains(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"amzhy"},"content":"                    newTask.markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"amzhy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"amzhy"},"content":"                if (newTask !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"amzhy"},"content":"                    list.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"amzhy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"amzhy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"amzhy"},"content":"            throw new DukeException(\"File not found : \" + e.getLocalizedMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"amzhy"},"content":"        return list;","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":119}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":" * Class used to manage all current tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"public class TaskList {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"     * Adds a task to user\u0027s current list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"     * @param t Task to be added.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"     * Returns a String representation of a completed task.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"     * @param i The task no in the list to be marked as completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"     * @return String representation of the completed task.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"    public String markDone(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"        assert i \u003c\u003d tasks.size();","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"        Task task \u003d getTask(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"        task.markDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"        return task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"     * Returns a task at specified position in the list after marking it as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"     * @param i Position of task in the list.","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"     * @return Task at position i in the list.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"amzhy"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"amzhy"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"amzhy"},"content":"     * Returns String representation of deleted task after deleting the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"amzhy"},"content":"     * @param i Position of task in the list to be deleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"amzhy"},"content":"     * @return String representation of the deleted task.","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"amzhy"},"content":"    public String removeTask(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"amzhy"},"content":"        assert i \u003e 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"amzhy"},"content":"        Task task \u003d getTask(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"amzhy"},"content":"        tasks.remove(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"amzhy"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"amzhy"},"content":"        return task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":78}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.util.List;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":" * Class that interacts with the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"    private static final String INDENT \u003d \"    \";","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"     * Constructor for duke\u0027s UI.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"    public Ui() {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"     * Returns String representation of an error.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"     * @param e Error to be shown.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"     * @return String representation of the error.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    public String showError(DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"        return echo(e.toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"     * Closes duke\u0027s UI.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"    public void exit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"        Platform.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"     * Returns String representation of a list of objects.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"     * @param items List of items to be printed.","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"     * @param heading Heading to precede the list of items.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"     * @return String representation of all the items.","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"    public String printAll(List\u003c?\u003e items, String heading) {","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"        String s \u003d \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"        s +\u003d INDENT + heading + INDENT + \"\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"        for (int i \u003d 1; i \u003c\u003d items.size(); i++) {","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"            s +\u003d (INDENT + i + \" \" + items.get(i - 1) + INDENT + \"\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"        return s;","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"     * Returns String representation of Duke\u0027s response to user.","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"     * @param input Duke\u0027s response.","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"     * @return String representation of Duke\u0027s response.","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"    public String echo(String input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"        assert input.length() \u003e 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"        return input;","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"amzhy":63}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":" * Class to add different types of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"public class AddTaskCommand implements Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"    private String type;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    private String detail;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    private Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize AddTaskCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     * @param arr of length 2 which contains the task type and description.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"    public AddTaskCommand(String... arr) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"        assert arr.length \u003d\u003d 2;","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"        this.type \u003d arr[0].trim();","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"        this.detail \u003d arr[1].trim();","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize AddTaskCommand.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"    public AddTaskCommand() { }","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"     * Returns a String after executing appropriate commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"     * @param taskList TaskList to manage current user\u0027s tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"     * @param ui Ui to print messages to the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"     * @param storage Storage to save and load tasks from disk.","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"     * @return String Duke\u0027s response to user.","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException If there are input or parsing errors.","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"            task \u003d new ToDo(detail);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"            addDeadline();","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"            addEvent();","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"        return ui.echo(\"Got it! I added this task: \" + task);","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"amzhy"},"content":"    private void addEvent() throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"amzhy"},"content":"        String[] description \u003d detail.split(\"/at \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"amzhy"},"content":"        if (description.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"amzhy"},"content":"            throw new DukeException(\"Invalid Event entry.\"","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"amzhy"},"content":"                    + \"Try something like: event meeting /at 19/08/2021 14:00\");","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"amzhy"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"amzhy"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"amzhy"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"amzhy"},"content":"                task \u003d new Event(description[0].trim(), LocalDateTime.parse(description[1].trim(), formatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"amzhy"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"amzhy"},"content":"                throw new DukeException(\"Unable to parse time.\"","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"amzhy"},"content":"                        + \"Valid event format: event meeting /at 19/08/2021 23:59\");","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"amzhy"},"content":"    private void addDeadline() throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"amzhy"},"content":"        String[] description \u003d detail.split(\"/by \", 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"amzhy"},"content":"        if (description.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"amzhy"},"content":"            throw new DukeException(\"Invalid Deadline entry.\"","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"amzhy"},"content":"                    + \"Try something like: deadline HW due /by 19/8/2021 14:00\");","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"amzhy"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"amzhy"},"content":"            try {","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"amzhy"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"amzhy"},"content":"                task \u003d new Deadline(description[0].trim(), LocalDateTime.parse(description[1].trim(), formatter));","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"amzhy"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"amzhy"},"content":"                throw new DukeException(\"Unable to parse time.\"","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"amzhy"},"content":"                        + \"Valid deadline format: deadline do HW /by 19/08/2021 23:59\");","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"amzhy"},"content":"     * Returns a string representation of the object. In general, the","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"amzhy"},"content":"     * {@code toString} method returns a string that","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"amzhy"},"content":"     * \"textually represents\" this object. The result should","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"amzhy"},"content":"     * be a concise but informative representation that is easy for a","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"amzhy"},"content":"     * person to read.","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"amzhy"},"content":"     * It is recommended that all subclasses override this method.","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"amzhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"amzhy"},"content":"     * The {@code toString} method for class {@code Object}","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"amzhy"},"content":"     * returns a string consisting of the name of the class of which the","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"amzhy"},"content":"     * object is an instance, the at-sign character `{@code @}\u0027, and","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"amzhy"},"content":"     * the unsigned hexadecimal representation of the hash code of the","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"amzhy"},"content":"     * object. In other words, this method returns a string equal to the","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"amzhy"},"content":"     * value of:","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"amzhy"},"content":"     * \u003cblockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"amzhy"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"amzhy"},"content":"     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"amzhy"},"content":"     * \u003c/pre\u003e\u003c/blockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"amzhy"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"amzhy"},"content":"        return \"todo \u003cdetail of task\u003e  [add todo] \\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"amzhy"},"content":"                + \"       deadline \u003cdetail of deadline\u003e /by \u003cdd/MM/yyyy HH:mm\u003e  [add deadlines] \\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"amzhy"},"content":"                + \"       event \u003cdetail of event\u003e /at \u003cdd/MM/yyyy HH:mm\u003e  [add events] \";","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":122}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" * Class to execute the exit command.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"     * Returns a String after executing appropriate commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     * @param taskList TaskList to manage current user\u0027s tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     * @param ui Ui to print messages to the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"     * @param storage Storage to save and load tasks from disk.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"     * @return String Duke\u0027s response to user.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException If there are input or parsing errors.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"        ui.exit();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"        return \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"     * Returns a string representation of the object. In general, the","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"     * {@code toString} method returns a string that","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"     * \"textually represents\" this object. The result should","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"     * be a concise but informative representation that is easy for a","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"     * person to read.","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     * It is recommended that all subclasses override this method.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"     * The {@code toString} method for class {@code Object}","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"     * returns a string consisting of the name of the class of which the","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"     * object is an instance, the at-sign character `{@code @}\u0027, and","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"     * the unsigned hexadecimal representation of the hash code of the","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"     * object. In other words, this method returns a string equal to the","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"     * value of:","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"     * \u003cblockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"     * \u003c/pre\u003e\u003c/blockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"        return \"bye  [exit duke]\";","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":53}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" * Interface used to execute commands.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"public interface Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"     * Returns a String after executing appropriate commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     * @param taskList TaskList to manage current user\u0027s tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     * @param ui Ui to print messages to the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"     * @param storage Storage to save and load tasks from disk.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"     * @return String Duke\u0027s response to user.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException If there are input or parsing errors.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" * Class to delete a task from the current list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    private String taskNumber;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize DeleteCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     * @param number A string to be parsed to task number.","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"    public DeleteCommand(String number) {","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"        this.taskNumber \u003d number;","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize DeleteCommand.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    public DeleteCommand() { }","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"     * Returns a String after executing appropriate commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"     * @param taskList TaskList to manage current user\u0027s tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"     * @param ui Ui to print messages to the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"     * @param storage Storage to save and load tasks from disk.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"     * @return String Duke\u0027s response to user.","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException If there are input or parsing errors.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"            int i \u003d Integer.parseInt(taskNumber.trim()) - 1;","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"            String t \u003d taskList.removeTask(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"            return ui.echo(\"Noted. I removed this task: \" + t);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"            throw new DukeException(\"Oops! Enter a valid task no. to delete the task.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"     * Returns a string representation of the object. In general, the","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"     * {@code toString} method returns a string that","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"     * \"textually represents\" this object. The result should","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"     * be a concise but informative representation that is easy for a","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"     * person to read.","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"     * It is recommended that all subclasses override this method.","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"     * The {@code toString} method for class {@code Object}","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"     * returns a string consisting of the name of the class of which the","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"     * object is an instance, the at-sign character `{@code @}\u0027, and","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"     * the unsigned hexadecimal representation of the hash code of the","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"     * object. In other words, this method returns a string equal to the","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"     * value of:","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"     * \u003cblockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"amzhy"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"amzhy"},"content":"     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"amzhy"},"content":"     * \u003c/pre\u003e\u003c/blockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"amzhy"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"amzhy"},"content":"        return \"delete \u003cint\u003e  [delete a task in the list]\";","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":71}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" * Class used to mark a task as completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    private String number;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize DoneCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     * @param no A string to be parsed to task number.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"    public DoneCommand(String no) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"        this.number \u003d no;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize DoneCommand.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    public DoneCommand() {}","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"     * Returns a String after executing appropriate commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"     * @param taskList TaskList to manage current user\u0027s tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"     * @param ui Ui to print messages to the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"     * @param storage Storage to save and load tasks from disk.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"     * @return String Duke\u0027s response to user.","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException If there are input or parsing errors.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"            int i \u003d Integer.parseInt(number.trim()) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"            String t \u003d taskList.markDone(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"            return ui.echo(\"Nice! I marked this task as completed: \" + t);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"            throw new DukeException(\"Oops! Enter a valid task no. to complete the task.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"     * Returns a string representation of the object. In general, the","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"     * {@code toString} method returns a string that","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"     * \"textually represents\" this object. The result should","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"     * be a concise but informative representation that is easy for a","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"     * person to read.","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"     * It is recommended that all subclasses override this method.","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"     * The {@code toString} method for class {@code Object}","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"     * returns a string consisting of the name of the class of which the","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"     * object is an instance, the at-sign character `{@code @}\u0027, and","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"     * the unsigned hexadecimal representation of the hash code of the","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"     * object. In other words, this method returns a string equal to the","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"     * value of:","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"     * \u003cblockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"amzhy"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"amzhy"},"content":"     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"amzhy"},"content":"     * \u003c/pre\u003e\u003c/blockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"amzhy"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"amzhy"},"content":"        return \"done \u003cint\u003e  [mark a task in the list as completed]\";","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":71}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.util.List;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":" * Class to find tasks using a search keyword.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"    private String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize Find Command.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"     * @param keyword Keyword to search for relevant tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"        this.keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize FindCommand.","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"    public FindCommand() {}","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     * Returns a String after executing appropriate commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"     * @param taskList TaskList to manage current user\u0027s tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"     * @param ui Ui to print messages to the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"     * @param storage Storage to save and load tasks from disk.","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"     * @return String Duke\u0027s response to user.","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException If there are input or parsing errors.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"        List\u003cTask\u003e filteredTasks \u003d taskList","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"                .getTasks()","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"                .stream()","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"                .filter(task -\u003e task.getDetail().toLowerCase().contains(keyword))","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"        if (!filteredTasks.isEmpty()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"            return ui.printAll(filteredTasks, \"Here are the matching tasks in your list: \");","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"            return ui.echo(\"There are no matching tasks!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"     * Returns a string representation of the object. In general, the","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"     * {@code toString} method returns a string that","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"     * \"textually represents\" this object. The result should","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"     * be a concise but informative representation that is easy for a","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"     * person to read.","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"amzhy"},"content":"     * It is recommended that all subclasses override this method.","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"amzhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"amzhy"},"content":"     * The {@code toString} method for class {@code Object}","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"amzhy"},"content":"     * returns a string consisting of the name of the class of which the","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"amzhy"},"content":"     * object is an instance, the at-sign character `{@code @}\u0027, and","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"amzhy"},"content":"     * the unsigned hexadecimal representation of the hash code of the","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"amzhy"},"content":"     * object. In other words, this method returns a string equal to the","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"amzhy"},"content":"     * value of:","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"amzhy"},"content":"     * \u003cblockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"amzhy"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"amzhy"},"content":"     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"amzhy"},"content":"     * \u003c/pre\u003e\u003c/blockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"amzhy"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"amzhy"},"content":"        return \"find \u003ckeyword\u003e [prints a list of tasks that match the keyword]\";","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"amzhy":80}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":" * Class used to execute help command.","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    private ArrayList\u003cCommand\u003e commandList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"     * Returns a String after executing appropriate commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"     * @param taskList TaskList to manage current user\u0027s tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"     * @param ui Ui to print messages to the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"     * @param storage Storage to save and load tasks from disk.","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"     * @return String Duke\u0027s response to user.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException If there are input or parsing errors.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"        Collections.addAll(commandList, new ListCommand(), new AddTaskCommand(), new FindCommand(),","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"                new DoneCommand(), new DeleteCommand(), new ByeCommand(), new HelpCommand());","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"        return ui.printAll(commandList, \"Command Help: \\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     * Returns a string representation of the object. In general, the","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     * {@code toString} method returns a string that","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"     * \"textually represents\" this object. The result should","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"     * be a concise but informative representation that is easy for a","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"     * person to read.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"     * It is recommended that all subclasses override this method.","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"     * The {@code toString} method for class {@code Object}","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"     * returns a string consisting of the name of the class of which the","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"     * object is an instance, the at-sign character `{@code @}\u0027, and","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"     * the unsigned hexadecimal representation of the hash code of the","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"     * object. In other words, this method returns a string equal to the","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"     * value of:","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"     * \u003cblockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"     * \u003c/pre\u003e\u003c/blockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"        return \"help  [find details of all features]\";","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"amzhy":58}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" * Class used to list all tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"     * Returns a String after executing appropriate commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     * @param taskList TaskList to manage current user\u0027s tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     * @param ui Ui to print messages to the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"     * @param storage Storage to save and load tasks from disk.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"     * @return String Duke\u0027s response to user.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException If there are input or parsing errors.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"        if (taskList.getTasks().size() \u003e 0) {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"            return ui.printAll(taskList.getTasks(), \"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"            return ui.echo(\"No tasks in your list yet!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"     * Returns a string representation of the object. In general, the","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"     * {@code toString} method returns a string that","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"     * \"textually represents\" this object. The result should","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     * be a concise but informative representation that is easy for a","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     * person to read.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"     * It is recommended that all subclasses override this method.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"     * The {@code toString} method for class {@code Object}","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"     * returns a string consisting of the name of the class of which the","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"     * object is an instance, the at-sign character `{@code @}\u0027, and","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"     * the unsigned hexadecimal representation of the hash code of the","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"     * object. In other words, this method returns a string equal to the","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"     * value of:","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"     * \u003cblockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"     * \u003c/pre\u003e\u003c/blockquote\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"        return \"list  [prints a list of all current tasks]\";","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":55}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":" * Class that handles deadline which is a type of Task.","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize Deadlines.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     * @param detail Description of deadline.","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     * @param by Time that the deadline is due by in LocalDateTime format.","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    public Deadline(String detail, LocalDateTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"        super(detail, \"[D]\");","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"     * Returns time of deadline in LocalDateTime format.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     * @return Timing of deadline.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"        return by;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     * Returns a string representation of the object. In general, the","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     * {@code toString} method returns a string that","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"     * \"textually represents\" this object. The result should","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"     * be a concise but informative representation that is easy for a","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"     * person to read.","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"     * It is recommended that all subclasses override this method.","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"     * The {@code toString} method for class {@code Object}","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"     * returns a string consisting of the name of the class of which the","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"     * object is an instance, the at-sign character `{@code @}\u0027, and","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"     * the unsigned hexadecimal representation of the hash code of the","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"     * object. In other words, this method returns a string equal to the","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"     * value of:","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"     * \u003cblockquote\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"     * \u003c/pre\u003e\u003c/blockquote\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"        String ddl \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"        return super.toString() + \" (by: \" + ddl + \")\";","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":59}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":" * Class that handles events which is a type of Task.","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"    private LocalDateTime at;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize event.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     * @param detail Description of event.","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     * @param at Timing of event in LocalDateTime format.","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    public Event(String detail, LocalDateTime at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"        super(detail, \"[E]\");","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"     * Returns time of event in LocalDateTime format.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     * @return Timing of event.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"        return at;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"     * Returns a string representation of the object. In general, the","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"     * {@code toString} method returns a string that","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     * \"textually represents\" this object. The result should","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     * be a concise but informative representation that is easy for a","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"     * person to read.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"     * It is recommended that all subclasses override this method.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"     * The {@code toString} method for class {@code Object}","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"     * returns a string consisting of the name of the class of which the","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"     * object is an instance, the at-sign character `{@code @}\u0027, and","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"     * the unsigned hexadecimal representation of the hash code of the","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"     * object. In other words, this method returns a string equal to the","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"     * value of:","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"     * \u003cblockquote\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"     * \u003c/pre\u003e\u003c/blockquote\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"        String time \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"        return super.toString() + \" (at: \" + time + \")\";","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":57}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":" * Class that handles all types of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"    private String detail;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"    private String type;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize task.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"     * @param detail Description of task.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     * @param type The type of task: Deadline, Event or todo.","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"    public Task(String detail, String type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"     * Marks a task as completed.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"     * Checks if a task is completed.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"     * @return A boolean true if task is completed, and false otherwise.","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"     * Return a tag of the type of Task.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"     * @return String representation of the type of Task.","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"    public String getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"        return type;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"     * Returns a description of the Task.","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"     * @return String representation of the details of the Task.","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"    public String getDetail() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"        return detail;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"     * Returns a string representation of the object. In general, the","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"     * {@code toString} method returns a string that","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"     * \"textually represents\" this object. The result should","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"amzhy"},"content":"     * be a concise but informative representation that is easy for a","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"amzhy"},"content":"     * person to read.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"amzhy"},"content":"     * It is recommended that all subclasses override this method.","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"amzhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"amzhy"},"content":"     * The {@code toString} method for class {@code Object}","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"amzhy"},"content":"     * returns a string consisting of the name of the class of which the","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"amzhy"},"content":"     * object is an instance, the at-sign character `{@code @}\u0027, and","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"amzhy"},"content":"     * the unsigned hexadecimal representation of the hash code of the","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"amzhy"},"content":"     * object. In other words, this method returns a string equal to the","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"amzhy"},"content":"     * value of:","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"amzhy"},"content":"     * \u003cblockquote\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"amzhy"},"content":"     * \u003cpre\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"amzhy"},"content":"     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"amzhy"},"content":"     * \u003c/pre\u003e\u003c/blockquote\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"amzhy"},"content":"     * @return a string representation of the object.","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"amzhy"},"content":"        return type + (isDone ? \"[✓] \" : \"[✘] \") + this.detail;","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":82}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":" * Class that handles ToDo which is a type of task.","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"     * Constructor to initialize Todo.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"     * @param detail Description of Todo.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"    public ToDo(String detail) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"        super(detail, \"[T]\");","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":16}},{"path":"src/main/resources/views/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"         prefWidth\u003d\"500.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"        \u003cLabel fx:id\u003d\"label\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"                \u003cFont name\u003d\"Verdana\" size\u003d\"11\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"                \u003cInsets topRightBottomLeft\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"        \u003cclip\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"            \u003cCircle centerX\u003d\"25\" centerY\u003d\"25\" radius\u003d\"25\"/\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"        \u003c/clip\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"amzhy":28}},{"path":"src/main/resources/views/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"600.0\" stylesheets\u003d\"@style.css\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"660.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"532.0\" AnchorPane.bottomAnchor\u003d\"1.0\" stylesheets\u003d\"@style.css\"/\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vbarPolicy\u003d\"ALWAYS\" prefHeight\u003d\"655.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\" pannable\u003d\"true\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"655.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-image: url(\u0027images/background.png\u0027)\"/\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" prefHeight\u003d\"44.0\" prefWidth\u003d\"70.0\" text\u003d\"send\" layoutX\u003d\"530.0\" layoutY\u003d\"655.0\" styleClass\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"  /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"amzhy":15}},{"path":"src/test/java/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"    public void execute_outOfBounds() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"        DoneCommand dc \u003d new DoneCommand(\"5\");","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"            list.addTask(new ToDo(\"do hw\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"        assertThrows(DukeException.class, () -\u003e dc.execute(list, new Ui(), new Storage()));","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"    public void execute_parseToInt() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"        DoneCommand dc \u003d new DoneCommand(\"e\");","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"        list.addTask(new ToDo(\"sleep\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"        assertThrows(DukeException.class, () -\u003e dc.execute(list, new Ui(), new Storage()));","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":33}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"    public void addTask_deadlineFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"        Deadline d \u003d new Deadline(\"hw due\", LocalDateTime.parse(\"19/08/2021 19:00\", formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"        t.addTask(d);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"        assertEquals(\"[D][✘] hw due (by: Aug 19 2021 07:00pm)\", t.getTask(0).toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    public void markDone_eventFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"        Event e \u003d new Event(\"class\", LocalDateTime.parse(\"19/09/2021 19:00\", formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"        t.addTask(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"        t.markDone(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"        assertEquals(\"[E][✓] class (at: Sep 19 2021 07:00pm)\", t.getTask(0).toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"    public void addTask_toDoFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"        ToDo td \u003d new ToDo(\"write\");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"        t.addTask(td);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"        assertEquals(\"[T][✘] write\", t.getTask(0).toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"todo buy bk","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"event meeting /at 4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"deadline finish hw /by thu 11pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"todo sell bk","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amzhy":1,"-":20}}]
