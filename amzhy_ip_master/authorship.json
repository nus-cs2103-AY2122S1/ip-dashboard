[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amzhy":2,"-":22}},{"path":"data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"T | 1 | rit","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"D | 1 | return bk | 19/12/2021 19:00","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"T | 0 | do hw","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"D | 1 | do hw due | 19/08/2021 19:00","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"E | 0 | funeral | 19/08/2021 23:00","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    public Duke() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"            taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"            ui.showError(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    private void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"        ui.greet();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"                ui.showError(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"amzhy":40,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"    private final String error;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"    public DukeException(String error) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"        this.error \u003d error;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"        return this.error;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":14}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":" * This class converts user inputs to Commands","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"     * @param cmd User input","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"     * @return A Command to be executed","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException thrown if user input is invalid","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    public static Command parse(String cmd) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"        String[] arr \u003d cmd.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"        if (cmd.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"        } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"        } else if (arr[0].equals(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"            if (arr[0].length() \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"                throw new DukeException(\"Enter search keyword to find tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"                return new FindCommand(arr[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"        } else if (arr[0].equals(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"            if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"                throw new DukeException(\"Enter duke.task no. to complete the duke.task.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"                return new DoneCommand(arr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"        } else if (arr[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"            if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"                throw new DukeException(\"Enter duke.task no. to delete the duke.task.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"                return new DeleteCommand(arr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"        } else if (arr[0].equals(\"todo\") || arr[0].equals(\"deadline\") || arr[0].equals(\"event\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"            if (arr.length \u003d\u003d 1 || arr[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"                throw new DukeException(\"Invalid duke.task.Task entry. Description of a duke.task cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"                return new AddTaskCommand(arr);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"            throw new DukeException(\"Oops! Invalid entry.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":51}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":" * This class loads and saves a user\u0027s tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    private static String filePath \u003d \"data/list.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     * @param tasks List of tasks to be saved to disk","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"        FileWriter w, fw;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"            w \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"            w.write(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"            w.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"            fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"            for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"                Task t \u003d tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"                String taskDesc \u003d t.getType() + (t.isDone() ? \" | 1 | \" : \" | 0 | \") + t.getDetail();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"                if (t instanceof Deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"                    Deadline d \u003d (Deadline) t;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"                    taskDesc +\u003d \" | \" + d.getTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"                } else if (t instanceof Event) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"                    Event e \u003d ((Event) t);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"                    taskDesc +\u003d \" | \" + e.getTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"                fw.write(taskDesc + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"            System.out.println(\"Error writing to file : \"+ e.getLocalizedMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"     * @return List of tasks loaded from disk","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException thrown if there are errors with loading / creating a file","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"amzhy"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"amzhy"},"content":"        if (!f.getParentFile().exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"amzhy"},"content":"            f.getParentFile().mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"amzhy"},"content":"        } if (!f.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"amzhy"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"amzhy"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"amzhy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"amzhy"},"content":"                throw new DukeException(\"Error loading file\");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"amzhy"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"amzhy"},"content":"            while(sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"amzhy"},"content":"                Task newTask \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"amzhy"},"content":"                //should not have errors if saved in correct format","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"amzhy"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"amzhy"},"content":"                String[] t \u003d sc.nextLine().split(\"\\\\|\", 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"amzhy"},"content":"                if (t[0].contains(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"amzhy"},"content":"                    newTask \u003d new ToDo(t[2].trim());","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"amzhy"},"content":"                } else if (t[0].contains(\"D\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"amzhy"},"content":"                    newTask \u003d new Deadline(t[2].trim(), LocalDateTime.parse(t[3].trim(), formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"amzhy"},"content":"                } else if (t[0].contains(\"E\")){","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"amzhy"},"content":"                    newTask \u003d new Event(t[2].trim(), LocalDateTime.parse(t[3].trim(), formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"amzhy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"amzhy"},"content":"                if (t.length \u003e 1 \u0026\u0026 t[1].contains(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"amzhy"},"content":"                    newTask.markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"amzhy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"amzhy"},"content":"                if (newTask !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"amzhy"},"content":"                    list.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"amzhy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"amzhy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"amzhy"},"content":"            throw  new DukeException(\"File not found : \"+ e.getLocalizedMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"amzhy"},"content":"        return list;","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":100}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"public class TaskList {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"    private Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     * @param i The task no in the list to be marked as completed","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"     * @return String representation of the completed task","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"    public String markDone(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"        Task task \u003d getTask(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"        task.markDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"        return task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"     * @param i The task no in the list to be deleted","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"     * @return String representation of the deleted task","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"    public String removeTask(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"        Task task \u003d getTask(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"        tasks.remove(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"        return task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":56}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"    private static String bye_output \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"    private static String indent \u003d \"    \";","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    private static String div_line \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"        echo(e.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    public void echo(String next_input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"        System.out.println(div_line + \"\\n\" + indent + next_input + \"\\n\" + div_line);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    public void exit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"        echo(bye_output);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"    public void greet() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"        String line1 \u003d \"Hello! I\u0027m duke.Duke\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"        String line2 \u003d indent + \"What can I do for you?\";","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"        echo(line1 + line2);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"    public void printAll(ArrayList\u003cTask\u003e tasks, String heading) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"        System.out.println(div_line);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"        System.out.println(indent + heading);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"            System.out.println(indent + i + \" \" + tasks.get(i - 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"        System.out.println(div_line);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":44}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":" * This class adds different types of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"public class AddTaskCommand implements  Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    private String type, detail;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    private Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     * @param arr of length 2 which contains the task type and description","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    public AddTaskCommand(String[] arr) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"        this.type \u003d arr[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"        this.detail \u003d arr[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"     * @param taskList Manages all current tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"     * @param ui Used to print messages","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"     * @param storage Loads and saves the tasks to a txt file","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException thrown if there are input/parsing errors","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"            task \u003d new ToDo(detail);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"            String[] description \u003d detail.split(\"/by \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"            if (description.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"                throw new DukeException(\"Invalid duke.task.Deadline entry.Try something like: deadline HW due /by 19/8/2021 14:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"amzhy"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"amzhy"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"amzhy"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"amzhy"},"content":"                    task \u003d new Deadline(description[0].trim(), LocalDateTime.parse(description[1].trim(), formatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"amzhy"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"amzhy"},"content":"                    throw new DukeException(\"Unable to parse time. Valid deadline format: deadline do HW /by 19/08/2021 23:59\");","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"amzhy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"amzhy"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"amzhy"},"content":"            String[] description \u003d detail.split(\"/at \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"amzhy"},"content":"            if (description.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"amzhy"},"content":"                throw new DukeException(\"Invalid duke.task.Event entry. Try something like: event meeting /at 19/08/2021 14:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"amzhy"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"amzhy"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"amzhy"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"amzhy"},"content":"                    task \u003d new Event(description[0].trim(), LocalDateTime.parse(description[1].trim(), formatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"amzhy"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"amzhy"},"content":"                    throw new DukeException(\"Unable to parse time. Valid event format: event meeting /at 19/08/2021 23:59\");","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"amzhy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"amzhy"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"amzhy"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"amzhy"},"content":"            ui.echo(\"Got it! I added this duke.task: \" + task);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"amzhy"},"content":"     * Method to determine if Duke should stop running.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"amzhy"},"content":"     * @return true as this is an exit command","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"amzhy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"amzhy"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":88}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" * This class executes the exit command","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     * @param taskList Manages all current tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     * @param ui Used to print messages","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     * @param storage Loads and saves the tasks to a txt file","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException thrown if there are input/parsing errors","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"        storage.save(taskList.getTasks());","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"        ui.exit();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     * Method to determine if Duke should stop running.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"     * @return true as this is an exit command","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" * Interface used to execute commands","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"public interface Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"     * Method to execute all commands","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     * @param taskList Manages all current tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     * @param ui Used to print messages","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"     * @param storage Loads and saves tasks to a txt file","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException thrown if there are input/parsing errors","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"     * Method to determine if Duke should stop running.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     * @return A boolean true if the command is an exit command and false otherwise","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    boolean isExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" * This class deletes a task from the current list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"public class DeleteCommand implements  Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    private String text;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     * @param s A string to be parsed to task number.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    public DeleteCommand(String s) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"        this.text \u003d s;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"     * @param taskList Manages all current tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     * @param ui Used to print messages","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     * @param storage Loads and saves the tasks to a txt file","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException thrown if there are input/parsing errors","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"            int i \u003d Integer.parseInt(text.trim()) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"            String t \u003d taskList.removeTask(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"            ui.echo(\"Noted. I removed this task: \" + t);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"            throw new DukeException(\"Oops! Enter a valid duke.task no. to delete the duke.task.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"     * Method to determine if Duke should stop running.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"     * @return true as this is an exit command","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":49}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" * This class is used to mark a task as completed","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"public class DoneCommand implements  Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    private String number;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     * @param no A string to be parsed to task number.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    public DoneCommand(String no) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"        this.number \u003d no;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"     * @param taskList Manages all current tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"     * @param ui Used to print messages","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     * @param storage Loads and saves the tasks to a txt file","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException thrown if there are input/parsing errors","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"            int i \u003d Integer.parseInt(number.trim()) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"            String t \u003d taskList.markDone(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"            ui.echo(\"Nice! I marked this task as completed: \" + t);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"            throw new DukeException(\"Oops! Enter a valid duke.task no. to complete the duke.task.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"     * Method to determine if Duke should stop running.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"     * @return true as this is an exit command","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"amzhy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"amzhy"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":49}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"    private String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    private ArrayList\u003cTask\u003e filtered;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"        this.keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"        this.filtered \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"            if (tasks.get(i).getDetail().toLowerCase().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"                filtered.add(tasks.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"        ui.printAll(filtered, \"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"amzhy":36}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":" * This class used to print all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"     * @param taskList Manages all current tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"     * @param ui Used to print messages","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"     * @param storage Loads and saves the tasks to a txt file","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"     * @throws DukeException thrown if there are input/parsing errors","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"        ui.printAll(taskList.getTasks(), \"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"     * Method to determine if Duke should stop running.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"     * @return true as this is an exit command","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":34}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"    public Deadline(String detail, LocalDateTime by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"        super(detail, \"D\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"        return by;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"        String ddl \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + ddl + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":26}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"    private LocalDateTime at;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"    public Event(String detail, LocalDateTime at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"        super(detail,\"E\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"        return at;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"        String time \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"    private String detail;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"    private String type;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"    public Task(String detail, String type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    public String getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"        return type;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    public String getDetail() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"        return detail;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"        String box \u003d isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"        return box + this.detail;","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":37}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"    public ToDo(String detail) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"        super(detail, \"T\");","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":15}},{"path":"src/test/java/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"    public void execute_outOfBounds() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"        DoneCommand dc \u003d new DoneCommand(\"6\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"        for(int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"            list.addTask(new ToDo(\"do hw\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"        assertThrows(DukeException.class, () -\u003e dc.execute(list, new Ui(), new Storage()));","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"    public void execute_parseToInt() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"        DoneCommand dc \u003d new DoneCommand(\"zz\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"        list.addTask(new ToDo(\"sleep\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"        assertThrows(DukeException.class, () -\u003e dc.execute(list, new Ui(), new Storage()));","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":31}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"amzhy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"amzhy"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"amzhy"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"amzhy"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"amzhy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"amzhy"},"content":"    public void addTask_deadlineFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"amzhy"},"content":"        Deadline d \u003d new Deadline(\"hw due\", LocalDateTime.parse(\"19/08/2021 19:00\", formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"amzhy"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"amzhy"},"content":"        t.addTask(d);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"amzhy"},"content":"        assertEquals(\"[D][ ] hw due (by: Aug 19 2021 07:00pm)\", t.getTask(0).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"amzhy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"amzhy"},"content":"    public void markDone_eventFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"amzhy"},"content":"        Event e \u003d new Event(\"class\", LocalDateTime.parse(\"19/09/2021 19:00\", formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"amzhy"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"amzhy"},"content":"        t.addTask(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"amzhy"},"content":"        t.markDone(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"amzhy"},"content":"        assertEquals(\"[E][X] class (at: Sep 19 2021 07:00pm)\", t.getTask(0).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"amzhy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"amzhy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"amzhy"},"content":"    public void addTask_toDoFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"amzhy"},"content":"        ToDo td \u003d new ToDo(\"write\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"amzhy"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"amzhy"},"content":"        t.addTask(td);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"amzhy"},"content":"        assertEquals(\"[T][ ] write\", t.getTask(0).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"amzhy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"amzhy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"amzhy":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amzhy"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"amzhy"},"content":"todo buy bk","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"amzhy"},"content":"event meeting /at 4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"amzhy"},"content":"deadline finish hw /by thu 11pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"amzhy"},"content":"todo sell bk","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"amzhy"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"amzhy"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"amzhy"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"amzhy"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"amzhy"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"amzhy"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"amzhy":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"amzhy"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amzhy":1,"-":20}}]
