[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"    public Duke(String filePath, String fileName) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"        this.storage \u003d new Storage(filePath, fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"        this.tasks \u003d this.storage.readData();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"        new Duke(\"./data/\", \"duke.txt\").run();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"    private void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"        ui.greet();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"        this.add();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"        ui.bye();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"     * Add and store tasks entered and display them back with complete status when requested.","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"    private void add() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"        String command;","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"        while (true) {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"            command \u003d ui.getNextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"                // end bot","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"                storage.writeTasksToData(tasks); // save all data","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"                switch (parser.getCommandAction(command)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"                case \"list\":","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"                    // view list","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"                    ui.printMessage(tasks.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"                case \"done\":","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"                    done(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"                    todo(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"                case \"event\":","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"                    event(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"                    deadline(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"                    delete(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"JeffZincatz"},"content":"                default:","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"JeffZincatz"},"content":"                    // Message for unrecognised task type","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"JeffZincatz"},"content":"                    ui.printMessage(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"JeffZincatz"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"JeffZincatz"},"content":"     * Duke response message for done command","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"JeffZincatz"},"content":"     * @param command command entered to console","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"JeffZincatz"},"content":"    private void done(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"JeffZincatz"},"content":"            int doneIndex \u003d parser.getCommandActionIndex(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"JeffZincatz"},"content":"                tasks.get(doneIndex - 1).markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"JeffZincatz"},"content":"                storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"JeffZincatz"},"content":"                ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + tasks.get(doneIndex - 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"JeffZincatz"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"JeffZincatz"},"content":"                // Task at doneIndex does not exist","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"JeffZincatz"},"content":"                ui.printMessage(\"Task \" + doneIndex + \" does not exist. Please check your task list!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"JeffZincatz"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"JeffZincatz"},"content":"            // command done is not followed by a number","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(\"â˜¹ OOPS!!! The index of a task done must be an integer.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"JeffZincatz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"JeffZincatz"},"content":"     * Duke response message for todo command","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"JeffZincatz"},"content":"     * @param command command entered to console","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"JeffZincatz"},"content":"    private void todo(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"JeffZincatz"},"content":"        Task todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"JeffZincatz"},"content":"            todo \u003d parser.commandToTask(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"JeffZincatz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"JeffZincatz"},"content":"            return;","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"JeffZincatz"},"content":"        tasks.add(todo);","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"JeffZincatz"},"content":"        storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"JeffZincatz"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task:\\n\\t\" + todo + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"JeffZincatz"},"content":"     * Duke response message for event command","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"JeffZincatz"},"content":"     * @param command command entered to console","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"JeffZincatz"},"content":"    private void event(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"JeffZincatz"},"content":"        Task event;","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":126,"author":{"gitId":"JeffZincatz"},"content":"            event \u003d parser.commandToTask(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"JeffZincatz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"JeffZincatz"},"content":"            return;","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"JeffZincatz"},"content":"        tasks.add(event);","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"JeffZincatz"},"content":"        storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"JeffZincatz"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task:\\n\\t\" + event + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"JeffZincatz"},"content":"     * Duke response message for deadline command","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"JeffZincatz"},"content":"     * @param command command entered to console","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"JeffZincatz"},"content":"    private void deadline(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"JeffZincatz"},"content":"        Task deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":145,"author":{"gitId":"JeffZincatz"},"content":"            deadline \u003d parser.commandToTask(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"JeffZincatz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"JeffZincatz"},"content":"            return;","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"JeffZincatz"},"content":"        tasks.add(deadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"JeffZincatz"},"content":"        storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"JeffZincatz"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task:\\n\\t\" + deadline + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"JeffZincatz"},"content":"     * Duke response message for delete command","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"JeffZincatz"},"content":"     * @param command command entered to console","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"JeffZincatz"},"content":"    private void delete(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"JeffZincatz"},"content":"            int deleteIndex \u003d parser.getCommandActionIndex(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"JeffZincatz"},"content":"                Task removed \u003d tasks.remove(deleteIndex - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"JeffZincatz"},"content":"                storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"JeffZincatz"},"content":"                ui.printMessage(\"Noted. I\u0027ve removed this task:\\n\\t\" + removed);","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"JeffZincatz"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"JeffZincatz"},"content":"                // Task at deleteIndex does not exist","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"JeffZincatz"},"content":"                ui.printMessage(\"Task \" + deleteIndex + \" does not exist. Please check your task list!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"JeffZincatz"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":173,"author":{"gitId":"JeffZincatz"},"content":"            // command delete is not followed by a number","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(\"â˜¹ OOPS!!! The index of a task to be deleted must be an integer.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":175,"author":{"gitId":"JeffZincatz"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":178,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":179,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JeffZincatz":177,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":" * A class of Exception that can be thrown for invalid Duke behaviours","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"    public DukeException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"        super();","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"        super(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"JeffZincatz":14}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":" * A parser to parse Duke commands","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"     * Get the action specified by the command","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"     * A valid action can be list, done, todo, event, deadline, delete","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command to be parsed","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"     * @return The action of the command","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"    public String getCommandAction(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"        return command.split(\" \", 2)[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"     * Get the task index of done and delete action","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command to be parsed","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"     * @return The index of the task of the command, -1 if is invalid action","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"    public int getCommandActionIndex(String command) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"        switch (getCommandAction(command)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"        case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"            return Integer.parseInt(command.substring(5));","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"            return Integer.parseInt(command.substring(7));","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"            throw new DukeException(\"Invalid action. Index cannot be parsed from the command.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"     * Get the relavant task information from the command","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command to be parsed","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"     * @return A map of task information from the command","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"    public Task commandToTask(String command) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"        switch (getCommandAction(command)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"            String[] todoSplit \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"            String todoDescription;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"                todoDescription \u003d todoSplit[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"                // no description","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"                String message \u003d \"â˜¹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"                throw new DukeException(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"            return new Todo(todoDescription);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"        case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"            String[] eventSplit \u003d command.split(\" /at \");","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"JeffZincatz"},"content":"            LocalDate at;","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"JeffZincatz"},"content":"                at \u003d this.stringToLocalDate(eventSplit[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"JeffZincatz"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"JeffZincatz"},"content":"                // no /at found in command","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"JeffZincatz"},"content":"                String message \u003d \"â˜¹ OOPS!!! The time of an event cannot be empty.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"JeffZincatz"},"content":"                throw new DukeException(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"JeffZincatz"},"content":"            String eventDescription;","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"JeffZincatz"},"content":"                eventDescription \u003d eventSplit[0].split(\"event \")[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"JeffZincatz"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"JeffZincatz"},"content":"                // no event description","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"JeffZincatz"},"content":"                String message \u003d \"â˜¹ OOPS!!! The description of an event cannot be empty.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"JeffZincatz"},"content":"                throw new DukeException(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"JeffZincatz"},"content":"            return new Event(eventDescription, at);","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"JeffZincatz"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"JeffZincatz"},"content":"            String[] ddlSplit \u003d command.split(\" /by \");","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"JeffZincatz"},"content":"            LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"JeffZincatz"},"content":"                by \u003d this.stringToLocalDate(ddlSplit[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"JeffZincatz"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"JeffZincatz"},"content":"                // no /by found in command","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"JeffZincatz"},"content":"                String message \u003d \"â˜¹ OOPS!!! The time of a deadline cannot be empty.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"JeffZincatz"},"content":"                throw new DukeException(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"JeffZincatz"},"content":"            String ddlDescription;","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"JeffZincatz"},"content":"                ddlDescription \u003d ddlSplit[0].split(\"deadline \")[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"JeffZincatz"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"JeffZincatz"},"content":"                // no deadline description","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"JeffZincatz"},"content":"                String message\u003d \"â˜¹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"JeffZincatz"},"content":"                throw new DukeException(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"JeffZincatz"},"content":"            return new Deadline(ddlDescription, by);","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"JeffZincatz"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"JeffZincatz"},"content":"            throw new DukeException(\"Invalid action. Task cannot be parsed from the command.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"JeffZincatz"},"content":"     * Parse a string of time into LocalDate","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"JeffZincatz"},"content":"     * @param str The time string","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"JeffZincatz"},"content":"     * @return The LocalDate corresponding to the string","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"JeffZincatz"},"content":"     * @throws DukeException with message to be printed","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"JeffZincatz"},"content":"    public LocalDate stringToLocalDate(String str) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"JeffZincatz"},"content":"            return LocalDate.parse(str);","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"JeffZincatz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"JeffZincatz"},"content":"            String message \u003d \"The time format is invalid. Please use the format YYYY-MM-DD\";","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"JeffZincatz"},"content":"            throw new DukeException(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"JeffZincatz"},"content":"     * Format LocalDate into MMMM d yyyy format","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"JeffZincatz"},"content":"     * @param localDate The LocalDate to be formatted","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"JeffZincatz"},"content":"     * @return The formatted LocalDate string","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"JeffZincatz"},"content":"    public String formatLocalDate(LocalDate localDate) {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"JeffZincatz"},"content":"        return localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"JeffZincatz":131}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import duke.task.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":" * A collection of storage io methods","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"     * the file path of the data file","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"     * the file name of the data file","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"    private final String fileName;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"    public Storage(String filePath, String fileName) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"     * Read data from the data file duke.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"     * @return A TaskList of tasks read","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"    public TaskList readData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"        System.out.println(\"Storage::readData\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"        File dataFile \u003d new File(this.filePath + this.fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"            Scanner fileScanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"                String data \u003d fileScanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"                tasks.add(dataStringToTask(data));","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"            fileScanner.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"            return new TaskList(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"            // return empty array list of task","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"            return new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"     * Convert a data string read from duke.txt into task","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"     * @return the task represented by the string","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"JeffZincatz"},"content":"    private Task dataStringToTask(String data) {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"JeffZincatz"},"content":"        String[] taskInfo \u003d data.split(\" [|] \");","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"JeffZincatz"},"content":"        String taskType \u003d taskInfo[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"JeffZincatz"},"content":"        Task task;","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"JeffZincatz"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"JeffZincatz"},"content":"        case \"T\":","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"JeffZincatz"},"content":"            // task is todo","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"JeffZincatz"},"content":"            task \u003d new Todo(taskInfo[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"JeffZincatz"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"JeffZincatz"},"content":"        case \"D\":","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"JeffZincatz"},"content":"            // task is deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"JeffZincatz"},"content":"            LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"JeffZincatz"},"content":"                by \u003d parser.stringToLocalDate(taskInfo[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"JeffZincatz"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"JeffZincatz"},"content":"                by \u003d LocalDate.now();","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"JeffZincatz"},"content":"            task \u003d new Deadline(taskInfo[2], by);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"JeffZincatz"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"JeffZincatz"},"content":"        case \"E\":","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"JeffZincatz"},"content":"            // task is event","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"JeffZincatz"},"content":"            LocalDate at;","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"JeffZincatz"},"content":"                at \u003d parser.stringToLocalDate(taskInfo[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"JeffZincatz"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"JeffZincatz"},"content":"                at \u003d LocalDate.now();","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"JeffZincatz"},"content":"            task \u003d new Event(taskInfo[2], at);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"JeffZincatz"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"JeffZincatz"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"JeffZincatz"},"content":"            // not of any task type","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"JeffZincatz"},"content":"            throw new IllegalArgumentException(\"Task type not recognized: \" + taskType);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"JeffZincatz"},"content":"        if (Integer.parseInt(taskInfo[1]) \u003d\u003d 1) task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"JeffZincatz"},"content":"        return task;","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"JeffZincatz"},"content":"     * Write a list of tasks to the duke.txt data file","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"JeffZincatz"},"content":"     * @param tasks the list of tasks to be written","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"JeffZincatz"},"content":"    public void writeTasksToData(TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"JeffZincatz"},"content":"            Files.write(Paths.get(this.filePath + this.fileName), tasks.toDataString());","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"JeffZincatz"},"content":"        } catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"JeffZincatz"},"content":"                Files.createDirectories(Paths.get(this.filePath));","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"JeffZincatz"},"content":"                Files.createFile(Paths.get(this.filePath + this.fileName));","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"JeffZincatz"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"JeffZincatz"},"content":"                System.out.println(\"Error caught: \" + ioException);","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"JeffZincatz"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"JeffZincatz"},"content":"            System.out.println(\"Error caught: \" + ioException);","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"JeffZincatz":123}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":" * A collection of UI methods","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"     * Print a message that is enclosed by 2 horizontal lines.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"     * @param message The message to be printed between 2 horizontal lines.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"        String horizontalLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"        System.out.println(horizontalLine + \"\\n\" + message + \"\\n\" + horizontalLine);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"     * Greeting message of Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"    public void greet() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"        printMessage(logo + \"\\nWelcome! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"     * Get the next line of input","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"     * @return The next line of input","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"    public String getNextLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"            return this.scanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"            printMessage(e.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"            return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"     * Exit message of ui","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"    public void bye() {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"        this.scanner.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"        this.printMessage(\"Bye. See you next time!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"JeffZincatz":56}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":" * A Deadline type task representation for Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + new Parser().formatLocalDate(by) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JeffZincatz":24}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":" * A Todo type task representation for Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + new Parser().formatLocalDate(at) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JeffZincatz":23}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":" * A task representation for Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"     * Get status icon of this task.","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"     * @return \"X\" if this task is done, otherwise \" \".","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"     * Mark this task as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"        return \"[\"+ this.getStatusIcon() +\"]\" + \" \" + this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"     * Get the done status of this task","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"     * @return true if this task is done, false otherwise","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"    public boolean getDoneStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JeffZincatz":44}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":" * An array list of tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"        this.list \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"        return list.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"    public Task remove(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"        return list.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"        return list.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"        return list.isEmpty();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"    public int size() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"        return list.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"    public Object[] toArray() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"        return list.toArray();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"        if (!list.isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"            result.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"            result.append(1).append(\". \").append(list.get(0));","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"            for (int i \u003d 1; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"                result.append(\"\\n\").append(i + 1).append(\". \").append(list.get(i));","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"            result.append(\"There is not task yet. Try to add a task first.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"        return result.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"     * Convert the task list into array list of string","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"     * @return Array list of task strings","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"JeffZincatz"},"content":"    public ArrayList\u003cString\u003e toDataString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"JeffZincatz"},"content":"        ArrayList\u003cString\u003e dataStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"JeffZincatz"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"JeffZincatz"},"content":"            dataStrings.add(taskToDataString(task));","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"JeffZincatz"},"content":"        return dataStrings;","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"JeffZincatz"},"content":"     * Convert a data string read from duke.txt into task","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"JeffZincatz"},"content":"     * @return the task represented by the string","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"JeffZincatz"},"content":"    private String taskToDataString(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"JeffZincatz"},"content":"        String taskType \u003d task.getClass().getSimpleName();","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"JeffZincatz"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"JeffZincatz"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"JeffZincatz"},"content":"        case \"Todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"JeffZincatz"},"content":"            // task is todo","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d \"T | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d task.isDone ? \"1 | \" : \"0 | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d task.description;","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"JeffZincatz"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"JeffZincatz"},"content":"        case \"Deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"JeffZincatz"},"content":"            // task is deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"JeffZincatz"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d \"D | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d deadline.isDone ? \"1 | \" : \"0 | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d deadline.description + \" | \" + deadline.by;","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"JeffZincatz"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"JeffZincatz"},"content":"        case \"Event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"JeffZincatz"},"content":"            // task is event","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"JeffZincatz"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d \"E | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d event.isDone ? \"1 | \" : \"0 | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d event.description + \" | \" + event.at;","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"JeffZincatz"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"JeffZincatz"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"JeffZincatz"},"content":"            // not of any task type","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"JeffZincatz"},"content":"            throw new IllegalArgumentException(\"Task type not recognized: \" + taskType);","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"JeffZincatz"},"content":"        return data;","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"JeffZincatz":110}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":" * A Todo type task representation for Duke","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JeffZincatz":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"not a command","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"todo test 1","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"event /at 1pm today","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"event test 2 /at 1pm today","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"deadline /by 9am tmr","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"deadline test 3 /by 9am tmr","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"done abc","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"done 123","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"done 99","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"delete","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"delete abc","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"delete 123","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"JeffZincatz":21}}]
