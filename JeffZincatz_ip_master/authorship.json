[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"# MemoCat","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"### MemoCat helps you sort out your daily tasks. It is,","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"* Text-based","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"* Easy to learn","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"*  ~~SUPER~~  FAST to use","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"* Now with simple *GUI*!","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"### All you need to do is,","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"1. Download it from [here](https://github.com/nus-cs2103-AY2122S1/ip).","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"2. Double-click it.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"3. Add your tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"### Let it manage your tasks for you ðŸ˜‰","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"### And it is ***FREE***!","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"## Features:","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"- [x] Managing tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"- [x] Save to local data file","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"- [x] Managing todos, events and deadlines","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"- [x] Simple GUI (with cute cats!)","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"### If you Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"```java","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"    new Duke(\"./data/\", \"memocat.txt\").run();","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"\u003e \"The ordinary days that we live in may, in fact, be a series of miracles.\" -","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"Koujirou Sasahara","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"JeffZincatz":32,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"plugins {","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"    id \u0027idea\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"    // other plugins","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"    // javaFx","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"    id \u0027org.beryx.jlink\u0027 version \u00272.12.0\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"    // shadowJar","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"     id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.0.0\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"checkstyle {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"repositories {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"dependencies {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"    // JUnit","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.7.1\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"    // JavaFX","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"test {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"application {","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"    mainClassName \u003d \"memocat.Launcher\"","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"JeffZincatz":51}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"Welcome to **MemoCat**, an easy-to-use memo chatbot to track your daily tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"- author: Xu Jiheng (aka JeffZincatz)","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"### Feature - Greeting","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"Our kind MemeCat would greet you with a welcome message when your first launch the app.","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"### Feature - Show all tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"You can show a full list of your existing tasks with the `list` command.","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"### Feature - Add new task","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"You can add new tasks of different types with the `todo`, `deadline`, and `event` commands.","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"- Todo: `todo [task description]`","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"- Deadline: `deadline [task description] /by [YYYY-MM-DD]`","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"- Event: `event [task description] /at [YYYY-MM-DD]`","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"### Feature - Mark task as done","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"You can mark a task as done with the `done` command.","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"- Mark as done: `done [index]`","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"### Feature - Delete a task","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"You can delete a task from the `list` with the `delete` command.","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"- Delete a task: `delete [index]`","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"### Feature - Data save","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"All your tasks data will be automatically saved to `/data/memocat.txt`.","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"### Feature - Exit","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"You can exit the MemoCat chatbot by sending `bye`.","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"*(The square brackets `[]` indicates user input.)*","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"### `list` - Show all tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"The `list` command shows you a list of all existing tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"`list`","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"Sample outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"T | 1 | finish cs2100 tut","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"D | 1 | submit cs2103t ip | 2021-08-31","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"E | 0 | dinner with friends | 2021-09-01","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"D | 0 | ip week 5 | 2021-09-08","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"JeffZincatz"},"content":"Description of the outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"JeffZincatz"},"content":"- The first letter shows the tasks type.","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"JeffZincatz"},"content":"    - `T`: Todo","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"JeffZincatz"},"content":"    - `D`: Deadline","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"JeffZincatz"},"content":"    - `E`: Event","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"JeffZincatz"},"content":"- The second number indicates its complete status.","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"JeffZincatz"},"content":"    - `1`: done","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"JeffZincatz"},"content":"    - `0`: not done","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"JeffZincatz"},"content":"- For `Deadline` and `Event` tasks, the third number indicates its time.","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"JeffZincatz"},"content":"    - The time is in `YYYY-MM-DD` format e.g. `2021-09-01`.","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"JeffZincatz"},"content":"### `todo` - Create a Todo tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"JeffZincatz"},"content":"The `todo` command add a new Todo task to the `list`.","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"JeffZincatz"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"JeffZincatz"},"content":"`todo watch lecture recording st2334`","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"JeffZincatz"},"content":"Sample outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"JeffZincatz"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"JeffZincatz"},"content":"    [T][ ] watch lecture recording st2334","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"JeffZincatz"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"JeffZincatz"},"content":"Description of the outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"JeffZincatz"},"content":"Our MemoCat has added the tasks to the list and saved to `/data/memocat.txt`.","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"JeffZincatz"},"content":"### `deadline` - Create a Deadline tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"JeffZincatz"},"content":"The `deadline` command add a new Deadline task to the `list`.","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"JeffZincatz"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"JeffZincatz"},"content":"`deadline complete 2100 tutorial /by 2021-09-13`","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"JeffZincatz"},"content":"Sample outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":108,"author":{"gitId":"JeffZincatz"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"JeffZincatz"},"content":"    [D][ ] deadline complete 2100 tutorial (by: 2021-09-13)","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"JeffZincatz"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":112,"author":{"gitId":"JeffZincatz"},"content":"Description of the outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"JeffZincatz"},"content":"Our MemoCat has added the tasks to the list and saved to `/data/memocat.txt`.","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"JeffZincatz"},"content":"### `Event` - Create an Event tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"JeffZincatz"},"content":"The `event` command add a new Event task to the `list`.","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"JeffZincatz"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"JeffZincatz"},"content":"`event cluster group activity /at 2021-09-16`","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"JeffZincatz"},"content":"Sample outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"JeffZincatz"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"JeffZincatz"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"JeffZincatz"},"content":"    [E][ ] event cluster group activity (at: 2021-09-16)","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"JeffZincatz"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"JeffZincatz"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"JeffZincatz"},"content":"Description of the outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"JeffZincatz"},"content":"Our MemoCat has added the tasks to the list and saved to `/data/memocat.txt`.","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"JeffZincatz"},"content":"### `done` - Mark a task as done","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"JeffZincatz"},"content":"The `done` command mark a task in the `list` as done by index.","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"JeffZincatz"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"JeffZincatz"},"content":"`done 5`","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"JeffZincatz"},"content":"Sample outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"JeffZincatz"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"JeffZincatz"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"JeffZincatz"},"content":"    [T][X] watch lecture recording st2334","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"JeffZincatz"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"JeffZincatz"},"content":"Description of the outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"JeffZincatz"},"content":"Our MemoCat has marked the task as done in the list and saved to `/data/memocat.txt`.","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"JeffZincatz"},"content":"### `delete` - Delete a task","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"JeffZincatz"},"content":"The `delete` command delete a task from the `list` by index.","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"JeffZincatz"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":158,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":159,"author":{"gitId":"JeffZincatz"},"content":"`delete 5`","lastModifiedDate":"2021-09-13"},{"lineNumber":160,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":161,"author":{"gitId":"JeffZincatz"},"content":"Sample outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":162,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":163,"author":{"gitId":"JeffZincatz"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":164,"author":{"gitId":"JeffZincatz"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"JeffZincatz"},"content":"    [T][X] watch lecture recording st2334","lastModifiedDate":"2021-09-13"},{"lineNumber":166,"author":{"gitId":"JeffZincatz"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":167,"author":{"gitId":"JeffZincatz"},"content":"Description of the outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":168,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":169,"author":{"gitId":"JeffZincatz"},"content":"Our MemoCat has removed the task from the list and saved to `/data/memocat.txt`.","lastModifiedDate":"2021-09-13"},{"lineNumber":170,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":171,"author":{"gitId":"JeffZincatz"},"content":"### `bye` - Exit MemoCat chatbot","lastModifiedDate":"2021-09-13"},{"lineNumber":172,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":173,"author":{"gitId":"JeffZincatz"},"content":"The `bye` command terminates the MemoCat chatbot.","lastModifiedDate":"2021-09-13"},{"lineNumber":174,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":175,"author":{"gitId":"JeffZincatz"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":176,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":177,"author":{"gitId":"JeffZincatz"},"content":"`bye`","lastModifiedDate":"2021-09-13"},{"lineNumber":178,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":179,"author":{"gitId":"JeffZincatz"},"content":"Sample outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":180,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":181,"author":{"gitId":"JeffZincatz"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":182,"author":{"gitId":"JeffZincatz"},"content":"Bye. See you next time!","lastModifiedDate":"2021-09-13"},{"lineNumber":183,"author":{"gitId":"JeffZincatz"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":184,"author":{"gitId":"JeffZincatz"},"content":"Description of the outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":185,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":186,"author":{"gitId":"JeffZincatz"},"content":"Our MemoCat has finished its work. The app will automatically close after 1 second.","lastModifiedDate":"2021-09-13"},{"lineNumber":187,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":188,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":189,"author":{"gitId":"JeffZincatz"},"content":"## Final words","lastModifiedDate":"2021-09-13"},{"lineNumber":190,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":191,"author":{"gitId":"JeffZincatz"},"content":"Hope you enjoyed the cute cat pictures :)","lastModifiedDate":"2021-09-13"},{"lineNumber":192,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":193,"author":{"gitId":"JeffZincatz"},"content":"\u003e \"The ordinary days that we live in may, in fact, be a series of miracles.\" -","lastModifiedDate":"2021-09-13"},{"lineNumber":194,"author":{"gitId":"JeffZincatz"},"content":"Koujirou Sasahara","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"JeffZincatz":168,"-":26}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"echo.","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"echo.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"goto fail","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"echo.","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"echo.","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"JeffZincatz"},"content":"goto fail","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"JeffZincatz"},"content":":execute","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"JeffZincatz"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"JeffZincatz"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"JeffZincatz"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"JeffZincatz"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"JeffZincatz"},"content":":end","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"JeffZincatz"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"JeffZincatz"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"JeffZincatz"},"content":":fail","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"JeffZincatz"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"JeffZincatz"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"JeffZincatz"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"JeffZincatz"},"content":"exit /b 1","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"JeffZincatz"},"content":":mainEnd","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"JeffZincatz"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"JeffZincatz"},"content":":omega","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"JeffZincatz":89}},{"path":"src/main/java/memocat/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":" * A dialog box for user and memocat messages in GUI.","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"    private Label text;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"     * Constructs a DialogBox.","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"     * @param l  Label.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"     * @param iv ImageView.","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"        text \u003d l;","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"        int pictureRadius \u003d 50;","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"        // create circle clipper for image view","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"        Circle clipper \u003d new Circle(pictureRadius);","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"        clipper.setCenterX(pictureRadius);","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"        clipper.setCenterY(pictureRadius);","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"        // clip imageview with circle","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"        iv.setClip(clipper);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"        text.setWrapText(true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"        // add text label horizontal paddings","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"        int textHorizontalPadding \u003d 10;","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"        text.setPadding(new Insets(0, textHorizontalPadding, 0, textHorizontalPadding));","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"        displayPicture.setFitWidth(pictureRadius * 2);","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"        displayPicture.setFitHeight(pictureRadius * 2);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"        // add dialog paddings in all directions","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"        int dialogPadding \u003d 20;","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"        this.setPadding(new Insets(dialogPadding));","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"JeffZincatz"},"content":"     * Gets a dialog box for user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"JeffZincatz"},"content":"     * @param l  Label of user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"JeffZincatz"},"content":"     * @param iv ImageView of user avatar.","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"JeffZincatz"},"content":"     * @return Dialog box for the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"JeffZincatz"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"JeffZincatz"},"content":"        var userDialog \u003d new DialogBox(l, iv);","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"JeffZincatz"},"content":"        // set user dialog background color","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"JeffZincatz"},"content":"        Color userDialogBoxColor \u003d Color.rgb(202, 225, 255);","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"JeffZincatz"},"content":"        userDialog.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"JeffZincatz"},"content":"                userDialogBoxColor, new CornerRadii(20), new Insets(10))));","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"JeffZincatz"},"content":"        return userDialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"JeffZincatz"},"content":"     * Gets a dialog box for memocat response.","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"JeffZincatz"},"content":"     * @param l  Label of memocat response.","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"JeffZincatz"},"content":"     * @param iv ImageView of memocat avatar.","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"JeffZincatz"},"content":"     * @return Dialog box for memocat.","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"JeffZincatz"},"content":"    public static DialogBox getmemocatDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"JeffZincatz"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"JeffZincatz"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"JeffZincatz"},"content":"        // set memocat dialog background color","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"JeffZincatz"},"content":"        Color memocatDialogColor \u003d Color.rgb(255, 231, 186);","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"JeffZincatz"},"content":"        db.setBackground(new Background(new BackgroundFill(","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"JeffZincatz"},"content":"                memocatDialogColor, new CornerRadii(20), new Insets(10))));","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"JeffZincatz"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"JeffZincatz":99}},{"path":"src/main/java/memocat/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"        Application.launch(MemoCatFx.class, args);","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"JeffZincatz":12}},{"path":"src/main/java/memocat/MemoCat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"public class MemoCat {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"     * storage instance to handle task list storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"     * task list instance to store tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"     * Ui instance to handle memocat ui.","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"     * Parser instance to handle parsing.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"     * Constructs a memocat instance to run memocat.","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"     * @param filePath Path to the data save file directory","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"     * @param fileName File name of the data save file","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"    public MemoCat(String filePath, String fileName) {","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"        this.storage \u003d new Storage(filePath, fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"        this.tasks \u003d this.storage.readData();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"        new MemoCat(\"./data/\", \"memocat.txt\").run();","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"     * Finds tasks from task list that contains a given pattern and print the tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command entered to the console.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"    private void find(String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"        String pattern \u003d command.split(\"find \", 2)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"        String matches \u003d tasks.getMatchedTasksString(pattern);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"        ui.printMessage(matches);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"    private void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"        ui.greet();","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"        this.add();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"        ui.bye();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"     * Adds and stores tasks entered and display them back with complete status when requested.","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"JeffZincatz"},"content":"    private void add() {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"JeffZincatz"},"content":"        String command;","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"JeffZincatz"},"content":"        while (true) {","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"JeffZincatz"},"content":"            command \u003d ui.getNextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"JeffZincatz"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"JeffZincatz"},"content":"                // end bot","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"JeffZincatz"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"JeffZincatz"},"content":"                    // save all data","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"JeffZincatz"},"content":"                    storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"JeffZincatz"},"content":"                } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"JeffZincatz"},"content":"                    ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"JeffZincatz"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"JeffZincatz"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"JeffZincatz"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"JeffZincatz"},"content":"                switch (parser.getCommandAction(command)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"JeffZincatz"},"content":"                case \"list\":","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"JeffZincatz"},"content":"                    // view list","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"JeffZincatz"},"content":"                    ui.printMessage(tasks.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"JeffZincatz"},"content":"                case \"done\":","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"JeffZincatz"},"content":"                    done(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"JeffZincatz"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"JeffZincatz"},"content":"                    todo(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"JeffZincatz"},"content":"                case \"event\":","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"JeffZincatz"},"content":"                    event(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"JeffZincatz"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"JeffZincatz"},"content":"                    deadline(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"JeffZincatz"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"JeffZincatz"},"content":"                    delete(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"JeffZincatz"},"content":"                case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"JeffZincatz"},"content":"                    find(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"JeffZincatz"},"content":"                default:","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"JeffZincatz"},"content":"                    // Message for unrecognised task type","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"JeffZincatz"},"content":"                    ui.printMessage(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"JeffZincatz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"JeffZincatz"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"JeffZincatz"},"content":"     * Responses for done command.","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command entered to console.","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"JeffZincatz"},"content":"    private void done(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"JeffZincatz"},"content":"            int doneIndex \u003d parser.getCommandActionIndex(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":120,"author":{"gitId":"JeffZincatz"},"content":"                tasks.get(doneIndex - 1).markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"JeffZincatz"},"content":"                storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"JeffZincatz"},"content":"                ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + tasks.get(doneIndex - 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"JeffZincatz"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"JeffZincatz"},"content":"                // Task at doneIndex does not exist","lastModifiedDate":"2021-08-16"},{"lineNumber":126,"author":{"gitId":"JeffZincatz"},"content":"                ui.printMessage(\"Task \" + doneIndex + \" does not exist. Please check your task list!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":129,"author":{"gitId":"JeffZincatz"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":130,"author":{"gitId":"JeffZincatz"},"content":"            // command done is not followed by a number","lastModifiedDate":"2021-08-16"},{"lineNumber":131,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(\"â˜¹ OOPS!!! The index of a task done must be an integer.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"JeffZincatz"},"content":"     * Responses for todo command.","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command entered to console.","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"JeffZincatz"},"content":"    private void todo(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"JeffZincatz"},"content":"        Task todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"JeffZincatz"},"content":"            todo \u003d parser.commandToTask(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"JeffZincatz"},"content":"            return;","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"JeffZincatz"},"content":"        tasks.add(todo);","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"JeffZincatz"},"content":"            storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"JeffZincatz"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task:\\n\\t\" + todo","lastModifiedDate":"2021-08-30"},{"lineNumber":157,"author":{"gitId":"JeffZincatz"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":158,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"JeffZincatz"},"content":"     * Responses for event command.","lastModifiedDate":"2021-09-14"},{"lineNumber":162,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command entered to console.","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"JeffZincatz"},"content":"    private void event(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"JeffZincatz"},"content":"        Task event;","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":168,"author":{"gitId":"JeffZincatz"},"content":"            event \u003d parser.commandToTask(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":170,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"JeffZincatz"},"content":"            return;","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":173,"author":{"gitId":"JeffZincatz"},"content":"        tasks.add(event);","lastModifiedDate":"2021-08-23"},{"lineNumber":174,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"JeffZincatz"},"content":"            storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":177,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"JeffZincatz"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task:\\n\\t\" + event","lastModifiedDate":"2021-08-30"},{"lineNumber":180,"author":{"gitId":"JeffZincatz"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":181,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":183,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":184,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"JeffZincatz"},"content":"     * Responses for deadline command.","lastModifiedDate":"2021-09-14"},{"lineNumber":186,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command entered to console.","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":189,"author":{"gitId":"JeffZincatz"},"content":"    private void deadline(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":190,"author":{"gitId":"JeffZincatz"},"content":"        Task deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":191,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":192,"author":{"gitId":"JeffZincatz"},"content":"            deadline \u003d parser.commandToTask(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":193,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":194,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"JeffZincatz"},"content":"            return;","lastModifiedDate":"2021-08-17"},{"lineNumber":196,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":197,"author":{"gitId":"JeffZincatz"},"content":"        tasks.add(deadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":198,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"JeffZincatz"},"content":"            storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":200,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":201,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"JeffZincatz"},"content":"        ui.printMessage(\"Got it. I\u0027ve added this task:\\n\\t\" + deadline","lastModifiedDate":"2021-08-30"},{"lineNumber":204,"author":{"gitId":"JeffZincatz"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":205,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":206,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":207,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":208,"author":{"gitId":"JeffZincatz"},"content":"     * Responses for delete command.","lastModifiedDate":"2021-09-14"},{"lineNumber":209,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":210,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command entered to console.","lastModifiedDate":"2021-08-25"},{"lineNumber":211,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":212,"author":{"gitId":"JeffZincatz"},"content":"    private void delete(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":213,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":214,"author":{"gitId":"JeffZincatz"},"content":"            int deleteIndex \u003d parser.getCommandActionIndex(command);","lastModifiedDate":"2021-08-23"},{"lineNumber":215,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":216,"author":{"gitId":"JeffZincatz"},"content":"                Task removed \u003d tasks.remove(deleteIndex - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":217,"author":{"gitId":"JeffZincatz"},"content":"                storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":218,"author":{"gitId":"JeffZincatz"},"content":"                ui.printMessage(\"Noted. I\u0027ve removed this task:\\n\\t\" + removed);","lastModifiedDate":"2021-08-23"},{"lineNumber":219,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"JeffZincatz"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":221,"author":{"gitId":"JeffZincatz"},"content":"                // Task at deleteIndex does not exist","lastModifiedDate":"2021-08-17"},{"lineNumber":222,"author":{"gitId":"JeffZincatz"},"content":"                ui.printMessage(\"Task \" + deleteIndex + \" does not exist. Please check your task list!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":223,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":224,"author":{"gitId":"JeffZincatz"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":225,"author":{"gitId":"JeffZincatz"},"content":"            // command delete is not followed by a number","lastModifiedDate":"2021-08-17"},{"lineNumber":226,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(\"â˜¹ OOPS!!! The index of a task to be deleted must be an integer.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":227,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":228,"author":{"gitId":"JeffZincatz"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":229,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":230,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JeffZincatz":229,"-":2}},{"path":"src/main/java/memocat/MemoCatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":" * A class of Exception that can be thrown for invalid memocat behaviours.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"public class MemoCatException extends Exception {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"    public MemoCatException() {","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"        super();","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"    public MemoCatException(String message) {","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"        super(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"JeffZincatz":15}},{"path":"src/main/java/memocat/MemoCatFx.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"public class MemoCatFx extends Application {","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"    private Scene scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserCat.jpeg\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"    private Image memocat \u003d new Image(this.getClass().getResourceAsStream(\"/images/MemoCat.jpg\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"     * storage instance to handle task list storage.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"    private final Storage storage \u003d new Storage(\"./data/\", \"memocat.txt\");","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"     * task list instance to store tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"    private final TaskList tasks \u003d this.storage.readData();","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"     * Parser instance to handle parsing.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"        // ...","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"        AnchorPane mainLayout \u003d setUpComponents(stage);","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"        setUpAppSize(stage, mainLayout);","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"        setUpScrollAndSend();","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"        });","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"JeffZincatz"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"JeffZincatz"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"JeffZincatz"},"content":"        });","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"JeffZincatz"},"content":"        // initial greeting message","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"JeffZincatz"},"content":"        greet(dialogContainer);","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"JeffZincatz"},"content":"        // more code to be added here later","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"JeffZincatz"},"content":"     * Sets up initial components of the stage.","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"JeffZincatz"},"content":"     * @param stage The stage of the app.","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"JeffZincatz"},"content":"     * @return The main layout of the app.","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"JeffZincatz"},"content":"    private AnchorPane setUpComponents(Stage stage) {","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"JeffZincatz"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"JeffZincatz"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"JeffZincatz"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"JeffZincatz"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"JeffZincatz"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"JeffZincatz"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"JeffZincatz"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"JeffZincatz"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"JeffZincatz"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"JeffZincatz"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"JeffZincatz"},"content":"        stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"JeffZincatz"},"content":"        return mainLayout;","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"JeffZincatz"},"content":"     * Sets up sizes of the app.","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"JeffZincatz"},"content":"     * @param stage      The stage of the app.","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"JeffZincatz"},"content":"     * @param mainLayout The main layout of the app.","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"JeffZincatz"},"content":"    private void setUpAppSize(Stage stage, AnchorPane mainLayout) {","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"JeffZincatz"},"content":"        stage.setTitle(\"MemoCat\");","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"JeffZincatz"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"JeffZincatz"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"JeffZincatz"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"JeffZincatz"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"JeffZincatz"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"JeffZincatz"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"JeffZincatz"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"JeffZincatz"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"JeffZincatz"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"JeffZincatz"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"JeffZincatz"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":127,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"JeffZincatz"},"content":"     * Sets up scroll bar and send button of the app.","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"JeffZincatz"},"content":"    private void setUpScrollAndSend() {","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"JeffZincatz"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"JeffZincatz"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":133,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"JeffZincatz"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":135,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"JeffZincatz"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"JeffZincatz"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":139,"author":{"gitId":"JeffZincatz"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"JeffZincatz"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"JeffZincatz"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-08-30"},{"lineNumber":143,"author":{"gitId":"JeffZincatz"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2021-08-30"},{"lineNumber":144,"author":{"gitId":"JeffZincatz"},"content":"            userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"JeffZincatz"},"content":"        });","lastModifiedDate":"2021-08-30"},{"lineNumber":146,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"JeffZincatz"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-08-30"},{"lineNumber":148,"author":{"gitId":"JeffZincatz"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2021-08-30"},{"lineNumber":149,"author":{"gitId":"JeffZincatz"},"content":"            userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":150,"author":{"gitId":"JeffZincatz"},"content":"        });","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":152,"author":{"gitId":"JeffZincatz"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2021-08-30"},{"lineNumber":153,"author":{"gitId":"JeffZincatz"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-08-30"},{"lineNumber":154,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":155,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":156,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":157,"author":{"gitId":"JeffZincatz"},"content":"     * Sends greeting message of MemoCat.","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":159,"author":{"gitId":"JeffZincatz"},"content":"     * @param dialogContainer Dialog container of the chat.","lastModifiedDate":"2021-09-14"},{"lineNumber":160,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":161,"author":{"gitId":"JeffZincatz"},"content":"    private void greet(VBox dialogContainer) {","lastModifiedDate":"2021-09-13"},{"lineNumber":162,"author":{"gitId":"JeffZincatz"},"content":"        Label greetMessage \u003d new Label(\"Greetings!\\nThis is memocat.\\nHow can I help you?\");","lastModifiedDate":"2021-09-13"},{"lineNumber":163,"author":{"gitId":"JeffZincatz"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-13"},{"lineNumber":164,"author":{"gitId":"JeffZincatz"},"content":"                DialogBox.getmemocatDialog(greetMessage, new ImageView(memocat)));","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":166,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":167,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":168,"author":{"gitId":"JeffZincatz"},"content":"     * Iteration 1:","lastModifiedDate":"2021-08-30"},{"lineNumber":169,"author":{"gitId":"JeffZincatz"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2021-08-30"},{"lineNumber":170,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":171,"author":{"gitId":"JeffZincatz"},"content":"     * @param text String containing text to add","lastModifiedDate":"2021-08-30"},{"lineNumber":172,"author":{"gitId":"JeffZincatz"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2021-08-30"},{"lineNumber":173,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":174,"author":{"gitId":"JeffZincatz"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2021-08-30"},{"lineNumber":175,"author":{"gitId":"JeffZincatz"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2021-08-30"},{"lineNumber":176,"author":{"gitId":"JeffZincatz"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":177,"author":{"gitId":"JeffZincatz"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-08-30"},{"lineNumber":178,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":179,"author":{"gitId":"JeffZincatz"},"content":"        return textToAdd;","lastModifiedDate":"2021-08-30"},{"lineNumber":180,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":181,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":182,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":183,"author":{"gitId":"JeffZincatz"},"content":"     * Iteration 3:","lastModifiedDate":"2021-08-30"},{"lineNumber":184,"author":{"gitId":"JeffZincatz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing memocat\u0027s reply and then appends them","lastModifiedDate":"2021-09-13"},{"lineNumber":185,"author":{"gitId":"JeffZincatz"},"content":"     * to the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-13"},{"lineNumber":186,"author":{"gitId":"JeffZincatz"},"content":"     * Flip a dialog box such that the image on the left to differentiate between user input and memocatâ€™s output.","lastModifiedDate":"2021-09-13"},{"lineNumber":187,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":188,"author":{"gitId":"JeffZincatz"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":189,"author":{"gitId":"JeffZincatz"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2021-08-30"},{"lineNumber":190,"author":{"gitId":"JeffZincatz"},"content":"        Label memocatText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2021-09-13"},{"lineNumber":191,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":192,"author":{"gitId":"JeffZincatz"},"content":"        ImageView userImageView \u003d new ImageView(user);","lastModifiedDate":"2021-08-30"},{"lineNumber":193,"author":{"gitId":"JeffZincatz"},"content":"        ImageView memocatImageView \u003d new ImageView(memocat);","lastModifiedDate":"2021-09-13"},{"lineNumber":194,"author":{"gitId":"JeffZincatz"},"content":"        userImageView.setClip(new Circle());","lastModifiedDate":"2021-08-30"},{"lineNumber":195,"author":{"gitId":"JeffZincatz"},"content":"        memocatImageView.setClip(new Circle());","lastModifiedDate":"2021-09-13"},{"lineNumber":196,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":197,"author":{"gitId":"JeffZincatz"},"content":"        if (userInput.getText().equals(\"bye\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":198,"author":{"gitId":"JeffZincatz"},"content":"            exitApp();","lastModifiedDate":"2021-09-13"},{"lineNumber":199,"author":{"gitId":"JeffZincatz"},"content":"            return;","lastModifiedDate":"2021-09-13"},{"lineNumber":200,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":201,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":202,"author":{"gitId":"JeffZincatz"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":203,"author":{"gitId":"JeffZincatz"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2021-08-30"},{"lineNumber":204,"author":{"gitId":"JeffZincatz"},"content":"                DialogBox.getmemocatDialog(memocatText, new ImageView(memocat))","lastModifiedDate":"2021-09-13"},{"lineNumber":205,"author":{"gitId":"JeffZincatz"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":206,"author":{"gitId":"JeffZincatz"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":207,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":208,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":209,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":210,"author":{"gitId":"JeffZincatz"},"content":"     * Adds user and MemoCat dialog for bye.","lastModifiedDate":"2021-09-14"},{"lineNumber":211,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":212,"author":{"gitId":"JeffZincatz"},"content":"     * @param dialogContainer The dialog container.","lastModifiedDate":"2021-09-13"},{"lineNumber":213,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":214,"author":{"gitId":"JeffZincatz"},"content":"    private void addByeDialog(VBox dialogContainer) {","lastModifiedDate":"2021-09-13"},{"lineNumber":215,"author":{"gitId":"JeffZincatz"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-13"},{"lineNumber":216,"author":{"gitId":"JeffZincatz"},"content":"                DialogBox.getUserDialog(new Label(\"bye\"), new ImageView(user)),","lastModifiedDate":"2021-09-13"},{"lineNumber":217,"author":{"gitId":"JeffZincatz"},"content":"                DialogBox.getmemocatDialog(new Label(\"Bye. See you next time!\"), new ImageView(memocat))","lastModifiedDate":"2021-09-13"},{"lineNumber":218,"author":{"gitId":"JeffZincatz"},"content":"        );","lastModifiedDate":"2021-09-13"},{"lineNumber":219,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":220,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":221,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":222,"author":{"gitId":"JeffZincatz"},"content":"     * Exits app after the stated seconds.","lastModifiedDate":"2021-09-14"},{"lineNumber":223,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":224,"author":{"gitId":"JeffZincatz"},"content":"     * @param seconds Number of seconds before exiting.","lastModifiedDate":"2021-09-13"},{"lineNumber":225,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":226,"author":{"gitId":"JeffZincatz"},"content":"    private void exitAfter(int seconds) {","lastModifiedDate":"2021-09-13"},{"lineNumber":227,"author":{"gitId":"JeffZincatz"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(seconds));","lastModifiedDate":"2021-09-13"},{"lineNumber":228,"author":{"gitId":"JeffZincatz"},"content":"        delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2021-09-13"},{"lineNumber":229,"author":{"gitId":"JeffZincatz"},"content":"        delay.play();","lastModifiedDate":"2021-09-13"},{"lineNumber":230,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":231,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":232,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":233,"author":{"gitId":"JeffZincatz"},"content":"     * Exits the app after 1 second.","lastModifiedDate":"2021-09-14"},{"lineNumber":234,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":235,"author":{"gitId":"JeffZincatz"},"content":"    private void exitApp() {","lastModifiedDate":"2021-09-13"},{"lineNumber":236,"author":{"gitId":"JeffZincatz"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-13"},{"lineNumber":237,"author":{"gitId":"JeffZincatz"},"content":"        addByeDialog(dialogContainer);","lastModifiedDate":"2021-09-13"},{"lineNumber":238,"author":{"gitId":"JeffZincatz"},"content":"        exitAfter(1);","lastModifiedDate":"2021-09-13"},{"lineNumber":239,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":240,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":241,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":242,"author":{"gitId":"JeffZincatz"},"content":"     * Generates a response to user input.","lastModifiedDate":"2021-09-14"},{"lineNumber":243,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":244,"author":{"gitId":"JeffZincatz"},"content":"     * @param input String of user input.","lastModifiedDate":"2021-08-30"},{"lineNumber":245,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":246,"author":{"gitId":"JeffZincatz"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":247,"author":{"gitId":"JeffZincatz"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":248,"author":{"gitId":"JeffZincatz"},"content":"            // end bot","lastModifiedDate":"2021-08-31"},{"lineNumber":249,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":250,"author":{"gitId":"JeffZincatz"},"content":"                // save all data","lastModifiedDate":"2021-08-31"},{"lineNumber":251,"author":{"gitId":"JeffZincatz"},"content":"                storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":252,"author":{"gitId":"JeffZincatz"},"content":"                return \"Bye. See you next time!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":253,"author":{"gitId":"JeffZincatz"},"content":"            } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":254,"author":{"gitId":"JeffZincatz"},"content":"                return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":255,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":256,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":257,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":258,"author":{"gitId":"JeffZincatz"},"content":"        switch (parser.getCommandAction(input)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":259,"author":{"gitId":"JeffZincatz"},"content":"        case \"list\":","lastModifiedDate":"2021-08-31"},{"lineNumber":260,"author":{"gitId":"JeffZincatz"},"content":"            // view list","lastModifiedDate":"2021-08-31"},{"lineNumber":261,"author":{"gitId":"JeffZincatz"},"content":"            return tasks.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":262,"author":{"gitId":"JeffZincatz"},"content":"        case \"done\":","lastModifiedDate":"2021-08-31"},{"lineNumber":263,"author":{"gitId":"JeffZincatz"},"content":"            return done(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":264,"author":{"gitId":"JeffZincatz"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-31"},{"lineNumber":265,"author":{"gitId":"JeffZincatz"},"content":"            return todo(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":266,"author":{"gitId":"JeffZincatz"},"content":"        case \"event\":","lastModifiedDate":"2021-08-31"},{"lineNumber":267,"author":{"gitId":"JeffZincatz"},"content":"            return event(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":268,"author":{"gitId":"JeffZincatz"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-31"},{"lineNumber":269,"author":{"gitId":"JeffZincatz"},"content":"            return deadline(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":270,"author":{"gitId":"JeffZincatz"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-31"},{"lineNumber":271,"author":{"gitId":"JeffZincatz"},"content":"            return delete(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":272,"author":{"gitId":"JeffZincatz"},"content":"        case \"find\":","lastModifiedDate":"2021-08-31"},{"lineNumber":273,"author":{"gitId":"JeffZincatz"},"content":"            return find(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":274,"author":{"gitId":"JeffZincatz"},"content":"        case \"sort\":","lastModifiedDate":"2021-09-06"},{"lineNumber":275,"author":{"gitId":"JeffZincatz"},"content":"            tasks.sortByTime();","lastModifiedDate":"2021-09-06"},{"lineNumber":276,"author":{"gitId":"JeffZincatz"},"content":"            return \"Your tasks have been sorted.\\n\" + tasks.toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":277,"author":{"gitId":"JeffZincatz"},"content":"        default:","lastModifiedDate":"2021-08-31"},{"lineNumber":278,"author":{"gitId":"JeffZincatz"},"content":"            // Message for unrecognised task type","lastModifiedDate":"2021-08-31"},{"lineNumber":279,"author":{"gitId":"JeffZincatz"},"content":"            return \"OH NO !!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-13"},{"lineNumber":280,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":281,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":282,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":283,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":284,"author":{"gitId":"JeffZincatz"},"content":"     * Responses for done command.","lastModifiedDate":"2021-09-14"},{"lineNumber":285,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":286,"author":{"gitId":"JeffZincatz"},"content":"     * @param input Input command string.","lastModifiedDate":"2021-08-31"},{"lineNumber":287,"author":{"gitId":"JeffZincatz"},"content":"     * @return String of response.","lastModifiedDate":"2021-08-31"},{"lineNumber":288,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":289,"author":{"gitId":"JeffZincatz"},"content":"    private String done(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":290,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":291,"author":{"gitId":"JeffZincatz"},"content":"            int doneIndex \u003d parser.getCommandActionIndex(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":292,"author":{"gitId":"JeffZincatz"},"content":"            assert doneIndex \u003c\u003d tasks.size() : \"Task index out of bound\";","lastModifiedDate":"2021-09-06"},{"lineNumber":293,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":294,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":295,"author":{"gitId":"JeffZincatz"},"content":"                tasks.get(doneIndex - 1).markAsDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":296,"author":{"gitId":"JeffZincatz"},"content":"                storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":297,"author":{"gitId":"JeffZincatz"},"content":"                return \"Nice! I\u0027ve marked this task as done:\\n\\t\" + tasks.get(doneIndex - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":298,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":299,"author":{"gitId":"JeffZincatz"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":300,"author":{"gitId":"JeffZincatz"},"content":"                // Task at doneIndex does not exist","lastModifiedDate":"2021-08-31"},{"lineNumber":301,"author":{"gitId":"JeffZincatz"},"content":"                return \"Task \" + doneIndex + \" does not exist. Please check your task list!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":302,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":303,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":304,"author":{"gitId":"JeffZincatz"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":305,"author":{"gitId":"JeffZincatz"},"content":"            // command done is not followed by a number","lastModifiedDate":"2021-08-31"},{"lineNumber":306,"author":{"gitId":"JeffZincatz"},"content":"            return \"OH NO!!! The index of a task done must be an integer.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":307,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":308,"author":{"gitId":"JeffZincatz"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":309,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":310,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":311,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":312,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":313,"author":{"gitId":"JeffZincatz"},"content":"     * Responses for todo command.","lastModifiedDate":"2021-09-14"},{"lineNumber":314,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":315,"author":{"gitId":"JeffZincatz"},"content":"     * @param input Input command string.","lastModifiedDate":"2021-08-31"},{"lineNumber":316,"author":{"gitId":"JeffZincatz"},"content":"     * @return String of response.","lastModifiedDate":"2021-08-31"},{"lineNumber":317,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":318,"author":{"gitId":"JeffZincatz"},"content":"    private String todo(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":319,"author":{"gitId":"JeffZincatz"},"content":"        Task todo;","lastModifiedDate":"2021-08-31"},{"lineNumber":320,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":321,"author":{"gitId":"JeffZincatz"},"content":"            todo \u003d parser.commandToTask(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":322,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":323,"author":{"gitId":"JeffZincatz"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":324,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":325,"author":{"gitId":"JeffZincatz"},"content":"        tasks.add(todo);","lastModifiedDate":"2021-08-31"},{"lineNumber":326,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":327,"author":{"gitId":"JeffZincatz"},"content":"            storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":328,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":329,"author":{"gitId":"JeffZincatz"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":330,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":331,"author":{"gitId":"JeffZincatz"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + todo","lastModifiedDate":"2021-08-31"},{"lineNumber":332,"author":{"gitId":"JeffZincatz"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":333,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":334,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":335,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":336,"author":{"gitId":"JeffZincatz"},"content":"     * Responses for event command.","lastModifiedDate":"2021-09-14"},{"lineNumber":337,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":338,"author":{"gitId":"JeffZincatz"},"content":"     * @param input Input command string.","lastModifiedDate":"2021-08-31"},{"lineNumber":339,"author":{"gitId":"JeffZincatz"},"content":"     * @return String of response.","lastModifiedDate":"2021-08-31"},{"lineNumber":340,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":341,"author":{"gitId":"JeffZincatz"},"content":"    private String event(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":342,"author":{"gitId":"JeffZincatz"},"content":"        Task event;","lastModifiedDate":"2021-08-31"},{"lineNumber":343,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":344,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":345,"author":{"gitId":"JeffZincatz"},"content":"            event \u003d parser.commandToTask(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":346,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":347,"author":{"gitId":"JeffZincatz"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":348,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":349,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":350,"author":{"gitId":"JeffZincatz"},"content":"        tasks.add(event);","lastModifiedDate":"2021-08-31"},{"lineNumber":351,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":352,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":353,"author":{"gitId":"JeffZincatz"},"content":"            storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":354,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":355,"author":{"gitId":"JeffZincatz"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":356,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":357,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":358,"author":{"gitId":"JeffZincatz"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + event","lastModifiedDate":"2021-08-31"},{"lineNumber":359,"author":{"gitId":"JeffZincatz"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":360,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":361,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":362,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":363,"author":{"gitId":"JeffZincatz"},"content":"     * Responses for deadline command.","lastModifiedDate":"2021-09-14"},{"lineNumber":364,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":365,"author":{"gitId":"JeffZincatz"},"content":"     * @param input Input command string.","lastModifiedDate":"2021-08-31"},{"lineNumber":366,"author":{"gitId":"JeffZincatz"},"content":"     * @return String of response.","lastModifiedDate":"2021-08-31"},{"lineNumber":367,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":368,"author":{"gitId":"JeffZincatz"},"content":"    private String deadline(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":369,"author":{"gitId":"JeffZincatz"},"content":"        Task deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":370,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":371,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":372,"author":{"gitId":"JeffZincatz"},"content":"            deadline \u003d parser.commandToTask(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":373,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":374,"author":{"gitId":"JeffZincatz"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":375,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":376,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":377,"author":{"gitId":"JeffZincatz"},"content":"        tasks.add(deadline);","lastModifiedDate":"2021-08-31"},{"lineNumber":378,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":379,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":380,"author":{"gitId":"JeffZincatz"},"content":"            storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":381,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":382,"author":{"gitId":"JeffZincatz"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":383,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":384,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":385,"author":{"gitId":"JeffZincatz"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\" + deadline","lastModifiedDate":"2021-08-31"},{"lineNumber":386,"author":{"gitId":"JeffZincatz"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":387,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":388,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":389,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":390,"author":{"gitId":"JeffZincatz"},"content":"     * Responses for delete command.","lastModifiedDate":"2021-09-14"},{"lineNumber":391,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":392,"author":{"gitId":"JeffZincatz"},"content":"     * @param input Input command string.","lastModifiedDate":"2021-08-31"},{"lineNumber":393,"author":{"gitId":"JeffZincatz"},"content":"     * @return String of response.","lastModifiedDate":"2021-08-31"},{"lineNumber":394,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":395,"author":{"gitId":"JeffZincatz"},"content":"    private String delete(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":396,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":397,"author":{"gitId":"JeffZincatz"},"content":"            int deleteIndex \u003d parser.getCommandActionIndex(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":398,"author":{"gitId":"JeffZincatz"},"content":"            assert deleteIndex \u003c\u003d tasks.size() : \"Task index out of bound\";","lastModifiedDate":"2021-09-06"},{"lineNumber":399,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":400,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":401,"author":{"gitId":"JeffZincatz"},"content":"                Task removed \u003d tasks.remove(deleteIndex - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":402,"author":{"gitId":"JeffZincatz"},"content":"                storage.writeTasksToData(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":403,"author":{"gitId":"JeffZincatz"},"content":"                return \"Noted. I\u0027ve removed this task:\\n\\t\" + removed;","lastModifiedDate":"2021-08-31"},{"lineNumber":404,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":405,"author":{"gitId":"JeffZincatz"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":406,"author":{"gitId":"JeffZincatz"},"content":"                // Task at deleteIndex does not exist","lastModifiedDate":"2021-08-31"},{"lineNumber":407,"author":{"gitId":"JeffZincatz"},"content":"                return \"Task \" + deleteIndex + \" does not exist. Please check your task list!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":408,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":409,"author":{"gitId":"JeffZincatz"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":410,"author":{"gitId":"JeffZincatz"},"content":"            // command delete is not followed by a number","lastModifiedDate":"2021-08-31"},{"lineNumber":411,"author":{"gitId":"JeffZincatz"},"content":"            return \"OH NO!!! The index of a task to be deleted must be an integer.\";","lastModifiedDate":"2021-09-13"},{"lineNumber":412,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":413,"author":{"gitId":"JeffZincatz"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":414,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":415,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":416,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":417,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":418,"author":{"gitId":"JeffZincatz"},"content":"     * Finds tasks from task list that contains a given pattern and print the tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":419,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":420,"author":{"gitId":"JeffZincatz"},"content":"     * @param input Input command string.","lastModifiedDate":"2021-08-31"},{"lineNumber":421,"author":{"gitId":"JeffZincatz"},"content":"     * @return String of response.","lastModifiedDate":"2021-08-31"},{"lineNumber":422,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":423,"author":{"gitId":"JeffZincatz"},"content":"    private String find(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":424,"author":{"gitId":"JeffZincatz"},"content":"        String pattern \u003d input.split(\"find \", 2)[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":425,"author":{"gitId":"JeffZincatz"},"content":"        return tasks.getMatchedTasksString(pattern);","lastModifiedDate":"2021-08-31"},{"lineNumber":426,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":427,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"JeffZincatz":427}},{"path":"src/main/java/memocat/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.Deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.Event;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.Todo;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":" * A parser to parse memocat commands.","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"     * Gets the action specified by the command.","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"     * A valid action can be list, done, todo, event, deadline, delete.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command to be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"     * @return The action of the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"    public String getCommandAction(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"        return command.split(\" \", 2)[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"     * Gets the task index of done and delete action.","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command to be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"     * @return The index of the task of the command, -1 if is invalid action.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"    public int getCommandActionIndex(String command) throws MemoCatException {","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"        switch (getCommandAction(command)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"        case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"            return Integer.parseInt(command.substring(5));","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"            return Integer.parseInt(command.substring(7));","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"            throw new MemoCatException(\"Invalid action. Index cannot be parsed from the command.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"     * Gets the relevant task information from the command.","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command to be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"     * @return A Task created from the command.","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"    public Task commandToTask(String command) throws MemoCatException {","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"        switch (getCommandAction(command)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"            return commandToTodo(command);","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"        case \"event\":","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"            return commandToEvent(command);","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"            return commandToDeadline(command);","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"        default:","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"            throw new MemoCatException(\"Invalid action. Task cannot be parsed from the command.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"JeffZincatz"},"content":"     * Gets the relevant todo information from the command.","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command to be parsed.","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"JeffZincatz"},"content":"     * @return A Todo created from the command.","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"JeffZincatz"},"content":"    private Todo commandToTodo(String command) throws MemoCatException {","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"JeffZincatz"},"content":"        String[] todoDetails \u003d command.split(\" \", 2);","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"JeffZincatz"},"content":"        assert todoDetails.length \u003d\u003d 2 : \"Invalid todo format\";","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"JeffZincatz"},"content":"        String todoDescription;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"JeffZincatz"},"content":"            todoDescription \u003d todoDetails[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"JeffZincatz"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"JeffZincatz"},"content":"            // no description","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"JeffZincatz"},"content":"            String message \u003d \"â˜¹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"JeffZincatz"},"content":"            throw new MemoCatException(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"JeffZincatz"},"content":"        return new Todo(todoDescription);","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"JeffZincatz"},"content":"     * Gets the relevant event information from the command.","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command to be parsed.","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"JeffZincatz"},"content":"     * @return An Event created from the command.","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"JeffZincatz"},"content":"    private Event commandToEvent(String command) throws MemoCatException {","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"JeffZincatz"},"content":"        String[] eventDetails \u003d command.split(\" /at \");","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"JeffZincatz"},"content":"        assert eventDetails.length \u003d\u003d 2 : \"Invalid event format\";","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"JeffZincatz"},"content":"        LocalDate at;","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"JeffZincatz"},"content":"            at \u003d this.stringToLocalDate(eventDetails[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"JeffZincatz"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"JeffZincatz"},"content":"            // no /at found in command","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"JeffZincatz"},"content":"            String message \u003d \"OH NO!!! The time of an event cannot be empty.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"JeffZincatz"},"content":"            throw new MemoCatException(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"JeffZincatz"},"content":"        String eventDescription;","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"JeffZincatz"},"content":"            eventDescription \u003d eventDetails[0].split(\"event \")[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"JeffZincatz"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"JeffZincatz"},"content":"            // no event description","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"JeffZincatz"},"content":"            String message \u003d \"OH NO!!! The description of an event cannot be empty.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"JeffZincatz"},"content":"            throw new MemoCatException(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"JeffZincatz"},"content":"        return new Event(eventDescription, at);","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"JeffZincatz"},"content":"     * Gets the relevant deadline information from the command.","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"JeffZincatz"},"content":"     * @param command The command to be parsed.","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"JeffZincatz"},"content":"     * @return A Deadline created from the command.","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"JeffZincatz"},"content":"    private Deadline commandToDeadline(String command) throws MemoCatException {","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"JeffZincatz"},"content":"        String[] deadlineDetails \u003d command.split(\" /by \");","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"JeffZincatz"},"content":"        assert deadlineDetails.length \u003d\u003d 2 : \"Invalid deadline format\";","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"JeffZincatz"},"content":"        LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"JeffZincatz"},"content":"            by \u003d this.stringToLocalDate(deadlineDetails[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"JeffZincatz"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"JeffZincatz"},"content":"            // no /by found in command","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"JeffZincatz"},"content":"            String message \u003d \"â˜¹ OOPS!!! The time of a deadline cannot be empty.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"JeffZincatz"},"content":"            throw new MemoCatException(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"JeffZincatz"},"content":"        String deadlineDescription;","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"JeffZincatz"},"content":"            deadlineDescription \u003d deadlineDetails[0].split(\"deadline \")[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"JeffZincatz"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"JeffZincatz"},"content":"            // no deadline description","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"JeffZincatz"},"content":"            String message \u003d \"â˜¹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"JeffZincatz"},"content":"            throw new MemoCatException(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"JeffZincatz"},"content":"        return new Deadline(deadlineDescription, by);","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"JeffZincatz"},"content":"     * Parses a string of time into LocalDate.","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"JeffZincatz"},"content":"     * @param str The time string.","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"JeffZincatz"},"content":"     * @return The LocalDate corresponding to the string.","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"JeffZincatz"},"content":"     * @throws MemoCatException The exception that contains the message to be printed.","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"JeffZincatz"},"content":"    public LocalDate stringToLocalDate(String str) throws MemoCatException {","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"JeffZincatz"},"content":"            return LocalDate.parse(str);","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"JeffZincatz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"JeffZincatz"},"content":"            String message \u003d \"The time format is invalid. Please use the format YYYY-MM-DD\";","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"JeffZincatz"},"content":"            throw new MemoCatException(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":162,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"JeffZincatz"},"content":"     * Formats LocalDate into MMMM d yyyy format.","lastModifiedDate":"2021-09-14"},{"lineNumber":167,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"JeffZincatz"},"content":"     * @param localDate The LocalDate to be formatted.","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"JeffZincatz"},"content":"     * @return The formatted LocalDate string.","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"JeffZincatz"},"content":"    public String formatLocalDate(LocalDate localDate) {","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"JeffZincatz"},"content":"        return localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"JeffZincatz":174}},{"path":"src/main/java/memocat/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.Deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.Event;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.Todo;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":" * A collection of storage io methods.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"     * The file path of the data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"     * The file name of the data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"    private final String fileName;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"     * Parser instance to handle parsing.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"     * Constructs a storage instance to handle task storage.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"     * @param filePath Path to the data save file directory.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"     * @param fileName File name of the data save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"    public Storage(String filePath, String fileName) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"     * Reads data from the data file memocat.txt.","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"     * @return A TaskList of tasks read.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"    public TaskList readData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"        File dataFile \u003d new File(this.filePath + this.fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"            Scanner fileScanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"                String data \u003d fileScanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"                tasks.add(dataStringToTask(data));","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"            fileScanner.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"JeffZincatz"},"content":"            return new TaskList(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"JeffZincatz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"JeffZincatz"},"content":"            // return empty array list of task","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"JeffZincatz"},"content":"            return new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"JeffZincatz"},"content":"     * Converts a data string read from memocat.txt into task.","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"JeffZincatz"},"content":"     * @return The task represented by the string.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"JeffZincatz"},"content":"    private Task dataStringToTask(String data) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"JeffZincatz"},"content":"        String[] taskInfo \u003d data.split(\" [|] \");","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"JeffZincatz"},"content":"        assert taskInfo.length \u003e\u003d 3 : \"Invalid data read\";","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"JeffZincatz"},"content":"        String taskType \u003d taskInfo[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"JeffZincatz"},"content":"        Task task;","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"JeffZincatz"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"JeffZincatz"},"content":"        case \"T\":","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"JeffZincatz"},"content":"            // task is todo","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"JeffZincatz"},"content":"            assert taskInfo.length \u003d\u003d 3 : \"Invalid todo format\";","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"JeffZincatz"},"content":"            task \u003d new Todo(taskInfo[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"JeffZincatz"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"JeffZincatz"},"content":"        case \"D\":","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"JeffZincatz"},"content":"            // task is deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"JeffZincatz"},"content":"            assert taskInfo.length \u003d\u003d 4 : \"Invalid todo format\";","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"JeffZincatz"},"content":"            LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"JeffZincatz"},"content":"                by \u003d parser.stringToLocalDate(taskInfo[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"JeffZincatz"},"content":"            } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"JeffZincatz"},"content":"                by \u003d LocalDate.now();","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"JeffZincatz"},"content":"            task \u003d new Deadline(taskInfo[2], by);","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"JeffZincatz"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"JeffZincatz"},"content":"        case \"E\":","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"JeffZincatz"},"content":"            // task is event","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"JeffZincatz"},"content":"            assert taskInfo.length \u003d\u003d 4 : \"Invalid todo format\";","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"JeffZincatz"},"content":"            LocalDate at;","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"JeffZincatz"},"content":"                at \u003d parser.stringToLocalDate(taskInfo[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"JeffZincatz"},"content":"            } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"JeffZincatz"},"content":"                at \u003d LocalDate.now();","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"JeffZincatz"},"content":"            task \u003d new Event(taskInfo[2], at);","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"JeffZincatz"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"JeffZincatz"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"JeffZincatz"},"content":"            // not of any task type","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"JeffZincatz"},"content":"            throw new IllegalArgumentException(\"Task type not recognized: \" + taskType);","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"JeffZincatz"},"content":"        if (Integer.parseInt(taskInfo[1]) \u003d\u003d 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"JeffZincatz"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"JeffZincatz"},"content":"        return task;","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"JeffZincatz"},"content":"     * Writes a list of tasks to the memocat.txt data file.","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"JeffZincatz"},"content":"     * @param tasks The list of tasks to be written.","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"JeffZincatz"},"content":"    public void writeTasksToData(TaskList tasks) throws MemoCatException {","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"JeffZincatz"},"content":"        Path dataFileFullPath \u003d Path.of(this.filePath + this.fileName);","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"JeffZincatz"},"content":"            ArrayList\u003cString\u003e tasksString \u003d tasks.toDataString();","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"JeffZincatz"},"content":"            Files.write(dataFileFullPath, tasksString);","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"JeffZincatz"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"JeffZincatz"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"JeffZincatz"},"content":"                Path dataFileDirectory \u003d Path.of(this.filePath);","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"JeffZincatz"},"content":"                Files.createDirectories(dataFileDirectory);","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"JeffZincatz"},"content":"                Files.createFile(dataFileFullPath);","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"JeffZincatz"},"content":"            } catch (IOException ioExp) {","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"JeffZincatz"},"content":"                throw new MemoCatException(\"Failed to create Directories/File: \" + ioExp.getMessage());","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"JeffZincatz":147}},{"path":"src/main/java/memocat/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":" * A collection of UI methods.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"    private final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"     * Prints a message that is enclosed by 2 horizontal lines.","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"     * @param message The message to be printed between 2 horizontal lines.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"        String horizontalLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"        System.out.println(horizontalLine + \"\\n\" + message + \"\\n\" + horizontalLine);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"     * Prints greeting message of MemoCat.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"    public void greet() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"        printMessage(logo + \"\\nWelcome! I\u0027m memocat\\nWhat can I do for you?\");","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"     * Gets the next line of input.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"     * @return The next line of input.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"    public String getNextLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"            return this.scanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"            printMessage(e.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"            return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"     * Exits message of ui.","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"    public void bye() {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"        this.scanner.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"        this.printMessage(\"Bye. See you next time!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"JeffZincatz":56}},{"path":"src/main/java/memocat/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat.task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"import memocat.Parser;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":" * A Deadline type task representation for memocat.","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"     * Creates a Deadline task.","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"     * @param by LocalTime that the deadline is due by.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + new Parser().formatLocalDate(by) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"        if (other instanceof Deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"            Deadline otherDdl \u003d (Deadline) other;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"            return this.description.equals(otherDdl.description)","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"                    \u0026\u0026 (this.isDone \u003d\u003d otherDdl.isDone) \u0026\u0026 this.by.equals(otherDdl.by);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"            // always put todo task before other types","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"            // do not sort it for now","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"            return -1;","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"            return this.by.compareTo(eventTask.at);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"            assert task instanceof Deadline : \"Invalid Task type: \" + task;","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"            return this.by.compareTo(deadlineTask.by);","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JeffZincatz":56}},{"path":"src/main/java/memocat/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat.task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"import memocat.Parser;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":" * A Todo type task representation for Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"     * Creates an Event task.","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"     * @param at LocalTime that the event will occur at.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + new Parser().formatLocalDate(at) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"        if (other instanceof Event) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"            Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"            return this.description.equals(otherEvent.description)","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"                    \u0026\u0026 (this.isDone \u003d\u003d otherEvent.isDone) \u0026\u0026 this.at.equals(otherEvent.at);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"            // always put todo task before other types","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"            // do not sort it for now","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"            return -1;","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"            Event eventTask \u003d (Event) task;","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"            return this.at.compareTo(eventTask.at);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"            assert task instanceof Deadline : \"Invalid Task type: \" + task;","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"            Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"            return this.at.compareTo(deadlineTask.by);","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JeffZincatz":55}},{"path":"src/main/java/memocat/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat.task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":" * A task representation for memocat.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"     * Creates a Task.","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"     * Gets status icon of this task.","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"     * @return \"X\" if this task is done, otherwise \" \".","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"     * Marks this task as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"     * Gets the done status of this task.","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"     * @return True if this task is done, false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"    public boolean getDoneStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"        if (other instanceof Task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"            Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"            return this.description.equals(otherTask.description) \u0026\u0026 (this.isDone \u003d\u003d otherTask.isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"    public abstract int compareTo(Task task);","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JeffZincatz":61}},{"path":"src/main/java/memocat/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat.task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":" * An array list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"     * Creates an empty list of task.","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"     * Creates a list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"     * @param tasks ArrayList of Tasks to create the task list from.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"        this.list \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"        return list.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"    public Task remove(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"        return list.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"        return list.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"        return list.isEmpty();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"    public int size() {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"        return list.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"    public Object[] toArray() {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"        return list.toArray();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"        if (!list.isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"            result.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"            result.append(1).append(\". \").append(list.get(0));","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"            for (int i \u003d 1; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"                result.append(\"\\n\").append(i + 1).append(\". \").append(list.get(i));","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"JeffZincatz"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"JeffZincatz"},"content":"            result.append(\"There is not task yet. Try to add a task first.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"JeffZincatz"},"content":"        return result.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"JeffZincatz"},"content":"     * Converts the task list into array list of string.","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"JeffZincatz"},"content":"     * @return Array list of task strings.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"JeffZincatz"},"content":"    public ArrayList\u003cString\u003e toDataString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"JeffZincatz"},"content":"        ArrayList\u003cString\u003e dataStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"JeffZincatz"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"JeffZincatz"},"content":"            dataStrings.add(taskToDataString(task));","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"JeffZincatz"},"content":"        return dataStrings;","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"JeffZincatz"},"content":"     * Converts a data string read from memocat.txt into task.","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"JeffZincatz"},"content":"     * @return The task represented by the string.","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"JeffZincatz"},"content":"    private String taskToDataString(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"JeffZincatz"},"content":"        String taskType \u003d task.getClass().getSimpleName();","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"JeffZincatz"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"JeffZincatz"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"JeffZincatz"},"content":"        case \"Todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"JeffZincatz"},"content":"            // task is todo","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d \"T | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d task.isDone ? \"1 | \" : \"0 | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d task.description;","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"JeffZincatz"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"JeffZincatz"},"content":"        case \"Deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"JeffZincatz"},"content":"            // task is deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"JeffZincatz"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d \"D | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d deadline.isDone ? \"1 | \" : \"0 | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d deadline.description + \" | \" + deadline.by;","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"JeffZincatz"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"JeffZincatz"},"content":"        case \"Event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"JeffZincatz"},"content":"            // task is event","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"JeffZincatz"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d \"E | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d event.isDone ? \"1 | \" : \"0 | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"JeffZincatz"},"content":"            data +\u003d event.description + \" | \" + event.at;","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"JeffZincatz"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"JeffZincatz"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"JeffZincatz"},"content":"            // not of any task type","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"JeffZincatz"},"content":"            throw new IllegalArgumentException(\"Task type not recognized: \" + taskType);","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"JeffZincatz"},"content":"        return data;","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"JeffZincatz"},"content":"     * Gets a string of tasks matching the pattern.","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"JeffZincatz"},"content":"     * @param pattern The pattern to match.","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"JeffZincatz"},"content":"     * @return A string of tasks matching the patter.","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"JeffZincatz"},"content":"    public String getMatchedTasksString(String pattern) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"JeffZincatz"},"content":"        ArrayList\u003cTask\u003e matched \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"JeffZincatz"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"JeffZincatz"},"content":"            if (task.description.contains(pattern)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"JeffZincatz"},"content":"                matched.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"JeffZincatz"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"JeffZincatz"},"content":"        int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"JeffZincatz"},"content":"        if (!matched.isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"JeffZincatz"},"content":"            result.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"JeffZincatz"},"content":"            index \u003d list.indexOf(matched.get(0));","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"JeffZincatz"},"content":"            result.append(index + 1).append(\". \").append(matched.get(0));","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"JeffZincatz"},"content":"            for (int i \u003d 1; i \u003c matched.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"JeffZincatz"},"content":"                index \u003d list.indexOf(matched.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"JeffZincatz"},"content":"                result.append(\"\\n\").append(index + 1).append(\". \").append(matched.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"JeffZincatz"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"JeffZincatz"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"JeffZincatz"},"content":"            result.append(\"There is not task matched.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"JeffZincatz"},"content":"        return result.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":154,"author":{"gitId":"JeffZincatz"},"content":"     * Sorts the tasks by time.","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"JeffZincatz"},"content":"     * Todo tasks are not sorted and always put in front.","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"JeffZincatz"},"content":"    public void sortByTime() {","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"JeffZincatz"},"content":"        Collections.\u003cTask\u003esort(list);","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"JeffZincatz":161}},{"path":"src/main/java/memocat/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"package memocat.task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":" * A Todo type task representation for memocat.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"     * Creates a Todo task.","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"     * @param description Description of the todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"        if (other instanceof Todo) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"            Todo otherTodo \u003d (Todo) other;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"            return this.description.equals(otherTodo.description) \u0026\u0026 (this.isDone \u003d\u003d otherTodo.isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"        // always put todo task before other types","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"        // do not sort it for now","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"        return -1;","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"JeffZincatz":37}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"import memocat.MemoCatException;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"import memocat.Parser;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"import memocat.task.Deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"    private static final Parser p \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"    public void getCommandAction_allCommand_commandStringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"        String command1 \u003d \"todo junit test\";","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"        String command2 \u003d \"event junit test 2 /at 2021-08-25\";","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"        String command3 \u003d \"deadline junit test 3 /at 2021-08-26\";","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"        String command4 \u003d \"notRecognized command\";","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"JeffZincatz"},"content":"        Assertions.assertEquals(\"todo\", p.getCommandAction(command1));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"JeffZincatz"},"content":"        Assertions.assertEquals(\"event\", p.getCommandAction(command2));","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"JeffZincatz"},"content":"        Assertions.assertEquals(\"deadline\", p.getCommandAction(command3));","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"JeffZincatz"},"content":"        Assertions.assertEquals(\"notRecognized\", p.getCommandAction(command4));","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"JeffZincatz"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"JeffZincatz"},"content":"    public void getCommandActionIndex_validCommand_indexReturned() throws MemoCatException {","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"JeffZincatz"},"content":"        String command1 \u003d \"done 7\";","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"JeffZincatz"},"content":"        String command2 \u003d \"delete 3\";","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"JeffZincatz"},"content":"        Assertions.assertEquals(7, p.getCommandActionIndex(command1));","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"JeffZincatz"},"content":"        Assertions.assertEquals(3, p.getCommandActionIndex(command2));","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"JeffZincatz"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"JeffZincatz"},"content":"    public void getCommandActionIndex_invalidAction_throwmemoCatException() {","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"JeffZincatz"},"content":"        String command \u003d \"invalid command\";","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"JeffZincatz"},"content":"        Assertions.assertThrows(MemoCatException.class, () -\u003e p.getCommandActionIndex(command));","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"JeffZincatz"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"JeffZincatz"},"content":"    public void commandToTask_testCommand_convertToTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"JeffZincatz"},"content":"        String command \u003d \"deadline cs2103t ip /by 2021-08-24\";","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"JeffZincatz"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"JeffZincatz"},"content":"            Assertions.assertEquals(new Deadline(\"cs2103t ip\", p.stringToLocalDate(\"2021-08-24\")),","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"JeffZincatz"},"content":"                    p.commandToTask(command));","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"JeffZincatz"},"content":"        } catch (MemoCatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"JeffZincatz"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"JeffZincatz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"JeffZincatz"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"JeffZincatz"},"content":"    public void formatLocalDate_testDate_formatted() {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"JeffZincatz"},"content":"        LocalDate ld \u003d LocalDate.parse(\"2021-08-24\");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"JeffZincatz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"JeffZincatz"},"content":"        Assertions.assertEquals(\"Aug 24 2021\", p.formatLocalDate(ld));","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"JeffZincatz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"JeffZincatz"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"JeffZincatz":64}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JeffZincatz"},"content":"not a command","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"JeffZincatz"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"JeffZincatz"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"JeffZincatz"},"content":"todo test 1","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"JeffZincatz"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"JeffZincatz"},"content":"event /at 1pm today","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"JeffZincatz"},"content":"event test 2 /at 1pm today","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"JeffZincatz"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"JeffZincatz"},"content":"deadline /by 9am tmr","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"JeffZincatz"},"content":"deadline test 3 /by 9am tmr","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"JeffZincatz"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"JeffZincatz"},"content":"done abc","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"JeffZincatz"},"content":"done 123","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"JeffZincatz"},"content":"done 99","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"JeffZincatz"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"JeffZincatz"},"content":"delete","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"JeffZincatz"},"content":"delete abc","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"JeffZincatz"},"content":"delete 123","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"JeffZincatz"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"JeffZincatz"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"JeffZincatz"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"JeffZincatz":21}}]
