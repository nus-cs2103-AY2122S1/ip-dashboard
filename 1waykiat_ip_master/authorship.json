[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"1waykiat"},"content":"    mainClassName \u003d \"Duke\"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"1waykiat":1}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"T/X/homework","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"E/ /Welcome party/25 Aug","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"D/ /iP/2021-09-05","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"T/ /hw","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"1waykiat":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"import duke.error.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import duke.general.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"import duke.general.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import duke.general.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"import duke.general.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":" * Chatbot that helps you form a task list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"    private Tasklist tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"     * Initializes the Duke chatbot program","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"     * @param filePath File path to save the data files of the Tasklist to","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"        tasks \u003d new Tasklist(storage.loadSave());","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"1waykiat"},"content":"     * Run the main program","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"1waykiat"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"1waykiat"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"1waykiat"},"content":"        while (ui.getLoop()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"1waykiat"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"1waykiat"},"content":"                String fullCommand \u003d ui.readInput();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"1waykiat"},"content":"                Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"1waykiat"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"1waykiat"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"1waykiat"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"1waykiat"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"1waykiat"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"1waykiat":44}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import duke.error.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"import duke.general.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import duke.general.TaskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"import duke.general.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"import duke.general.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":" * Command for the program to add a task","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"    private TaskType type;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"    private String[] input;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"     * Constructs the AddCommand object","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"     * @param t Task type","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"     * @param inputSplit Input by user","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"    public AddCommand(TaskType t, String[] inputSplit) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"        this.type \u003d t;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"        this.input \u003d inputSplit;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"1waykiat"},"content":"    public void execute(Tasklist tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"1waykiat"},"content":"        Task t \u003d tasks.addTask(this.type, this.input);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"1waykiat"},"content":"        storage.appendSave(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"1waykiat"},"content":"        ui.addResponse(t, tasks.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":33}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import duke.general.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"import duke.general.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import duke.general.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":" * Command for the program to exit","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"    public void execute(Tasklist tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"        ui.byeResponse();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"        ui.setLoop();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":17}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import duke.error.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"import duke.general.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import duke.general.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"import duke.general.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":" * Class to deal with the actions and method calls to be done for different commands","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"    public abstract void execute(Tasklist tasks, Storage storage, Ui ui) throws DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":13}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import duke.general.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"import duke.general.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import duke.general.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":" * Command for the program to delete a task","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"    private String[] input;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"    public DeleteCommand(String[] input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"    public void execute(Tasklist tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"        Task t \u003d tasks.deleteTask(this.input);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"        if (t !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"            storage.modifySave(tasks.getList());","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"            ui.deleteResponse(t, tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":26}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import duke.error.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"import duke.general.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import duke.general.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"import duke.general.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":" * Command for the program to mark a task as completed","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"    private String[] input;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"    public DoneCommand(String[] input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"    public void execute(Tasklist tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"        Task t \u003d tasks.doneTask(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"        if (t !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"            storage.modifySave(tasks.getList());","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"            ui.doneResponse(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":27}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import duke.general.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"import duke.general.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import duke.general.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":" * Command that is being sent when the input is incorrect","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"    public void execute(Tasklist tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"        System.out.println(\"Command inputted is not a valid command!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":15}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import duke.error.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"import duke.general.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"import duke.general.Tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"import duke.general.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":" * Command to find certain keywords in list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"    private String[] input;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"    public FindCommand(String[] inputSplit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"        this.input \u003d inputSplit;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"    public void execute(Tasklist tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"        ArrayList\u003cTask\u003e foundList \u003d tasks.findTasks(input[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"        ui.findResponse(foundList);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"1waykiat":26}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import duke.general.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"import duke.general.Tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import duke.general.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":" * Command to print out the Tasklist to the user","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"    public void execute(Tasklist tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"        ui.showList(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":16}},{"path":"src/main/java/duke/error/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.error;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":" * Exceptions that can occur specifically in the Duke program.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"     * Constructor of the duke.error.DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"     * @param message Message to be printed out to user when error has occurred.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"1waykiat":14}},{"path":"src/main/java/duke/general/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.general;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"import duke.command.ErrorCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"     * Takes in a String as input and parses it give back a Command","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"     * @param fullCommand String input by the user","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"     * @return Command created based on input by user","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"    public Command parse(String fullCommand) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"        String[] inputSplit \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"        Command c \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"            switch(inputSplit[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"1waykiat"},"content":"                c \u003d new AddCommand(TaskType.TODO, inputSplit);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"1waykiat"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"1waykiat"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"1waykiat"},"content":"                c \u003d new AddCommand(TaskType.DEADLINE, inputSplit);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"1waykiat"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"1waykiat"},"content":"            case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"1waykiat"},"content":"                c \u003d new AddCommand(TaskType.EVENT, inputSplit);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"1waykiat"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"1waykiat"},"content":"            case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"1waykiat"},"content":"                c \u003d new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"1waykiat"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"1waykiat"},"content":"            case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"1waykiat"},"content":"                c \u003d new DoneCommand(inputSplit);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"1waykiat"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"1waykiat"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"1waykiat"},"content":"                c \u003d new DeleteCommand(inputSplit);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"1waykiat"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"1waykiat"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"1waykiat"},"content":"                c \u003d new ByeCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"1waykiat"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"1waykiat"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"1waykiat"},"content":"                c \u003d new FindCommand(inputSplit);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"1waykiat"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"1waykiat"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"1waykiat"},"content":"                c \u003d new ErrorCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"1waykiat"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"1waykiat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"1waykiat"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"1waykiat"},"content":"        return c;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":58}},{"path":"src/main/java/duke/general/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.general;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"    private ArrayList\u003cTask\u003e storedList;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"     * Constructs the Storage object meant for the saving and loading of files","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"1waykiat"},"content":"     * @param filePath","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"1waykiat"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"1waykiat"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"1waykiat"},"content":"        storedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"1waykiat"},"content":"     * Load tasks stored from the save file to load back the saved task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"1waykiat"},"content":"     * @return ArrayList of tasks that was previously saved.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"1waykiat"},"content":"    public ArrayList\u003cTask\u003e loadSave() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"1waykiat"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"1waykiat"},"content":"            Files.createDirectories(Paths.get(\"data/\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"1waykiat"},"content":"            File f \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"1waykiat"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"1waykiat"},"content":"                System.out.println(\"No save file found. New file created.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"1waykiat"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"1waykiat"},"content":"                System.out.println(\"Save file found and restored\");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"1waykiat"},"content":"                Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"1waykiat"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"1waykiat"},"content":"                    String[] taskLine \u003d s.nextLine().split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"1waykiat"},"content":"                    switch (taskLine[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"1waykiat"},"content":"                    case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"1waykiat"},"content":"                        addToList(TaskType.TODO, taskLine);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"1waykiat"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"1waykiat"},"content":"                    case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"1waykiat"},"content":"                        addToList(TaskType.DEADLINE, taskLine);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"1waykiat"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"1waykiat"},"content":"                    case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"1waykiat"},"content":"                        addToList(TaskType.EVENT, taskLine);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"1waykiat"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"1waykiat"},"content":"                    default:","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"1waykiat"},"content":"                        System.out.println(\"Unexpected value obtained: \" + taskLine[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"1waykiat"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"1waykiat"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"1waykiat"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"1waykiat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"1waykiat"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"1waykiat"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"1waykiat"},"content":"        return this.storedList;","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"1waykiat"},"content":"     * Takes tasks in the saved file format and adds it to the storedList","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"1waykiat"},"content":"     * @param t Type of task being added","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"1waykiat"},"content":"     * @param line String[] containing data about the task","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"1waykiat"},"content":"    public void addToList(TaskType t, String[] line) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"1waykiat"},"content":"        Task temp;","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"1waykiat"},"content":"        switch (t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"1waykiat"},"content":"        case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"1waykiat"},"content":"            temp \u003d new ToDo(line[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"1waykiat"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"1waykiat"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"1waykiat"},"content":"            temp \u003d new Deadline(line[2], line[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"1waykiat"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"1waykiat"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"1waykiat"},"content":"            temp \u003d new Event(line[2], line[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"1waykiat"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"1waykiat"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"1waykiat"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + t);","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"1waykiat"},"content":"        if (Objects.equals(line[1], \"X\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"1waykiat"},"content":"            temp.toggleCompleted();","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"1waykiat"},"content":"        this.storedList.add(temp);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"1waykiat"},"content":"     * Saves the task added into the save file","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"1waykiat"},"content":"     * @param t duke.task.Task to be saved into save file","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"1waykiat"},"content":"    public void appendSave(Task t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"1waykiat"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"1waykiat"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"1waykiat"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"1waykiat"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"1waykiat"},"content":"            fw.write((sc.hasNextLine() ? System.lineSeparator() : \"\")","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"1waykiat"},"content":"                    + t.getType() + \"/\" + t.getCompletion() + \"/\" + t.getName()","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"1waykiat"},"content":"                    + (t.getType().equals(\"T\") ? \"\" : \"/\" + t.getInfo()));","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"1waykiat"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"1waykiat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"1waykiat"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"1waykiat"},"content":"     * Updates the save file by wiping the duke.txt and adding back all the tasks from the","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"1waykiat"},"content":"     * newList into duke.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"1waykiat"},"content":"     * @param newList The new task list after modifications (delete, done)","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"1waykiat"},"content":"    public void modifySave(ArrayList\u003cTask\u003e newList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"1waykiat"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"1waykiat"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"1waykiat"},"content":"            fw.write(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"1waykiat"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"1waykiat"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"1waykiat"},"content":"        for (Task task : newList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"1waykiat"},"content":"            appendSave(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":131}},{"path":"src/main/java/duke/general/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.general;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":5}},{"path":"src/main/java/duke/general/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.general;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import duke.error.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":" * Contains the task list, and has operations to add/delete from the list","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"public class Tasklist {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"     * Constructs the Tasklist based from a list provided","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"     * @param list list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"    public Tasklist(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"1waykiat"},"content":"     * Adds task based on the Type given and input to the tasklist, returns the task formed","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"1waykiat"},"content":"     * @param t Type of task","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"1waykiat"},"content":"     * @param inputSplit Additional info such as description, completion status etc.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"1waykiat"},"content":"     * @return duke.task.Task that was added to the duke.general.Tasklist","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"1waykiat"},"content":"    public Task addTask(TaskType t, String[] inputSplit) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"1waykiat"},"content":"        Task temp;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"1waykiat"},"content":"        if (inputSplit.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"1waykiat"},"content":"            throw new DukeException(\"Description of task cannot be empty!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"1waykiat"},"content":"        String input \u003d inputSplit[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"1waykiat"},"content":"        switch (t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"1waykiat"},"content":"        case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"1waykiat"},"content":"            temp \u003d new ToDo(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"1waykiat"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"1waykiat"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"1waykiat"},"content":"            if (input.split(\" /by \", 2).length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"1waykiat"},"content":"                throw new DukeException(\"duke.task.Deadline not specified!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"1waykiat"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"1waykiat"},"content":"            String desc \u003d input.split(\" /by \", 2)[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"1waykiat"},"content":"            String dead \u003d input.split(\" /by \", 2)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"1waykiat"},"content":"            temp \u003d new Deadline(desc, dead);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"1waykiat"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"1waykiat"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"1waykiat"},"content":"            if (input.split(\" /at \", 2).length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"1waykiat"},"content":"                throw new DukeException(\"Date of event not specified!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"1waykiat"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"1waykiat"},"content":"            String name \u003d input.split(\" /at \", 2)[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"1waykiat"},"content":"            String at \u003d input.split(\" /at \", 2)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"1waykiat"},"content":"            temp \u003d new Event(name, at);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"1waykiat"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"1waykiat"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"1waykiat"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + t);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"1waykiat"},"content":"        list.add(temp);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"1waykiat"},"content":"        return temp;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"1waykiat"},"content":"     * Marks a task as done from the Tasklist based on input given","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"1waykiat"},"content":"     * @param inputSplit input given by user","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"1waykiat"},"content":"     * @return Task that is mark as done, but null if Exception occurs","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"1waykiat"},"content":"     * @throws DukeException occurs when input is invalid","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"1waykiat"},"content":"    public Task doneTask(String[] inputSplit) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"1waykiat"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"1waykiat"},"content":"        if (inputSplit.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"1waykiat"},"content":"            throw new DukeException(\"Please enter the number of task to mark as completed!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"1waykiat"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"1waykiat"},"content":"            int index \u003d Integer.parseInt(inputSplit[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"1waykiat"},"content":"            if (index \u003e list.size() || index \u003c\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"1waykiat"},"content":"                throw new DukeException(\"That number is not in the list!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"1waykiat"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"1waykiat"},"content":"            task \u003d list.get(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"1waykiat"},"content":"            task.toggleCompleted();","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"1waykiat"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"1waykiat"},"content":"            System.out.println(\"Please input a proper number pls\");","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"1waykiat"},"content":"        return task;","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"1waykiat"},"content":"     * Deletes a task from the Tasklist based on input given","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"1waykiat"},"content":"     * @param inputSplit input given by user","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"1waykiat"},"content":"     * @return Task that is being deleted","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"1waykiat"},"content":"    public Task deleteTask(String[] inputSplit) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"1waykiat"},"content":"        Task t \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"1waykiat"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"1waykiat"},"content":"            int i \u003d Integer.parseInt(inputSplit[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"1waykiat"},"content":"            t \u003d list.get(i - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"1waykiat"},"content":"            list.remove(i - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"1waykiat"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"1waykiat"},"content":"            System.out.println(\"That is an invalid index!!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"1waykiat"},"content":"        return t;","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"1waykiat"},"content":"     * Finds tasks that are related to the keyword and returns them in a ArrayList","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"1waykiat"},"content":"     * @param keyword Keyword that user is searching for","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"1waykiat"},"content":"     * @return ArrayList of tasks that are related to the keyword","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"1waykiat"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"1waykiat"},"content":"        ArrayList\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"1waykiat"},"content":"        for (Task t : this.list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"1waykiat"},"content":"            if (t.getName().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"1waykiat"},"content":"                found.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"1waykiat"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"1waykiat"},"content":"        return found;","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"1waykiat"},"content":"    public int size() {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"1waykiat"},"content":"        return list.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"1waykiat"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"1waykiat"},"content":"        return list.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"1waykiat"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"1waykiat"},"content":"        return this.list;","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":132}},{"path":"src/main/java/duke/general/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.general;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"import duke.error.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":" * Deals with interactions with the user","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"    private Scanner textInput \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"    private boolean isLoop \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"     * Shows the welcome message to the user","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"1waykiat"},"content":"     * Takes in input from the user and returns a String of the input","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"1waykiat"},"content":"     * @return Input by the user","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"1waykiat"},"content":"    public String readInput() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"1waykiat"},"content":"        return textInput.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"1waykiat"},"content":"     * Shows response to the user for when a task is added","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"1waykiat"},"content":"     * @param t Task that is being added","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"1waykiat"},"content":"     * @param size Size of the tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"1waykiat"},"content":"    public void addResponse(Task t, int size) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"1waykiat"},"content":"        t.addResponse(size);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"1waykiat"},"content":"     * Shows response for done command","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"1waykiat"},"content":"     * @param t Task to be marked as done","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"1waykiat"},"content":"    public void doneResponse(Task t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"1waykiat"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"1waykiat"},"content":"        System.out.println(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"1waykiat"},"content":"     * Shows response for delete command","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"1waykiat"},"content":"     * @param t Task to be deleted","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"1waykiat"},"content":"     * @param list Tasklist to delete the task from","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"1waykiat"},"content":"    public void deleteResponse(Task t, Tasklist list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"1waykiat"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"1waykiat"},"content":"        System.out.println(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"1waykiat"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in your list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"1waykiat"},"content":"     * Shows the response for bye command","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"1waykiat"},"content":"    public void byeResponse() {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"1waykiat"},"content":"        System.out.println(\"Bye bye. Duke going to sleep now.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"1waykiat"},"content":"     * Shows the users what tasks in the tasklist matches their keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"1waykiat"},"content":"     * If there are no tasks in the list, informs the users of not finding any matches","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"1waykiat"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"1waykiat"},"content":"     * @param list List of tasks that have matches","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"1waykiat"},"content":"    public void findResponse(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"1waykiat"},"content":"        if (list.size() \u003e 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"1waykiat"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"1waykiat"},"content":"            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"1waykiat"},"content":"                Task task \u003d list.get(i - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"1waykiat"},"content":"                System.out.println(i + \".\" + task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"1waykiat"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"1waykiat"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"1waykiat"},"content":"            System.out.println(\"No matching tasks have been found :(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"1waykiat"},"content":"     * Displays the task list","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"1waykiat"},"content":"     * @param t Tasklist","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"1waykiat"},"content":"    public void showList(Tasklist t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"1waykiat"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"1waykiat"},"content":"            if (t.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"1waykiat"},"content":"                throw new DukeException(\"The list is empty!!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"1waykiat"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"1waykiat"},"content":"            System.out.println(\"Here are your tasks:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"1waykiat"},"content":"            for (int i \u003d 1; i \u003c\u003d t.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"1waykiat"},"content":"                Task task \u003d t.get(i - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"1waykiat"},"content":"                System.out.println(i + \".\" + task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"1waykiat"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"1waykiat"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"1waykiat"},"content":"            System.out.println(e.toString().split(\" \", 2)[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"1waykiat"},"content":"    public boolean getLoop() {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"1waykiat"},"content":"        return this.isLoop;","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"1waykiat"},"content":"    public void setLoop() {","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"1waykiat"},"content":"        this.isLoop \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":118}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":" * duke.task.Deadline encapsulates the name of the deadline as well as","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":" * when the task needs to be completed by.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"    private LocalDate doneBy;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"    private String by;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"     * Constructs duke.task.Deadline object with given name, and deadline of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"     * @param name The name of the duke.task.Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"     * @param by duke.task.Deadline of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"        this.doneBy \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"1waykiat"},"content":"     * Getter for the type of task","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"1waykiat"},"content":"     * @return String \"D\" for Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"1waykiat"},"content":"    public String getType() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"1waykiat"},"content":"        return \"D\";","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"1waykiat"},"content":"     * Getter for the additional information on the Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"1waykiat"},"content":"     * @return String with the deadline of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"1waykiat"},"content":"    public String getInfo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"1waykiat"},"content":"        return this.by;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"1waykiat"},"content":"     * Converts the deadline object into a string","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"1waykiat"},"content":"     * @return A string containing the type (duke.task.Deadline), completion status and time","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"1waykiat"},"content":"     * of the deadline to be done by.","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"1waykiat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"1waykiat"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + doneBy.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"1waykiat":53}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":" * duke.task.Event encapsulates the name of the event as well as the","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":" * when the event is occurring.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"    private String at;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"     * Construct duke.task.Event object with a given name, and time of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"     * @param name The name of the event","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"     * @param at Time at which event is held","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"    public Event(String name, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"    public String getType() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"        return \"E\";","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"1waykiat"},"content":"    public String getInfo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"1waykiat"},"content":"        return this.at;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"1waykiat"},"content":"     * Converts the event object into a string.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"1waykiat"},"content":"     * @return A string containing the type (event), completion status and time","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"1waykiat"},"content":"     * at which event is held.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"1waykiat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"1waykiat"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"1waykiat":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":" * Encapsulates the name and completion status of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"    private final String name;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"    private boolean completed;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"     * Constructs a duke.task.Task object that contains the name and completion status set to false.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"     * @param name The name of the duke.task.Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"        completed \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"     * Prints out the message to be shown when a new task has been added to the duke.task.Task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"     * @param size Total number of tasks in the list","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"    public void addResponse(int size) {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"1waykiat"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in your list.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"1waykiat"},"content":"    public String getName() {","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"1waykiat"},"content":"        return this.name;","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"1waykiat"},"content":"    public String getCompletion() {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"1waykiat"},"content":"        return (completed ? \"X\" : \" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"1waykiat"},"content":"     * Toggles the completion status.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"1waykiat"},"content":"    public void toggleCompleted() {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"1waykiat"},"content":"        this.completed \u003d !this.completed;","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"1waykiat"},"content":"    //TODO","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"1waykiat"},"content":"    public abstract String getType();","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"1waykiat"},"content":"    //TODO","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"1waykiat"},"content":"    public abstract String getInfo();","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"1waykiat"},"content":"     * Converts task into a string","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"1waykiat"},"content":"     * @return String containing completion status and name.","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"1waykiat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"1waykiat"},"content":"        return \"[\" + (completed ? \"X\" : \" \") + \"] \" + this.name;","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"1waykiat":58}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":" * Encapsulates the name of the todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"     * Constructs the Todo task with a name.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"     * @param name Name of the Todo task.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"    public String getType() {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"        return \"T\";","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"    public String getInfo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"        return null;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"1waykiat"},"content":"     * Converts the duke.task.ToDo task into a string","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"1waykiat"},"content":"     * @return String with the type of the task (todo) and the name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"1waykiat"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"1waykiat"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"1waykiat"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"1waykiat"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"1waykiat":34}},{"path":"src/test/java/duke/general/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.general;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"import duke.error.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"public class TasklistTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"1waykiat"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"1waykiat"},"content":"    public void testAddTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"1waykiat"},"content":"        ToDo t \u003d new ToDo(\"testing\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"1waykiat"},"content":"        Deadline d \u003d new Deadline(\"testing\", \"2020-03-01\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"1waykiat"},"content":"        Event e \u003d new Event(\"testing\", \"1 July\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"1waykiat"},"content":"        Tasklist list \u003d new Tasklist(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"1waykiat"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"1waykiat"},"content":"            list.addTask(TaskType.TODO, new String[] {\"T\", \"testing\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"1waykiat"},"content":"            list.addTask(TaskType.DEADLINE, new String[] {\"D\", \"testing /by 2020-03-01\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"1waykiat"},"content":"            list.addTask(TaskType.EVENT, new String[] {\"E\", \"testing /at 1 July\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"1waykiat"},"content":"            assertEquals(t.toString(), list.get(0).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"1waykiat"},"content":"            assertEquals(d.toString(), list.get(1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"1waykiat"},"content":"            assertEquals(e.toString(), list.get(2).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"1waykiat"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"1waykiat"},"content":"            System.out.println(\"no this no work\");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"1waykiat"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"1waykiat"},"content":"    public void addEmptyTaskInputException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"1waykiat"},"content":"        ToDo t \u003d new ToDo(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"1waykiat"},"content":"        Tasklist list \u003d new Tasklist(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"1waykiat"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"1waykiat"},"content":"            list.addTask(TaskType.TODO, new String[] {\"T\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"1waykiat"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"1waykiat"},"content":"            assertEquals(\"Description of task cannot be empty!\", e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"1waykiat"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"1waykiat"},"content":"    public void deleteTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"1waykiat"},"content":"        ToDo t \u003d new ToDo(\"testing\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"1waykiat"},"content":"        Deadline d \u003d new Deadline(\"testing\", \"2020-03-01\");","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"1waykiat"},"content":"        Event e \u003d new Event(\"testing\", \"1 July\");","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"1waykiat"},"content":"        Tasklist list \u003d new Tasklist(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"1waykiat"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"1waykiat"},"content":"            list.addTask(TaskType.TODO, new String[] {\"T\", \"testing\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"1waykiat"},"content":"            list.addTask(TaskType.DEADLINE, new String[] {\"D\", \"testing /by 2020-03-01\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"1waykiat"},"content":"            list.addTask(TaskType.EVENT, new String[] {\"E\", \"testing /at 1 July\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"1waykiat"},"content":"            list.deleteTask(new String[] {\"delete\", \"1\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"1waykiat"},"content":"            assertEquals(d.toString(), list.get(0).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"1waykiat"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"1waykiat"},"content":"            System.out.println(\"no this no work\");","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"1waykiat"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"1waykiat"},"content":"    public void deleteTaskNoIndexException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"1waykiat"},"content":"        ToDo t \u003d new ToDo(\"testing\");","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"1waykiat"},"content":"        Deadline d \u003d new Deadline(\"testing\", \"2020-03-01\");","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"1waykiat"},"content":"        Event e \u003d new Event(\"testing\", \"1 July\");","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"1waykiat"},"content":"        Tasklist list \u003d new Tasklist(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"1waykiat"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"1waykiat"},"content":"            list.addTask(TaskType.TODO, new String[] {\"T\", \"testing\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"1waykiat"},"content":"            list.addTask(TaskType.DEADLINE, new String[] {\"D\", \"testing /by 2020-03-01\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"1waykiat"},"content":"            list.addTask(TaskType.EVENT, new String[] {\"E\", \"testing /at 1 July\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"1waykiat"},"content":"            list.deleteTask(new String[] {\"delete\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"1waykiat"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"1waykiat"},"content":"            assertEquals(\"That is an invalid index!\", error.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"1waykiat"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":89}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"    public void createTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"        Deadline d \u003d new Deadline(\"test\", \"2020-12-20\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"        assertEquals(\"[D][ ] test (by: Dec 20 2020)\", d.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":13}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"    public void createTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"        Event e \u003d new Event(\"test\", \"10 Aug\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"        assertEquals(\"[E][ ] test (at: 10 Aug)\", e.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":13}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"    public void createTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"        ToDo t \u003d new ToDo(\"test\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"        assertEquals(\"[T][ ] test\", t.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"1waykiat":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"1waykiat"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"1waykiat"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"1waykiat"},"content":"random","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"1waykiat"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"1waykiat"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"1waykiat"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"1waykiat"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"1waykiat"},"content":"deadline project","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"1waykiat"},"content":"event birthday","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"1waykiat"},"content":"todo assignment","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"1waykiat"},"content":"deadline project /by Next Week","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"1waykiat"},"content":"event birthday /at 20 Aug","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"1waykiat"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"1waykiat"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"1waykiat"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"1waykiat"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"1waykiat"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"1waykiat"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"1waykiat":18}}]
