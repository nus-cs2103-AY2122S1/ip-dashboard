[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"\tString javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"\t","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"\t","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"\timplementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"\tenableAssertions \u003d true","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"darren2pro":17,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import duke.utils.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import duke.utils.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":" * A chat-bot called Naruto that acts as a task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"public class Duke {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    private final String NARUTO_REPLY_PREFIX \u003d \"Sage Mode On! \\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     * Constructor for the Duke chat-bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"     * @param persistedData the relative path to the persisted data starting from the project directory.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    public Duke(String persistedData) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        storage \u003d new Storage(persistedData);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        tasks \u003d new TaskList(storage.loadPersistedData());","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    public String getResponse(String fullCommand) {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        // Create a stream to hold the output","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        ByteArrayOutputStream narutoStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        PrintStream ps \u003d new PrintStream(narutoStream);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"        // IMPORTANT: Save the old System.out!","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        PrintStream oldPrintStream \u003d System.out;","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        // Tell Java to use your special stream","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        System.setOut(ps);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        // Now execute the entire command from user. It goes to my special stream","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"            Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"            command.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"            ui.showError(e);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        } finally {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"            ui.showLines();","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        // Put things back. Important!","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"        System.out.flush();","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        System.setOut(oldPrintStream);","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        // Show what happened in the terminal on IntelliJ","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        // System.out.println(\"Here: \" + narutoStream.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        return NARUTO_REPLY_PREFIX + narutoStream.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"     * Returns the initial welcome message from Naruto when the task manager program is first","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"     * initialized.","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"     * @return the initial welcome message from Naruto as a string.","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"    public String initialMessageFromNaruto() {","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"        // Create a stream to hold the output","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"        ByteArrayOutputStream narutoStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"        PrintStream ps \u003d new PrintStream(narutoStream);","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"        // IMPORTANT: Save the old System.out!","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"        PrintStream old \u003d System.out;","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"        // Tell Java to use my special stream","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        System.setOut(ps);","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"        // Put things back. Important!","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"        System.out.flush();","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"        System.setOut(old);","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"        // Show what happened in the terminal on IntelliJ if needed","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"        // System.out.println(\"Here: \" + narutoStream.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"        return NARUTO_REPLY_PREFIX + narutoStream.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"darren2pro":88,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import duke.gui.Main;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"darren2pro":13}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import duke.tasks.Deadlines;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import duke.tasks.Events;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import duke.utils.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":" * Contains all the static nested classes to represent various user commands to the chat-bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"     * Executes this command accordingly. The actual implementation must be defined by","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"     * the subclass.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     * @param tasks the full task list containing all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     * @param ui the ui instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     * @param storage the storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"     * The command indicating that the user wants to shut down the chat-bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    public static class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"         * Performs the required actions that will print a bye message and terminate the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"         * @param tasks the full task list containing all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"         * @param ui the ui instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"         * @param storage the storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"            ui.showByeMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"     * The command indicating that the user wants to list all the tasks within the","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"     * task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    public static class ListAllCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"         * Performs the necessary method invoking to print all the tasks within the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"         * @param tasks the full task list containing all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"         * @param ui the ui instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"         * @param storage the storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"            ui.showGettingAllTaskItemsInteraction(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"     * The command indicating that the user wants to mark a task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"    public static class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"        private int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"         * Constructor for DoneCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"         * @param taskNum the task number whose corresponding task you want to mark as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"        public DoneCommand(int taskNum) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"            this.taskNum \u003d taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"         * Performs the necessary actions that will mark the given task as done, as well","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"         * as update the persisted data text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"         * @param tasks the full task list containing all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"         * @param ui the ui instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"         * @param storage the storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"            tasks.markTaskAsDone(this.taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"            storage.markPersistedTaskAsDone(this.taskNum, tasks.getTask(this.taskNum));","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"            ui.showTaskDoneInteraction(tasks.getTask(this.taskNum));","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"     * The command indicating that the user wants to add in a ToDos into the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"    public static class ToDoCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"        private String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"         * Constructor for ToDoCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"         * @param description the description of the ToDos to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"        public ToDoCommand(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"         * Performs the actions that adds the ToDos to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"         * @param tasks the full task list containing all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"         * @param ui the ui instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"         * @param storage the storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"            ToDos newToDo \u003d new ToDos(this.description, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"            tasks.addTask(newToDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"darren2pro"},"content":"            ui.showTaskAddedInteraction(newToDo, tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"darren2pro"},"content":"            storage.addTaskToPersistedData(newToDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"darren2pro"},"content":"     * The command indicating that the user wants to add in a Deadline into the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"darren2pro"},"content":"    public static class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"darren2pro"},"content":"        private String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"darren2pro"},"content":"        private String dateTimeBy;","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"darren2pro"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"darren2pro"},"content":"         * Constructor for DeadlineCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"darren2pro"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"darren2pro"},"content":"         * @param description the description of the Deadline to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"darren2pro"},"content":"         * @param dateTimeBy the date where this deadline is due.","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"darren2pro"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"darren2pro"},"content":"        public DeadlineCommand(String description, String dateTimeBy) {","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"darren2pro"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"darren2pro"},"content":"            this.dateTimeBy \u003d dateTimeBy;","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"darren2pro"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"darren2pro"},"content":"         * Performs the actions that adds the Deadline to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"darren2pro"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"darren2pro"},"content":"         * @param tasks the full task list containing all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"darren2pro"},"content":"         * @param ui the ui instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"darren2pro"},"content":"         * @param storage the storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"darren2pro"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"darren2pro"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"darren2pro"},"content":"            Deadlines newDeadline \u003d new Deadlines(description, dateTimeBy, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"darren2pro"},"content":"            tasks.addTask(newDeadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"darren2pro"},"content":"            ui.showTaskAddedInteraction(newDeadline, tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"darren2pro"},"content":"            storage.addTaskToPersistedData(newDeadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"darren2pro"},"content":"     * The command indicating that the user wants to add in a event into the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"darren2pro"},"content":"    public static class EventCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"darren2pro"},"content":"        private String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"darren2pro"},"content":"        private String dateTimeAt;","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"darren2pro"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"darren2pro"},"content":"         * Constructor for EventCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"darren2pro"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"darren2pro"},"content":"         * @param description the description of the Deadline to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"darren2pro"},"content":"         * @param dateTimeAt the time/place/period where this event will occur.","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"darren2pro"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"darren2pro"},"content":"        public EventCommand(String description, String dateTimeAt) {","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"darren2pro"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"darren2pro"},"content":"            this.dateTimeAt \u003d dateTimeAt;","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"darren2pro"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"darren2pro"},"content":"         * Performs the actions that adds the event to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"darren2pro"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"darren2pro"},"content":"         * @param tasks the full task list containing all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"darren2pro"},"content":"         * @param ui the ui instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"darren2pro"},"content":"         * @param storage the storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"darren2pro"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"darren2pro"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"darren2pro"},"content":"            Events newEvent \u003d new Events(description, dateTimeAt, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"darren2pro"},"content":"            tasks.addTask(newEvent);","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"darren2pro"},"content":"            ui.showTaskAddedInteraction(newEvent, tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"darren2pro"},"content":"            storage.addTaskToPersistedData(newEvent);","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":194,"author":{"gitId":"darren2pro"},"content":"     * The command indicating that the user wants to delete a task from the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":195,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":196,"author":{"gitId":"darren2pro"},"content":"    public static class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"darren2pro"},"content":"        private int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"darren2pro"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":200,"author":{"gitId":"darren2pro"},"content":"         * Constructor for DeleteCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":201,"author":{"gitId":"darren2pro"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"darren2pro"},"content":"         * @param taskNum the task number of the task that you want to delete.","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"darren2pro"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"darren2pro"},"content":"        public DeleteCommand(int taskNum) {","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"darren2pro"},"content":"            this.taskNum \u003d taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"darren2pro"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"darren2pro"},"content":"         * Performs the actions that adds the deletes the task from the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":210,"author":{"gitId":"darren2pro"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":211,"author":{"gitId":"darren2pro"},"content":"         * @param tasks the full task list containing all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":212,"author":{"gitId":"darren2pro"},"content":"         * @param ui the ui instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"darren2pro"},"content":"         * @param storage the storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"darren2pro"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"darren2pro"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"darren2pro"},"content":"            Task taskToDelete \u003d tasks.getTask(this.taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"darren2pro"},"content":"            assert (taskToDelete !\u003d null) : \"A task you want to delete cannot be null.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":219,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":220,"author":{"gitId":"darren2pro"},"content":"            tasks.deleteTask(this.taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"darren2pro"},"content":"            storage.removePersistedTask(this.taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"darren2pro"},"content":"            ui.showTaskDeletedInteraction(taskToDelete, tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"darren2pro"},"content":"    public static class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":227,"author":{"gitId":"darren2pro"},"content":"        private final String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":228,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"darren2pro"},"content":"        public FindCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":230,"author":{"gitId":"darren2pro"},"content":"            this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":231,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":232,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":233,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":234,"author":{"gitId":"darren2pro"},"content":"        public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":235,"author":{"gitId":"darren2pro"},"content":"            HashMap\u003cString, Task\u003e matchingTasks \u003d tasks.getMatchingTasks(this.keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":236,"author":{"gitId":"darren2pro"},"content":"            ui.showMessagePrintingAllMatchingTasks(matchingTasks, tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":237,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":238,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":239,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"darren2pro":239}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":" * Representing all exceptions relating to this chat-bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"     * @param message a customized message to set for this exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"        super(\"Rasengan!! \" + message);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"darren2pro":16}},{"path":"src/main/java/duke/exceptions/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":" * Representing an exception that is thrown when the task description is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"public class EmptyTaskDescriptionException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"     * Constructor for EmptyTaskDescriptionException that has a specific message for it.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"     * @param taskName the type of task that is involved with this exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    public EmptyTaskDescriptionException(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"        super(String.format(\"The description of a %s cannot be empty!\", taskName));","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"darren2pro":16}},{"path":"src/main/java/duke/exceptions/UnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":" * Representing an exception that is thrown when the command is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"public class UnknownInputException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"     * Constructor for UnknownInputException that has a specific message for it.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    public UnknownInputException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"        super(\"I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"darren2pro":14}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    public static DialogBox getUserDialog(String userInputText, Image userAvatar) {","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        return new DialogBox(userInputText, userAvatar);","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    public static DialogBox getDukeDialog(String dukeResponseText, Image dukeAvatar) {","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        var db \u003d new DialogBox(dukeResponseText, dukeAvatar);","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darren2pro":62}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"     * The main entry point for all JavaFX applications.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"     * The start method is called after the init method has returned,","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"     * and after the system is ready for the application to begin running.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     * NOTE: This method is called on the JavaFX Application Thread.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     * @param primaryStage the primary stage for this application, onto which","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"     *                     the application scene can be set.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"     *                     Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"     *                     primary stages.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"     * @throws Exception if something goes wrong","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    public void start(Stage primaryStage) throws Exception {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"            Scene scene \u003d new Scene(anchorPane);","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"            primaryStage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darren2pro":44}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    private Image userAvatar \u003d new Image(this.getClass().getResourceAsStream(\"/images/sasuke.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    private Image dukeAvatar \u003d new Image(this.getClass().getResourceAsStream(\"/images/naruto.jpg\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        showNarutoWelcome();","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        assert !input.equals(\"\") : \"Input should not be empty!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"                DialogBox.getUserDialog(input, userAvatar),","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"                DialogBox.getDukeDialog(response, dukeAvatar)","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"    private void showNarutoWelcome() {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        DialogBox welcomeFromNaruto \u003d DialogBox.getDukeDialog(duke.initialMessageFromNaruto(), dukeAvatar);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        dialogContainer.getChildren().addAll(welcomeFromNaruto);","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darren2pro":60}},{"path":"src/main/java/duke/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.time.format.DateTimeFormatter.ISO_DATE;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" * Represents a deadline entry in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    private LocalDate dateTimeBy;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"     * Constructor for Deadlines.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"     * @param description the description of the deadline e.g. \"do homework\".","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"     * @param dateTimeBy the date by which to complete the task. It has to be in","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"     *                   a speific format e.g. \"2020-02-15\".","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"     * @param isDone whether this deadline is to be marked as done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    public Deadlines(String description, String dateTimeBy, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        this.dateTimeBy \u003d LocalDate.parse(dateTimeBy);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    public String persistedDataStringFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        char isDone01 \u003d this.isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        return String.format(\"D,%c,%s,%s\", isDone01, this.description, this.dateTimeBy.format(ISO_DATE));","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        return String.format(\"[D]\" + super.toString() + \" (by: %s)\",","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"                dateTimeBy.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")));","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"darren2pro":40}},{"path":"src/main/java/duke/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":" * Represents an event entry in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"public class Events extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"    private String dateTimeAt;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"     * Constructor for Events.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"     * @param description the description of this event.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"     * @param dateTimeAt the time/date/period at which this event is to occur.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"     * @param isDone whether this task is to be marked as done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    public Events(String description, String dateTimeAt, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"        this.dateTimeAt \u003d dateTimeAt;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    public String persistedDataStringFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        char isDone01 \u003d this.isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        return String.format(\"E,%c,%s,%s\", isDone01, this.description, this.dateTimeAt);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        return String.format(\"[E]\" + super.toString() + \" (%s:%s)\",","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"                this.dateTimeAt.substring(0, 2), this.dateTimeAt.substring(2));","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"darren2pro":34}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":" * Represents a Task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"     * Constructor for Task","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"     * @param description description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"     * @param isDone whether this task is to be marked as done or not","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     * Marks this task as done","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"     * Returns a string representation of this task to be written into the","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"     * text file","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"     * @return string representation of this task to be written into the text file","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    public abstract String persistedDataStringFormat();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"     * Returns a string of this task by prefixing \"[X] {description}\". It\u0027s subclasses will further","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"     * add in more characters to indicate more information.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"     * @return a string representation of this task","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        String checkbox \u003d this.isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"        return checkbox + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"darren2pro":47}},{"path":"src/main/java/duke/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":" * Represents a todos entry in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"public class ToDos extends duke.tasks.Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"     * Constructor for the ToDos.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"     * @param description description of this ToDos.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"     * @param isDone whether this task is to be marked as done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    public ToDos(String description, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    public String persistedDataStringFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"        char isDone01 \u003d this.isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"        return String.format(\"T,%c,%s\", isDone01, this.description);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"darren2pro":29}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.utils;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import duke.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import duke.exceptions.UnknownInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":" * The Parser to parse and make sense of the user commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"     * Returns a Command object containing the necessary information to be executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"     * @param fullCommand the full command input by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"     * @return a Command object containing the necessary information to be executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"     * @throws UnknownInputException if the full command given is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"     * @throws EmptyTaskDescriptionException if a valid command was given but there was no task description.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    public static Command parse(String fullCommand) throws UnknownInputException, EmptyTaskDescriptionException {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"        int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"        if (true \u003d\u003d fullCommand.startsWith(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"            return new Command.ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        } else if (true \u003d\u003d fullCommand.startsWith(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"            return new Command.ListAllCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        } else if (true \u003d\u003d fullCommand.startsWith(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"            taskNum \u003d Integer.parseInt(fullCommand.substring(5)) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"            return new Command.DoneCommand(taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        } else if (true \u003d\u003d fullCommand.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"                String description \u003d fullCommand.substring(5);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"                return new Command.ToDoCommand(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"            } catch (StringIndexOutOfBoundsException strE) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"                throw new EmptyTaskDescriptionException(\"todo\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        } else if (true \u003d\u003d fullCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"                int sep \u003d fullCommand.indexOf(\u0027/\u0027, 9);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"                String descPart \u003d fullCommand.substring(9, sep - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"                String byPart \u003d fullCommand.substring(sep + 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"                return new Command.DeadlineCommand(descPart, byPart);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"            } catch (StringIndexOutOfBoundsException strE) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"                throw new EmptyTaskDescriptionException(\"deadline\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"        } else if (true \u003d\u003d fullCommand.startsWith(\"event\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"                int sep \u003d fullCommand.indexOf(\u0027/\u0027, 6);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"                String descPart \u003d fullCommand.substring(6, sep - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"                String atPart \u003d fullCommand.substring(sep + 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"                return new Command.EventCommand(descPart, atPart);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"            } catch (StringIndexOutOfBoundsException strE) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"                throw new EmptyTaskDescriptionException(\"event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        } else if (true \u003d\u003d fullCommand.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"            taskNum \u003d Integer.parseInt(fullCommand.substring(7)) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"            return new Command.DeleteCommand(taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        } else if (true \u003d\u003d fullCommand.startsWith(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"            String keyword \u003d fullCommand.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"            return new Command.FindCommand(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"            UnknownInputException e \u003d new UnknownInputException();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"            throw e;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"darren2pro":66}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.utils;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":" * A class to handle all the operations that deals with the computer hard drive or memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    private final String DISK_ERROR_MESSAGE \u003d \"A problem occurred while accessing the text file.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    private final String persistedData;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     * @param persistedData the relative path to the persisted data starting from the project directory.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    public Storage(String persistedData) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        this.persistedData \u003d persistedData;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"     * Returns a stream of strings that contains all the individual lines within the persisted data,","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"     * which is a text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"     * @return the stream of strings containing all the individual lines in persisted data.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    public Stream\u003cString\u003e loadPersistedData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        Path pathToTxt \u003d Paths.get(\"data\", \"duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        Path pathToData \u003d Paths.get(\"data\");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"        if (Files.exists(pathToTxt)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"            System.out.println(\"Persisted data exists. Loading...\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"                Stream\u003cString\u003e persistedData \u003d Files.lines(pathToTxt);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"                return persistedData;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"            System.out.println(\"Persisted data does not exist.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"                Files.createDirectories(pathToData);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"                Files.createFile(pathToTxt);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"                return Stream.empty();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        return Stream.empty();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"     * Marks the particular task within the persisted data as done, by editing the text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"     * @param taskNum the task number within the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"     * @param task the task to mark as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"    public void markPersistedTaskAsDone(int taskNum, Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"        Path persistedDataPath \u003d Paths.get(persistedData);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"            List\u003cString\u003e allLines \u003d Files.readAllLines(persistedDataPath);","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"            allLines.set(taskNum, task.persistedDataStringFormat());","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"            Files.write(persistedDataPath, allLines);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"            System.out.println(DISK_ERROR_MESSAGE);","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"     * Adds in a new line of text to the persisted data, corresponding to this task.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"     * @param task the new task to add to the persisted data.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"    public void addTaskToPersistedData(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"        String line \u003d task.persistedDataStringFormat();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"        line +\u003d System.lineSeparator();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"            FileWriter fw \u003d new FileWriter(persistedData, true);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"            fw.write(line);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"            System.out.println(DISK_ERROR_MESSAGE);","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"     * Removes the particular line within the persisted data, that corresponds with this","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"     * particular task number.","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"     * @param taskNum the task number within the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"    public void removePersistedTask(int taskNum) {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"        Path persistedDataPath \u003d Paths.get(persistedData);","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"            List\u003cString\u003e allLines \u003d Files.readAllLines(persistedDataPath);","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"            allLines.remove(taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"            Files.write(persistedDataPath, allLines);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"            System.out.println(DISK_ERROR_MESSAGE);","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"darren2pro":113}},{"path":"src/main/java/duke/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.utils;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import duke.tasks.Deadlines;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import duke.tasks.Events;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":" * Contains all the listed tasks in the list, and has multiple operations to operate","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":" * on the list of tasks, such as adding, deleting, marking as done etc.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    private final Consumer\u003cString\u003e LOAD_DATA_ACTION \u003d s -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"        String[] loadedLine \u003d s.split(\",\");","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"        char typeOfTask \u003d loadedLine[0].charAt(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"        boolean isDone \u003d loadedLine[1].charAt(0) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        String description \u003d loadedLine[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        Task loadedTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"            loadedTask \u003d new ToDos(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"            tasks.add(loadedTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"            String byPart \u003d loadedLine[3];","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"            loadedTask \u003d new Deadlines(description, byPart, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"            tasks.add(loadedTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"            String atPart \u003d loadedLine[3];","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"            loadedTask \u003d new Events(description, atPart, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"            tasks.add(loadedTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + typeOfTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"     * @param persistedData the persisted tasks that we loaded from the hard disk/text file.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    public TaskList(Stream\u003cString\u003e persistedData) {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        persistedData.forEach(LOAD_DATA_ACTION);","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"     * Adds a new task to the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"     * @param newTask the new task to add.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"     * Deletes the particular task in the task list that corresponds with the given","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"     * task number.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"     * @param taskNum the task number that we want to delete from the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"    public void deleteTask(int taskNum) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"        tasks.remove(taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"     * Marks the task in the task list that corresponds with the given task number","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"     * as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"     * @param taskNum the task number that we want to mark as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"    public void markTaskAsDone(int taskNum) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"        boolean taskNumberInRange \u003d (taskNum \u003e\u003d 0) \u0026\u0026 (taskNum \u003c tasks.size());","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"        assert (taskNumberInRange) : \"Task number that you want to mark as done is out of bounds.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"        Task currTask \u003d tasks.get(taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"        currTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"     * Returns the task that corresponds with the given task number.","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"     * @param taskNum the task number of the task that you want to retrieve.","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"     * @return the task corresponding to the given task number.","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"    public Task getTask(int taskNum) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"        boolean taskNumberInRange \u003d (taskNum \u003e\u003d 0) \u0026\u0026 (taskNum \u003c tasks.size());","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"        assert (taskNumberInRange) : \"Task number that you want to get is out of bounds.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"        return tasks.get(taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"     * @return the number of tasks in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"     * Returns a new instance of TaskList containing the tasks that matches the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"     * @param keyword the word in which to search within all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"     * @return a new instance of TaskList containing the tasks that matches the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"    public HashMap\u003cString, Task\u003e getMatchingTasks(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"        HashMap\u003cString, Task\u003e matchingTasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"        int counter \u003d 1; // Start from 1 because that is how we print","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"        for (Task currTask : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"            if (currTask.toString().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"darren2pro"},"content":"                matchingTasks.put(String.valueOf(counter), currTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"darren2pro"},"content":"            counter +\u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"darren2pro"},"content":"        return matchingTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"darren2pro":126}},{"path":"src/main/java/duke/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.utils;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" * Deals with all the user-facing commands such as reading user input, and printing results.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    private static final String HORIZONTAL_LINES \u003d \"-----------------------------------------\";","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"     * Prints a long horizontal line which acts as a separator.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    public void showLines() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        System.out.println(HORIZONTAL_LINES);","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     * Displays a welcome message.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        System.out.println(HORIZONTAL_LINES + \"\\nHello! I\u0027m Naruto\\nWhat can I do for you?\\n\" + HORIZONTAL_LINES);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"     * Displays the message indicating that a new task has been added to the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"     * @param newTask the new task that has been added.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"     * @param tasks the task list containing all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    public void showTaskAddedInteraction(Task newTask, TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        System.out.printf(\"Great, I\u0027ve added this task:\\n  %s%n\", newTask.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        System.out.printf(\"Now you have %d tasks in the list.%n\", tasks.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"     * Prints all the tasks in the task list, and also displays how many tasks are currently","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"     * within.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"     * @param tasks the task list containing all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    public void showGettingAllTaskItemsInteraction(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        for (taskNum \u003d 0; taskNum \u003c tasks.getSize(); taskNum++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"            Task task \u003d tasks.getTask(taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"            System.out.println(counter + \".\" + task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"            counter +\u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        System.out.println(String.format(\"There are %d tasks in the list.\", tasks.getSize()));","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"     * Displays a message indicating that the given task has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"     * @param task the task that has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"    public void showTaskDoneInteraction(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"        System.out.println(\"Good job! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"     * Displays a message indicating that the given task has been deleted from the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"     * @param task the task that has been deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"     * @param tasks the task list containing all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"    public void showTaskDeletedInteraction(Task task, TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"        System.out.printf(\"Roger that Sensei, I\u0027ve removed this task:\\n  %s%n\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"        System.out.printf(\"Now you have %d tasks in the list.%n\", tasks.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"     * Displays a standard message to indicate that the chat-bot is shutting down.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"    public void showByeMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"        System.out.println(\"See ya! Hope to see you again!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"     * Displays the message from the DukeException that was caught.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"     * @param e the DukeException that was caught.","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"     * Displays all the tasks that matches a certain keyword, where the matched tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"     * are already given as a parameter to this method.","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"     * @param matchingTasks the tasks that matched the keyword. These tasks are to be printed.","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"     * @param tasks the task list containing all the tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"    public void showMessagePrintingAllMatchingTasks(HashMap\u003cString, Task\u003e matchingTasks, TaskList tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"        System.out.println(\"Here are all the matching tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"        for (int counter \u003d 1; counter \u003c\u003d tasks.getSize(); counter++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"            String key \u003d String.valueOf(counter);","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"            if (matchingTasks.containsKey(key)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"                Task matchedTask \u003d matchingTasks.get(key);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"                assert (matchedTask !\u003d null) : \"Matched task cannot be null.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"                System.out.println(key + \".\" + matchedTask.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"        System.out.println(String.format(\"There are %d matching tasks in the list.\", matchingTasks.size()));","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"darren2pro":114}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darren2pro":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"\u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"        \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"\u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darren2pro":19}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"    public void testSampleToDosPersistedData_toString_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"        ToDos sampleToDo \u003d new ToDos(\"join sports club\", true);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"        assertEquals(\"T,1,join sports club\", sampleToDo.persistedDataStringFormat(),","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"                \"Testing whether the persisted data string format is correct.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"        assertEquals(\"[T][X] join sports club\", sampleToDo.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"darren2pro":17}},{"path":"src/test/java/duke/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package duke.utils;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import duke.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import duke.exceptions.UnknownInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    public void testEmptyDescriptionError_forMultipleDifferentCommands_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"        String cmdOne \u003d \"This is a random command that should throw an exception\";","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        String cmdTwo \u003d \"deadline\";","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"        String cmdThree \u003d \"todo\";","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"        String cmdFour \u003d \"event\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"        String cmdFive \u003d \"sdjkhgkdjl\";","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"            Parser.parse(cmdOne);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        } catch (UnknownInputException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"            assertEquals(\"Rasengan!! I don\u0027t know what that means :-(\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        } catch (EmptyTaskDescriptionException e1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"            Parser.parse(cmdTwo);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        } catch (EmptyTaskDescriptionException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"            assertEquals(\"Rasengan!! The description of a deadline cannot be empty!\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        } catch (UnknownInputException e1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"            Parser.parse(cmdThree);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        } catch (EmptyTaskDescriptionException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"            assertEquals(\"Rasengan!! The description of a todo cannot be empty!\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        } catch (UnknownInputException e1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"            Parser.parse(cmdFour);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"        } catch (EmptyTaskDescriptionException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"            assertEquals(\"Rasengan!! The description of a event cannot be empty!\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"        } catch (UnknownInputException e1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"            Parser.parse(cmdFive);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"        } catch (EmptyTaskDescriptionException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        } catch (UnknownInputException e1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"            assertEquals(\"Rasengan!! I don\u0027t know what that means :-(\", e1.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"    public void testCorrectCommandReturnedFromParser_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"        String cmdOne \u003d \"todo read book\";","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"        String cmdTwo \u003d \"deadline return book /by 2021-10-11\";","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"        String cmdThree \u003d \"list\";","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"        String cmdFour \u003d \"bye\";","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        String cmdFive \u003d \"event project meeting /at Aug 6th 2-4pm\";","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"            Command c \u003d Parser.parse(cmdOne);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"            assertTrue(c instanceof Command.ToDoCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"            Command c \u003d Parser.parse(cmdTwo);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"            assertTrue(c instanceof Command.DeadlineCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"            Command c \u003d Parser.parse(cmdThree);","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"            assertTrue(c instanceof Command.ListAllCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"            Command c \u003d Parser.parse(cmdFour);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"            assertTrue(c instanceof Command.ExitCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"            Command c \u003d Parser.parse(cmdFive);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"            assertTrue(c instanceof Command.EventCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"darren2pro":114}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"deadline return book /by 2021-10-11","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"deadline return book /by 2021-10-11","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"deadline do homework /by 2020-02-15","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"darren2pro":12}}]
