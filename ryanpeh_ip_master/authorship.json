[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"    public Deadline(String description, String doneBy) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"        this.by \u003d doneBy;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ryanpeh":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"    private static final String DIVIDER \u003d \"───────────────────────────────────────────────────────────────────────\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"    private static final String DOUBLE_DIVIDER \u003d \"═══════════════════════════════════════\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"            \"════════════════════════════════\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"    public static Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"    public static void greetUser() {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"        System.out.println(DOUBLE_DIVIDER + \"Welcome to Duke!\\n\" + DOUBLE_DIVIDER);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"        System.out.println(\"Please enter the tasks (todo/event/deadline) to be added to the list.\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"                \"(Enter \u0027list\u0027 to view the list, or \u0027bye\u0027 to exit.)\\n\" + DIVIDER);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"    public static void byeUser() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"        System.out.println(DIVIDER + \"Bye. Hope to see you again soon!\\n\" + DIVIDER);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"    public static void printList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ryanpeh"},"content":"        System.out.println(DIVIDER + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ryanpeh"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"ryanpeh"},"content":"            Task task \u003d taskList.get(i - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"ryanpeh"},"content":"            System.out.println(i + \". \" + task);","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"ryanpeh"},"content":"        System.out.print(DIVIDER);","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"ryanpeh"},"content":"    public static Task createTask(String taskType, String taskDesc) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"ryanpeh"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"ryanpeh"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ryanpeh"},"content":"                if (taskDesc.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"ryanpeh"},"content":"                    throw new DukeException(\"Invalid Command. The description of a \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"ryanpeh"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"ryanpeh"},"content":"                return new Todo(taskDesc);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"ryanpeh"},"content":"            case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ryanpeh"},"content":"                if (taskDesc.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"ryanpeh"},"content":"                    throw new DukeException(\"Invalid Command. The description of a \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"ryanpeh"},"content":"                } else if (!taskDesc.contains(\" /at \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"ryanpeh"},"content":"                    throw new DukeException(\"Invalid Command. The description of a event must include a \u0027/at\u0027.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"ryanpeh"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"ryanpeh"},"content":"                String[] eventParams \u003d taskDesc.split(\" /at \");","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"ryanpeh"},"content":"                return new Event(eventParams[0], eventParams[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"ryanpeh"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"ryanpeh"},"content":"                if (taskDesc.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"ryanpeh"},"content":"                    throw new DukeException(\"Invalid Command. The description of a \" + taskType + \" cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"ryanpeh"},"content":"                } else if (!taskDesc.contains(\" /by \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"ryanpeh"},"content":"                    throw new DukeException(\"Invalid Command. The description of a deadline must include a \u0027/by\u0027.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"ryanpeh"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"ryanpeh"},"content":"                String[] deadlineParams \u003d taskDesc.split(\" /by \");","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"ryanpeh"},"content":"                return new Deadline(deadlineParams[0], deadlineParams[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"ryanpeh"},"content":"            default:","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"ryanpeh"},"content":"                throw new DukeException(\"Invalid Command. Are you sure you have typed in the command properly?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"ryanpeh"},"content":"    public static void addTask(String taskType, String taskDesc) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"ryanpeh"},"content":"        Task task \u003d createTask(taskType, taskDesc);","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"ryanpeh"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"ryanpeh"},"content":"        System.out.println(DIVIDER + \"Got it. I have added this task:\\n  \" + task +","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"ryanpeh"},"content":"                \"\\n Now you have \" + taskList.size() + \" tasks in the list.\\n\" + DIVIDER);","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"ryanpeh"},"content":"    public static void markTaskAsDone(String taskNum) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"ryanpeh"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"ryanpeh"},"content":"            int taskIdx \u003d Integer.valueOf(taskNum) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"ryanpeh"},"content":"            if (taskIdx \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"ryanpeh"},"content":"                throw new DukeException(\"Invalid task number entered.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"ryanpeh"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"ryanpeh"},"content":"            Task task \u003d taskList.get(taskIdx);","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"ryanpeh"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"ryanpeh"},"content":"            System.out.print(DIVIDER + \"Great! I\u0027ve marked this task as done:\\n\" + task + \"\\n\" + DIVIDER);","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"ryanpeh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"ryanpeh"},"content":"            throw new DukeException(\"Invalid Command. \u0027done\u0027 must be followed by the task number\");","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"ryanpeh"},"content":"    public static void deleteTask(String taskNum) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"ryanpeh"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"ryanpeh"},"content":"            int taskIdx \u003d Integer.valueOf(taskNum) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"ryanpeh"},"content":"            if (taskIdx \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"ryanpeh"},"content":"                throw new DukeException(\"Invalid task number entered.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"ryanpeh"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"ryanpeh"},"content":"            Task task \u003d taskList.get(taskIdx);","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"ryanpeh"},"content":"            taskList.remove(taskIdx);","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"ryanpeh"},"content":"            System.out.println(DIVIDER + \"Noted. I have removed this task:\\n  \" + task +","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"ryanpeh"},"content":"                    \"\\n Now you have \" + taskList.size() + \" tasks in the list.\\n\" + DIVIDER);","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"ryanpeh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"ryanpeh"},"content":"            throw new DukeException(\"Invalid Command. \u0027delete\u0027 must be followed by the task number\");","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"ryanpeh"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"ryanpeh"},"content":"    public static void getInputs() {","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"ryanpeh"},"content":"        while (true) {","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"ryanpeh"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"ryanpeh"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"ryanpeh"},"content":"                String taskType, taskDesc;","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"ryanpeh"},"content":"                if (input.contains(\" \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"ryanpeh"},"content":"                    taskType \u003d input.substring(0, input.indexOf(\u0027 \u0027));","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"ryanpeh"},"content":"                    taskDesc \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"ryanpeh"},"content":"                } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"ryanpeh"},"content":"                    taskType \u003d input;","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"ryanpeh"},"content":"                    taskDesc \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"ryanpeh"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"ryanpeh"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"ryanpeh"},"content":"                    case \"bye\":","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"ryanpeh"},"content":"                        byeUser();","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"ryanpeh"},"content":"                        return;","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"ryanpeh"},"content":"                    case \"list\":","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"ryanpeh"},"content":"                        printList();","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"ryanpeh"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"ryanpeh"},"content":"                    case \"done\":","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"ryanpeh"},"content":"                        markTaskAsDone(taskDesc);","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"ryanpeh"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"ryanpeh"},"content":"                    case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"ryanpeh"},"content":"                        deleteTask(taskDesc);","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"ryanpeh"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"ryanpeh"},"content":"                    default:","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"ryanpeh"},"content":"                        addTask(taskType, taskDesc);","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"ryanpeh"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"ryanpeh"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"ryanpeh"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"ryanpeh"},"content":"                System.out.print(DIVIDER + e.getMessage() + \"\\n\" + DIVIDER);","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"ryanpeh"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"ryanpeh"},"content":"        greetUser();","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"ryanpeh"},"content":"        getInputs();","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ryanpeh":131,"-":6}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ryanpeh":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"    protected String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"        return \"[E] \" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ryanpeh":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ryanpeh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ryanpeh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ryanpeh":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ryanpeh":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanpeh"},"content":"todo Study","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ryanpeh"},"content":"deadline Finish CS2103T iP /by 19 Aug","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ryanpeh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ryanpeh"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ryanpeh"},"content":"event Attend webinar /at 20 Aug 1pm","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ryanpeh"},"content":"todo Cry","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ryanpeh"},"content":"todo Sleep","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ryanpeh"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ryanpeh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ryanpeh"},"content":"todo Cry again","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ryanpeh"},"content":"done 6","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ryanpeh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ryanpeh"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ryanpeh"},"content":"deadline CS2103T Project","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ryanpeh"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ryanpeh"},"content":"event CS2103T Lecture","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ryanpeh"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ryanpeh":17}}]
