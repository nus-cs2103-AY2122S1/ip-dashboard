[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.7.0\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"    toolVersion \u003d \u00278.32\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"luffingluffy":20,"-":44}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":" * Represents a chat-bot that stores list of tasks/events that the user","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":" * can add/delete/complete.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"public class Duke {","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    private static TaskList taskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    private static Storage storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    private static Ui ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a Duke object.","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"    public Duke() {","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"        storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"            taskList \u003d storage.load();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"            taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"        return Parser.parse(input, taskList, this);","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"        storage.write(taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"    public String greet() {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"        return ui.greet();","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"luffingluffy":45}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"    private static final String invalidInput \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\";","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"    private static final String emptyDescription \u003d \"OOPS!!! The description of a todo cannot be empty\";","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"    private DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"    public static DukeException invalidInput() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"        return new DukeException(invalidInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    public static DukeException emptyDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"        return new DukeException(emptyDescription);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"luffingluffy":18}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"public class Launcher {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"luffingluffy":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"import duke.ui.controller.MainWindow;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"            stage.show();","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"luffingluffy":32}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.util.List;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":" * Represents a parser that interprets the user\u0027s inputs into commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    private static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"    private static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    private static final String TODO_MESSAGE \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"    private static final String DELETE_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    private static final String FIND_MESSAGE \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"     * Turns the user\u0027s input into a command.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"     * @param userInput the user\u0027s input given as a string.","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"     * @param taskList  the list containing the tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"     * @param duke      the Duke object running.","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"     * @return a string to be shown in the GUI.","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"     * @throws DukeException if the inputs are not expected.","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"    public static String parse(String userInput, TaskList taskList, Duke duke) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"        String[] tokens \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"        String param \u003d tokens.length \u003d\u003d 1 ? null : tokens[1].strip();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"        String[] taskItems;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"        String taskName;","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"        switch (command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"            if (param \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"                throw DukeException.emptyDescription();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"            output.append(TODO_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"            task \u003d new Todo(param);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"            taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"            output.append(taskList.get(taskList.getSize() - 1)).append(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"            output.append(String.format(\"Now you have %d tasks in the list.\\n\", taskList.getSize()));","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"            output.append(LIST_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"            List\u003cString\u003e enumerate \u003d taskList.enumerate();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"            for (String currentTaskName : enumerate) {","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"                output.append(currentTaskName).append(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"            output.append(\"There are currently \").append(taskList.getSize()).append(\" tasks in your list.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"            output.append(FIND_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"            enumerate \u003d taskList.filter(param).enumerate();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"            for (String currentTaskName : enumerate) {","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"                output.append(currentTaskName).append(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"            output.append(TODO_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"            assert param !\u003d null;","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"            taskItems \u003d param.split(\" /by \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"            taskName \u003d taskItems[0].strip();","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"            if (taskItems.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"                taskList.add(new Deadline(taskName));","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"                taskList.add(new Deadline(taskName, taskItems[1].strip()));","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"            output.append(String.format(\"Now you have %d tasks in the list.\\n\", taskList.getSize()));","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"            output.append(TODO_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"            assert param !\u003d null;","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"            taskItems \u003d param.split(\" /at \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"            taskName \u003d taskItems[0].strip();","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"luffingluffy"},"content":"            if (taskItems.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"luffingluffy"},"content":"                taskList.add(new Event(taskName));","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"luffingluffy"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"luffingluffy"},"content":"                taskList.add(new Event(taskName, taskItems[1].strip()));","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"luffingluffy"},"content":"            output.append(String.format(\"Now you have %d tasks in the list.\\n\", taskList.getSize()));","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"luffingluffy"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"luffingluffy"},"content":"            output.append(DONE_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"luffingluffy"},"content":"            assert param !\u003d null;","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"luffingluffy"},"content":"            int intParam \u003d Integer.parseInt(param) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"luffingluffy"},"content":"            taskList.get(intParam).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"luffingluffy"},"content":"            output.append(taskList.get(intParam));","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"luffingluffy"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"luffingluffy"},"content":"            output.append(DELETE_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"luffingluffy"},"content":"            assert param !\u003d null;","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"luffingluffy"},"content":"            intParam \u003d Integer.parseInt(param) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"luffingluffy"},"content":"            output.append(taskList.get(intParam)).append(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"luffingluffy"},"content":"            taskList.remove(intParam);","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"luffingluffy"},"content":"            output.append(String.format(\"Now you have %d tasks in the list.\\n\", taskList.getSize()));","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"luffingluffy"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"luffingluffy"},"content":"            output.append(BYE_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"luffingluffy"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"luffingluffy"},"content":"            throw DukeException.invalidInput();","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"luffingluffy"},"content":"        duke.save(taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"luffingluffy"},"content":"        return output.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"luffingluffy":120}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":" * Encapsulates a storage object that provides functionality","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":" * with regard to reading and writing from a file.","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a Storage object.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"     * @param filePath the path to the location of the file.","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"     * Reads the data from the file and load it as the TaskList.","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"     * @return the TaskList that was saved in the file.","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"     * @throws IOException when the file cannot be found.","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"        TaskList listTask \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"                Files.createDirectories(Paths.get(filePath).getParent());","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"                String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"                String[] tokens \u003d sc.nextLine().split(\"\\\\s\\\\|\\\\s\", 3);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"                String type \u003d tokens[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"                boolean isDone \u003d Integer.parseInt(tokens[1]) \u003d\u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"                String param \u003d tokens[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"                switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"                case (\"T\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"                    description \u003d param;","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"                    listTask.add(new Todo(description, isDone));","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"                case (\"E\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"                    String[] eventDetails \u003d param.split(\"\\\\s\\\\|\\\\s\");","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"                    description \u003d eventDetails[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"                    String date \u003d eventDetails[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"                    listTask.add(new Event(description, date, isDone));","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"                case (\"D\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"                    String[] deadlineDetails \u003d param.split(\"\\\\s\\\\|\\\\s\");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"                    description \u003d deadlineDetails[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"                    String deadline \u003d deadlineDetails[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"                    listTask.add(new Deadline(description, deadline, isDone));","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"                    throw new IllegalStateException(\"Unexpected value: \" + type);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"        return listTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"     * Writes the current task list to the file.","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"     * @param task the current TaskList to be written to the file.","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"luffingluffy"},"content":"    public void write(TaskList task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"luffingluffy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"luffingluffy"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"luffingluffy"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"luffingluffy"},"content":"                Files.createDirectories(Paths.get(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"luffingluffy"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"luffingluffy"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"luffingluffy"},"content":"            for (Task t : task.getList()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"luffingluffy"},"content":"                writer.write(t.databaseString() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"luffingluffy"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"luffingluffy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"luffingluffy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"luffingluffy":109}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":" * Encapsulates the idea of tasks that need to be done by a certain date and time.","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"    private static final String TYPE \u003d \"D\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"    private static final DateTimeFormatter DATABASE_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a Deadline object without a date.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Deadline.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    public Deadline(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a Deadline object with the given due date.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Deadline.","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"     * @param due         the date of the deadline.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"    public Deadline(String description, String due) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"        this.deadline \u003d LocalDateTime.parse(due, DATABASE_DATE_TIME_FORMAT);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a Deadline object with the given due date and whether it is completed.","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Deadline.","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"     * @param deadline    the date of the deadline.","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"     * @param isDone      whether the task is completed.","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"    public Deadline(String description, String deadline, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, DATABASE_DATE_TIME_FORMAT);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"     * Formats the date according to the given format and split it to date and time.","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"     * @param date the date to be formatted.","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"     * @return the formatted date and time.","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"    private String[] formatDate(LocalDateTime date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"        return date.format(DATABASE_DATE_TIME_FORMAT).split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"     * Gets the String representation of the type of the Deadline object.","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"     * @return the type of Deadline.","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"        return TYPE;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"     * Converts and formats a Deadline object into a string to be stored in the database.","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"     * @return the formatted string representation.","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"    public String databaseString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"        return TYPE + \" | \" + super.databaseString() + \" | \"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"                + formatDate(deadline)[0] + \" \" + formatDate(deadline)[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"     * Converts a Deadline object into a string representation.","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"     * @return the string representation of a Deadline.","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"        return String.format(\"[%s][%s] %s (by: %s)\", getLabel(), getStatusIcon(),","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"                this.description, formatDate(deadline)[0] + \" \" + formatDate(deadline)[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"luffingluffy":87}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":" * Encapsulates the idea of tasks that happens at a certain date and time.","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"    private static final String TYPE \u003d \"E\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"    private static final DateTimeFormatter DATABASE_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    private LocalDateTime date;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an Event object without a date.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Event.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    public Event(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an Event object with the given due date.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Event.","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"     * @param date        the date of the Event.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"        this.date \u003d LocalDateTime.parse(date, DATABASE_DATE_TIME_FORMAT);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an Event object with the given due date and whether it is completed.","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Event.","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"     * @param date        the date of the Event.","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"     * @param isDone      whether the Event is completed.","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"    public Event(String description, String date, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"        this.date \u003d LocalDateTime.parse(date, DATABASE_DATE_TIME_FORMAT);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"     * Formats the date according to the given format and split it to date and time.","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"     * @param date the date to be formatted.","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"     * @return the formatted date and time.","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"    private String[] formatDate(LocalDateTime date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"        return date.format(DATABASE_DATE_TIME_FORMAT).split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"     * Gets the String representation of the type of the Deadline object.","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"     * @return the type of Event.","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"        return TYPE;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"     * Converts and formats an Event object into a string to be stored in the database.","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"     * @return the formatted string representation.","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"    public String databaseString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"        return TYPE + \" | \" + super.databaseString() + \" | \"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"                + formatDate(date)[0] + \" \" + formatDate(date)[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"     * Converts an Event object into a string representation.","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"     * @return the string representation of an Event.","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"        return String.format(\"[%s][%s] %s (at: %s)\", getLabel(), getStatusIcon(),","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"                this.description, formatDate(date)[0] + \" \" + formatDate(date)[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"luffingluffy":87}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":" * Encapsulates the idea of a task (which is abstract to prevent instantiation).","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a Task object.","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the task.","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a Task object and whether it is completed.","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the task.","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"     * @param isDone      whether the task is completed.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"     * Gets the string representation of whether the task is done.","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"     * @return the string representation of whether its completed.","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"     * Marks a task to be completed.","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"     * Converts and formats a Task object into a string to be stored in the database.","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"     * @return the formatted string representation.","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"    public String databaseString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"        return String.format(\"%s | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"     * Converts a Task object into a string representation.","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"     * @return the string representation of a Task.","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"luffingluffy":66}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":" * Encapsulates the idea of a list of tasks stored in an ArrayList.","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an instance of a TaskList.","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"     * @param tasks the initial ArrayList to be used.","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"     * Gets the task at the given index.","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"     * @param index the index of the task to return.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"     * @return the task at specified index.","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"     * Appends a task to end of the list.","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"     * @param task the task to add.","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"     * Removes a task at the given index.","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"     * @param index the index of the task to delete.","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"    public void remove(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"     * Enumerates (starting from 1) tasks in list using their string representations","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"     * and stores such enumerations in a list that is to be returned.","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"     * @return list of enumerations.","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"    public List\u003cString\u003e enumerate() {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"        List\u003cString\u003e numList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"            numList.add((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"        return numList;","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"     * Filters current the TaskList for tasks that contains the given string.","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"     * @param word the given word to be filtered.","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"     * @return a TaskList containing tasks which only contain the given word.","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"    public TaskList filter(String word) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"        ArrayList\u003cTask\u003e filterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"            if (t.toString().contains(word)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"                filterList.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"        return new TaskList(filterList);","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"luffingluffy":86}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":" * Encapsulates the idea of tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"    private static final String TYPE \u003d \"T\";","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a Todo object.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Todo.","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a Todo object and whether it is completed.","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Todo.","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"     * @param isDone      whether the Event is completed.","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"     * Gets the String representation of the type of the Todo object.","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"     * @return the type of Todo.","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"        return TYPE;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"     * Converts and formats a Todo object into a string to be stored in the database.","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"     * @return the formatted string representation.","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"    public String databaseString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"        return TYPE + \" | \" + super.databaseString();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"     * Converts a Todo object into a string representation.","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"     * @return the string representation of an Event.","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"        return String.format(\"[%s][%s] %s\", getLabel(), getStatusIcon(), this.description);","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"luffingluffy":56}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":" * Represents a user interface that controls the interactions with the user","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"    private static final String INTRO_MESSAGE \u003d \"Hello! I\u0027m Biscuit.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"            + \"What do you want me to do?\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"     * Greets the user","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"     * @return the intro message.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    public String greet() {","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"        return INTRO_MESSAGE;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"luffingluffy":18}},{"path":"src/main/java/duke/ui/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.ui.controller;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"    private void flip() {","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"        db.flip();","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"        return db;","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"luffingluffy":61}},{"path":"src/main/java/duke/ui/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.ui.controller;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"        DialogBox greet \u003d DialogBox.getDukeDialog(duke.greet(), dukeImage);","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"        dialogContainer.getChildren().addAll(greet);","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"    private void handleUserInput() throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"luffingluffy":56}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"luffingluffy":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"            fx:controller\u003d\"duke.ui.controller.MainWindow\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"luffingluffy":24}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"import org.testng.annotations.Test;","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"    @org.junit.jupiter.api.Test","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"    void deadline_normalInput_writtenCorrectly() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"        Assertions.assertEquals(\"D | 0 | Test Deadline | 25-06-2021 12:00\",","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"                new Deadline(\"Test Deadline\", \"25-06-2021 12:00\").databaseString());","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    public void event_normalInput_writtenCorrectly() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"        Assertions.assertEquals(\"E | 0 | Test Event | 25-06-2021 12:00\",","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"                new Event(\"Test Event\", \"25-06-2021 12:00\").databaseString());","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    public void todo_normalInput_writtenCorrectly() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"        Assertions.assertEquals(\"T | 0 | Test Todo\",","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"                new Todo(\"Test Todo\").databaseString());","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"luffingluffy":26}},{"path":"test/build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"plugins {","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"version \u0027unspecified\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"repositories {","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"    mavenCentral()","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"dependencies {","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.7.0\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.7.0\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"test {","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"luffingluffy":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"todo borrow book","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"luffingluffy":1}}]
