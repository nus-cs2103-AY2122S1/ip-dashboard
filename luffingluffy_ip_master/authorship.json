[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"instructions on how to use it.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"   first)","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"   like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"luffingluffy":10,"-":19}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":" * Represents a chat-bot that stores list of tasks/events that the user","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":" * can add/delete/complete.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"public class Duke {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    static TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    static Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"    static Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"     * Initialise the program by loading/creating the data file.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    static void init() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"        storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"            taskList \u003d storage.load();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"            taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"     * Handles the program\u0027s reply until a bye command is given.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"    static void reply() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"        while (true) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"            String userInput \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"                Parser.parse(userInput, taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"            } finally {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"                storage.write(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"        init();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"        ui.greet();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"        reply();","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luffingluffy":60}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"    private static final String invalidInput \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\";","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"    private static final String emptyDescription \u003d \"OOPS!!! The description of a todo cannot be empty\";","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"    private DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"    public static DukeException invalidInput() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"        return new DukeException(invalidInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    public static DukeException emptyDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"        return new DukeException(emptyDescription);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"luffingluffy":18}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import duke.task.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":" * Represents a parser that interprets the user\u0027s inputs into commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    private static final DateTimeFormatter DATE_TIME_PARSE_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    static String byeMsg \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    static String listMsg \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    static String doneMsg \u003d \"Nice! I\u0027ve marked this duke.task as done:\";","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    static String todoMsg \u003d \"Got it. I\u0027ve added this duke.task:\";","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"    static String deleteMsg \u003d \"Noted. I\u0027ve removed this duke.task:\";","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    static String findMsg \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"     * A method to convert the user\u0027s input into a command.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"     * @param userInput the user\u0027s input given as a string","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"     * @param taskList  the list containing the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"     * @throws DukeException if the inputs are not expected","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    public static void parse(String userInput, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"        String[] tokens \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"        String param \u003d tokens.length \u003d\u003d 1 ? null : tokens[1].strip();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"        String[] taskItems;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"        String taskName;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"        Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"        switch (command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"            if (param \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"                throw DukeException.emptyDescription();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"            System.out.println(todoMsg);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"            task \u003d new Todo(param);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"            taskList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"            System.out.println(taskList.get(taskList.getSize() - 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"            System.out.printf(\"Now you have %d tasks in the list.\\n\", taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"        case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"            System.out.println(listMsg);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"            List\u003cString\u003e enumerate \u003d taskList.enumerate();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"            enumerate.forEach(System.out::println);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"            System.out.println(\"There are currently \" + taskList.getSize() + \" tasks in your list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"            System.out.println(findMsg);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"            enumerate \u003d taskList.filter(param).enumerate();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"            enumerate.forEach(System.out::println);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"            System.out.println(todoMsg);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"            taskItems \u003d param.split(\" /by \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"            taskName \u003d taskItems[0].strip();","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"            if (taskItems.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"                taskList.add(new Deadline(taskName));","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"                taskList.add(new Deadline(taskName, taskItems[1].strip()));","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"            System.out.printf(\"Now you have %d tasks in the list.\\n\", taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"        case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"            System.out.println(todoMsg);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"            taskItems \u003d param.split(\" /at \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"            taskName \u003d taskItems[0].strip();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"            if (taskItems.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"                taskList.add(new Event(taskName));","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"                taskList.add(new Event(taskName, taskItems[1].strip()));","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"            System.out.printf(\"Now you have %d tasks in the list.\\n\", taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"        case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"            System.out.println(doneMsg);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"            int intParam \u003d Integer.parseInt(param) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"luffingluffy"},"content":"            taskList.get(intParam).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"luffingluffy"},"content":"            System.out.println(taskList.get(intParam));","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"luffingluffy"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"luffingluffy"},"content":"            System.out.println(deleteMsg);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"luffingluffy"},"content":"            intParam \u003d Integer.parseInt(param) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"luffingluffy"},"content":"            System.out.println(taskList.get(intParam));","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"luffingluffy"},"content":"            taskList.remove(intParam);","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"luffingluffy"},"content":"            System.out.printf(\"Now you have %d tasks in the list.\\n\", taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"luffingluffy"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"luffingluffy"},"content":"            System.out.println(byeMsg);","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"luffingluffy"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"luffingluffy"},"content":"        default: // Adds duke.task","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"luffingluffy"},"content":"            throw DukeException.invalidInput();","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luffingluffy":106}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import duke.task.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":" * Encapsulates a storage object that provides functionality","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":" * with regard to reading and writing from a file","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"    // instance variable","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    // constructors","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"     * Constructor for the Storage object","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"     * @param filePath the path to the location of the file","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"     * A method to read the data from the file and load it as","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"     * the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"     * @return the TaskList that was saved in the file","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"     * @throws IOException when the file cannot be found","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"        TaskList listTask \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"                Files.createDirectories(Paths.get(filePath).getParent());","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"                String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"                String[] tokens \u003d sc.nextLine().split(\"\\\\s\\\\|\\\\s\", 3);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"                String type \u003d tokens[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"                boolean isDone \u003d Integer.parseInt(tokens[1]) \u003d\u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"                String param \u003d tokens[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"                switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"                case (\"T\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"                    description \u003d param;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"                    listTask.add(new Todo(description, isDone));","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"                case (\"E\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"                    String[] eventDetails \u003d param.split(\"\\\\s\\\\|\\\\s\");","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"                    description \u003d eventDetails[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"                    String date \u003d eventDetails[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"                    listTask.add(new Event(description, date, isDone));","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"                case (\"D\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"                    String[] deadlineDetails \u003d param.split(\"\\\\s\\\\|\\\\s\");","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"                    description \u003d deadlineDetails[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"                    String deadline \u003d deadlineDetails[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"                    listTask.add(new Deadline(description, deadline, isDone));","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"                    throw new IllegalStateException(\"Unexpected value: \" + type);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"        return listTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"     * A method to write the current task list to the file","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"     * @param task the current TaskList to be written to the file","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"luffingluffy"},"content":"    public void write(TaskList task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"luffingluffy"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"luffingluffy"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"luffingluffy"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"luffingluffy"},"content":"                Files.createDirectories(Paths.get(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"luffingluffy"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"luffingluffy"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"luffingluffy"},"content":"            for (Task t : task.getList()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"luffingluffy"},"content":"                writer.write(t.databaseString() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"luffingluffy"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"luffingluffy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"luffingluffy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"luffingluffy":110}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":" * Encapsulates the idea of tasks that need to be done by a certain date and time","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"    // constants","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"    private static final String TYPE \u003d \"D\";","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    private static final DateTimeFormatter DATABASE_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    // instance variables","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    // constructors","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a Deadline object without a date","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    public Deadline(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a Deadline object with the given due date","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"     * @param due         the date of the deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"    public Deadline(String description, String due) {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"        this.deadline \u003d LocalDateTime.parse(due, DATABASE_DATE_TIME_FORMAT);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"     * Constructs a Deadline object with the given due date and whether it is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"     * @param deadline    the date of the deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"     * @param isDone      whether the task is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"    public Deadline(String description, String deadline, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, DATABASE_DATE_TIME_FORMAT);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"     * Helper method to format the date according to the","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"     * given format and split it to date and time","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"     * @param date the date to be formatted","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"     * @return the formatted date and time","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"    private String[] formatDate(LocalDateTime date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"        return date.format(DATABASE_DATE_TIME_FORMAT).split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"     * Getter method to get the String representation","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"     * of the type of the Deadline object","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"     * @return the type of Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"        return TYPE;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"     * A method to convert and format a Deadline object","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"     * into a string to be stored in the database","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"     * @return the formatted string representation","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"    public String databaseString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"        return TYPE + \" | \" + super.databaseString() + \" | \"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"                + formatDate(deadline)[0] + \" \" + formatDate(deadline)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"     * A method to convert a Deadline object into a string representation","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"     * @return the string representation of a Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"luffingluffy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"luffingluffy"},"content":"        return String.format(\"[%s][%s] %s (by: %s)\", getLabel(), getStatusIcon(),","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"luffingluffy"},"content":"                this.description, formatDate(deadline)[0] + \" \" + formatDate(deadline)[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"luffingluffy":95}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":" * Encapsulates the idea of tasks that happens at a certain date and time","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"    // constants","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"    private static final String TYPE \u003d \"E\";","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    private static final DateTimeFormatter DATABASE_DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    // instance variables","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    private LocalDateTime date;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    // constructors","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an Event object without a date","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Event","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"    public Event(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an Event object with the given due date","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Event","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"     * @param date        the date of the Event","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"        this.date \u003d LocalDateTime.parse(date, DATABASE_DATE_TIME_FORMAT);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"     * Constructs an Event object with the given due date and whether it is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Event","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"     * @param date        the date of the Event","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"     * @param isDone      whether the Event is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"    public Event(String description, String date, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"        this.date \u003d LocalDateTime.parse(date, DATABASE_DATE_TIME_FORMAT);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"     * Helper method to format the date according to the","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"     * given format and split it to date and time","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"     * @param date the date to be formatted","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"     * @return the formatted date and time","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"    private String[] formatDate(LocalDateTime date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"        return date.format(DATABASE_DATE_TIME_FORMAT).split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"     * Getter method to get the String representation","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"     * of the type of the Deadline object","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"     * @return the type of Event","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"        return TYPE;","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"     * A method to convert and format an Event object","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"     * into a string to be stored in the database","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"     * @return the formatted string representation","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"    public String databaseString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"        return TYPE + \" | \" + super.databaseString() + \" | \"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"                + formatDate(date)[0] + \" \" + formatDate(date)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"     * A method to convert an Event object into a string representation","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"luffingluffy"},"content":"     * @return the string representation of an Event","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"luffingluffy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"luffingluffy"},"content":"        return String.format(\"[%s][%s] %s (at: %s)\", getLabel(), getStatusIcon(),","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"luffingluffy"},"content":"                this.description, formatDate(date)[0] + \" \" + formatDate(date)[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"luffingluffy":96}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":" * Encapsulates the idea of a task (which is abstract to prevent instantiation)","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"    // instance variables","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    // constructors","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"     * Constructor for the Task object","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"     * Constructor for the Task object and whether it is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"     * @param isDone      whether the task is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"     * A method to get the string representation of whether the task is done","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"     * @return the string representation of whether its completed","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"     * A method to mark a task to be completed","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"     * A method to convert and format a Task object","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"     * into a string to be stored in the database","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"     * @return the formatted string representation","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"    public String databaseString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"        return String.format(\"%s | %s\", isDone ? 1 : 0, description);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"     * A method to convert a Task object into a string representation","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"     * @return the string representation of a Task","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"luffingluffy":72}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":" * Encapsulates the idea of a list of tasks stored in an ArrayList","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"    // instance variables","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    // constructors","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"     * Construct an instance of a TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"     * @param tasks the initial ArrayList to be used","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"     * Get the task at the given index","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"     * @param index the index of the task to return","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"     * @return the task at specified index","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"     * Appends a task to end of the list","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"     * @param task the task to add","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"     * Removes a task at the given index","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"    public void remove(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"luffingluffy"},"content":"     * Enumerates (starting from 1) tasks in list using their string representations,","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"luffingluffy"},"content":"     * and stores such enumerations in a list that is to be returned","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"luffingluffy"},"content":"     * @return list of enumerations","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"luffingluffy"},"content":"    public List\u003cString\u003e enumerate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"luffingluffy"},"content":"        List\u003cString\u003e numList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"luffingluffy"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"luffingluffy"},"content":"            numList.add((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"luffingluffy"},"content":"        return numList;","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"luffingluffy"},"content":"    public TaskList filter(String word) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"luffingluffy"},"content":"        ArrayList\u003cTask\u003e filterList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"luffingluffy"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"luffingluffy"},"content":"            if (t.toString().contains(word)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"luffingluffy"},"content":"                filterList.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"luffingluffy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"luffingluffy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"luffingluffy"},"content":"        return new TaskList(filterList);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luffingluffy":89}},{"path":"src/main/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"    void deadline_normalInput_writtenCorrectly() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"        assertEquals(\"D | 0 | Test Deadline | 25-06-2021 12:00\",","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"                new Deadline(\"Test Deadline\", \"25-06-2021 12:00\").databaseString());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"    public void event_normalInput_writtenCorrectly() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"        assertEquals(\"E | 0 | Test Event | 25-06-2021 12:00\",","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"                new Event(\"Test Event\", \"25-06-2021 12:00\").databaseString());","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"    public void todo_normalInput_writtenCorrectly() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"        assertEquals(\"T | 0 | Test Todo\",","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"                new Todo(\"Test Todo\").databaseString());","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luffingluffy":25}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":" * Encapsulates the idea of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"    // constants","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"    private static final String TYPE \u003d \"T\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"    // constructor","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"     * Constructor for a Todo","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Todo","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"luffingluffy"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"luffingluffy"},"content":"     * Constructor for a Todo and whether it is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"luffingluffy"},"content":"     * @param description the description of the Todo","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"luffingluffy"},"content":"     * @param isDone      whether the Event is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"luffingluffy"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"luffingluffy"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"luffingluffy"},"content":"     * Getter method to get the String representation","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"luffingluffy"},"content":"     * of the type of the Todo object","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"luffingluffy"},"content":"     * @return the type of Todo","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"luffingluffy"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"luffingluffy"},"content":"        return TYPE;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"luffingluffy"},"content":"     * A method to convert and format a Todo object","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"luffingluffy"},"content":"     * into a string to be stored in the database","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"luffingluffy"},"content":"     * @return the formatted string representation","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luffingluffy"},"content":"    public String databaseString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luffingluffy"},"content":"        return TYPE + \" | \" + super.databaseString();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"luffingluffy"},"content":"     * A method to convert a Todo object into a string representation","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"luffingluffy"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"luffingluffy"},"content":"     * @return the string representation of an Event","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"luffingluffy"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"luffingluffy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"luffingluffy"},"content":"        return String.format(\"[%s][%s] %s\", getLabel(), getStatusIcon(), this.description);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"luffingluffy":63}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"package duke.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luffingluffy"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"luffingluffy"},"content":" * Represents a user interface that controls the interactions with the user","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"luffingluffy"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"luffingluffy"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"luffingluffy"},"content":"    // constants","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"luffingluffy"},"content":"    private static final String INTRO_MESSAGE \u003d \"Hello! I\u0027m Biscuit.\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luffingluffy"},"content":"            + \"What do you want me to do?\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luffingluffy"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luffingluffy"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"luffingluffy"},"content":"     * Greets the user","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"luffingluffy"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"luffingluffy"},"content":"    public void greet() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luffingluffy"},"content":"        System.out.println(INTRO_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luffingluffy"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luffingluffy":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"luffingluffy"},"content":"todo borrow book","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"luffingluffy":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"luffingluffy"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"luffingluffy":1,"-":20}}]
