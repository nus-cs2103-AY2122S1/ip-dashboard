[{"path":"src/main/java/ChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"public class ChatBot {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"    private Task[] list \u003d new Task[100];","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"    private int lastIndex \u003d 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"    private String welcomeMessage() {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"        String greeting \u003d \"Why hello there! It\u0027s Duke here!\\n\" + \"How can I help you today master?\";","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"        return greeting;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"    private boolean listEmpty() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"        boolean empty \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"thanwinnikki"},"content":"                empty \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"thanwinnikki"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"thanwinnikki"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"thanwinnikki"},"content":"        return empty;","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"thanwinnikki"},"content":"    private void printList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"thanwinnikki"},"content":"        for (int i \u003d 0; i \u003c\u003d lastIndex; i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"thanwinnikki"},"content":"            if (list[i] !\u003d null) {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"thanwinnikki"},"content":"                System.out.println(i + 1 + \".\" + this.list[i].printTask());","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"thanwinnikki"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"thanwinnikki"},"content":"    private boolean checkDone(String str) {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"thanwinnikki"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"thanwinnikki"},"content":"        if (str.length() \u003e 3) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"thanwinnikki"},"content":"            isDone \u003d str.substring(0,4).equals(\"done\");","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"thanwinnikki"},"content":"        return isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"thanwinnikki"},"content":"    private void doneSeq(String str) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"thanwinnikki"},"content":"        System.out.println(\"Good job for this thing done man:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"thanwinnikki"},"content":"        int indexNum \u003d Integer.parseInt(str.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"thanwinnikki"},"content":"        list[indexNum - 1].setComplete();","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"thanwinnikki"},"content":"        System.out.println(\"   \" + list[indexNum - 1].printTask());","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"thanwinnikki"},"content":"    private boolean checkToDo(String str) {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"thanwinnikki"},"content":"        boolean isToDo \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"thanwinnikki"},"content":"        if (str.length() \u003e\u003d 4) {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"thanwinnikki"},"content":"            isToDo \u003d str.substring(0,4).equals(\"todo\");","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"thanwinnikki"},"content":"        return isToDo;","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"thanwinnikki"},"content":"    private void todoSeq(String str) throws InputError {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"thanwinnikki"},"content":"        if (str.length() \u003d\u003d 4 ) {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"thanwinnikki"},"content":"            throw new InputError(\"Description Please!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"thanwinnikki"},"content":"        System.out.println(\"Alrighty! I have added this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"thanwinnikki"},"content":"        list[lastIndex] \u003d new ToDo(str.substring(5));","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"thanwinnikki"},"content":"        System.out.println(\"   \" + list[lastIndex].printTask());","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"thanwinnikki"},"content":"        lastIndex++;","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"thanwinnikki"},"content":"        System.out.println(\"Now you have \" + lastIndex + \" task(s) in total!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"thanwinnikki"},"content":"    private boolean checkDeadLine(String str) {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"thanwinnikki"},"content":"        boolean isDeadLine \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"thanwinnikki"},"content":"        if (str.length() \u003e\u003d 8) {","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"thanwinnikki"},"content":"            isDeadLine \u003d str.substring(0,8).equals(\"deadline\");","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"thanwinnikki"},"content":"        return isDeadLine;","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"thanwinnikki"},"content":"    private void deadlineSeq(String str) throws InputError {","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"thanwinnikki"},"content":"        if (str.length() \u003d\u003d 8 ) {","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"thanwinnikki"},"content":"            throw new InputError(\"Description Please!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"thanwinnikki"},"content":"        System.out.println(\"Alrighty! I have added this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"thanwinnikki"},"content":"        list[lastIndex] \u003d new Deadline(str.substring(9, str.indexOf(\"/\")), str.substring(str.indexOf(\"/\") + 4));","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"thanwinnikki"},"content":"        System.out.println(\"   \" + list[lastIndex].printTask());","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"thanwinnikki"},"content":"        lastIndex++;","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"thanwinnikki"},"content":"        System.out.println(\"Now you have \" + lastIndex + \" task(s) in total!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"thanwinnikki"},"content":"    private boolean checkEvent(String str) {","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"thanwinnikki"},"content":"        boolean isEvent \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"thanwinnikki"},"content":"        if (str.length() \u003e\u003d 5) {","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"thanwinnikki"},"content":"            isEvent\u003d str.substring(0,5).equals(\"event\");","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"thanwinnikki"},"content":"        return isEvent;","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"thanwinnikki"},"content":"    private void eventSeq(String str) throws InputError {","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"thanwinnikki"},"content":"        if (str.length() \u003d\u003d 5 ) {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"thanwinnikki"},"content":"            throw new InputError(\"Description Please!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"thanwinnikki"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"thanwinnikki"},"content":"            System.out.println(\"Alrighty! I have added this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"thanwinnikki"},"content":"            list[lastIndex] \u003d new Event(str.substring(6, str.indexOf(\"/\")), str.substring(str.indexOf(\"/\") + 4));","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"thanwinnikki"},"content":"            System.out.println(\"   \" + list[lastIndex].printTask());","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"thanwinnikki"},"content":"            lastIndex++;","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"thanwinnikki"},"content":"            System.out.println(\"Now you have \" + lastIndex + \" task(s) in total!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"thanwinnikki"},"content":"    private void startInput() throws InputError {","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"thanwinnikki"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"thanwinnikki"},"content":"        String input \u003d userInput.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"thanwinnikki"},"content":"        boolean doneInput \u003d checkDone(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"thanwinnikki"},"content":"        boolean todoInput \u003d checkToDo(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"thanwinnikki"},"content":"        boolean deadlineInput \u003d checkDeadLine(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"thanwinnikki"},"content":"        boolean eventInput \u003d checkEvent(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"thanwinnikki"},"content":"        if (input.equals(\"bye\")) {                                          //bye input","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"thanwinnikki"},"content":"            System.out.println(\"See ya again later!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"thanwinnikki"},"content":"            userInput.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"thanwinnikki"},"content":"            return;","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"thanwinnikki"},"content":"        } else if (input.equals(\"list\")) {                                   //list input","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"thanwinnikki"},"content":"            if (this.listEmpty()) {                                          //empty list check","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"thanwinnikki"},"content":"                System.out.println(\"You haven\u0027t added anything yet!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"thanwinnikki"},"content":"            } else {                                                         //non-empty list","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"thanwinnikki"},"content":"                printList();","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"thanwinnikki"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"thanwinnikki"},"content":"        } else if (doneInput) {                                              //done input","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"thanwinnikki"},"content":"            doneSeq(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"thanwinnikki"},"content":"        } else if (todoInput) {","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"thanwinnikki"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"thanwinnikki"},"content":"                todoSeq(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"thanwinnikki"},"content":"            } catch (InputError e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"thanwinnikki"},"content":"                System.out.println(\"Here is the error boss. \" + e);","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"thanwinnikki"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"thanwinnikki"},"content":"        } else if (deadlineInput) {","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"thanwinnikki"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"thanwinnikki"},"content":"                deadlineSeq(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"thanwinnikki"},"content":"            } catch (InputError e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"thanwinnikki"},"content":"                System.out.println(\"Here is the error boss. \" + e);","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"thanwinnikki"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"thanwinnikki"},"content":"        } else if (eventInput) {","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"thanwinnikki"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"thanwinnikki"},"content":"                eventSeq(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"thanwinnikki"},"content":"            } catch (InputError e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"thanwinnikki"},"content":"                System.out.println(\"Here is the error boss. \" + e);","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"thanwinnikki"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"thanwinnikki"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"thanwinnikki"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"thanwinnikki"},"content":"                throw new InputError(\"Invalid Input\");","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"thanwinnikki"},"content":"            } catch (InputError e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"thanwinnikki"},"content":"                System.out.println(\"Here is the error boss. \" + e);","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"thanwinnikki"},"content":"                System.out.println(\"I\u0027m not too sure what you meant.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"thanwinnikki"},"content":"                System.out.println(\"Try again with these keywords.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"thanwinnikki"},"content":"                System.out.println(\"todo deadline event\");","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"thanwinnikki"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"thanwinnikki"},"content":"        startInput();","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"thanwinnikki"},"content":"    void welcomeSeq() throws InputError {","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"thanwinnikki"},"content":"        System.out.println(this.welcomeMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"thanwinnikki"},"content":"        startInput();","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"thanwinnikki":170}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"    private String deadLine;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"    public Deadline(String task, String deadLine) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"        this.deadLine \u003d deadLine;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"    String printTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"        if (super.complete) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"            result \u003d \"[D][X] \";","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"            result \u003d \"[D][ ] \";","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"        return result + super.task + \"(by: \" + this.deadLine + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"thanwinnikki":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"    public static void main(String[] args) throws InputError {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"        ChatBot currBot \u003d new ChatBot();","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"        currBot.welcomeSeq(); //Prints welcome message first","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"thanwinnikki":5,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"    private String timing;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"    public Event(String task, String timing) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"    String printTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"        if (super.complete) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"            result \u003d \"[E][X] \";","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"            result \u003d \"[E][ ] \";","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"        return result + super.task + \"(at: \" + this.timing + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"thanwinnikki":20}},{"path":"src/main/java/InputError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"public class InputError extends Exception{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"    public InputError(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"thanwinnikki":7}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"    protected boolean complete;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"    protected String task;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"    public Task(String task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"        this.complete \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"    String printTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"        if (complete) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"            result \u003d \"[X] \";","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"            result \u003d \"[ ] \";","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"thanwinnikki"},"content":"        return result + this.task;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"thanwinnikki"},"content":"    void setComplete() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"thanwinnikki"},"content":"        this.complete \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"thanwinnikki":24}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"thanwinnikki"},"content":"    public ToDo(String task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"thanwinnikki"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"thanwinnikki"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"thanwinnikki"},"content":"    String printTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"thanwinnikki"},"content":"         String result \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"thanwinnikki"},"content":"        if(this.complete) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"thanwinnikki"},"content":"            result \u003d \"[T][X] \";","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"thanwinnikki"},"content":"         } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"thanwinnikki"},"content":"            result \u003d \"[T][ ] \";","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"thanwinnikki"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"thanwinnikki"},"content":"        return result + this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"thanwinnikki"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"thanwinnikki"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"thanwinnikki":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"thanwinnikki"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"thanwinnikki":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"thanwinnikki"},"content":"del ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"thanwinnikki":1,"-":20}}]
