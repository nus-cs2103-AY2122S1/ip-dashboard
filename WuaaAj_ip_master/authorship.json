[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":" * Tasks that need to be done before a specific date/time","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"    private String endTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"    public Deadline(String name, String endTime) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + endTime + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":" * The Bhutu chatbot app","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"     * Add task to taskList","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"     * @param task the task want to add to the list","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"    public static void addTask(ArrayList\u003cTask\u003e taskList, Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"     \" + task.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"     * To get the task object in a taskList using its index","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"     * @param index the index of task in the tasklist","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"     * @return","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"    public static Task getTask(ArrayList\u003cTask\u003e taskList, Integer index) {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"     * Handle bye category input","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"    public static void bye(){","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"     * Handle list category input","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"WuaaAj"},"content":"    public static void list(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"WuaaAj"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"WuaaAj"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"WuaaAj"},"content":"            System.out.println(\"    \" + (i + 1) + \". \" + task.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"WuaaAj"},"content":"     * Handle done category input","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"WuaaAj"},"content":"     * @param task the task that was completed","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"WuaaAj"},"content":"    public static void done(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"WuaaAj"},"content":"        task.doneTask();","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    \" + task.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"WuaaAj"},"content":"     * Delete a task from the list","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"WuaaAj"},"content":"     * @param task the task that want to be deleted from the list","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"WuaaAj"},"content":"    public static void delete(ArrayList\u003cTask\u003e taskList, Task task) {","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"WuaaAj"},"content":"        taskList.remove(task);","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Got it. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"     \" + task.toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"WuaaAj"},"content":"    public static void main(String[] args) throws DukeException{","lastModifiedDate":"2021-08-20"},{"lineNumber":73,"author":{"gitId":"WuaaAj"},"content":"        //Greet","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Hello! I\u0027m Duke.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"WuaaAj"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"WuaaAj"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"WuaaAj"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"WuaaAj"},"content":"        //Echo","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"WuaaAj"},"content":"        while (!exit) {","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"WuaaAj"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"WuaaAj"},"content":"            String[] pieces \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"WuaaAj"},"content":"            String command \u003d pieces[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"WuaaAj"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"WuaaAj"},"content":"            if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"WuaaAj"},"content":"                list(taskList);","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"WuaaAj"},"content":"            } else if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"WuaaAj"},"content":"                bye();","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"WuaaAj"},"content":"                exit \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"WuaaAj"},"content":"            } else if (command.equals(\"done\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"WuaaAj"},"content":"                int index \u003d Integer.parseInt(pieces[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"WuaaAj"},"content":"                Task task \u003d getTask(taskList, index-1);","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"WuaaAj"},"content":"                done(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"WuaaAj"},"content":"            } else if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"WuaaAj"},"content":"                try {","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"WuaaAj"},"content":"                    Task newTask \u003d new Todo(pieces[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"WuaaAj"},"content":"                    addTask(taskList, newTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"WuaaAj"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"WuaaAj"},"content":"                catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-08-20"},{"lineNumber":112,"author":{"gitId":"WuaaAj"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":113,"author":{"gitId":"WuaaAj"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":114,"author":{"gitId":"WuaaAj"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"WuaaAj"},"content":"                try {","lastModifiedDate":"2021-08-20"},{"lineNumber":116,"author":{"gitId":"WuaaAj"},"content":"                    String[] eventPieces \u003d pieces[1].split(\"/\", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"WuaaAj"},"content":"                    String name \u003d eventPieces[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"WuaaAj"},"content":"                    String[] timePieces \u003d eventPieces[1].split(\"at \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"WuaaAj"},"content":"                    String time \u003d timePieces[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"WuaaAj"},"content":"                    Task newTask \u003d new Event(name, time);","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"WuaaAj"},"content":"                    addTask(taskList, newTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"WuaaAj"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":123,"author":{"gitId":"WuaaAj"},"content":"                catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-08-20"},{"lineNumber":124,"author":{"gitId":"WuaaAj"},"content":"                    throw new DukeException(\"☹ Please enter the event command in \u0027event [task description]/at [start time]\u0027 format\");","lastModifiedDate":"2021-08-20"},{"lineNumber":125,"author":{"gitId":"WuaaAj"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":126,"author":{"gitId":"WuaaAj"},"content":"            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"WuaaAj"},"content":"                try {","lastModifiedDate":"2021-08-20"},{"lineNumber":128,"author":{"gitId":"WuaaAj"},"content":"                    String[] eventPieces \u003d pieces[1].split(\"/\", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"WuaaAj"},"content":"                    String name \u003d eventPieces[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"WuaaAj"},"content":"                    String[] timePieces \u003d eventPieces[1].split(\"by \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"WuaaAj"},"content":"                    String time \u003d timePieces[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"WuaaAj"},"content":"                    Task newTask \u003d new Deadline(name, time);","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"WuaaAj"},"content":"                    addTask(taskList, newTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"WuaaAj"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":135,"author":{"gitId":"WuaaAj"},"content":"                catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-08-20"},{"lineNumber":136,"author":{"gitId":"WuaaAj"},"content":"                    throw new DukeException(\"☹ Please enter the event command in \u0027deadline [task description]/by [end time]\u0027 format\");","lastModifiedDate":"2021-08-20"},{"lineNumber":137,"author":{"gitId":"WuaaAj"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":138,"author":{"gitId":"WuaaAj"},"content":"            } else if(command.equals(\"delete\")){","lastModifiedDate":"2021-08-20"},{"lineNumber":139,"author":{"gitId":"WuaaAj"},"content":"                int index \u003d Integer.parseInt(pieces[1]);","lastModifiedDate":"2021-08-20"},{"lineNumber":140,"author":{"gitId":"WuaaAj"},"content":"                Task task \u003d taskList.get(index-1);","lastModifiedDate":"2021-08-20"},{"lineNumber":141,"author":{"gitId":"WuaaAj"},"content":"                delete(taskList, task);","lastModifiedDate":"2021-08-20"},{"lineNumber":142,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":143,"author":{"gitId":"WuaaAj"},"content":"            }else {","lastModifiedDate":"2021-08-20"},{"lineNumber":144,"author":{"gitId":"WuaaAj"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-20"},{"lineNumber":145,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":146,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"WuaaAj"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":153,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"WuaaAj":144,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":" * The exceptions that may happen when run Duke","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"public class DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"    public DukeException(String message){","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"        super(message);","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":" * Tasks that start at a specific time and ends at a specific time","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"    private String startTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"    public Event(String name, String startTime) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + startTime + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":" * General category","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"    private String name;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"    private Boolean completed \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"     * Mark the task completed","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"    public void doneTask() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"        this.completed \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"        if(completed){","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"        return \"[ ] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":25}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":" * Tasks without any date/time attached to it e.g., visit new theme park","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"    public Todo(String name){","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"    public String toString(){","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":12}}]
