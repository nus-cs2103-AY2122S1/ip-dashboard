[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"[T][X] borrow book","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"[D][ ] return book -\u003eby: 2021-12-10","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"[D][ ] complete assignment -\u003eby: 2021-09-02","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":" * Tasks that need to be done before a specific date/time","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    private LocalDate endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    public Deadline(String name, LocalDate endTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"        return \"[D]\" + super.toString() + \"-\u003eby: \"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"                + endTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"    public String saveTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"        return \"[D]\" + super.toString() + \"-\u003eby: \" + endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":25}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":" * The Bhutu chatbot app","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"        Ui.greet();","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"        Storage storage \u003d Storage.initStorage(\"data/\", \"data/duke/txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"        storage.readFile(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"        //Echo","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"        while (!exit) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"            Ui.divider();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"            exit \u003d Parser.parser(input, taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"            storage.saveToFile(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"            Ui.divider();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"WuaaAj":28,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":" * The exceptions that may happen when run Duke","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"    public DukeException(String message){","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"        super(message);","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":" * Tasks that start at a specific time and ends at a specific time","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    private LocalDate startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    public Event(String name, LocalDate startTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"        return \"[E]\" + super.toString() + \"-\u003eat: \" +","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"                startTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"    public String saveTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"        return \"[E]\" + super.toString() + \"-\u003eat: \" + startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":25}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"     * Deals with parsing the command and do some reaction","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"     * @param input user command input","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"     * @return if the command required to exit","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException exceptions that are possible to occur in Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"    public static boolean parser(String input, TaskList taskList) throws DukeException{","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"        String[] pieces \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"        String command \u003d pieces[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"            Ui.list(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"            Ui.bye();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"        } else if (command.equals(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"                int index \u003d Integer.parseInt(pieces[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"                Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"                task.doneTask();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"                Ui.done(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"                throw new DukeException(\"☹ OOPS!!! Invalid task number\");","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"                Task newTask \u003d new Todo(pieces[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"                taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"WuaaAj"},"content":"                Ui.addTask(taskList, newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"            } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"WuaaAj"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"WuaaAj"},"content":"        } else if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"WuaaAj"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"WuaaAj"},"content":"                String[] eventPieces \u003d pieces[1].split(\"/\", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"WuaaAj"},"content":"                String name \u003d eventPieces[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"WuaaAj"},"content":"                String[] timePieces \u003d eventPieces[1].split(\"at \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"WuaaAj"},"content":"                LocalDate time \u003d LocalDate.parse(timePieces[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"WuaaAj"},"content":"                Task newTask \u003d new Event(name, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"WuaaAj"},"content":"                taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"WuaaAj"},"content":"                Ui.addTask(taskList, newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"WuaaAj"},"content":"            } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"WuaaAj"},"content":"                throw new DukeException(\"☹ Please enter the event command in \u0027event [task description]/at [start time]\u0027 format\");","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"WuaaAj"},"content":"        } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"WuaaAj"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"WuaaAj"},"content":"                String[] eventPieces \u003d pieces[1].split(\"/\", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"WuaaAj"},"content":"                String name \u003d eventPieces[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"WuaaAj"},"content":"                String[] timePieces \u003d eventPieces[1].split(\"by \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"WuaaAj"},"content":"                LocalDate time \u003d LocalDate.parse(timePieces[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"WuaaAj"},"content":"                Task newTask \u003d new Deadline(name, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"WuaaAj"},"content":"                taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"WuaaAj"},"content":"                taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"WuaaAj"},"content":"            } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"WuaaAj"},"content":"                throw new DukeException(\"☹ Please enter the event command in \u0027deadline [task description]/by [end time]\u0027 format\");","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"WuaaAj"},"content":"        } else if (command.equals(\"delete\")){","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"WuaaAj"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"WuaaAj"},"content":"                int index \u003d Integer.parseInt(pieces[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"WuaaAj"},"content":"                Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"WuaaAj"},"content":"                taskList.remove(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"WuaaAj"},"content":"                Ui.delete(taskList, task);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"WuaaAj"},"content":"            } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"WuaaAj"},"content":"                throw new DukeException(\"☹ OOPS!!! Invalid task number\");","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"WuaaAj"},"content":"        }else {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"WuaaAj"},"content":"        if(command \u003d\u003d \"bye\") {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"WuaaAj"},"content":"            return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"WuaaAj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"WuaaAj"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":86}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    private File file;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"    public Storage(File file) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"        this.file \u003d file;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"    };","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"     * Creates a new storage file for Duke in the corresponding file path","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"     * @param directory directory store the file","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"     * @param filePath the path of the file","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"     * @return a new \u0027Storage\u0027 object","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException Exception of Duke system","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"    public static Storage initStorage (String directory, String filePath) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"            Files.createDirectories(Paths.get(\"data/\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"            File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"            //Check if the file exists","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"                boolean r \u003d file.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"            return new Storage(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"        catch(IOException e){","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"☹ OOPS!!! Error occurs when try to create a new data file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"WuaaAj"},"content":"     * Save the taskList to the file","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException Exceptions that are possible to occur in Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"WuaaAj"},"content":"    public void saveToFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"WuaaAj"},"content":"            FileWriter fw \u003d new FileWriter(file, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"WuaaAj"},"content":"            for (int i\u003d0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"WuaaAj"},"content":"                Task task\u003d taskList.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"WuaaAj"},"content":"                fw.write(task.saveTask());","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"WuaaAj"},"content":"                fw.write(\"\\r\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"WuaaAj"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"WuaaAj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"☹ OOPS!!! Error occurs when save the data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"WuaaAj"},"content":"     * Read the file and reload the data from the file","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException Exceptions that are possible to occur in Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"WuaaAj"},"content":"    public void readFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"WuaaAj"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"WuaaAj"},"content":"            String current, desc, name;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"WuaaAj"},"content":"            LocalDate time;","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"WuaaAj"},"content":"            char type;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"WuaaAj"},"content":"            while(s.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"WuaaAj"},"content":"                current \u003d s.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"WuaaAj"},"content":"                type \u003d current.charAt(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"WuaaAj"},"content":"                if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"WuaaAj"},"content":"                    Task newTask \u003d new Todo(current.substring(7));","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"WuaaAj"},"content":"                    newTask.setCompleted(current.charAt(4)\u003d\u003d\u0027X\u0027);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"WuaaAj"},"content":"                    taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"WuaaAj"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"WuaaAj"},"content":"                else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"WuaaAj"},"content":"                    desc \u003d current.substring(7);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"WuaaAj"},"content":"                    String[] split \u003d desc.split(\"-\u003eat: \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"WuaaAj"},"content":"                    name \u003d split[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"WuaaAj"},"content":"                    time \u003d LocalDate.parse(split[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"WuaaAj"},"content":"                    Task newTask \u003d new Event(name, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"WuaaAj"},"content":"                    newTask.setCompleted(current.charAt(4)\u003d\u003d\u0027X\u0027);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"WuaaAj"},"content":"                    taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"WuaaAj"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"WuaaAj"},"content":"                else {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"WuaaAj"},"content":"                    desc \u003d current.substring(7);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"WuaaAj"},"content":"                    String[] split \u003d desc.split(\"-\u003eby: \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"WuaaAj"},"content":"                    name \u003d split[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"WuaaAj"},"content":"                    time \u003d LocalDate.parse(split[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"WuaaAj"},"content":"                    Task newTask \u003d new Deadline(name, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"WuaaAj"},"content":"                    newTask.setCompleted(current.charAt(4)\u003d\u003d\u0027X\u0027);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"WuaaAj"},"content":"                    taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"WuaaAj"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"WuaaAj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"OOPS!!! Error occurs when reload the data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":104}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":" * General category","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"    private String name;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"    private Boolean completed \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"     * Mark the task completed","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"    public void doneTask() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"        this.completed \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"    public void setCompleted(Boolean completed) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"     * make the string that will be saved to the file","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"     * @return a string that will be saved to the file","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"    public String saveTask(){","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"        return toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"        if(completed) {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"        return \"[ ] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":39}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"     * Add task to taskList","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"     * @param task the task want to add to the list","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"    public Integer size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"    public void remove(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"        taskList.remove(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":32}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":" * Tasks without any date/time attached to it e.g., visit new theme park","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"    public Todo(String name){","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"    public String toString(){","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":14}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"     * Print the greet expressions","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"    public static void greet() {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Hello! I\u0027m Duke.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"    public static void divider() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"     * Add task to taskList","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"     *t","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"     * @param task the task want to add to the list","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"    public static void addTask(TaskList taskList, Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"     \" + task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"     * Handle bye category input","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"    public static void bye() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"WuaaAj"},"content":"     * Handle list category input","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"WuaaAj"},"content":"    public static void list(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"WuaaAj"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"WuaaAj"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"WuaaAj"},"content":"            System.out.println(\"    \" + (i + 1) + \". \" + task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"WuaaAj"},"content":"     * Handle done category input","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"WuaaAj"},"content":"     * @param task the task that was completed","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"WuaaAj"},"content":"    public static void done(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    \" + task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"WuaaAj"},"content":"     * Delete a task from the list","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"WuaaAj"},"content":"     * @param task the task that want to be deleted from the list","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"WuaaAj"},"content":"    public static void delete(TaskList taskList, Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Got it. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"     \" + task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":73}},{"path":"src/main/java/duke/testDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"public class testDeadline {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"        assertEquals(\"[D][ ] return book-\u003eby: 12月 12 2021\",","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"                      new Deadline(\"return book\", LocalDate.parse(\"2021-12-12\")).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"        assertEquals(\"[D][ ] complete assignment-\u003eby: 10月 11 2021\",","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"                      new Deadline(\"complete assignment\", LocalDate.parse(\"2021-10-11\")).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"    public void testSaveTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"        assertEquals(\"[D][ ] return book-\u003eby: 2021-12-12\",","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"                new Deadline(\"return book\", LocalDate.parse(\"2021-12-12\")).saveTask());","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"        assertEquals(\"[D][ ] complete assignment-\u003eby: 2021-10-11\",","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"                new Deadline(\"complete assignment\", LocalDate.parse(\"2021-10-11\")).saveTask());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":26}},{"path":"src/main/java/duke/testParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"public class testParser {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"    public void parser_validInput_success() throws Exception{","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"        assertEquals(false, Parser.parser(\"todo borrow book\", new TaskList()));","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"        assertEquals(false, Parser.parser(\"event attend lecture/at 2021-12-12\", new TaskList()));","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"    public void parser_invalidInput_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"        try{","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"            assertEquals(false, Parser.parser(\"todo\", new TaskList()));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"        catch(DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"            new Exception(\"invalid input\");","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":26}}]
