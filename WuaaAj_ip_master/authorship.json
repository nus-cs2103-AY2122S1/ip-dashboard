[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"# DukePro","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"\u003e ‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen([source](https://dansilvestre.com/productivity-quotes/)) ","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"DukePro is a chat bot help you remember and manage your task. It is: ","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"* text-based","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"* easy to use","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"* ~~fast~~ ***Super* Fast**","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"### All you need to do is: ","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"1. Download it from [here](https://github.com/WuaaAj/ip/releases/tag/v0.1)","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"1. Double click it","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"1. Input command to **add/delete/list/mark** tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"1. Duke will manage your tasks according to your command! üòâ","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"### Features: ","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":" - [x] Managing tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":" - [ ] GUI (coming soon)","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":" - [ ] Reminder (coming soon)","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"#","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"#### If you Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"```java","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"public class Main {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"WuaaAj":23,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"    implementation \u0027junit:junit:4.12\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"WuaaAj"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"WuaaAj":18,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"[T][X] hello","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"[E][ ] attend class -\u003eat: 2021-09-02","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"[D][X] return book -\u003eby: 2021-10-12","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"[E][ ] go shop -\u003eat: 2021-09-10","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"WuaaAj":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"Duke is a chatbot help you remember and manage your task. It is:","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"* text-based","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"* easy to use","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"* fast","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"Shows a list of all tasks the user have added","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"Format: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"### Adding a \u0027todo\u0027 task: `todo`","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"Add a todo task with description to the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"Format: `todo {description}`","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"Example: `todo borrow book`","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"### Adding an \u0027event\u0027 task: `event`","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"Add an event task with description and its start time to the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"Format: `event {description} /at {startTime}`","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"* `startTime` should be in the form of yyyy-mm-dd","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"Example: `event attend lecture /at 2021-09-09`","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"### Adding a \u0027deadline\u0027 task: `deadline`","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"Add an event task with description and its end time to the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"Format: `event {description} /by {endTime}`","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"* `endTime` should be in the form of yyyy-mm-dd","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"Example: `event return book /by 2021-09-09`","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"WuaaAj"},"content":"### Marking task as done: `done`","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"WuaaAj"},"content":"Mark a task as already completed.","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"WuaaAj"},"content":"Format: `done {index}`","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"WuaaAj"},"content":"* mark the task at the specified `index`","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"WuaaAj"},"content":"* `index` should be a positive integer smaller than the size of task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"WuaaAj"},"content":"Example: `done 2`","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"WuaaAj"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"WuaaAj"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"WuaaAj"},"content":"Format: `delete {index}`","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"WuaaAj"},"content":"* mark the task at the specified `index`","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"WuaaAj"},"content":"* `index` should be a positive integer smaller than the size of task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"WuaaAj"},"content":"Example: `delete 2`","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"WuaaAj"},"content":"### Deleting a task: `find`","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"WuaaAj"},"content":"Find all tasks containing specified word.","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"WuaaAj"},"content":"Format: `find {keyWord}`","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"WuaaAj"},"content":"Example: `find book`","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"WuaaAj"},"content":"### Editing the time of a task: `update time`","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":71,"author":{"gitId":"WuaaAj"},"content":"Edit the time of an existing task","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"WuaaAj"},"content":"Format: `update time {index} {newTime}`","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"WuaaAj"},"content":"* mark the task at the specified `index`","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"WuaaAj"},"content":"* `index` should be a positive integer smaller than the size of task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"WuaaAj"},"content":"* `newTime` should be in the form of yyyy-mm-dd","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"WuaaAj"},"content":"Example: `update time 2 2021-12-12`","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"WuaaAj"},"content":"### Editing the description of a task: `update description`","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"WuaaAj"},"content":"Edit the time of an existing task","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"WuaaAj"},"content":"Format: `update description {index} {newName}`","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"WuaaAj"},"content":"* mark the task at the specified `index`","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"WuaaAj"},"content":"* `index` should be a positive integer smaller than the size of task list. ","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"WuaaAj"},"content":"Example: `update description 2 return book`","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"WuaaAj":68,"-":23}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":" * Tasks that need to be done before a specific date/time","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    private LocalDate endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    public Deadline(String name, LocalDate endTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"        return \"[D]\" + super.toString() + \"-\u003eby: \"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"                + endTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"        return \"[D]\" + super.toString() + \"-\u003eby: \" + endTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"    public void setTime(LocalDate time) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"        this.endTime \u003d time;","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":30}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"WuaaAj"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"WuaaAj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"WuaaAj"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"WuaaAj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"WuaaAj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"WuaaAj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"WuaaAj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"WuaaAj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"WuaaAj"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"WuaaAj"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"WuaaAj"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"WuaaAj"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"WuaaAj"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"WuaaAj":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":" * The Bhutu chatbot app","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"    TaskList taskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    Storage storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    public Duke() {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"            this.storage \u003d Storage.initStorage(\"data/\", \"data/duke.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"            storage.readFile(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"        } catch(DukeException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"            Ui.showError(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"     * Gets the response according to the user input","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"     * @param input user command","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"     * @return Duke\u0027s response","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"            //Echo","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"            String response \u003d Parser.parser(input, taskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"            storage.saveToFile(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"            return response;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"            return Ui.showError(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"WuaaAj":38,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":" * The exceptions that may happen when run Duke","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"    public DukeException(String message){","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"        super(message);","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":" * Tasks that start at a specific time and ends at a specific time","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    private LocalDate startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    public Event(String name, LocalDate startTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"        return \"[E]\" + super.toString() + \"-\u003eat: \" +","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"                startTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"        return \"[E]\" + super.toString() + \"-\u003eat: \" + startTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"    public void setTime(LocalDate time) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"        this.startTime \u003d time;","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":30}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"WuaaAj":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"WuaaAj":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"                DialogBox.getDukeDialog(Ui.greet(), dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"WuaaAj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"WuaaAj"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"WuaaAj"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"WuaaAj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"WuaaAj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"WuaaAj"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"WuaaAj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"WuaaAj"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"WuaaAj"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"WuaaAj"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"WuaaAj"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"WuaaAj":54}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.rmi.UnexpectedException;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"     * Deals with parsing the command and do some reaction","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"     * @param input user command input","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"     * @return if the command required to exit","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException exceptions that are possible to occur in Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"    public static String parser(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"        String[] pieces \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"        String command \u003d pieces[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"        switch (command) {","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"        case \"list\":","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"            return handleList(taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"            return handleBye();","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"        case \"done\":","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"            return handleDone(pieces, taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"            return handleTodo(pieces, taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"        case \"event\":","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"            return handleEvent(pieces, taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"            return handleDeadline(pieces, taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"            return handleDelete(pieces, taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"        case \"find\":","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"WuaaAj"},"content":"            return handleFind(pieces, taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"        case \"update\":","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"WuaaAj"},"content":"            return handleUpdate(pieces, taskList);","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"WuaaAj"},"content":"        default:","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"WuaaAj"},"content":"    private static String handleUpdate(String[] pieces, TaskList taskList) throws DukeException{","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"WuaaAj"},"content":"            assert(pieces.length \u003d\u003d 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"WuaaAj"},"content":"            String[] pieces2 \u003d pieces[1].split(\" \", 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"WuaaAj"},"content":"            String updateType \u003d pieces2[0];","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"WuaaAj"},"content":"            String[] pieces3 \u003d pieces2[1].split(\" \", 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"WuaaAj"},"content":"            Integer taskIndex \u003d Integer.parseInt(pieces3[0]);","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"WuaaAj"},"content":"            Task task \u003d taskList.get(taskIndex-1);","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"WuaaAj"},"content":"            String updateDetail \u003d pieces3[1] ;","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"WuaaAj"},"content":"            switch (updateType) {","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"WuaaAj"},"content":"            case \"time\":","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"WuaaAj"},"content":"                return handleUpdateTime(task, updateDetail);","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"WuaaAj"},"content":"            case \"description\":","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"WuaaAj"},"content":"                return handleUpdateDescription(task, updateDetail);","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"WuaaAj"},"content":"            default:","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"WuaaAj"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + updateType);","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"WuaaAj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"OOPS!!! Invalid task number\");","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"WuaaAj"},"content":"        } catch (IllegalStateException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"OOPS!!! Invalid command\");","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"WuaaAj"},"content":"    private static String handleUpdateDescription(Task task, String detail) {","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"WuaaAj"},"content":"        task.setName(detail);","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"WuaaAj"},"content":"        return Ui.update(task);","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":75,"author":{"gitId":"WuaaAj"},"content":"    private static String handleUpdateTime(Task task, String detail) throws DukeException{","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"WuaaAj"},"content":"        task.setTime(LocalDate.parse(detail));","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"WuaaAj"},"content":"        return Ui.update(task);","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"WuaaAj"},"content":"     * Handles the input started with \"find\"","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"WuaaAj"},"content":"     * @param pieces split command","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"WuaaAj"},"content":"     * @return the response of Duke","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"WuaaAj"},"content":"    private static String handleFind(String[] pieces, TaskList taskList) {","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"WuaaAj"},"content":"        TaskList tempList \u003d new TaskList();","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"WuaaAj"},"content":"        assert(pieces.length \u003d\u003d 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"WuaaAj"},"content":"        for(int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"WuaaAj"},"content":"            Task checkTask \u003d taskList.get(i);","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"WuaaAj"},"content":"            if (checkTask.getName().contains(pieces[1])) {","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"WuaaAj"},"content":"                tempList.add(checkTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"WuaaAj"},"content":"        System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"WuaaAj"},"content":"        return Ui.list(tempList);","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"WuaaAj"},"content":"     * Handles input started with \"delete\"","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"WuaaAj"},"content":"     * @param pieces split command","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"WuaaAj"},"content":"     * @return the response of Duke","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException Exception of Duke system","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"WuaaAj"},"content":"    private static String handleDelete(String[] pieces,TaskList taskList) throws DukeException{","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"WuaaAj"},"content":"            assert(pieces.length \u003d\u003d 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"WuaaAj"},"content":"            int index \u003d Integer.parseInt(pieces[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"WuaaAj"},"content":"            Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"WuaaAj"},"content":"            taskList.remove(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"WuaaAj"},"content":"            return Ui.delete(taskList, task);","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"WuaaAj"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"OOPS!!! Invalid task number\");","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"WuaaAj"},"content":"     * Handle the input started with \"deadline\"","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":123,"author":{"gitId":"WuaaAj"},"content":"     * @param pieces split command","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":125,"author":{"gitId":"WuaaAj"},"content":"     * @return the response of Duke","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException Exception of Duke system","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"WuaaAj"},"content":"    private static String handleDeadline(String[] pieces, TaskList taskList) throws DukeException{","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"WuaaAj"},"content":"            assert(pieces.length \u003d\u003d 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"WuaaAj"},"content":"            String[] eventPieces \u003d pieces[1].split(\"/\", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"WuaaAj"},"content":"            String name \u003d eventPieces[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"WuaaAj"},"content":"            String[] timePieces \u003d eventPieces[1].split(\"by \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"WuaaAj"},"content":"            LocalDate time \u003d LocalDate.parse(timePieces[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"WuaaAj"},"content":"            Task newTask \u003d new Deadline(name, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"WuaaAj"},"content":"            taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"WuaaAj"},"content":"            return Ui.addTask(taskList, newTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"WuaaAj"},"content":"        catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"Please enter the event command in \u0027deadline [task description]/by [end time]\u0027 format\");","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":144,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":145,"author":{"gitId":"WuaaAj"},"content":"     * Handle the input started with \"list\"","lastModifiedDate":"2021-09-08"},{"lineNumber":146,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":147,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":148,"author":{"gitId":"WuaaAj"},"content":"     * @return the response of Duke","lastModifiedDate":"2021-09-08"},{"lineNumber":149,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":150,"author":{"gitId":"WuaaAj"},"content":"    private static String handleList(TaskList taskList) {","lastModifiedDate":"2021-09-09"},{"lineNumber":151,"author":{"gitId":"WuaaAj"},"content":"        if(taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":152,"author":{"gitId":"WuaaAj"},"content":"            return \"Your list is empty!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":153,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":154,"author":{"gitId":"WuaaAj"},"content":"        return Ui.list(taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":155,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":156,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":157,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":158,"author":{"gitId":"WuaaAj"},"content":"     * Handle the input \"bye\"","lastModifiedDate":"2021-09-08"},{"lineNumber":159,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":160,"author":{"gitId":"WuaaAj"},"content":"     * @return the response of Duke","lastModifiedDate":"2021-09-08"},{"lineNumber":161,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":162,"author":{"gitId":"WuaaAj"},"content":"    private static String handleBye() {","lastModifiedDate":"2021-09-09"},{"lineNumber":163,"author":{"gitId":"WuaaAj"},"content":"        return Ui.bye();","lastModifiedDate":"2021-09-08"},{"lineNumber":164,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":165,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":166,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":167,"author":{"gitId":"WuaaAj"},"content":"     * Handle the input started with \"done\"","lastModifiedDate":"2021-09-08"},{"lineNumber":168,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":169,"author":{"gitId":"WuaaAj"},"content":"     * @param pieces split command","lastModifiedDate":"2021-09-08"},{"lineNumber":170,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":171,"author":{"gitId":"WuaaAj"},"content":"     * @return the response of Duke","lastModifiedDate":"2021-09-08"},{"lineNumber":172,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException Exception of Duke system","lastModifiedDate":"2021-09-09"},{"lineNumber":173,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":174,"author":{"gitId":"WuaaAj"},"content":"    private static String handleDone(String[] pieces, TaskList taskList) throws DukeException{","lastModifiedDate":"2021-09-09"},{"lineNumber":175,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"WuaaAj"},"content":"            assert(pieces.length \u003d\u003d 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":177,"author":{"gitId":"WuaaAj"},"content":"            int index \u003d Integer.parseInt(pieces[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"WuaaAj"},"content":"            assert(index \u003c\u003d taskList.size());","lastModifiedDate":"2021-09-08"},{"lineNumber":179,"author":{"gitId":"WuaaAj"},"content":"            Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":180,"author":{"gitId":"WuaaAj"},"content":"            task.markAsDone();","lastModifiedDate":"2021-09-08"},{"lineNumber":181,"author":{"gitId":"WuaaAj"},"content":"            return Ui.done(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":182,"author":{"gitId":"WuaaAj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"OOPS!!! Invalid task number\");","lastModifiedDate":"2021-09-01"},{"lineNumber":184,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":187,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":188,"author":{"gitId":"WuaaAj"},"content":"     * Handle the input started with \"todo\"","lastModifiedDate":"2021-09-08"},{"lineNumber":189,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":190,"author":{"gitId":"WuaaAj"},"content":"     * @param pieces split command","lastModifiedDate":"2021-09-08"},{"lineNumber":191,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":192,"author":{"gitId":"WuaaAj"},"content":"     * @return the response of Duke","lastModifiedDate":"2021-09-08"},{"lineNumber":193,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException Exception of Duke system","lastModifiedDate":"2021-09-09"},{"lineNumber":194,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":195,"author":{"gitId":"WuaaAj"},"content":"    private static String handleTodo(String[] pieces, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":196,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":197,"author":{"gitId":"WuaaAj"},"content":"            Task newTask \u003d new Todo(pieces[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":198,"author":{"gitId":"WuaaAj"},"content":"            taskList.add(newTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":199,"author":{"gitId":"WuaaAj"},"content":"            return Ui.addTask(taskList, newTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":200,"author":{"gitId":"WuaaAj"},"content":"        } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-09-08"},{"lineNumber":201,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":202,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":206,"author":{"gitId":"WuaaAj"},"content":"     * Handle the input started with \"event\"","lastModifiedDate":"2021-09-08"},{"lineNumber":207,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":208,"author":{"gitId":"WuaaAj"},"content":"     * @param pieces split command","lastModifiedDate":"2021-09-08"},{"lineNumber":209,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":210,"author":{"gitId":"WuaaAj"},"content":"     * @return the response of Duke","lastModifiedDate":"2021-09-08"},{"lineNumber":211,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException Exception of Duke system","lastModifiedDate":"2021-09-09"},{"lineNumber":212,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":213,"author":{"gitId":"WuaaAj"},"content":"    private static String handleEvent(String[] pieces, TaskList taskList) throws DukeException{","lastModifiedDate":"2021-09-09"},{"lineNumber":214,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":215,"author":{"gitId":"WuaaAj"},"content":"            String[] eventPieces \u003d pieces[1].split(\"/\", 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":216,"author":{"gitId":"WuaaAj"},"content":"            String name \u003d eventPieces[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":217,"author":{"gitId":"WuaaAj"},"content":"            String[] timePieces \u003d eventPieces[1].split(\"at \", 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":218,"author":{"gitId":"WuaaAj"},"content":"            LocalDate time \u003d LocalDate.parse(timePieces[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":219,"author":{"gitId":"WuaaAj"},"content":"            Task newTask \u003d new Event(name, time);","lastModifiedDate":"2021-09-08"},{"lineNumber":220,"author":{"gitId":"WuaaAj"},"content":"            taskList.add(newTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":221,"author":{"gitId":"WuaaAj"},"content":"            return Ui.addTask(taskList, newTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":222,"author":{"gitId":"WuaaAj"},"content":"        } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-09-08"},{"lineNumber":223,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"Please enter the event command in \u0027event [task description]/at [start time]\u0027 format\");","lastModifiedDate":"2021-09-08"},{"lineNumber":224,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":225,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":226}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    private File file;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"    public Storage(File file) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"        this.file \u003d file;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"    };","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"     * Creates a new storage file for Duke in the corresponding file path","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"     * @param directory directory store the file","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"     * @param filePath the path of the file","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"     * @return a new \u0027Storage\u0027 object","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException Exception of Duke system","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"    public static Storage initStorage (String directory, String filePath) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"            Files.createDirectories(Paths.get(\"data/\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"            File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"            //Check if the file exists","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"                boolean r \u003d file.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"            return new Storage(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"WuaaAj"},"content":"        catch(IOException e){","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\" OOPS!!! Error occurs when try to create a new data file\");","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"WuaaAj"},"content":"     * Save the taskList to the file","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException Exceptions that are possible to occur in Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"WuaaAj"},"content":"    public void saveToFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"WuaaAj"},"content":"            FileWriter fw \u003d new FileWriter(file, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"WuaaAj"},"content":"            for (int i\u003d0; i\u003ctaskList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"WuaaAj"},"content":"                Task task\u003d taskList.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"WuaaAj"},"content":"                fw.write(task.toStorageFormat());","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"WuaaAj"},"content":"                fw.write(\"\\r\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"WuaaAj"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"WuaaAj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\" OOPS!!! Error occurs when save the data\");","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"WuaaAj"},"content":"     * Read the file and reload the data from the file","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"WuaaAj"},"content":"     * @throws DukeException Exceptions that are possible to occur in Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"WuaaAj"},"content":"    public void readFile(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"WuaaAj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"WuaaAj"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"WuaaAj"},"content":"            String current, desc, name;","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"WuaaAj"},"content":"            LocalDate time;","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"WuaaAj"},"content":"            char type;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"WuaaAj"},"content":"            while(s.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"WuaaAj"},"content":"                current \u003d s.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"WuaaAj"},"content":"                type \u003d current.charAt(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"WuaaAj"},"content":"                if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"WuaaAj"},"content":"                    Task newTask \u003d new Todo(current.substring(7));","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"WuaaAj"},"content":"                    newTask.setIsDone(current.charAt(4)\u003d\u003d\u0027X\u0027);","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"WuaaAj"},"content":"                    taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"WuaaAj"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"WuaaAj"},"content":"                else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"WuaaAj"},"content":"                    desc \u003d current.substring(7);","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"WuaaAj"},"content":"                    String[] split \u003d desc.split(\"-\u003eat: \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"WuaaAj"},"content":"                    name \u003d split[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"WuaaAj"},"content":"                    time \u003d LocalDate.parse(split[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"WuaaAj"},"content":"                    Task newTask \u003d new Event(name, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"WuaaAj"},"content":"                    newTask.setIsDone(current.charAt(4)\u003d\u003d\u0027X\u0027);","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"WuaaAj"},"content":"                    taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"WuaaAj"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"WuaaAj"},"content":"                else {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"WuaaAj"},"content":"                    desc \u003d current.substring(7);","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"WuaaAj"},"content":"                    String[] split \u003d desc.split(\"-\u003eby: \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"WuaaAj"},"content":"                    name \u003d split[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"WuaaAj"},"content":"                    time \u003d LocalDate.parse(split[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"WuaaAj"},"content":"                    Task newTask \u003d new Deadline(name, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"WuaaAj"},"content":"                    newTask.setIsDone(current.charAt(4)\u003d\u003d\u0027X\u0027);","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"WuaaAj"},"content":"                    taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"WuaaAj"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"WuaaAj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"WuaaAj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"WuaaAj"},"content":"            throw new DukeException(\"OOPS!!! Error occurs when reload the data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":107}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":" * General category","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"    private String name;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    private Boolean isDone \u003d false;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"     * Mark the task completed","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"    public void setIsDone(Boolean isDone) {","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"     * make the string that will be saved to the file","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"     * @return a string that will be saved to the file","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"    public String toStorageFormat(){","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"        return toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"    public String getName() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"        return name;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"WuaaAj"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"WuaaAj"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"WuaaAj"},"content":"    abstract public void setTime(LocalDate time) throws DukeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"WuaaAj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"WuaaAj"},"content":"        if(isDone) {","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"WuaaAj"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"WuaaAj"},"content":"        return \"[ ] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":52}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"     * Add task to taskList","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"     * @param task the task want to add to the list","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"    public Integer size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"    public void remove(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"        taskList.remove(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":33}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":" * Tasks without any date/time attached to it e.g., visit new theme park","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"    public Todo(String name){","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"    public void setTime(LocalDate time) throws DukeException{","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"        throw new DukeException(\"Cannot edit time for \u0027Todo\u0027 task\");","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"    public String toString(){","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"WuaaAj":22}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"     * Print the greet expressions","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"    public static String greet() {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"        return \"Hello, I\u0027m Duke. What can I do for you?\";","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"     * Add task to taskList","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"     * @param task the task want to add to the list","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"    public static String addTask(TaskList taskList, Task task) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"        String line1 \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"        String line2 \u003d  task.toString() + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"        String line3 \u003d \"Now you have \" + taskList.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"        return line1 + line2 + line3;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"     * Handle bye category input","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"    public static String bye() {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"        return  \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"WuaaAj"},"content":"     * Handle list category input","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"WuaaAj"},"content":"    public static String list(TaskList taskList) {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"WuaaAj"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"WuaaAj"},"content":"        String newStr;","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"WuaaAj"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"WuaaAj"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"WuaaAj"},"content":"            newStr \u003d  (i + 1) + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"WuaaAj"},"content":"            str \u003d str + newStr;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"WuaaAj"},"content":"        return str;","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"WuaaAj"},"content":"     * Handle done category input","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"WuaaAj"},"content":"     * @param task the task that was completed","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"WuaaAj"},"content":"    public static String done(Task task) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"WuaaAj"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + task.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"WuaaAj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"WuaaAj"},"content":"     * Delete a task from the list","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"WuaaAj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"WuaaAj"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"WuaaAj"},"content":"     * @param task the task that want to be deleted from the list","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"WuaaAj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"WuaaAj"},"content":"    public static String delete(TaskList taskList, Task task) {","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"WuaaAj"},"content":"        String line1 \u003d \"Got it. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"WuaaAj"},"content":"        String line2 \u003d task.toString() + \"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"WuaaAj"},"content":"        String line3 \u003d \"Now you have \" + taskList.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"WuaaAj"},"content":"        return line1 + line2 + line3;","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"WuaaAj"},"content":"    public static String update(Task task) {","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"WuaaAj"},"content":"        String line1 \u003d \"Got it. I\u0027ve updated this task:\\n\";","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"WuaaAj"},"content":"        String line2 \u003d task.toString() + \"\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"WuaaAj"},"content":"        return line1 + line2;","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"WuaaAj"},"content":"    public static String showError(String s) {","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"WuaaAj"},"content":"        return s;","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":77}},{"path":"src/main/java/duke/testDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"import org.junit.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"public class testDeadline {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"        assertEquals(\"[D][ ] return book-\u003eby: Dec 12 2021\",","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"                      new Deadline(\"return book\", LocalDate.parse(\"2021-12-12\")).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"        assertEquals(\"[D][ ] complete assignment-\u003eby: Oct 11 2021\",","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"                      new Deadline(\"complete assignment\", LocalDate.parse(\"2021-10-11\")).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"    public void testToStorageFormat() {","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"        assertEquals(\"[D][ ] return book-\u003eby: 2021-12-12\",","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"                new Deadline(\"return book\", LocalDate.parse(\"2021-12-12\")).toStorageFormat());","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"        assertEquals(\"[D][ ] complete assignment-\u003eby: 2021-10-11\",","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"                new Deadline(\"complete assignment\", LocalDate.parse(\"2021-10-11\")).toStorageFormat());","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":26}},{"path":"src/main/java/duke/testParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"import static org.junit.Assert.fail;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"//import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"public class testParser {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"    public void parser_validInput_success() throws Exception{","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"        assertEquals(false, Parser.parser(\"todo borrow book\", new TaskList()));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"        assertEquals(false, Parser.parser(\"event attend lecture/at 2021-12-12\", new TaskList()));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"    public void parser_invalidInput_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"        try{","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"            assertEquals(false, Parser.parser(\"todo\", new TaskList()));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"WuaaAj"},"content":"        catch(DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"WuaaAj"},"content":"            new Exception(\"invalid input\");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"WuaaAj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"WuaaAj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"WuaaAj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"WuaaAj":31}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #B8AA9F;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" graphicTextGap\u003d\"6.0\" style\u003d\"-fx-border-color: #5C4E46; -fx-border-radius: 5; -fx-background-color: #ae9e92;\" text\u003d\"Label\" textFill\u003d\"#5c4e46\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"WuaaAj"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"WuaaAj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"WuaaAj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"WuaaAj"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"25.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"WuaaAj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"WuaaAj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"WuaaAj":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"WuaaAj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"WuaaAj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"WuaaAj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"WuaaAj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"WuaaAj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"WuaaAj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"WuaaAj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"WuaaAj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"WuaaAj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"WuaaAj"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"1.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"323.0\" style\u003d\"-fx-background-color: #EAE9DB; -fx-border-color: #5C4E4680; -fx-border-radius: 5;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"WuaaAj"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-border-width: 1.5; -fx-border-color: #A57681; -fx-border-radius: 5;\" text\u003d\"Send\" textFill\u003d\"#7d525c\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"WuaaAj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"WuaaAj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"WuaaAj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #B8AA9F;\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"WuaaAj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"WuaaAj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"WuaaAj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"WuaaAj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"WuaaAj":19}}]
