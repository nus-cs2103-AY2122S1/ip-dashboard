[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"# Welcome to Alice!","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"## _The Last Virtual Assistant You will ever need, Ever_","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"Alice is a virtual assistant started off as Duke task manager before evolving in to her own form.","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"- Choose a save file by typing the save file name in","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"- See your current task","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"- ✨Start editing✨","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"## Features","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"- [X] Create local save files location for Alice to remember the task","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"- [X] Fetch certain deadlines, events and other tasks using the yyyy-MM-dd format","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"- [X] Fetch certain deadlines, events and other tasks using \"keywords\"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"- [X] Customize your Alice by teaching her your own vocabulary","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"- [X] GUI (now enhanced!)","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"- [X] Create, Save, Delete save files","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"\u003e Let\u0027s make a slight change to create big difference","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"Alice is aimed to be implmeneted into a website in the future with ","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"continuously improving UI, UX, and backend.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"```java","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"public class Main {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        Application.launch(alice.Alice.class, args);","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"\u003cdiv\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    \u003cimg align\u003d\"center\" src\u003d\"https://github.com/kanjitp/ip/blob/master/docs/screenshots/enter_file_demo.gif?raw\u003dtrue\" style\u003d\"width:33%\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    \u003cimg align\u003d\"center\" src\u003d\"https://github.com/kanjitp/ip/blob/master/docs/screenshots/alice_0.03_2_demo.gif?raw\u003dtrue\" style\u003d\"width:33%\"/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"## Acknowledgement","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"- DialogBox model by: [se-education.org](https://se-education.org/guides/tutorials/javaFx.html)","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"- CSS for DialogBox inspired by: [munharsha](https://github.com/munharsha/ip)","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"- Space background using JavaFX tutorial by: [edencoding](https://edencoding.com/resources/css_properties/fx-background-color/)","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"- Alice Avatar by [Catalyst Labs](https://www.shutterstock.com/image-vector/cat-robot-cartoon-vector-icon-illustration-1801648348) confirmation number: [SSTK-01B91-05A1]()","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"- User Avatar by [Koby Mendez](https://unsplash.com/@kobbyfotos)","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"kanjitp":38,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"application {","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"shadowJar {","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    archiveBaseName \u003d \"Alice\"","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"kanjitp":26,"-":40}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"ret\u003d0","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"IFS\u003d\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        ret\u003d1","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    fi","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"done","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"exit $ret","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"kanjitp":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"awk \u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"    BEGIN {","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"        ret \u003d 0","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    {","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"        ret \u003d 1","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    END {","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"        exit ret","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"\u0027","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"kanjitp":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"awk \u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"    BEGIN {","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"        ret \u003d 0","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"    {","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"            ret \u003d 1","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    END {","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"        exit ret","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"\u0027","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"kanjitp":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"        ret\u003d1","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    fi","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"done","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"exit $ret","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"kanjitp":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"# Welcome to Alice User Guide","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"\u003e Let\u0027s make a slight change to create a big difference","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"### Screenshots:","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"\u003cdiv\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"    \u003cimg align\u003d\"center\" src\u003d\"https://github.com/kanjitp/ip/blob/master/docs/screenshots/alice_0.03_1.png?raw\u003dtrue\" style\u003d\"width:32%\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    \u003cimg align\u003d\"center\" src\u003d\"https://github.com/kanjitp/ip/blob/master/docs/screenshots/alice_0.03_2.png?raw\u003dtrue\" style\u003d\"width:32%\"/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    \u003cimg align\u003d\"center\" src\u003d\"https://github.com/kanjitp/ip/blob/master/docs/screenshots/alice_0.03_3.png?raw\u003dtrue\" style\u003d\"width:32%\"/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"Alice is a virtual assistant started off as Duke task manager before evolving in to her own form.","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"## This User Guide contains:","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"- **Features:**","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    **Alice Start Page**","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    -   [Create, Open, Delete multiple save files for different occasions](#create-open-delete-save-files-for-different-occasions-in-the-start-page)","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    -   [Navigating to different save files](#navigating-to-different-save-files-through-start-page)","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    ---","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    **Alice Chat Page**","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    -   [Add **Todo** task](#add-todo-task)","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    -   [Add **event** task](#add-event-task)","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    -   [Add **deadline** task](#add-deadline-task)","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    -   [Mark task as **done**](#mark-task-as-done)","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    -   [**Delete** task](#delete-task)","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    -   [Search certain tasks using **date** to find upcoming task till that date](#search-certain-tasks-using-date-to-find-upcoming-task-till-that-date)","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    -   [Search certain tasks using **\"keywords\"**](#search-certain-tasks-using-keywords)","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    -   [Teach Alice to **learn** how to respond to certain vocabulary or sentences](#teach-alice-to-learn-how-to-respond-to-certain-vocabulary-or-sentences)","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    -   [Tell Alice to **unlearn** certain vocabulary or sentences](#tell-alice-to-unlearn-certain-vocabulary-or-sentences)","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"    -   [Asking Alice to **list** out all the commands](#asking-alice-to-list-out-all-the-commands)","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    -   [**Saving** file and continue editing other save files](#saving-file-and-continue-editing-other-save-files)","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"## **Features:**","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"## **Features in Alice Start Page:**","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"### Create, Open, Delete save files for different occasions in the Start Page","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"When starting Alice, user will be presented with a window called Start Page for user to choose an existing save file or inputting a new name into the text field in order to create a new save file with the specified name.","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"1. User can create new save file by typing in a new save file name which is not shown on the list view at the top.","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"2. User can choose to open up certain save file by:","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"    - **Clicking the save file name → Click/ Press Enter**","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    - **Typing in the file name manually → Click/Press Enter**","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"3. User can choose to delete the save file:","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    - **Clicking the save file name → Click delete**","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"    - **Typing in the file name manually → Click delete**","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"Clicking clear will clear out the textfield for user to occupy it with new input.","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"### Usage","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"To organize the task into different save file location so that the user can visualize and organize the task they have according to different occasions.","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"- Create save file for school work","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"- Create save file for tasks to do with family","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"- Create save file for tasks to do with different projects, or work from different modules","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"\u003cdiv\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"    \u003cimg align\u003d\"center\" src\u003d\"https://github.com/kanjitp/ip/blob/master/docs/screenshots/create_file_demo.gif?raw\u003dtrue\" style\u003d\"width:32%\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    \u003cimg align\u003d\"center\" src\u003d\"https://github.com/kanjitp/ip/blob/master/docs/screenshots/enter_file_demo.gif?raw\u003dtrue\" style\u003d\"width:32%\"/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    \u003cimg align\u003d\"center\" src\u003d\"https://github.com/kanjitp/ip/blob/master/docs/screenshots/delete_file_demo.gif?raw\u003dtrue\" style\u003d\"width:32%\"/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"### Navigating to different save files through Start Page","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"The same work flow as opening a save file in the Start Page:","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"To open a save file, user can choose to do so by:","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"- **Clicking the save file name → Click/Press Enter**","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"- **Typing in the file name manually → Click/Press Enter**","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"User will then be prompt with the chat page with Alice in which the user can get back to the Start Page again by:","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"- **Typing \u0027bye\u0027 command in the textfield at the bottom → Click Send/ Press Enter**","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"### Usage","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"To allow user to continue editing different save files without having to close the app and restarting the app again to get to new save file location","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"- Edit tasks in \u0027home\u0027 save file and then navigating back to start page before choosing a new save file to start editing \u0027school\u0027 save file","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"- Edit tasks in \u0027home\u0027 save file and then navigating back to start page before creating a new save file of new tasks that user could suddenly think of","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"  ","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"\u003cdiv\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"    \u003cimg align\u003d\"center\" src\u003d\"https://github.com/kanjitp/ip/blob/master/docs/screenshots/enter_file_demo.gif?raw\u003dtrue\" style\u003d\"width:49.5%\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"    \u003cimg align\u003d\"center\" src\u003d\"https://github.com/kanjitp/ip/blob/master/docs/screenshots/bye_demo.gif?raw\u003dtrue\" style\u003d\"width:49.5%\"/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"## **Features in Alice Chat Page:**","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"**Format** refers to the format of the command to be input into text field at the bottom of Alice Chat page to perform certain action ","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"To perform command: ","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"- **Type in command into text field at the bottom → Click Send/ Press Enter**","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"### Add **Todo** task","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"**Format: `todo \u003ctask description\u003e`**","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"Add a todo task to the list to be stored to this save file","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"**Usage**","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"Todo task is a type of task which doesn\u0027t have a date associated with it.","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"Therefore, user may consider to use this command to input task in which they have no specific deadline or not crucial in time.","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"`todo do laundry` will add a todo task to the list with description **\u0027do laundry\u0027** ","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"`todo revise resume` will add a todo task to the list with description **\u0027revise resume\u0027**","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"![alice_0.03](https://github.com/kanjitp/ip/blob/master/docs/screenshots/todo_demo2.gif?raw\u003dtrue)","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"kanjitp"},"content":"### Add **event** task","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"**Format: `event \u003cevent description\u003e /at \u003cyyyy-MM-dd\u003e`**","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"Add an event task to the list to be stored to this save file","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"**Usage**","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"kanjitp"},"content":"Event task is a type of task which has a date associated with it.","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"Therefore, user may consider to use this command to input task in which they have specific date which they deem to find important.","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"kanjitp"},"content":"`event Jason Recital /at 2021-11-08` ","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"will add an event to the list with description **\u0027Jason Recital\u0027** and the time at **\u0027Nov 8 2021\u0027**","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"kanjitp"},"content":"`event Interview with Stephanie /at 2021-10-21`","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"kanjitp"},"content":"will add an event to the list with description **\u0027Interview with Stephanie\u0027** and the time at **\u0027Oct 21 2021\u0027**","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":174,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":175,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":176,"author":{"gitId":"kanjitp"},"content":"![alice_0.03](https://github.com/kanjitp/ip/blob/master/docs/screenshots/event_demo.gif?raw\u003dtrue)","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"kanjitp"},"content":"### Add **deadline** task","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"kanjitp"},"content":"**Format: `deadline \u003cdeadline description\u003e /by \u003cyyyy-MM-dd\u003e`**","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"kanjitp"},"content":"Add a deadline task to the list to be stored to this save file","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"kanjitp"},"content":"**Usage**","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"kanjitp"},"content":"Deadline task is a type of task which has a deadline date for that task.","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"kanjitp"},"content":"Therefore, user may consider to use this command to input task in which they have specific date to be used as deadline for that task.","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":192,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"kanjitp"},"content":"`deadline finish CS2103T submission /by 2021-09-17`","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"kanjitp"},"content":"will add a deadline to the list with description **\u0027finish CS2103T submission\u0027** with deadline on **\u0027Nov 17 2021\u0027**","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":197,"author":{"gitId":"kanjitp"},"content":"`deadline finish reading NO RULES RULES by REED HASTINGS /by 2021-10-30`","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"kanjitp"},"content":"will add a deadline to the list with description **\u0027finish reading NO RULES RULES by REED HASTINGS\u0027** with deadline on **\u0027Oct 30 2021\u0027**","lastModifiedDate":"2021-09-17"},{"lineNumber":200,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":201,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":202,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":203,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":204,"author":{"gitId":"kanjitp"},"content":"![alice_0.03](https://github.com/kanjitp/ip/blob/master/docs/screenshots/deadline_demo2.gif?raw\u003dtrue)","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":206,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":207,"author":{"gitId":"kanjitp"},"content":"### **Mark task as done**","lastModifiedDate":"2021-09-17"},{"lineNumber":208,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":209,"author":{"gitId":"kanjitp"},"content":"**Format: `done \u003ctask index shown in the list\u003e`**","lastModifiedDate":"2021-09-17"},{"lineNumber":210,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":211,"author":{"gitId":"kanjitp"},"content":"Mark the task at specific index in the list as done","lastModifiedDate":"2021-09-17"},{"lineNumber":212,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":213,"author":{"gitId":"kanjitp"},"content":"**Usage**","lastModifiedDate":"2021-09-17"},{"lineNumber":214,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":215,"author":{"gitId":"kanjitp"},"content":"Every task when created will have a \u0027✘\u0027 mark indicating that that task has not been done yet. By marking the task as done, the \u0027✘\u0027 mark will be replaced with a \u0027✔ \u0027 mark instead.","lastModifiedDate":"2021-09-17"},{"lineNumber":216,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":217,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":218,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":219,"author":{"gitId":"kanjitp"},"content":"```docker","lastModifiedDate":"2021-09-17"},{"lineNumber":220,"author":{"gitId":"kanjitp"},"content":"1. [T][✘] do laundry","lastModifiedDate":"2021-09-17"},{"lineNumber":221,"author":{"gitId":"kanjitp"},"content":"2. [D][✘] finish CS2103T submission (by: Nov 17 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":222,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":223,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":224,"author":{"gitId":"kanjitp"},"content":"`done 1`","lastModifiedDate":"2021-09-17"},{"lineNumber":225,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":226,"author":{"gitId":"kanjitp"},"content":"will mark task 1 as done","lastModifiedDate":"2021-09-17"},{"lineNumber":227,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":228,"author":{"gitId":"kanjitp"},"content":"```docker","lastModifiedDate":"2021-09-17"},{"lineNumber":229,"author":{"gitId":"kanjitp"},"content":"1. [T][✔] do laundry","lastModifiedDate":"2021-09-17"},{"lineNumber":230,"author":{"gitId":"kanjitp"},"content":"2. [D][✘] finish CS2103T submission (by: Nov 17 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":232,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":233,"author":{"gitId":"kanjitp"},"content":"`done 2`","lastModifiedDate":"2021-09-17"},{"lineNumber":234,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":235,"author":{"gitId":"kanjitp"},"content":"will mark task 2 as done","lastModifiedDate":"2021-09-17"},{"lineNumber":236,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":237,"author":{"gitId":"kanjitp"},"content":"```docker","lastModifiedDate":"2021-09-17"},{"lineNumber":238,"author":{"gitId":"kanjitp"},"content":"1. [T][✔] do laundry","lastModifiedDate":"2021-09-17"},{"lineNumber":239,"author":{"gitId":"kanjitp"},"content":"2. [D][✔] finish CS2103T submission (by: Nov 17 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":240,"author":{"gitId":"kanjitp"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":241,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":242,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":243,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":244,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":245,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":246,"author":{"gitId":"kanjitp"},"content":"![alice_0.03](https://github.com/kanjitp/ip/blob/master/docs/screenshots/done_demo2.gif?raw\u003dtrue)","lastModifiedDate":"2021-09-26"},{"lineNumber":247,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":248,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":249,"author":{"gitId":"kanjitp"},"content":"### **Delete** task","lastModifiedDate":"2021-09-17"},{"lineNumber":250,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":251,"author":{"gitId":"kanjitp"},"content":"**Format: `delete \u003ctask index shown in the list\u003e`**","lastModifiedDate":"2021-09-17"},{"lineNumber":252,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":253,"author":{"gitId":"kanjitp"},"content":"Delete the task at specific index. The index of other tasks below it will shift up. ","lastModifiedDate":"2021-09-17"},{"lineNumber":254,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":255,"author":{"gitId":"kanjitp"},"content":"**Usage**","lastModifiedDate":"2021-09-17"},{"lineNumber":256,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":257,"author":{"gitId":"kanjitp"},"content":"When user make a mistake inputting a faulty task (i.e. wrong spelling, wrong date) or has already mark the task as done, he/she may consider to delete the task to free up the space in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":258,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":259,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":260,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":261,"author":{"gitId":"kanjitp"},"content":"```docker","lastModifiedDate":"2021-09-17"},{"lineNumber":262,"author":{"gitId":"kanjitp"},"content":"1. [T][✘] do laundry","lastModifiedDate":"2021-09-17"},{"lineNumber":263,"author":{"gitId":"kanjitp"},"content":"2. [D][✘] finish CS2103T submission (by: Nov 17 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":264,"author":{"gitId":"kanjitp"},"content":"3. [E][✘] Jason Recital (at: Nov 8 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":265,"author":{"gitId":"kanjitp"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":266,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":267,"author":{"gitId":"kanjitp"},"content":"`delete 2`","lastModifiedDate":"2021-09-17"},{"lineNumber":268,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":269,"author":{"gitId":"kanjitp"},"content":"will delete the second task and shift the third task to index 2","lastModifiedDate":"2021-09-17"},{"lineNumber":270,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":271,"author":{"gitId":"kanjitp"},"content":"```docker","lastModifiedDate":"2021-09-17"},{"lineNumber":272,"author":{"gitId":"kanjitp"},"content":"1. [T][✘] do laundry","lastModifiedDate":"2021-09-17"},{"lineNumber":273,"author":{"gitId":"kanjitp"},"content":"2. [E][✘] Jason Recital (at: Nov 8 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":274,"author":{"gitId":"kanjitp"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":275,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":276,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":277,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":278,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":279,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":280,"author":{"gitId":"kanjitp"},"content":"![alice_0.03](https://github.com/kanjitp/ip/blob/master/docs/screenshots/delete_demo.gif?raw\u003dtrue)","lastModifiedDate":"2021-09-26"},{"lineNumber":281,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":282,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":283,"author":{"gitId":"kanjitp"},"content":"### Ask Alice to **list out current tasks**","lastModifiedDate":"2021-09-17"},{"lineNumber":284,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":285,"author":{"gitId":"kanjitp"},"content":"**Format: `list`**","lastModifiedDate":"2021-09-17"},{"lineNumber":286,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":287,"author":{"gitId":"kanjitp"},"content":"list out the current task","lastModifiedDate":"2021-09-17"},{"lineNumber":288,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":289,"author":{"gitId":"kanjitp"},"content":"**Usage**","lastModifiedDate":"2021-09-17"},{"lineNumber":290,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":291,"author":{"gitId":"kanjitp"},"content":"To check the current status of the task list","lastModifiedDate":"2021-09-17"},{"lineNumber":292,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":293,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":294,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":295,"author":{"gitId":"kanjitp"},"content":"`list`","lastModifiedDate":"2021-09-17"},{"lineNumber":296,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":297,"author":{"gitId":"kanjitp"},"content":"will list out all the task that the user have in this current save file","lastModifiedDate":"2021-09-17"},{"lineNumber":298,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":299,"author":{"gitId":"kanjitp"},"content":"![alice_0.03](https://github.com/kanjitp/ip/blob/master/docs/screenshots/todo_demo.gif?raw\u003dtrue)","lastModifiedDate":"2021-09-26"},{"lineNumber":300,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":301,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":302,"author":{"gitId":"kanjitp"},"content":"### **Search** certain tasks using **date** to find upcoming task till that date","lastModifiedDate":"2021-09-17"},{"lineNumber":303,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":304,"author":{"gitId":"kanjitp"},"content":"**Format: `date \u003cyyyy-MM-dd\u003e`**","lastModifiedDate":"2021-09-17"},{"lineNumber":305,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":306,"author":{"gitId":"kanjitp"},"content":"Ask Alice to list out all the todo tasks, event task which happens on/before the date and deadline happening on/before the date","lastModifiedDate":"2021-09-17"},{"lineNumber":307,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":308,"author":{"gitId":"kanjitp"},"content":"**Usage**","lastModifiedDate":"2021-09-17"},{"lineNumber":309,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":310,"author":{"gitId":"kanjitp"},"content":"To filter out the tasks that the user might not have interest in by that date. One usage is to filter out all the tasks before certain date so the user know what to do, what is happening, what important deadlines are there on/before that date.","lastModifiedDate":"2021-09-17"},{"lineNumber":311,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":312,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":313,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":314,"author":{"gitId":"kanjitp"},"content":"```docker","lastModifiedDate":"2021-09-17"},{"lineNumber":315,"author":{"gitId":"kanjitp"},"content":"1. [T][✘] do laundry","lastModifiedDate":"2021-09-17"},{"lineNumber":316,"author":{"gitId":"kanjitp"},"content":"2. [D][✘] finish CS2103T submission (by: Nov 17 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":317,"author":{"gitId":"kanjitp"},"content":"3. [E][✘] Jason Recital (at: Nov 8 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":318,"author":{"gitId":"kanjitp"},"content":"4. [D][✘] Make a pull request - CS2103T (by: Nov 10 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":319,"author":{"gitId":"kanjitp"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":320,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":321,"author":{"gitId":"kanjitp"},"content":"`date 2021-11-10`","lastModifiedDate":"2021-09-17"},{"lineNumber":322,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":323,"author":{"gitId":"kanjitp"},"content":"will filter out the event and deadline happening **after** Nov 11 2021","lastModifiedDate":"2021-09-17"},{"lineNumber":324,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":325,"author":{"gitId":"kanjitp"},"content":"```docker","lastModifiedDate":"2021-09-17"},{"lineNumber":326,"author":{"gitId":"kanjitp"},"content":"1. [T][✘] do laundry","lastModifiedDate":"2021-09-17"},{"lineNumber":327,"author":{"gitId":"kanjitp"},"content":"2. [E][✘] Jason Recital (at: Nov 8 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":328,"author":{"gitId":"kanjitp"},"content":"3. [D][✘] Make a pull request - CS2103T (by: Nov 10 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":329,"author":{"gitId":"kanjitp"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":330,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":331,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":332,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":333,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":334,"author":{"gitId":"kanjitp"},"content":"![alice_0.03](https://github.com/kanjitp/ip/blob/master/docs/screenshots/date_demo.gif?raw\u003dtrue)","lastModifiedDate":"2021-09-26"},{"lineNumber":335,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":336,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":337,"author":{"gitId":"kanjitp"},"content":"### Search certain tasks using **keywords**","lastModifiedDate":"2021-09-21"},{"lineNumber":338,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":339,"author":{"gitId":"kanjitp"},"content":"**Format: `find \u003ckeyword\u003e`**","lastModifiedDate":"2021-09-17"},{"lineNumber":340,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":341,"author":{"gitId":"kanjitp"},"content":"Ask Alice to list out the tasks which has matching description with the keyword given by the user","lastModifiedDate":"2021-09-17"},{"lineNumber":342,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":343,"author":{"gitId":"kanjitp"},"content":"**Usage**","lastModifiedDate":"2021-09-17"},{"lineNumber":344,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":345,"author":{"gitId":"kanjitp"},"content":"To search up tasks and make it more manageable to find the task that the user is searching for","lastModifiedDate":"2021-09-17"},{"lineNumber":346,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":347,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":348,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":349,"author":{"gitId":"kanjitp"},"content":"```docker","lastModifiedDate":"2021-09-17"},{"lineNumber":350,"author":{"gitId":"kanjitp"},"content":"1. [T][✘] do laundry","lastModifiedDate":"2021-09-17"},{"lineNumber":351,"author":{"gitId":"kanjitp"},"content":"2. [D][✘] finish CS2103T submission (by: Nov 17 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":352,"author":{"gitId":"kanjitp"},"content":"3. [E][✘] Jason Recital (at: Nov 8 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":353,"author":{"gitId":"kanjitp"},"content":"4. [D][✘] Make a pull request - CS2103T (by: Nov 10 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":354,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":355,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":356,"author":{"gitId":"kanjitp"},"content":"`find CS2103T`","lastModifiedDate":"2021-09-17"},{"lineNumber":357,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":358,"author":{"gitId":"kanjitp"},"content":"will filter out other tasks that do not have matching keyword","lastModifiedDate":"2021-09-17"},{"lineNumber":359,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":360,"author":{"gitId":"kanjitp"},"content":"```docker","lastModifiedDate":"2021-09-17"},{"lineNumber":361,"author":{"gitId":"kanjitp"},"content":"1. [D][✘] finish CS2103T submission (by: Nov 17 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":362,"author":{"gitId":"kanjitp"},"content":"2. [D][✘] Make a pull request - CS2103T (by: Nov 10 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":363,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":364,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":365,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":366,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":367,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":368,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":369,"author":{"gitId":"kanjitp"},"content":"![alice_0.03](https://github.com/kanjitp/ip/blob/master/docs/screenshots/find_demo.gif?raw\u003dtrue)","lastModifiedDate":"2021-09-26"},{"lineNumber":370,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":371,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":372,"author":{"gitId":"kanjitp"},"content":"### Teach Alice to **learn** **how to respond to certain vocabulary** or sentences","lastModifiedDate":"2021-09-17"},{"lineNumber":373,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":374,"author":{"gitId":"kanjitp"},"content":"**Format: `learn \u003cphrase\u003e`**","lastModifiedDate":"2021-09-17"},{"lineNumber":375,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":376,"author":{"gitId":"kanjitp"},"content":"Ask Alice to learn new feedback to certain phrase so that she can learn new vocabulary","lastModifiedDate":"2021-09-17"},{"lineNumber":377,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":378,"author":{"gitId":"kanjitp"},"content":"**Format (continued): `\u003cfeedback to learn to given phrase\u003e`**","lastModifiedDate":"2021-09-17"},{"lineNumber":379,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":380,"author":{"gitId":"kanjitp"},"content":"Type in feedback to be responded when the user cite out certain phrase","lastModifiedDate":"2021-09-17"},{"lineNumber":381,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":382,"author":{"gitId":"kanjitp"},"content":"**Usage**","lastModifiedDate":"2021-09-17"},{"lineNumber":383,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":384,"author":{"gitId":"kanjitp"},"content":"To teach Alice how to respond to certain vocabulary or sentences","lastModifiedDate":"2021-09-17"},{"lineNumber":385,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":386,"author":{"gitId":"kanjitp"},"content":"**[IMPORTANT]** ","lastModifiedDate":"2021-09-17"},{"lineNumber":387,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":388,"author":{"gitId":"kanjitp"},"content":"Alice cannot learn the phrase which has the same spelling as the default commands","lastModifiedDate":"2021-09-17"},{"lineNumber":389,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":390,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":391,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":392,"author":{"gitId":"kanjitp"},"content":"`learn say hi to prof`","lastModifiedDate":"2021-09-17"},{"lineNumber":393,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":394,"author":{"gitId":"kanjitp"},"content":"will prompt Alice that she will learn how to respond to **\u0027say hi to prof\u0027** and she will ask back what should be her feedback in which the user type in","lastModifiedDate":"2021-09-17"},{"lineNumber":395,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":396,"author":{"gitId":"kanjitp"},"content":"`Hello Prof Damith! Isn\u0027t it a beautiful day~`","lastModifiedDate":"2021-09-17"},{"lineNumber":397,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":398,"author":{"gitId":"kanjitp"},"content":"Alice will now remember to respond to **\u0027say hi to prof\u0027** with the given phrase","lastModifiedDate":"2021-09-17"},{"lineNumber":399,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":400,"author":{"gitId":"kanjitp"},"content":"So the next time user type in","lastModifiedDate":"2021-09-17"},{"lineNumber":401,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":402,"author":{"gitId":"kanjitp"},"content":"`say hi to prof`","lastModifiedDate":"2021-09-17"},{"lineNumber":403,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":404,"author":{"gitId":"kanjitp"},"content":"Alice will respond with","lastModifiedDate":"2021-09-17"},{"lineNumber":405,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":406,"author":{"gitId":"kanjitp"},"content":"`Hello Prof Damith! Isn\u0027t it a beautiful day~`","lastModifiedDate":"2021-09-17"},{"lineNumber":407,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":408,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":409,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":410,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":411,"author":{"gitId":"kanjitp"},"content":"![alice_0.03](https://github.com/kanjitp/ip/blob/master/docs/screenshots/learn_demo.gif?raw\u003dtrue)","lastModifiedDate":"2021-09-26"},{"lineNumber":412,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":413,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":414,"author":{"gitId":"kanjitp"},"content":"### Tell Alice to **unlearn certain vocabulary** or sentences","lastModifiedDate":"2021-09-17"},{"lineNumber":415,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":416,"author":{"gitId":"kanjitp"},"content":"**Format: `unlearn \u003cphrase\u003e`**","lastModifiedDate":"2021-09-17"},{"lineNumber":417,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":418,"author":{"gitId":"kanjitp"},"content":"Ask Alice to unlearn certain phrase","lastModifiedDate":"2021-09-17"},{"lineNumber":419,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":420,"author":{"gitId":"kanjitp"},"content":"**Usage**","lastModifiedDate":"2021-09-17"},{"lineNumber":421,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":422,"author":{"gitId":"kanjitp"},"content":"To have Alice unable to respond to the given phrase anymore and potentially learn a new way to respond to the given phrase using the command `learn \u003cphrase\u003e` again","lastModifiedDate":"2021-09-17"},{"lineNumber":423,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":424,"author":{"gitId":"kanjitp"},"content":"**[IMPORTANT]** ","lastModifiedDate":"2021-09-17"},{"lineNumber":425,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":426,"author":{"gitId":"kanjitp"},"content":"Alice cannot unlearn the phrase which has the same spelling as the default commands","lastModifiedDate":"2021-09-17"},{"lineNumber":427,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":428,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":429,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":430,"author":{"gitId":"kanjitp"},"content":"`unlearn say hi to prof`","lastModifiedDate":"2021-09-17"},{"lineNumber":431,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":432,"author":{"gitId":"kanjitp"},"content":"will make Alice forget how to respond to **\u0027say hi to prof\u0027** and will respond that she doesn\u0027t know  how to respond to the given command instead","lastModifiedDate":"2021-09-17"},{"lineNumber":433,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":434,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":435,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":436,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":437,"author":{"gitId":"kanjitp"},"content":"![alice_0.03](https://github.com/kanjitp/ip/blob/master/docs/screenshots/unlearn_demo.gif?raw\u003dtrue)","lastModifiedDate":"2021-09-26"},{"lineNumber":438,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":439,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":440,"author":{"gitId":"kanjitp"},"content":"### Asking Alice to **list out all the commands**","lastModifiedDate":"2021-09-17"},{"lineNumber":441,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":442,"author":{"gitId":"kanjitp"},"content":"**Format: `commands` or `help` or `?`**","lastModifiedDate":"2021-09-17"},{"lineNumber":443,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":444,"author":{"gitId":"kanjitp"},"content":"Ask Alice to list out all the possible commands that you can perform excluding the vocabulary that you have taught to Alice","lastModifiedDate":"2021-09-17"},{"lineNumber":445,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":446,"author":{"gitId":"kanjitp"},"content":"**Usage**","lastModifiedDate":"2021-09-17"},{"lineNumber":447,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":448,"author":{"gitId":"kanjitp"},"content":"To remind the user of what they can do with Alice or ask her what she can do","lastModifiedDate":"2021-09-17"},{"lineNumber":449,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":450,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":451,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":452,"author":{"gitId":"kanjitp"},"content":"`commands` or `help` or `?`","lastModifiedDate":"2021-09-17"},{"lineNumber":453,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":454,"author":{"gitId":"kanjitp"},"content":"will have Alice list out all the possible commands","lastModifiedDate":"2021-09-17"},{"lineNumber":455,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":456,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":457,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":458,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":459,"author":{"gitId":"kanjitp"},"content":"![alice_0.03](https://github.com/kanjitp/ip/blob/master/docs/screenshots/commands_demo.gif?raw\u003dtrue)","lastModifiedDate":"2021-09-26"},{"lineNumber":460,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":461,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":462,"author":{"gitId":"kanjitp"},"content":"### **Saving file and continue editing other save files**","lastModifiedDate":"2021-09-17"},{"lineNumber":463,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":464,"author":{"gitId":"kanjitp"},"content":"**Format: `bye`**","lastModifiedDate":"2021-09-17"},{"lineNumber":465,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":466,"author":{"gitId":"kanjitp"},"content":"Ask Alice to save the current tasks and exit to the Start Page","lastModifiedDate":"2021-09-17"},{"lineNumber":467,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":468,"author":{"gitId":"kanjitp"},"content":"**Usage**","lastModifiedDate":"2021-09-17"},{"lineNumber":469,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":470,"author":{"gitId":"kanjitp"},"content":"To save and exit to Start Page in order to continue editing other save file or close the application","lastModifiedDate":"2021-09-17"},{"lineNumber":471,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":472,"author":{"gitId":"kanjitp"},"content":"**[IMPORTANT]** ","lastModifiedDate":"2021-09-17"},{"lineNumber":473,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":474,"author":{"gitId":"kanjitp"},"content":"The task list will not be saved unless the user use the command **`bye`** and exit to Start Page","lastModifiedDate":"2021-09-17"},{"lineNumber":475,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":476,"author":{"gitId":"kanjitp"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-17"},{"lineNumber":477,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":478,"author":{"gitId":"kanjitp"},"content":"`bye`","lastModifiedDate":"2021-09-17"},{"lineNumber":479,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":480,"author":{"gitId":"kanjitp"},"content":"will have Alice save the current task list in to the current save file and exit to Start Page","lastModifiedDate":"2021-09-17"},{"lineNumber":481,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":482,"author":{"gitId":"kanjitp"},"content":"[GO BACK TO THE TOP](#this-user-guide-contains)","lastModifiedDate":"2021-09-21"},{"lineNumber":483,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":484,"author":{"gitId":"kanjitp"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":485,"author":{"gitId":"kanjitp"},"content":"![alice_0.03](https://github.com/kanjitp/ip/blob/master/docs/screenshots/bye_demo.gif?raw\u003dtrue)","lastModifiedDate":"2021-09-26"},{"lineNumber":486,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"kanjitp":468,"-":18}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"public class Launcher {","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"kanjitp":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import ui.StartPage;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":" * Main class of the application.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":" * Responsible for starting up the application and show Start Page.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":" * @since 0.02","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"     * Start method overridden from the Application of JavaFX.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"     * Create save location if the save location does not exist and start the app.","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"     * @param stage stage for the app to distribute its system","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"            if (!Storage.haveSaveLocation()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"                Storage.createSaveLocation();","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        stage.setTitle(\"Alice\");","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        setUpStage(stage);","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        stage.show();","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    private void setUpStage(Stage stage) {","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/StartPage.fxml\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"            fxmlLoader.\u003cStartPage\u003egetController().fetchSaveFiles();","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"            // Add the scene to the stage","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"kanjitp":55}},{"path":"src/main/java/alice/Alice.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package alice;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import alice.exceptions.AliceException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import command.Command;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import model.vocab.Vocab;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import model.vocab.VocabList;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import model.vocab.exceptions.UnrecognisedPhraseException;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import parser.Parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import storage.VocabularyStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import ui.ChatPage;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":" * Main class of the chatbot.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":" * By running the main method the bot will first ask for the save file and asking if","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":" * the user want to create a new save file location before proceeding.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":" * @since 0.02","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"public class Alice {","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    /** storage for Alice */","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    /** vocab list that Alice to recognize custom command */","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    private VocabList vocabList;","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    /** ui of Alice interacting with the user from inputting command and showing the ui back to the user */","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    private String phraseToLearn \u003d \"\";","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"    public Alice() throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        this(\"test\");","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"     * Constructor of Alice.","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"     * Alice will instantiate a new ui and storage object given the filename and import","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     * task list to the ui and also load the vocab list.","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"     * @param fileName the filename without the suffix .txt, .TXT, etc.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"     * @throws IOException if there is issue loading taskList from storage or vocab list from vocabulary storage.","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    public Alice(String fileName) throws IOException {","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"        storage \u003d new Storage(fileName);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        // import the task from what the storage manage to load","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        ui.importTaskList(storage.loadTaskList());","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        // instantiate the vocabulary storage","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        vocabList \u003d new VocabularyStorage().loadVocabList();","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"     * Getter for Ui of Alice.","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"     * @return ui of this Alice.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"    public Ui getUi() {","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        return this.ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"     * Execute the fullCommand by parsing the command and executing accordingly.","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"     * @param fullCommand the command as string including taggers and date or other custom phrase that user has taught","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"     *                    Alice before.","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    public void execute(String fullCommand) {","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"            if (VocabList.isDefaultPhrase(fullCommand.split(\" \")[0])) {","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"                // check first if it is a default command","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"                c.execute(ui, storage);","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"            } else if (vocabList.containsPhrase(fullCommand)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"                // check if Alice has learned this phrase before and print the feedback accordingly","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"                ui.getChatPage().printWithAlice(vocabList.getFeedBack(fullCommand));","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"            } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"                // else try executing the command","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"                c.execute(ui, storage);","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"        } catch (AliceException | UnrecognisedPhraseException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"            ui.getChatPage().printError(e);","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"     * Getter for vocabulary list of this Alice.","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"     * @return the vocabulary current Alice has.","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"    public VocabList getVocabList() {","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"        return vocabList;","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"     * Setter for phrase that Alice wants to learn.","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"     * Alice will keep the phrase with her before executing further command.","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"     * @param phraseToLearn the phrase that Alice is tasked to learn.","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"    public void setPhraseToLearn(String phraseToLearn) {","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"        this.phraseToLearn \u003d phraseToLearn;","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"     * Alice will learn the current phrase currently stored within her and learn to give the given feedback","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"     * in the argument.","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"     * @param fullFeedback the feedback to be returned when the user use the given phrase as custom command.","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"    public void learn(String fullFeedback) {","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"        Vocab vocabToLearn \u003d Vocab.of(this.phraseToLearn, fullFeedback);","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"        vocabList.add(vocabToLearn);","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"        ui.getChatPage().setMode(ChatPage.Mode.DEFAULT);","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"        ui.getChatPage().printWithAlice(\"Got it! Alice will remember that.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"     * Alice will save the current/updated vocabulary according to vocabulary storage file location.","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"    public void saveCurrentVocabulary() {","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"            VocabularyStorage vocabularyStorage \u003d new VocabularyStorage();","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"            vocabularyStorage.save(vocabList);","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"            ui.getChatPage().printError(e);","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"kanjitp":140}},{"path":"src/main/java/alice/exceptions/AliceException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package alice.exceptions;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Exception to do with Alice to be thrown when the user interact incorrectly","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" * with the personal assistant.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" * An example of such exception include user using the command that Alice cannot recognize.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"public class AliceException extends RuntimeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"     * Default constructor of AliceException.","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"     * @param errorMessage message to be stored in the AliceException.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    public AliceException(String errorMessage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"kanjitp":17}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import alice.exceptions.AliceException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import command.exceptions.EmptyDescriptionException;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import command.exceptions.EmptyIndexException;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import command.exceptions.EmptyTaggerException;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import command.exceptions.InvalidArgumentException;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import command.exceptions.InvalidIndexException;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import command.exceptions.InvalidTimeFormatException;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import dialog.TaskDialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import dialog.exceptions.DialogException;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import dialog.exceptions.TaskDialogException;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import model.task.Deadline;","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import model.task.Event;","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import model.task.Todo;","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import model.vocab.VocabList;","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"import model.vocab.exceptions.DuplicateVocabException;","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"import ui.ChatPage;","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":" * Command class responsible for executing different command.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":" * @version 0.02","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":" * @since 0.01","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"public class Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"     * Different type of Command available.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"    public enum CommandType {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        TODO, DEADLINE, EVENT, LIST, DATE, FIND, DONE, DELETE, LEARN, UNLEARN, COMMANDS, BYE","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    private final String fullCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    private final CommandType commandType;","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"     * Default constructor for Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"     * Create a Command object from given full Command.","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     * @param fullCommand command with its arguments and tagger.","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"     * @throws AliceException invalid argument for command.","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    public Command(String fullCommand) {","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        commandType \u003d Parser.stringToCommand(fullCommand.split(\" \")[0]);","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"     * Execute the command according to its type.","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"     * @param ui      the ui in which the command object is going to use to print output.","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"     * @param storage the storage for the command to save progress.","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"    public void execute(Ui ui, Storage storage) {","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        switch (commandType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        case LIST:","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"            executeList(ui);","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"        case DATE:","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"            executeDate(ui);","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"        case FIND:","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"            executeFind(ui);","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        case TODO:","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"            executeTodo(ui);","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"            executeDeadline(ui);","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        case EVENT:","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"            executeEvent(ui);","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        case DONE:","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"            executeDone(ui);","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"        case DELETE:","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"            executeDelete(ui);","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"        case LEARN:","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"            executeLearn(ui);","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"        case UNLEARN:","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"            executeUnlearn(ui);","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"        case COMMANDS:","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"            executeCommands(ui);","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"        case BYE:","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"            executeBye(ui, storage);","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"        default:","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"            // UNREACHABLE: already checked via StringToCommand","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"    private void executeList(Ui ui) {","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"        ui.getChatPage().showCurrentList();","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"    private void executeDate(Ui ui) {","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"        ChatPage chatPage \u003d ui.getChatPage();","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"            if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"                throw new EmptyDescriptionException(\"The date of deadline cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"            String dlString \u003d fullCommand.substring((\"date \").length());","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"            chatPage.printWithAlice(ui.getTaskDialog().getFromDeadline(dlString).toString());","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"        } catch (EmptyDescriptionException | EmptyTaggerException | InvalidTimeFormatException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"            chatPage.printError(e);","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"    private void executeFind(Ui ui) {","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"        ChatPage chatPage \u003d ui.getChatPage();","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"            if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"                throw new EmptyDescriptionException(\"The keyword of find cannot be empty. Try using command \"","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"                        + \"\u0027list\u0027 if you want to see the full list\");","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"            String kwString \u003d fullCommand.substring((\"find \").length());","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"            chatPage.printWithAlice(ui.getTaskDialog().getFromKeyword(kwString).toString());","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"        } catch (EmptyDescriptionException | EmptyTaggerException | InvalidTimeFormatException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"            chatPage.printError(e);","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"    private void executeTodo(Ui ui) {","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"        ChatPage chatPage \u003d ui.getChatPage();","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"            if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"                throw new EmptyDescriptionException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"            chatPage.printWithAlice(ui.getTaskDialog().addTask(new Todo(fullCommand.substring((\"todo \").length()))));","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"        } catch (TaskDialogException | DialogException | EmptyDescriptionException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"            chatPage.printError(e);","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":149,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":150,"author":{"gitId":"kanjitp"},"content":"    private void executeDeadline(Ui ui) {","lastModifiedDate":"2021-09-12"},{"lineNumber":151,"author":{"gitId":"kanjitp"},"content":"        ChatPage chatPage \u003d ui.getChatPage();","lastModifiedDate":"2021-09-12"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"            if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"                throw new EmptyDescriptionException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"            } else if (!fullCommand.contains(\"/by\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"                throw new EmptyTaggerException(\"No /by tagger found.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"kanjitp"},"content":"            String dDescription \u003d fullCommand.substring((\"deadline \").length(), fullCommand.indexOf(\"/\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"kanjitp"},"content":"            String by \u003d fullCommand.substring(fullCommand.indexOf(\"/by \") + \"/by \".length());","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"            chatPage.printWithAlice(ui.getTaskDialog().addTask(new Deadline(dDescription, by)));","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"        } catch (TaskDialogException | DialogException | EmptyDescriptionException","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"                | EmptyTaggerException | InvalidTimeFormatException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"kanjitp"},"content":"            chatPage.printError(e);","lastModifiedDate":"2021-09-03"},{"lineNumber":164,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"    private void executeEvent(Ui ui) {","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"kanjitp"},"content":"        ChatPage chatPage \u003d ui.getChatPage();","lastModifiedDate":"2021-09-12"},{"lineNumber":169,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"            if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"kanjitp"},"content":"                throw new EmptyDescriptionException(\"The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"kanjitp"},"content":"            } else if (!fullCommand.contains(\"/at\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"                throw new EmptyTaggerException(\"No /at tagger found.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"kanjitp"},"content":"            String eDescription \u003d fullCommand.substring((\"event \").length(), fullCommand.indexOf(\"/\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"kanjitp"},"content":"            String at \u003d fullCommand.substring(fullCommand.indexOf(\"/at \") + \"/at \".length());","lastModifiedDate":"2021-08-28"},{"lineNumber":177,"author":{"gitId":"kanjitp"},"content":"            chatPage.printWithAlice(ui.getTaskDialog().addTask(new Event(eDescription, at)));","lastModifiedDate":"2021-09-12"},{"lineNumber":178,"author":{"gitId":"kanjitp"},"content":"        } catch (TaskDialogException | DialogException | EmptyDescriptionException","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"kanjitp"},"content":"                | EmptyTaggerException | InvalidTimeFormatException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":180,"author":{"gitId":"kanjitp"},"content":"            chatPage.printError(e);","lastModifiedDate":"2021-09-03"},{"lineNumber":181,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":183,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":184,"author":{"gitId":"kanjitp"},"content":"    private boolean isValidListIndexFormat(String fullCommand, TaskDialog taskDialog) {","lastModifiedDate":"2021-09-12"},{"lineNumber":185,"author":{"gitId":"kanjitp"},"content":"        if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"kanjitp"},"content":"            throw new EmptyIndexException(\"The index of done cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"kanjitp"},"content":"        } else if (Integer.parseInt(fullCommand.split(\" \")[1]) \u003c\u003d 0","lastModifiedDate":"2021-09-16"},{"lineNumber":188,"author":{"gitId":"kanjitp"},"content":"                || Integer.parseInt(fullCommand.split(\" \")[1]) \u003e taskDialog.getTaskList().length()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":189,"author":{"gitId":"kanjitp"},"content":"            if (taskDialog.getTaskList().length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":190,"author":{"gitId":"kanjitp"},"content":"                throw new InvalidIndexException(\"Looks like your list is currently empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":191,"author":{"gitId":"kanjitp"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":192,"author":{"gitId":"kanjitp"},"content":"                throw new InvalidIndexException(\"Your list index can only be from 1 to \"","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"kanjitp"},"content":"                        + taskDialog.getTaskList().length() + \".\");","lastModifiedDate":"2021-08-29"},{"lineNumber":194,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":195,"author":{"gitId":"kanjitp"},"content":"        } else if (fullCommand.split(\" \").length \u003e 2) {","lastModifiedDate":"2021-08-28"},{"lineNumber":196,"author":{"gitId":"kanjitp"},"content":"            throw new InvalidArgumentException(\"The number of arguments seems to exceed for command done.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":197,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":198,"author":{"gitId":"kanjitp"},"content":"        return true;","lastModifiedDate":"2021-09-12"},{"lineNumber":199,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":200,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":201,"author":{"gitId":"kanjitp"},"content":"    private void executeDone(Ui ui) {","lastModifiedDate":"2021-09-12"},{"lineNumber":202,"author":{"gitId":"kanjitp"},"content":"        ChatPage chatPage \u003d ui.getChatPage();","lastModifiedDate":"2021-09-12"},{"lineNumber":203,"author":{"gitId":"kanjitp"},"content":"        TaskDialog taskDialog \u003d ui.getTaskDialog();","lastModifiedDate":"2021-09-12"},{"lineNumber":204,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":205,"author":{"gitId":"kanjitp"},"content":"            if (isValidListIndexFormat(fullCommand, taskDialog)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":206,"author":{"gitId":"kanjitp"},"content":"                chatPage.printWithAlice(taskDialog.markTaskAsDone(Integer.parseInt(","lastModifiedDate":"2021-09-12"},{"lineNumber":207,"author":{"gitId":"kanjitp"},"content":"                        fullCommand.substring((\"done \").length())) - 1));","lastModifiedDate":"2021-09-12"},{"lineNumber":208,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":209,"author":{"gitId":"kanjitp"},"content":"        } catch (EmptyIndexException | InvalidArgumentException | DialogException | InvalidIndexException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":210,"author":{"gitId":"kanjitp"},"content":"            chatPage.printError(e);","lastModifiedDate":"2021-09-03"},{"lineNumber":211,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":212,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":213,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":214,"author":{"gitId":"kanjitp"},"content":"    private void executeDelete(Ui ui) {","lastModifiedDate":"2021-09-12"},{"lineNumber":215,"author":{"gitId":"kanjitp"},"content":"        ChatPage chatPage \u003d ui.getChatPage();","lastModifiedDate":"2021-09-12"},{"lineNumber":216,"author":{"gitId":"kanjitp"},"content":"        TaskDialog taskDialog \u003d ui.getTaskDialog();","lastModifiedDate":"2021-09-12"},{"lineNumber":217,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":218,"author":{"gitId":"kanjitp"},"content":"            if (isValidListIndexFormat(fullCommand, taskDialog)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":219,"author":{"gitId":"kanjitp"},"content":"                chatPage.printWithAlice(taskDialog.deleteTaskByIndex(Integer.parseInt(","lastModifiedDate":"2021-09-12"},{"lineNumber":220,"author":{"gitId":"kanjitp"},"content":"                        fullCommand.substring((\"delete \").length())) - 1));","lastModifiedDate":"2021-09-12"},{"lineNumber":221,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":222,"author":{"gitId":"kanjitp"},"content":"        } catch (EmptyIndexException | InvalidArgumentException | DialogException | InvalidIndexException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":223,"author":{"gitId":"kanjitp"},"content":"            chatPage.printError(e);","lastModifiedDate":"2021-09-12"},{"lineNumber":224,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":225,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":226,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":227,"author":{"gitId":"kanjitp"},"content":"    private void executeLearn(Ui ui) {","lastModifiedDate":"2021-09-12"},{"lineNumber":228,"author":{"gitId":"kanjitp"},"content":"        ChatPage chatPage \u003d ui.getChatPage();","lastModifiedDate":"2021-09-12"},{"lineNumber":229,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":230,"author":{"gitId":"kanjitp"},"content":"            if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":231,"author":{"gitId":"kanjitp"},"content":"                throw new EmptyDescriptionException(\"The phrase for me to learn cannot be empty\");","lastModifiedDate":"2021-09-12"},{"lineNumber":232,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":233,"author":{"gitId":"kanjitp"},"content":"            String phraseString \u003d fullCommand.substring((\"learn \").length());","lastModifiedDate":"2021-09-12"},{"lineNumber":234,"author":{"gitId":"kanjitp"},"content":"            VocabList vocabList \u003d chatPage.getAlice().getVocabList();","lastModifiedDate":"2021-09-12"},{"lineNumber":235,"author":{"gitId":"kanjitp"},"content":"            if (VocabList.isDefaultPhrase(phraseString)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":236,"author":{"gitId":"kanjitp"},"content":"                throw new DuplicateVocabException(phraseString + \" is Alice\u0027s untouchable phrase!!, please choose \"","lastModifiedDate":"2021-09-12"},{"lineNumber":237,"author":{"gitId":"kanjitp"},"content":"                        + \"other phrase for Alice to learn\");","lastModifiedDate":"2021-09-12"},{"lineNumber":238,"author":{"gitId":"kanjitp"},"content":"            } else if (vocabList.containsPhrase(phraseString)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":239,"author":{"gitId":"kanjitp"},"content":"                throw new DuplicateVocabException(phraseString + \" is what Alice already know!!, please choose \"","lastModifiedDate":"2021-09-12"},{"lineNumber":240,"author":{"gitId":"kanjitp"},"content":"                        + \"other phrase for Alice to learn\");","lastModifiedDate":"2021-09-12"},{"lineNumber":241,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":242,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":243,"author":{"gitId":"kanjitp"},"content":"            chatPage.printWithAlice(Ui.getAskForFeedbackText(phraseString));","lastModifiedDate":"2021-09-12"},{"lineNumber":244,"author":{"gitId":"kanjitp"},"content":"            chatPage.getAlice().setPhraseToLearn(phraseString);","lastModifiedDate":"2021-09-12"},{"lineNumber":245,"author":{"gitId":"kanjitp"},"content":"            chatPage.setMode(ChatPage.Mode.LEARN);","lastModifiedDate":"2021-09-12"},{"lineNumber":246,"author":{"gitId":"kanjitp"},"content":"        } catch (EmptyDescriptionException | DialogException | DuplicateVocabException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":247,"author":{"gitId":"kanjitp"},"content":"            chatPage.printError(e);","lastModifiedDate":"2021-09-12"},{"lineNumber":248,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":249,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":250,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":251,"author":{"gitId":"kanjitp"},"content":"    private void executeUnlearn(Ui ui) {","lastModifiedDate":"2021-09-12"},{"lineNumber":252,"author":{"gitId":"kanjitp"},"content":"        ChatPage chatPage \u003d ui.getChatPage();","lastModifiedDate":"2021-09-12"},{"lineNumber":253,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":254,"author":{"gitId":"kanjitp"},"content":"            if (fullCommand.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-09-12"},{"lineNumber":255,"author":{"gitId":"kanjitp"},"content":"                throw new EmptyDescriptionException(\"The phrase for me to unlearn cannot be empty\");","lastModifiedDate":"2021-09-12"},{"lineNumber":256,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":257,"author":{"gitId":"kanjitp"},"content":"            String phraseString \u003d fullCommand.substring((\"unlearn \").length());","lastModifiedDate":"2021-09-12"},{"lineNumber":258,"author":{"gitId":"kanjitp"},"content":"            VocabList vocabList \u003d chatPage.getAlice().getVocabList();","lastModifiedDate":"2021-09-12"},{"lineNumber":259,"author":{"gitId":"kanjitp"},"content":"            if (VocabList.isDefaultPhrase(phraseString)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":260,"author":{"gitId":"kanjitp"},"content":"                throw new DuplicateVocabException(phraseString + \" is Alice\u0027s untouchable phrase!!, please choose \"","lastModifiedDate":"2021-09-12"},{"lineNumber":261,"author":{"gitId":"kanjitp"},"content":"                        + \"other phrase for Alice to unlearn\");","lastModifiedDate":"2021-09-12"},{"lineNumber":262,"author":{"gitId":"kanjitp"},"content":"            } else if (!vocabList.containsPhrase(phraseString)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":263,"author":{"gitId":"kanjitp"},"content":"                throw new DuplicateVocabException(phraseString + \" is what Alice doesn\u0027t know!!, please choose \"","lastModifiedDate":"2021-09-12"},{"lineNumber":264,"author":{"gitId":"kanjitp"},"content":"                        + \"other phrase for Alice to unlearn\");","lastModifiedDate":"2021-09-12"},{"lineNumber":265,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":266,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":267,"author":{"gitId":"kanjitp"},"content":"            vocabList.removePhrase(phraseString);","lastModifiedDate":"2021-09-12"},{"lineNumber":268,"author":{"gitId":"kanjitp"},"content":"            chatPage.printWithAlice(Ui.getUnlearnText(phraseString));","lastModifiedDate":"2021-09-12"},{"lineNumber":269,"author":{"gitId":"kanjitp"},"content":"        } catch (EmptyDescriptionException | DialogException | DuplicateVocabException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":270,"author":{"gitId":"kanjitp"},"content":"            chatPage.printError(e);","lastModifiedDate":"2021-09-03"},{"lineNumber":271,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":272,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":273,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":274,"author":{"gitId":"kanjitp"},"content":"    private void executeCommands(Ui ui) {","lastModifiedDate":"2021-09-12"},{"lineNumber":275,"author":{"gitId":"kanjitp"},"content":"        ChatPage chatPage \u003d ui.getChatPage();","lastModifiedDate":"2021-09-12"},{"lineNumber":276,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":277,"author":{"gitId":"kanjitp"},"content":"            chatPage.printWithAlice(Ui.getCommandListText());","lastModifiedDate":"2021-09-12"},{"lineNumber":278,"author":{"gitId":"kanjitp"},"content":"        } catch (DialogException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":279,"author":{"gitId":"kanjitp"},"content":"            chatPage.printError(e);","lastModifiedDate":"2021-09-03"},{"lineNumber":280,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":281,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":282,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":283,"author":{"gitId":"kanjitp"},"content":"    private void executeBye(Ui ui, Storage storage) {","lastModifiedDate":"2021-09-12"},{"lineNumber":284,"author":{"gitId":"kanjitp"},"content":"        ChatPage chatPage \u003d ui.getChatPage();","lastModifiedDate":"2021-09-12"},{"lineNumber":285,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":286,"author":{"gitId":"kanjitp"},"content":"            storage.save(ui.getTaskDialog().getTaskList());","lastModifiedDate":"2021-09-12"},{"lineNumber":287,"author":{"gitId":"kanjitp"},"content":"            chatPage.exit();","lastModifiedDate":"2021-09-03"},{"lineNumber":288,"author":{"gitId":"kanjitp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":289,"author":{"gitId":"kanjitp"},"content":"            chatPage.printError(e);","lastModifiedDate":"2021-09-03"},{"lineNumber":290,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":291,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":292,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":293,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":294,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"kanjitp":294}},{"path":"src/main/java/command/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package command.exceptions;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Exception to do with Command to be thrown when the user does not input","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" * a description when trying to create a task.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"public class EmptyDescriptionException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"     * Default constructor of EmptyDescriptionException.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"     * @param errorMessage message to be stored in the EmptyDescriptionException.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    public EmptyDescriptionException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":17}},{"path":"src/main/java/command/exceptions/EmptyIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package command.exceptions;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Exception to do with Command to be thrown when the user does not input","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" * an index given the specified command.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"public class EmptyIndexException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"     * Default constructor of EmptyIndexException.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"     * @param errorMessage message to be stored in the EmptyIndexException.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    public EmptyIndexException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":16}},{"path":"src/main/java/command/exceptions/EmptyTaggerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package command.exceptions;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Exception to do with Command to be thrown when the user does not input","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" * a tagger given the specified command.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"public class EmptyTaggerException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"     * Default constructor of EmptyTaggerException.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"     * @param errorMessage message to be stored in the EmptyTaggerException.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    public EmptyTaggerException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":16}},{"path":"src/main/java/command/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package command.exceptions;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Exception to do with Command to be thrown when the user input invalid argument","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" * for the command input by the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"public class InvalidArgumentException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"     * Default constructor of InvalidArgumentException.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"     * @param errorMessage message to be stored in the InvalidArgumentException.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    public InvalidArgumentException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":16}},{"path":"src/main/java/command/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package command.exceptions;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Exception to do with Command to be thrown when the user","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" * specify invalid index from 1 to length of TaskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"public class InvalidIndexException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"     * Default constructor of InvalidIndexException.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"     * @param errorMessage message to be stored in the InvalidIndexException.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    public InvalidIndexException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":16}},{"path":"src/main/java/command/exceptions/InvalidTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package command.exceptions;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Exception to do with Command to be thrown when the user input invalid time","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" * format as a command.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"public class InvalidTimeFormatException extends RuntimeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"     * Default constructor of InvalidTimeException.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"     * @param errorMessage message to be stored in the InvalidTimeException.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    public InvalidTimeFormatException(String errorMessage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"kanjitp":16}},{"path":"src/main/java/dialog/Dialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import dialog.exceptions.DialogException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":" * Dialog class deal with printing feedback to the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":" * Dialog stores sentences into an ArrayList before printing them in separate line.","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":" * @since 0.02","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"public class Dialog {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    /** archive to be shared with its subclasses */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    protected static HashMap\u003cString, Dialog\u003e archive \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    /** sentences stored in the dialog */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    protected final ArrayList\u003cString\u003e sentences;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"     * Constructor for the dialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"     * Set the sentences to the given sentences in the constructor.","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"     * @param sentences sentences to be stored in the dialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    protected Dialog(ArrayList\u003cString\u003e sentences) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        this.sentences \u003d sentences;","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"     * Add sentence to current dialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"     * @param sentence sentence to be added on each line of the dialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    public void add(String sentence) {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        this.sentences.add(sentence);","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"     * Generate dialog of specified Id.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"     * Dialog is not to have the same Id to avoid duplication.","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     * @param id the id of the dialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"     * @return the dialog of specified id.","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"     * @throws DialogException dialog cannot have the same id while the app is running.","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"    public static Dialog generate(String id) throws DialogException {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        if (archive.containsKey(id)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"            throw new DialogException(id + \" already exists\");","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        final Dialog newDialog \u003d new Dialog(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        archive.put(id, newDialog);","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        return newDialog;","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"     * Return whether the archive of the Dialog class have the dialog with specified id.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"     * @param id id to check if the archive contains dialog of such id or not.","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"     * @return whether the archive have stored Dialog of specified Id.","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"    public static boolean containsId(String id) {","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        return archive.containsKey(id);","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"     * Get existing dialog of existing Id.","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"     * @param id id to get the dialog from the archive.","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"     * @return return the Dialog in archive with the specified id.","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    public static Dialog get(String id) throws DialogException {","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"        if (!containsId(id)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"            throw new DialogException(\"The archive does not contain the id \" + id);","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"        return archive.get(id);","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"     * Return string representation of Dialog with its sentences separated into separate lines.","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"     * @return string representation of Dialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"        return this.sentences.stream().reduce(\"\", (s1, s2) -\u003e s1 + s2 + \"\\n\");","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":93}},{"path":"src/main/java/dialog/TaskDialog.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import command.exceptions.InvalidTimeFormatException;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import dialog.exceptions.DialogException;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import dialog.exceptions.TaskDialogException;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import model.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import model.task.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import model.task.TimeTask;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":" * TaskDialog is a class for displaying dialogs which also has TaskList as its component.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":" * This task deal with dialog which has to do with TaskList and is responsible for adding and removing the task","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":" * itself.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":" * @since 0.02","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"public class TaskDialog extends Dialog {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    // This class is a child of dialog class which allow the user to interact with the taskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    /** private constructor only to be used within the class */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    private TaskDialog(ArrayList\u003cString\u003e sentences, TaskList taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"        super(sentences);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"     * Factory method for creating TaskDialog of type Dialog (to be cast by developer).","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"     * Factory method from TaskDialog allow the user to fetch the existing Dialog in the archive.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"     * The default TaskList will have an empty ArrayList of task. This is to not break abstraction.","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"     * @param id the id of the TaskDialog","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     * @return TaskDialog of type Dialog","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"    public static Dialog generate(String id) {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"        if (archive.containsKey(id)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"            // Task Dialog will give the same dialog, the dialog still","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"            // cannot have duplicating id","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"            return archive.get(id);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"            final Dialog newDialog \u003d new TaskDialog(new ArrayList\u003c\u003e(), new TaskList(new ArrayList\u003c\u003e()));","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"            archive.put(id, newDialog);","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"            return newDialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"     * Factory method for creating TaskDialog as Dialog type (to be cast by developer).","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"     * Factory method from TaskDialog allow the user to fetch the existing Dialog in the archive.","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"     * @param id       the id of the TaskDialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"     * @param taskList the taskList the TaskDialog is going to have.","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"     * @return TaskDialog of type Dialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"    public static Dialog generate(String id, TaskList taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"        if (archive.containsKey(id)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"            return archive.get(id);","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"            final Dialog newDialog \u003d new TaskDialog(new ArrayList\u003c\u003e(), taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"            archive.put(id, newDialog);","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"            return newDialog;","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"     * Add the task to the TaskList of this Dialog and print out feedback to the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"     * @param task the task to be added to the TaskList of this TaskDialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"     * @throws TaskDialogException duplicated task cannot be added.","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"    public String addTask(Task task) throws TaskDialogException, DialogException {","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"        if (taskList.contains(task)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"            throw new TaskDialogException(\"The task \u0027\" + task + \"\u0027 to be added already exists! Please delete \"","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"                + \"the previous one first\");","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"        String dialogId \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"        TaskList.TaskType taskType \u003d Parser.classNameToTaskType(task.getClass().getName());","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"        if (taskType \u003d\u003d TaskList.TaskType.EVENT || taskType \u003d\u003d TaskList.TaskType.DEADLINE) {","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"            TimeTask timeTask \u003d (TimeTask) task;","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"            dialogId \u003d taskType + timeTask.getDescription() + timeTask.getTime();","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"            dialogId \u003d taskType + task.getDescription();","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"        Dialog addDialog \u003d Dialog.generate(dialogId);","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"        addDialog.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"        addDialog.add(\"  \" + task);","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"        addDialog.add(\"Now you have \" + this.taskList.length() + \" tasks in the list.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"        return addDialog.toString();","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"     * Return TaskDialog filtered by the specific deadline of format yyyy-MM-dd.","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"     * The Task Dialog will return another Task Dialog filtered by the ones that happen","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"     * either before or right on the date.","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"     * @param deadline the deadline of format yyyy-MM-dd.","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"     * @return TaskDialog with new TaskList stored in it.","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"     * @throws InvalidTimeFormatException time of illegal format (not yyyy-MM-dd).","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"    public TaskDialog getFromDeadline(String deadline) throws InvalidTimeFormatException {","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"        LocalDate dlDate \u003d Parser.parseTimeString(deadline);","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"        return new TaskDialog(new ArrayList\u003c\u003e(List.of(\"Deadline: \"","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"            + dlDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")))),","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"            new TaskList(new ArrayList\u003c\u003e(this.taskList.getTasks().stream().filter((task) -\u003e {","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"                if (!task.getClass().getSuperclass().getName().equals(\"model.task.TimeTask\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"                    // return any task without time associated with it","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"                    return true;","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"                    TimeTask timetask \u003d (TimeTask) task;","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"                    return timetask.getTime().isBefore(dlDate) || timetask.getTime().isEqual(dlDate);","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"            }).collect(Collectors.toList()))));","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"     * Return TaskDialog filtered by the keyword given by the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"     * @param keyword the keyword to search description.","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"     * @return TaskDialog with TaskList with tasks matching the keyword.","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"    public TaskDialog getFromKeyword(String keyword) {","lastModifiedDate":"2021-09-03"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"        return new TaskDialog(new ArrayList\u003c\u003e(List.of(\"Find: \" + keyword)),","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"            new TaskList(new ArrayList\u003c\u003e(this.taskList.getTasks().stream().filter((task)","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"                -\u003e task.getDescription().contains(keyword)).collect(Collectors.toList()))));","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"     * Return the TaskList of current TaskDialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"     * @return the taskList stored in this TaskDialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"kanjitp"},"content":"     * Mark the task in TaskList with the specified index and print feedback to the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"kanjitp"},"content":"     * @param index the index of the Task in TaskList in this TaskDialog to mark as done.","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"     * @throws DialogException dialog cannot have the same id while the app is running.","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"    public String markTaskAsDone(int index) throws DialogException {","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"        String id \u003d \"markAsDone\" + task.hashCode();","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"kanjitp"},"content":"        if (archive.containsKey(id)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"kanjitp"},"content":"            return archive.get(id).toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"            Dialog markAsDoneDialog \u003d Dialog.generate(id);","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"            markAsDoneDialog.add(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"kanjitp"},"content":"            markAsDoneDialog.add(\"  \" + task);","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"kanjitp"},"content":"            return markAsDoneDialog.toString();","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":168,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":169,"author":{"gitId":"kanjitp"},"content":"     * Delete the task by index and print feedback to the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":171,"author":{"gitId":"kanjitp"},"content":"     * @param index the index of the task to be deleted in TaskList of this TaskDialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":172,"author":{"gitId":"kanjitp"},"content":"     * @throws DialogException dialog cannot have the same id while the app is running.","lastModifiedDate":"2021-09-16"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":174,"author":{"gitId":"kanjitp"},"content":"    public String deleteTaskByIndex(int index) throws DialogException {","lastModifiedDate":"2021-09-12"},{"lineNumber":175,"author":{"gitId":"kanjitp"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"kanjitp"},"content":"        taskList.remove(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":177,"author":{"gitId":"kanjitp"},"content":"        String id \u003d \"remove\" + task.hashCode();","lastModifiedDate":"2021-08-28"},{"lineNumber":178,"author":{"gitId":"kanjitp"},"content":"        Dialog removeDialog \u003d Dialog.generate(id);","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"kanjitp"},"content":"        removeDialog.add(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"kanjitp"},"content":"        removeDialog.add(\"  \" + task);","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"kanjitp"},"content":"        removeDialog.add(\"Now you have \" + this.taskList.length() + \" tasks in the list.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":183,"author":{"gitId":"kanjitp"},"content":"        Dialog.archive.remove(id);","lastModifiedDate":"2021-08-19"},{"lineNumber":184,"author":{"gitId":"kanjitp"},"content":"        Dialog.archive.remove(task.getDescription());","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":186,"author":{"gitId":"kanjitp"},"content":"        return removeDialog.toString();","lastModifiedDate":"2021-09-12"},{"lineNumber":187,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":188,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":189,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":190,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":191,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":192,"author":{"gitId":"kanjitp"},"content":"     * Return the string representation of the TaskDialog with its sentences at the top","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"kanjitp"},"content":"     * and followed by the TaskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":194,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":195,"author":{"gitId":"kanjitp"},"content":"     * @return string representation of taskDialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":196,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":197,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":198,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":199,"author":{"gitId":"kanjitp"},"content":"        String dialogs \u003d this.sentences.stream().reduce(\"\", (s1, s2) -\u003e s1 + s2 + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":201,"author":{"gitId":"kanjitp"},"content":"        return dialogs + \"Here are the tasks in your list:\\n\" + taskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":202,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":203,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":203}},{"path":"src/main/java/dialog/exceptions/DialogException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package dialog.exceptions;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Exception to do with Dialog to be thrown when a Dialog of existing id","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" * is to be generated.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"public class DialogException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"     * Default constructor of DialogException.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"     * @param errorMessage message to be stored in the DialogException.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    public DialogException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":16}},{"path":"src/main/java/dialog/exceptions/TaskDialogException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package dialog.exceptions;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Exception to do with Task Dialog to be thrown when a Task Dialog has encountered illegal","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" * behaviour. Such method currently includes only addTask in TaskDialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"public class TaskDialogException extends Exception {","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"     * Default constructor of TaskDialogException.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"     * @param errorMessage message to be stored in the TaskDialogException.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    public TaskDialogException(String errorMessage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"kanjitp":16}},{"path":"src/main/java/model/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package model.task;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":" * Class for Deadline with specific time for when task is due.","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":" * @since 0.01","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"public class Deadline extends TimeTask {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"     * Adapted constructor for deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"     * isDone is set to false.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"     * @param description the description of the deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"     * @param by          the time of the event with yyyy-MM-dd format.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"        super(description, by);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"     * Adapted constructor for deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"     * @param description the description of the deadline.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"     * @param isDone      whether the deadline is done.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"     * @param by          the time of the event with yyyy-MM-dd format.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        super(description, isDone, by);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        return Objects.hash(getDescription(), getTime(), this.getClass().getName());","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     * Check whether the given object is the same object, is of type Deadline and have matching description and time.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"     * @param other other object to be checked","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"     * @return whether that object should equal to this deadline or not","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"            return true;","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        if (!(other instanceof Deadline)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"            return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        Deadline otherDeadline \u003d (Deadline) other;","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        return otherDeadline.getDescription().equals(getDescription()) \u0026\u0026 otherDeadline.getTime().equals(getTime());","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"     * Template: \"[D][x] description (by: Month DD YYYY)\" or \"[D][ ] description (by: Month DD YYYY)\" for done","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"     * and not done task respectively.","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"     * @return the template above for Deadline","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        return \"[D]\" + super.toString() + \"(by: \"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"                + this.getTime().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":72}},{"path":"src/main/java/model/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package model.task;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":" * Class for Event with specific time for when the event is occurring.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":" * @since 0.01","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"public class Event extends TimeTask {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"     * Adapted constructor for Event.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"     * isDone is set to false.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"     * @param description the description of the event.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"     * @param at          the time of the event with yyyy-MM-dd format.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"        super(description, at);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"     * Adapted constructor for Event.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"     * @param description the description of the event.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"     * @param isDone      whether the event is done.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"     * @param at          the time of the event with yyyy-MM-dd format.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    public Event(String description, boolean isDone, String at) {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        super(description, isDone, at);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        return Objects.hash(getDescription(), getTime(), this.getClass().getName());","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     * Check whether the given object is the same object, is of type Task and have matching description.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"     * @param other other object to be checked","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"     * @return whether that object should equal to this task or not","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"            return true;","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"            return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        return otherEvent.getDescription().equals(getDescription()) \u0026\u0026 otherEvent.getTime().equals(getTime());","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"     * Template: \"[E][x] description (at: Month DD YYYY)\" or \"[E][ ] description (at: Month DD YYYY)\" for done","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"     * and not done task respectively.","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"     * @return the template above for Event.","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        return \"[E]\" + super.toString() + \"(at: \"","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"                + this.getTime().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":72}},{"path":"src/main/java/model/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package model.task;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" * Abstract class for Task.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":" * The task is made of description and whether it is done or not.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":" * @since 0.01","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    private final String description;","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"     * Default constructor for Task to be used by its subclasses for convenience.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"     * Abstract Task cannot be created.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"     * isDone is set to false by default.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"     * @param description the description of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"     * Default constructor for Task to be used by its subclasses for convenience.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"     * Abstract Task cannot be created.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"     * @param description the description of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"     * @param isDone      whether the task is done.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"     * Getter for isDone.","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"     * @return isDone boolean of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"     * Getter for description.","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"     * @return description of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        return this.description;","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"     * Return a string representation of isDone boolean.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"     * @return ✔ for true (done) and ✘ for false (not done).","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        return (isDone ? \"✔\" : \" ✘ \");","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"    /** mark the current task as done. */","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        return Objects.hash(description);","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"     * Check whether the given object is the same object, is of type Task and have matching description.","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"     * @param other other object to be checked","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"     * @return whether that object should equal to this task or not","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"            return true;","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"            return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"        return otherTask.getDescription().equals(description);","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"     * Template: \"[x] description\" or \"[ ] description\" for done and not done task respectively.","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"     * @return the template of the string representation of task.","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":106}},{"path":"src/main/java/model/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package model.task;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" * Class for dealing with a list of tasks object or its subclasses alternatives.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":" * @since 0.01","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"public class TaskList {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    /** ArrayList containing the tasks */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"     * enum for type of tasks available.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    public enum TaskType {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"     * default constructor for TaskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"     * Default constructor for TaskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"     * @param tasks the arraylist of the tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"     * Add the task to the taskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"     * @param task the task to be added.","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"     * Remove the task at given index.","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"     * @param index index of the task to be removed.","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"    public void remove(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"     * Return the task at specific index.","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"     * @param index index of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"     * @return the task at that index.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid.","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"    public Task get(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"     * Getter for the array list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"     * @return ArrayList of Task objects or its alternatives.","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"     * Getter for length of the list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"     * @return the length of the tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"    public int length() {","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"     * Check whether the task list contains any task matching the task description","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"     * @param taskDescription the task description to check if this task list contains any task of such description","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"     * @return whether this task list has any task matching the task description","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"    public boolean contains(String taskDescription) {","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"        return this.tasks.stream().anyMatch(task -\u003e task.getDescription().equals(taskDescription));","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"     * Check whether the task list contains any task which is equal to the task given in the argument","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"     * @param task the task to check if it is contained in this task list","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"     * @return whether this task list has any task matching the given task","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"    public boolean contains(Task task) {","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"        return this.tasks.stream().anyMatch(taskInList -\u003e taskInList.equals(task));","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"     * Static helper method for manually adding the task to the specified taskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"     * @param taskList    the taskList to add the task to.","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"     * @param type        the type of the task to be added to the taskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"     * @param isDone      whether the task should be done or not.","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"     * @param description the description of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"     * @param time        if the task is subclass of time task specify the time in yyyy-MM-dd","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"     *                    or put empty string or null for non time task.","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"    public static void addTaskByType(TaskList taskList, TaskType type, boolean isDone,","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"                                     String description, String time) {","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"        switch (type) {","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"        case TODO:","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"            taskList.add(new Todo(description, isDone));","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"        case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"            taskList.add(new Event(description, isDone, time));","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"            taskList.add(new Deadline(description, isDone, time));","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"            throw new IllegalArgumentException(\"addTask Unsuccessful\");","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"     * A list representation of the tasks numbered from 1 to the last task in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"     * @return string representation of the list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"        StringBuilder tasksDialog \u003d new StringBuilder();","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"            tasksDialog.append(\"    \").append(i + 1).append(\".\").append(tasks.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"        return tasksDialog.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"kanjitp":147}},{"path":"src/main/java/model/task/TimeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package model.task;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":" * The abstract for models.task which has association with time.","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":" * @since 0.01","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"public abstract class TimeTask extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    /** LocalDate time of the timeTask */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    private final LocalDate time;","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"     * Adapted constructor for TimeTask.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"     * isDone is set to false.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"     * @param description the description of the TimeTask.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"     * @param timeString  the time of the TimeTask with yyyy-MM-dd format.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    public TimeTask(String description, String timeString) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"        this.time \u003d Parser.parseTimeString(timeString);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"     * Adapted constructor for TimeTask.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"     * @param description the description of the TimeTask.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"     * @param isDone      whether the models.task is done.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"     * @param timeString  the time of the TimeTask with yyyy-MM-dd format.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    public TimeTask(String description, boolean isDone, String timeString) {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        this.time \u003d Parser.parseTimeString(timeString);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        return Objects.hash(getDescription(), time);","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"     * Check whether the given object is the same object, is of type TimeTask and have matching description and time.","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"     * @param other other object to be checked","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"     * @return whether that object should equal to this time task or not","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"            return true;","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        if (!(other instanceof TimeTask)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"            return false;","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        TimeTask otherTimeTask \u003d (TimeTask) other;","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        return otherTimeTask.getDescription().equals(getDescription())","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"            \u0026\u0026 otherTimeTask.getTime().equals(time);","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"     * Getter for time.","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"     * @return LocalDate object of time.","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        return this.time;","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"kanjitp":76}},{"path":"src/main/java/model/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package model.task;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Class for simple To-Do task","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":" * @version 0.02","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":" * @since 0.01","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"     * Default constructor for To-Do task.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"     * @param description the description of the To-Do task.","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"     * Default constructor for To-Do task.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"     * @param description the description of the To-Do task.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"     * @param isDone      whether the task is done.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"     * Template: \"[T][x] description\" or \"[T][ ] description\" for done and not done task respectively.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"     * @return the template above for To-Do task.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":40}},{"path":"src/main/java/model/vocab/Vocab.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package model.vocab;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" * Vocab is a structure in which it has a phrase and a feedback.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":" * @since 0.00","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"public class Vocab {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    private final String phrase;","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    private final String feedback;","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    private Vocab(String phrase, String feedback) {","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"        this.phrase \u003d phrase;","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"        this.feedback \u003d feedback;","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"     * Factory method for producing a Vocab object.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"     * @param phrase   a word, sentence, or other string to be recognised","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"     * @param feedback a word, sentence, or string to be feedback.","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"     * @return vocab object with specified phrase and feedback","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    public static Vocab of(String phrase, String feedback) {","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        return new Vocab(phrase, feedback);","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"     * Getter for phrase.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"     * @return phrase in which this vocab is going to bbe recognised as.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    public String getPhrase() {","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        return phrase;","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     * Getter for feedback.","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"     * @return feedback for the phrase associated to this object.","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"    public String getFeedback() {","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"        return feedback;","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"     * Both phrase and feedback need to be the same to count as the same vocab.","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"     * Object of other type which is not subtype of vocab will instantly return false.","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"     * @param other other object of any type.","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"     * @return whether the object used as argument equal to this vocab.","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"            return true;","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        if (!(other instanceof Vocab)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"            return false;","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"        Vocab otherVocab \u003d (Vocab) other;","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        return otherVocab.phrase.equals(phrase) \u0026\u0026 otherVocab.feedback.equals(feedback);","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"     * Hashcode calculated by hashing the phrase and feedback.","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"     * @return the hashcode for this vocab calculated form the phrase and feedback.","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"        return Objects.hash(phrase, feedback);","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"     * String representation of vocab object.","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"     * @return the string of value of both phrase and feedback for this object.","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"        return \"phrase\u003d\u0027\" + phrase + \", feedback\u003d\u0027\" + feedback;","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"kanjitp":90}},{"path":"src/main/java/model/vocab/VocabList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package model.vocab;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import model.vocab.exceptions.UnrecognisedPhraseException;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":" * Class for dealing with a list of vocab object or its subclasses alternatives.","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":" * @since 0.00","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"public class VocabList {","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    /** to be added as more commands are introduced */","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    public static final List\u003cString\u003e DEFAULT_PHRASE \u003d List.of(\"list\", \"date\", \"find\", \"todo\", \"deadline\", \"event\",","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"        \"done\", \"delete\", \"learn\", \"unlearn\", \"commands\", \"?\", \"help\", \"bye\");","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    /** ArrayList containing the vocabs */","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    private ArrayList\u003cVocab\u003e vocabs \u003d","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"        new ArrayList\u003c\u003e(DEFAULT_PHRASE.stream().map(command","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"            -\u003e Vocab.of(command, \"ALICE_DEFAULT_VOCAB\")).collect(Collectors.toList()));","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"     * Empty constructor populated with all the default commands.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    public VocabList() {","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        // vocabs already have its array list populated with the vocabs.","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"     * Add the vocabs on top of the default phrase from the array list of vocab objects.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"     * @param vocabs array list of vocabs to be added.","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    public VocabList(ArrayList\u003cVocab\u003e vocabs) {","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        this.vocabs.addAll(vocabs);","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"     * Check whether the phrase parsed in is a default phrase/ command or not.","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     * @param phrase phrase to be recognised as a new command.","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"     * @return whether the specified phrase is already used as a default phrase or not.","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    public static boolean isDefaultPhrase(String phrase) {","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        return DEFAULT_PHRASE.contains(phrase);","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"     * Add the vocab to the vocab list.","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"     * @param vocab the vocab to be added to this list.","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"    public void add(Vocab vocab) {","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        vocabs.add(vocab);","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"     * Remove the vocab at given index.","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"     * @param index index of the vocab to be removed from this list.","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"    public void remove(int index) {","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        vocabs.remove(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"     * Return the vocab at specific index.","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"     * @param index index of the vocab.","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"     * @return the vocab at that index.","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"     * @throws IndexOutOfBoundsException if the index is invalid.","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"    public Vocab get(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        return vocabs.get(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"     * Getter for feedback from the specified phrase in this current list.","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"     * @param phrase the phrase to be used to fetch feedback.","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"     * @return the feedback from the phrase in this vocab list.","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"     * @throws UnrecognisedPhraseException if the phrase is not contained in this list.","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"    public String getFeedBack(String phrase) throws UnrecognisedPhraseException {","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"        if (!containsPhrase(phrase)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"            throw new UnrecognisedPhraseException(phrase + \"\");","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"        return vocabs.stream().filter(vocab","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"            -\u003e vocab.getPhrase().equals(phrase)).findFirst().orElseThrow().getFeedback();","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"     * Remove the given phrase from this vocab list.","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"     * @param phrase phrase to be removed from this list.","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"    public void removePhrase(String phrase) {","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"        if (!containsPhrase(phrase)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"            return;","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"        vocabs \u003d new ArrayList\u003c\u003e(vocabs.stream()","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"            .filter(vocab -\u003e !vocab.getPhrase().equals(phrase)).collect(Collectors.toList()));","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"     * Check whether if the given phrase is contained in this vocab list or not.","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"     * @param phrase phrase to be checked if it exist in this list.","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"     * @return whether the given phrase exist in this list as a vocab.","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"    public boolean containsPhrase(String phrase) {","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"        return vocabs.stream().map(Vocab::getPhrase).anyMatch(p -\u003e p.equals(phrase));","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"     * Getter for the array list of vocabs.","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"     * @return ArrayList of vocab objects or its alternatives.","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"    public ArrayList\u003cVocab\u003e getVocabs() {","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"        return this.vocabs;","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"     * A list representation of the vocabs numbered from 1 to the last models.task in the list","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"     * @return string representation of the list of tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"        StringBuilder vocabDialog \u003d new StringBuilder();","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"        for (int i \u003d 0; i \u003c vocabs.size(); i++) {","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"            vocabDialog.append(\"    \").append(i + 1).append(\".\").append(vocabs.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"        return vocabDialog.toString();","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"kanjitp":147}},{"path":"src/main/java/model/vocab/exceptions/DuplicateVocabException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package model.vocab.exceptions;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"public class DuplicateVocabException extends Exception {","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"     * Default constructor of EmptyDescriptionException.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"     * To be used when vocab already exists or default to Alice.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"     * @param errorMessage message to be stored in the EmptyDescriptionException","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    public DuplicateVocabException(String errorMessage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"kanjitp":13}},{"path":"src/main/java/model/vocab/exceptions/UnrecognisedPhraseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package model.vocab.exceptions;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"public class UnrecognisedPhraseException extends Exception {","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"     * Default constructor of UnrecognisedPhraseException.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"     * To be used when a phrase is not contained in a vocab list.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"     * @param errorMessage message to be stored in the UnrecognisedPhraseException","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    public UnrecognisedPhraseException(String errorMessage) {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"kanjitp":13}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import alice.exceptions.AliceException;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import command.exceptions.InvalidTimeFormatException;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import model.task.Deadline;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import model.task.Event;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import model.task.Task;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import model.task.TaskList;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import model.vocab.Vocab;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":" * Class for parsing different data type to other type or different format.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":" * @since 0.02","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"public class Parser {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"     * Static method for converting a string of command to Command Type.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"     * @param s the string.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"     * @return CommandType of the command.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"     * @throws AliceException invalid command is parsed into the method.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    public static Command.CommandType stringToCommand(String s) throws AliceException {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        switch (s) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"        case \"list\":","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"            return Command.CommandType.LIST;","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        case \"date\":","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"            return Command.CommandType.DATE;","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        case \"find\":","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"            return Command.CommandType.FIND;","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"            return Command.CommandType.TODO;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"            return Command.CommandType.DEADLINE;","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"            return Command.CommandType.EVENT;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        case \"done\":","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"            return Command.CommandType.DONE;","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"            return Command.CommandType.DELETE;","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"        case \"learn\":","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"            return Command.CommandType.LEARN;","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        case \"unlearn\":","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"            return Command.CommandType.UNLEARN;","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        case \"commands\":","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        case \"?\":","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        case \"help\":","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"            return Command.CommandType.COMMANDS;","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"            return Command.CommandType.BYE;","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"            throw new AliceException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"     * Static method for converting a string to different TaskType.","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"     * @param s the string.","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"     * @return TaskType of the tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"     * @throws AliceException invalid models.task string representation is parsed into the method.","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    public static TaskList.TaskType stringToTaskType(String s) throws AliceException {","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        switch (s) {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        case \"TD\":","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"            return TaskList.TaskType.TODO;","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        case \"DL\":","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"            return TaskList.TaskType.DEADLINE;","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"        case \"EV\":","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"            return TaskList.TaskType.EVENT;","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"            throw new AliceException(\"Invalid String detected: \" + s);","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"     * Static method for converting a className of a task to the TaskType enum.","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"     * @param cn task subclass class name to be converted to TaskType enum.","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"     * @return taskType of the classname passed.","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"     * @throws AliceException invalid classname is parsed into the method.","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"    public static TaskList.TaskType classNameToTaskType(String cn) throws AliceException {","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"        switch (cn) {","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"        case \"model.task.Todo\":","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"        case \"Todo\":","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"            return TaskList.TaskType.TODO;","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"        case \"model.task.Deadline\":","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"        case \"Deadline\":","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"            return TaskList.TaskType.DEADLINE;","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"        case \"model.task.Event\":","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"        case \"Event\":","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"            return TaskList.TaskType.EVENT;","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"            throw new AliceException(\"Invalid ClassName detected: \" + cn);","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"     * Static method for converting the taskType into its string representation.","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"     * @param t the taskType to be converted to string representation.","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"     * @return the String representation fo that taskType.","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"     * @throws AliceException invalid TaskType has been parsed into the method.","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"    public static String taskTypeToString(TaskList.TaskType t) throws AliceException {","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"        switch (t) {","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"        case TODO:","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"            return \"TD\";","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"            return \"DL\";","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"        case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"            return \"EV\";","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"            throw new AliceException(\"Invalid TaskType detected: \" + t);","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"     * Static method for converting the task to a save format string representation.","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"     * @param task the task to be converted to String save format.","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"     * @return string representation to be seen in the save file of the task.","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"    public static String taskToSaveFormat(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"        TaskList.TaskType type \u003d classNameToTaskType(task.getClass().getName());","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"        String s \u003d taskTypeToString(type) + \" | \" + (task.isDone() ? 1 : 0) + \" | \" + task.getDescription();","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"        switch (type) {","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"        case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"            Event ev \u003d (Event) task;","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"            s +\u003d \" | \" + ev.getTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"            Deadline dl \u003d (Deadline) task;","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"            s +\u003d \" | \" + dl.getTime().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"kanjitp"},"content":"        return s;","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"     * Static method for converting a vocab object to its String save format.","lastModifiedDate":"2021-09-16"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"     * @param vocab the vocab to be converted to String save format.","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"     * @return string representation of that vocab.","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"kanjitp"},"content":"    public static String vocabToSaveFormat(Vocab vocab) {","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"kanjitp"},"content":"        return vocab.getPhrase() + \" | \" + vocab.getFeedback();","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"kanjitp"},"content":"     * Static method for converting a string of yes or others to boolean.","lastModifiedDate":"2021-09-16"},{"lineNumber":164,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":165,"author":{"gitId":"kanjitp"},"content":"     * @param yesNo string of yes or no.","lastModifiedDate":"2021-09-16"},{"lineNumber":166,"author":{"gitId":"kanjitp"},"content":"     * @return true for string resembling yes, false otherwise.","lastModifiedDate":"2021-09-16"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"kanjitp"},"content":"    public static boolean yesNoToBoolean(String yesNo) {","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"kanjitp"},"content":"        switch (yesNo) {","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"        case \"Yes\":","lastModifiedDate":"2021-09-16"},{"lineNumber":171,"author":{"gitId":"kanjitp"},"content":"        case \"yes\":","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"kanjitp"},"content":"        case \"y\":","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"        case \"Y\":","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"kanjitp"},"content":"            return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"kanjitp"},"content":"        case \"No\":","lastModifiedDate":"2021-09-16"},{"lineNumber":176,"author":{"gitId":"kanjitp"},"content":"        case \"no\":","lastModifiedDate":"2021-09-16"},{"lineNumber":177,"author":{"gitId":"kanjitp"},"content":"        case \"n\":","lastModifiedDate":"2021-09-16"},{"lineNumber":178,"author":{"gitId":"kanjitp"},"content":"        case \"N\":","lastModifiedDate":"2021-09-16"},{"lineNumber":179,"author":{"gitId":"kanjitp"},"content":"            return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":180,"author":{"gitId":"kanjitp"},"content":"        default:","lastModifiedDate":"2021-09-16"},{"lineNumber":181,"author":{"gitId":"kanjitp"},"content":"            throw new AliceException(\"Invalid format of yes or no detected: \" + yesNo);","lastModifiedDate":"2021-09-16"},{"lineNumber":182,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":186,"author":{"gitId":"kanjitp"},"content":"     * Static method for parsing string representation to LocalDate object.","lastModifiedDate":"2021-09-16"},{"lineNumber":187,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":188,"author":{"gitId":"kanjitp"},"content":"     * @param s the string representation of time.","lastModifiedDate":"2021-09-16"},{"lineNumber":189,"author":{"gitId":"kanjitp"},"content":"     * @return LocalDate object if is is of format yyyy-MM-dd.","lastModifiedDate":"2021-09-16"},{"lineNumber":190,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":191,"author":{"gitId":"kanjitp"},"content":"    public static LocalDate parseTimeString(String s) {","lastModifiedDate":"2021-08-29"},{"lineNumber":192,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"kanjitp"},"content":"            return LocalDate.parse(s);","lastModifiedDate":"2021-08-29"},{"lineNumber":194,"author":{"gitId":"kanjitp"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":195,"author":{"gitId":"kanjitp"},"content":"            throw new InvalidTimeFormatException(\"the inputted time format is invalid, please enter as yyyy-MM-dd\");","lastModifiedDate":"2021-08-29"},{"lineNumber":196,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":197,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":198,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":199,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":200,"author":{"gitId":"kanjitp"},"content":"     * For parsing a string of full command to a Command object.","lastModifiedDate":"2021-09-16"},{"lineNumber":201,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":202,"author":{"gitId":"kanjitp"},"content":"     * @param fullCommand command in string format.","lastModifiedDate":"2021-09-16"},{"lineNumber":203,"author":{"gitId":"kanjitp"},"content":"     * @return Command object of the string.","lastModifiedDate":"2021-09-16"},{"lineNumber":204,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":205,"author":{"gitId":"kanjitp"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2021-08-28"},{"lineNumber":206,"author":{"gitId":"kanjitp"},"content":"        return new Command(fullCommand);","lastModifiedDate":"2021-08-28"},{"lineNumber":207,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":208,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"kanjitp":208}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import model.task.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":" * Class for dealing with the storage system saving and loading save file.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":" * Deal with reading and writing to file and can load TaskList from specified file.","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":" * @since 0.02","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"public class Storage {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    /** the directory to store every information to be in alice */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    public static final String DIRECTORY_PATH \u003d \"./alice\";","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    /** the directory to store all the save file to be called data */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    public static final String DATA_PATH \u003d \"/data\";","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"    /** writer for writing to file */","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    protected static BufferedWriter writer;","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    /** reader for reading the file */","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    protected static BufferedReader reader;","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    /** default name for the file */","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    private static final String DEFAULT_FILE_NAME \u003d \"task_list\";","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    /** the filePath for the save file */","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"    protected String filePath;","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    /** the taskList read from the save file */","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"    private TaskList taskListRead;","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"     * Empty Constructor of storage.","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"     * Not to be used for this class but for its subclasses.","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    public Storage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        // NOT TO BE USED FOR THIS CLASS BUT FOR ITS SUBCLASSES","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"     * Constructor using the specified fileName as the name of the save file to read and write to.","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"     * @param fileName the name of the file without file type suffix.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"     * @throws IOException there is error registering writer and reader.","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"    public Storage(String fileName) throws IOException {","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        // the save file to be used as simple text file in this update","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"        this.filePath \u003d DIRECTORY_PATH + DATA_PATH + \"/\" + fileName + \".txt\";","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        writer \u003d new BufferedWriter(new FileWriter(filePath, true));","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"     * Check if within the data folder of alice contain the following fileName or not.","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"     * @param fileName the file name of the file in data folder.","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"     * @return if the file with specified name exist or not.","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"     * @throws IOException if there is any error dealing with the system IO.","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"    public static boolean contains(String fileName) throws IOException {","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        String fullFileName \u003d fileName + \".txt\";","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        if (!haveSaveLocation()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"            createSaveLocation();","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"        return new ArrayList\u003c\u003e(Arrays.stream(Storage.getFilesFromDirectory(Storage.DIRECTORY_PATH + Storage.DATA_PATH))","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"            .map(File::getName).collect(Collectors.toList())).contains(fullFileName);","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"     * load taskList from where the reader and writer is currently at.","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"     * @return TaskList read from the save file.","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"    public TaskList loadTaskList() {","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"        taskListRead \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"        reader.lines().forEach((line) -\u003e {","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"            TaskList.TaskType type \u003d Parser.stringToTaskType(line.substring(0, 2));","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"            int index1 \u003d line.indexOf(\"|\");","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"            String isDoneString \u003d line.substring(index1 + 2, index1 + 3);","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"            int index2 \u003d line.indexOf(\"|\", index1 + 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"            String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"            String time \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"            if (type \u003d\u003d TaskList.TaskType.DEADLINE || type \u003d\u003d TaskList.TaskType.EVENT) {","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"                int index3 \u003d line.indexOf(\"|\", index2 + 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"                description \u003d line.substring(index2 + 2, index3 - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"                time \u003d line.substring(index3 + 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"                description \u003d line.substring(index2 + 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"            TaskList.addTaskByType(taskListRead, type, isDoneString.equals(\"1\"), description, time);","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"        });","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"        return taskListRead;","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"     * Return folder from the specified file path.","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"     * @param folderPath the folder path.","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"     * @return the folder as File.","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"    public static File getFolderFromPath(String folderPath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"        return new File(folderPath);","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"     * Return an array of files from a directory from the file path.","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"     * @param folderPath the file path of the directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"     * @return File[] of the files in the folder including hidden files.","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"    public static File[] getFilesFromDirectory(String folderPath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"        return new File(folderPath).listFiles();","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"     * Check if the directory to store the save file exist or not.","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"     * @return whether the directory path and the folder for the save file exist or not.","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"    public static boolean haveSaveLocation() {","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"        return java.nio.file.Files.exists(Paths.get(DIRECTORY_PATH))","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"            \u0026\u0026 java.nio.file.Files.exists(Paths.get(DIRECTORY_PATH + DATA_PATH));","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"kanjitp"},"content":"     * Create save location from the directory to the folder to store the save files.","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"     * @throws IOException if there is any error dealing with the system IO.","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"    public static void createSaveLocation() throws IOException {","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"        if (!haveSaveLocation()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"            if (!java.nio.file.Files.exists(Paths.get(Storage.DIRECTORY_PATH))) {","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"                Files.createDirectory(Paths.get(Storage.DIRECTORY_PATH));","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"kanjitp"},"content":"            if (!java.nio.file.Files.exists(Paths.get(Storage.DIRECTORY_PATH + Storage.DATA_PATH))) {","lastModifiedDate":"2021-08-29"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"                Files.createDirectory(Paths.get(Storage.DIRECTORY_PATH + Storage.DATA_PATH));","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":164,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":165,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":166,"author":{"gitId":"kanjitp"},"content":"     * Store the taskList into the save file the reader and writer are currently at.","lastModifiedDate":"2021-09-16"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"kanjitp"},"content":"     * @param taskList the taskList to be stored.","lastModifiedDate":"2021-09-16"},{"lineNumber":169,"author":{"gitId":"kanjitp"},"content":"     * @throws IOException if there is any error dealing with the system IO.","lastModifiedDate":"2021-09-16"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":171,"author":{"gitId":"kanjitp"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"kanjitp"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"        List\u003cString\u003e fileContent \u003d taskList.getTasks().stream().map(Parser::taskToSaveFormat)","lastModifiedDate":"2021-09-16"},{"lineNumber":174,"author":{"gitId":"kanjitp"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-09-16"},{"lineNumber":175,"author":{"gitId":"kanjitp"},"content":"        Files.write(path, fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"kanjitp"},"content":"        reader.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":177,"author":{"gitId":"kanjitp"},"content":"        writer.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":178,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":180,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":181,"author":{"gitId":"kanjitp"},"content":"     * Static method to delete save file in alice/data","lastModifiedDate":"2021-09-11"},{"lineNumber":182,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":183,"author":{"gitId":"kanjitp"},"content":"     * @param fileName file name without \".filetype\"","lastModifiedDate":"2021-09-11"},{"lineNumber":184,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":185,"author":{"gitId":"kanjitp"},"content":"    public static void deleteFile(String fileName) {","lastModifiedDate":"2021-09-11"},{"lineNumber":186,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":187,"author":{"gitId":"kanjitp"},"content":"            Path path \u003d Paths.get(DIRECTORY_PATH + DATA_PATH + \"/\" + fileName + \".txt\");","lastModifiedDate":"2021-09-11"},{"lineNumber":188,"author":{"gitId":"kanjitp"},"content":"            Files.deleteIfExists(path);","lastModifiedDate":"2021-09-11"},{"lineNumber":189,"author":{"gitId":"kanjitp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":190,"author":{"gitId":"kanjitp"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-11"},{"lineNumber":191,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":192,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":193,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"kanjitp":193}},{"path":"src/main/java/storage/VocabularyStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package storage;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import model.vocab.Vocab;","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import model.vocab.VocabList;","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":" * Class for dealing with the storage system saving and loading save file.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":" * Deal with reading and writing to file specifically to be dealt with vocab.","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":" * @since 0.00","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"public class VocabularyStorage extends Storage {","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    public static final String VOCAB_FILE_NAME \u003d \"/vocab.txt\";","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    private VocabList vocabListRead;","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"     * Create a writer and reader at file according to default path.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"     * @throws IOException if the vocabulary storage fails to create writer at that location","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    public VocabularyStorage() throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        this.filePath \u003d DIRECTORY_PATH + VOCAB_FILE_NAME;","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        writer \u003d new BufferedWriter(new FileWriter(filePath, true));","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"     * load vocab list from the save file.","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     * @return vocab list read from the save file.","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"    public VocabList loadVocabList() {","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        vocabListRead \u003d new VocabList();","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        reader.lines().forEach((line) -\u003e {","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"            vocabListRead.add(Vocab.of(line.substring(0, line.indexOf(\" |\")), line.substring(line.indexOf(\"| \") + 2)));","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        });","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        return vocabListRead;","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"     * Store the vocab list into the save file the reader and writer are currently at.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"     * @param vocabList the vocab list to be stored.","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"     * @throws IOException if there is any error dealing with the system IO.","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"    public void save(VocabList vocabList) throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        Path path \u003d Paths.get(filePath);","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        List\u003cString\u003e fileContent \u003d","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"                vocabList.getVocabs().stream().filter(vocab -\u003e !VocabList.DEFAULT_PHRASE.contains(vocab.getPhrase()))","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"                        .map(Parser::vocabToSaveFormat).collect(Collectors.toList());","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"        Files.write(path, fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        reader.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        writer.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"     * Force the current vocab storage to close.","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"     * @throws IOException the reader and writer cannot close.","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"    public void close() throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"        reader.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"        writer.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"kanjitp":87}},{"path":"src/main/java/ui/ChatPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import alice.Alice;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import dialog.exceptions.DialogException;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import ui.components.CenterBox;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"import ui.components.DialogBox;","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":" * Page for interacting with Alice","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":" * @since 0.02","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"public class ChatPage extends AnchorPane {","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    /** different mode on how should chat page deal with input inputted by the user */","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    public enum Mode {","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        DEFAULT, LEARN","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"    private ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    private VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    private TextField userInput \u003d new TextField();","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    private Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    private AnchorPane anchorPaneReference;","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    private Alice alice;","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"    private Mode mode;","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    private final Image aliceImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/alice.png\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"     * Constructor for the chat Page.","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"     * Create an empty chat page with no alice.","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"    public ChatPage() {","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        setActionToElements();","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        mode \u003d Mode.DEFAULT;","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"     * Constructor for the chat page.","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"     * Instantiate new Alice and set her user interface\u0027s chat page to this page, set mode to","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"     * default and print welcome text.","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"     * @param fileName the filename that the user has chosen.","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"     * @throws IOException if there is anything wrong with the IO when instantiating alice.","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"    ChatPage(String fileName) throws IOException {","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        this.alice \u003d new Alice(fileName);","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"        alice.getUi().setChatPage(this);","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        mode \u003d Mode.DEFAULT;","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        setActionToElements();","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"        putWelcomeText();","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"    private void setActionToElements() {","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"        dialogContainer.heightProperty().addListener((observable)","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"            -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"     * Return Alice currently embedded in this chat page.","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"     * @return alice that is responsible for processing the dialog to be printed.","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"    public Alice getAlice() {","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"        return this.alice;","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"    /** initialise when building chat page */","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"     * Setter for alice.","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"     * @param a Alice to be set to this chat page.","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"    public void setAlice(Alice a) {","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"        alice \u003d a;","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"     * Setter for alice using a file name to automatically link alice","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"     * to the specified file.","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"     * Instantiate new Alice and set her user interface\u0027s chat page to this page.","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"     * @param fileName name of file","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"    public void setUpByFileName(String fileName) {","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"            this.alice \u003d new Alice(fileName);","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"            alice.getUi().setChatPage(this);","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"     * Print initial welcoming message as a label at the top of the chat page.","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"    public void putWelcomeText() {","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"            CenterBox welcomeBox \u003d CenterBox.getCenterBox(\"Alice\",","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"                \"My name is Alice, how can I help you organize today?\");","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"            dialogContainer.getChildren().add(welcomeBox);","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"            showCurrentList();","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"            printError(e);","lastModifiedDate":"2021-09-03"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"    public void setMode(Mode mode) {","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"        this.mode \u003d mode;","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"     * Create label from String.","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"     * @param text String containing text to add.","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"kanjitp"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2021-09-03"},{"lineNumber":150,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":151,"author":{"gitId":"kanjitp"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2021-09-03"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2021-09-03"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2021-09-03"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-09-03"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"        return textToAdd;","lastModifiedDate":"2021-09-03"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":158,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":159,"author":{"gitId":"kanjitp"},"content":"    /** for executing the command */","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-03"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-03"},{"lineNumber":163,"author":{"gitId":"kanjitp"},"content":"            DialogBox.getUserDialog(userInput.getText(), userImage)","lastModifiedDate":"2021-09-10"},{"lineNumber":164,"author":{"gitId":"kanjitp"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":165,"author":{"gitId":"kanjitp"},"content":"        if (this.mode \u003d\u003d Mode.DEFAULT) {","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"kanjitp"},"content":"            this.alice.execute(userInput.getText());","lastModifiedDate":"2021-09-03"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"        } else if (this.mode \u003d\u003d Mode.LEARN) {","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"kanjitp"},"content":"            this.alice.learn(userInput.getText());","lastModifiedDate":"2021-09-12"},{"lineNumber":169,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"            // MORE MODE IN FUTURE IMPLEMENTATION","lastModifiedDate":"2021-09-12"},{"lineNumber":171,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":172,"author":{"gitId":"kanjitp"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-03"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":174,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":175,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":176,"author":{"gitId":"kanjitp"},"content":"     * Print the list of tasks in this chat page","lastModifiedDate":"2021-09-04"},{"lineNumber":177,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"kanjitp"},"content":"    public void showCurrentList() {","lastModifiedDate":"2021-09-03"},{"lineNumber":179,"author":{"gitId":"kanjitp"},"content":"        printWithAlice(alice.getUi().getCurrentListText());","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":181,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":182,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":183,"author":{"gitId":"kanjitp"},"content":"     * Print error to this chat page.","lastModifiedDate":"2021-09-16"},{"lineNumber":184,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":185,"author":{"gitId":"kanjitp"},"content":"     * @param e exception to be print","lastModifiedDate":"2021-09-04"},{"lineNumber":186,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":187,"author":{"gitId":"kanjitp"},"content":"    public void printError(Exception e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":188,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":189,"author":{"gitId":"kanjitp"},"content":"            dialogContainer.getChildren().add(DialogBox.getAliceDialog(Ui.getErrorText(e), aliceImage));","lastModifiedDate":"2021-09-10"},{"lineNumber":190,"author":{"gitId":"kanjitp"},"content":"        } catch (DialogException unexpectedException) {","lastModifiedDate":"2021-09-12"},{"lineNumber":191,"author":{"gitId":"kanjitp"},"content":"            dialogContainer.getChildren().add(DialogBox.getAliceDialog(unexpectedException.getMessage(), aliceImage));","lastModifiedDate":"2021-09-12"},{"lineNumber":192,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":193,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":194,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":195,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":196,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":197,"author":{"gitId":"kanjitp"},"content":"     * Explicitly ask Alice to print something into this chat page.","lastModifiedDate":"2021-09-16"},{"lineNumber":198,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":199,"author":{"gitId":"kanjitp"},"content":"     * @param input string input to be printed","lastModifiedDate":"2021-09-04"},{"lineNumber":200,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":201,"author":{"gitId":"kanjitp"},"content":"    public void printWithAlice(String input) {","lastModifiedDate":"2021-09-12"},{"lineNumber":202,"author":{"gitId":"kanjitp"},"content":"        dialogContainer.getChildren().add(DialogBox.getAliceDialog(input, aliceImage));","lastModifiedDate":"2021-09-10"},{"lineNumber":203,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":204,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":205,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":206,"author":{"gitId":"kanjitp"},"content":"     * Exit the chat page and go back to the start page.","lastModifiedDate":"2021-09-16"},{"lineNumber":207,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":208,"author":{"gitId":"kanjitp"},"content":"    public void exit() {","lastModifiedDate":"2021-09-03"},{"lineNumber":209,"author":{"gitId":"kanjitp"},"content":"        Stage stage \u003d (Stage) anchorPaneReference.getScene().getWindow();","lastModifiedDate":"2021-09-10"},{"lineNumber":210,"author":{"gitId":"kanjitp"},"content":"        setUpStage(stage);","lastModifiedDate":"2021-09-12"},{"lineNumber":211,"author":{"gitId":"kanjitp"},"content":"        alice.saveCurrentVocabulary();","lastModifiedDate":"2021-09-15"},{"lineNumber":212,"author":{"gitId":"kanjitp"},"content":"        stage.show();","lastModifiedDate":"2021-09-12"},{"lineNumber":213,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":214,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":215,"author":{"gitId":"kanjitp"},"content":"    private void setUpStage(Stage stage) {","lastModifiedDate":"2021-09-12"},{"lineNumber":216,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":217,"author":{"gitId":"kanjitp"},"content":"            stage.setTitle(\"Alice\");","lastModifiedDate":"2021-09-03"},{"lineNumber":218,"author":{"gitId":"kanjitp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(StartPage.class.getResource(\"/view/StartPage.fxml\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":219,"author":{"gitId":"kanjitp"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-10"},{"lineNumber":220,"author":{"gitId":"kanjitp"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-10"},{"lineNumber":221,"author":{"gitId":"kanjitp"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-10"},{"lineNumber":222,"author":{"gitId":"kanjitp"},"content":"            fxmlLoader.\u003cStartPage\u003egetController().fetchSaveFiles();","lastModifiedDate":"2021-09-10"},{"lineNumber":223,"author":{"gitId":"kanjitp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":224,"author":{"gitId":"kanjitp"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":225,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":226,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":227,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":228,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"kanjitp":228}},{"path":"src/main/java/ui/StartPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.io.File;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"import ui.components.AlertBox;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":" * Page for selecting a save file to navigate to and instantiate Alice.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":" * Start page will switch to chat page once user has chosen a save file.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":" * @since 0.02","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"public class StartPage extends AnchorPane {","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    private Button enterButton;","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"    private Button clearButton;","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    private Button deleteButton;","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    private TextField inputField \u003d new TextField();","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    private ScrollPane saveFileScrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    private AnchorPane paneReference \u003d new AnchorPane();","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    private ListView\u003cString\u003e listView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    private ArrayList\u003cFile\u003e files;","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"     * Constructor of StartPage.","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"     * fetch save files and populate the list view.","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    public StartPage() {","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        fetchSaveFiles();","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"    private void clearInputField() {","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        inputField.setText(\"\");","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"     * populate the listview of this start page with file names","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"    public void fetchSaveFiles() {","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        ObservableList\u003cString\u003e items \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        addFileNamesToItems(items);","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"        setUpListViewWithItems(items);","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"    private void addFileNamesToItems(ObservableList\u003cString\u003e items) {","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        files \u003d new ArrayList\u003c\u003e(Arrays.asList(Storage.getFilesFromDirectory(","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"            Storage.DIRECTORY_PATH + Storage.DATA_PATH)));","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        for (File file : files) {","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"            if (file.isFile() \u0026\u0026 !file.isHidden()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"                String fullFileName \u003d file.getName();","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"                String fileName \u003d fullFileName.substring(0, fullFileName.indexOf(\".\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"                items.add(fileName);","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"    private void setUpListViewWithItems(ObservableList\u003cString\u003e items) {","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"        listView.setItems(items);","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"        listView.getSelectionModel().selectedItemProperty().addListener(new ChangeListener\u003cString\u003e() {","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"            @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"            public void changed(ObservableValue\u003c? extends String\u003e observable, String oldValue, String newValue) {","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"                inputField.setText(newValue);","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"        });","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"     * refresh the save files on the list view","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"    public void refreshSaveFiles() {","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"        listView.refresh();","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"    private void handleFileNameInput() {","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"        if (inputField.getText().isBlank()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"            return;","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"        // check if the input name is one of the file name","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"        boolean containsFile \u003d listView.getItems().stream().anyMatch(","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"            fileName -\u003e fileName.equals(inputField.getText()));","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"        if (!containsFile) {","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"            // prompt user to confirm creating new file first","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"            AlertBox.display(\"Are you sure you want to create new file \u0027\" + inputField.getText() + \"\u0027\",","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"                e -\u003e showChatPage());","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"            // go to the chat page directly","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"            showChatPage();","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"    private void handleDeleteFile() {","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"        if (inputField.getText().isBlank()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"            return;","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"        // check if the input name is one of the file name","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"        boolean containsFile \u003d listView.getItems().stream().anyMatch(","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"            fileName -\u003e fileName.equals(inputField.getText()));","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"        if (containsFile) {","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"            // prompt user to confirm creating new file first","lastModifiedDate":"2021-09-11"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"            AlertBox.display(\"Are you sure you want to delete your save file \u0027\" + inputField.getText() + \"\u0027\",","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"                e -\u003e {","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"                    deleteFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"                    removeSaveFileFromListView();","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"                    refreshSaveFiles();","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"                });","lastModifiedDate":"2021-09-11"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"    private void removeSaveFileFromListView() {","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"        listView.getItems().remove(inputField.getText());","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"    private void deleteFile() {","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"        Storage.deleteFile(inputField.getText());","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":149,"author":{"gitId":"kanjitp"},"content":"    private void showChatPage() {","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"kanjitp"},"content":"        Stage stage \u003d (Stage) paneReference.getScene().getWindow();","lastModifiedDate":"2021-09-10"},{"lineNumber":151,"author":{"gitId":"kanjitp"},"content":"        setUpStage(stage);","lastModifiedDate":"2021-09-12"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"        stage.show();","lastModifiedDate":"2021-09-12"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"    private void setUpStage(Stage stage) {","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"            FXMLLoader fxmlLoaderChatPage \u003d new FXMLLoader(StartPage.class.getResource(\"/view/ChatPage.fxml\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":158,"author":{"gitId":"kanjitp"},"content":"            AnchorPane ap \u003d fxmlLoaderChatPage.load();","lastModifiedDate":"2021-09-10"},{"lineNumber":159,"author":{"gitId":"kanjitp"},"content":"            // set scene","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-10"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"            // implement alice before setting the scene to stage","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"            fxmlLoaderChatPage.\u003cChatPage\u003egetController().setUpByFileName(inputField.getText());","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"kanjitp"},"content":"            fxmlLoaderChatPage.\u003cChatPage\u003egetController().putWelcomeText();","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"kanjitp"},"content":"            // set and show scene to finalise","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"kanjitp"},"content":"            stage.setTitle(inputField.getText());","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"kanjitp"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-10"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":168,"author":{"gitId":"kanjitp"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":169,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":171,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"kanjitp":171}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import dialog.Dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import dialog.TaskDialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import dialog.exceptions.DialogException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import model.task.TaskList;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":" * Act as the bottleneck between TaskDialog and ChatPage.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":" * Allow Alice to have access to her Dialog and where to output that Dialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":" * @since 0.02","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"public class Ui {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    /** responsible for outputting result */","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    private TaskDialog taskDialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    /** layout for showing the result */","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    private ChatPage chatPage;","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"     * Constructor of Ui.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"     * Require to manually set taskDialog and chatPage through importing task list and","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"     * setting chat page.","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    public Ui() {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        taskDialog \u003d null;","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        chatPage \u003d null;","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"     * Constructor of Ui.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"     * Does not require to manually set taskDialog or ChatPage.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"     * @param taskDialog taskDialog for Ui to deal with dialog which has TaskList.","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"     * @param chatPage   chat page for outputting the dialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    public Ui(TaskDialog taskDialog, ChatPage chatPage) {","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        this.taskDialog \u003d taskDialog;","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        this.chatPage \u003d chatPage;","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"     * Load the taskList to the Ui TaskDialog.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"     * @param taskList the taskList to be imported.","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    public void importTaskList(TaskList taskList) {","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        this.taskDialog \u003d (TaskDialog) TaskDialog.generate(\"taskList: \" + taskList.hashCode(), taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"     * Setter for chat page.","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"     * @param chatPage chat page for outputting the dialog.","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"    public void setChatPage(ChatPage chatPage) {","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        this.chatPage \u003d chatPage;","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"     * Return the current taskDialog of the Ui object.","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"     * The TaskDialog equal to null if it has not loaded a TaskList yet.","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"     * @return taskDialog of the current Ui to be pass around to other method or fields.","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"    public TaskDialog getTaskDialog() {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        return this.taskDialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"     * Getter for chat page.","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"     * @return current chat page in which the ui is outputting the result.","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"    public ChatPage getChatPage() {","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        return this.chatPage;","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"     * Static method for printing an error to the Ui.","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"     * @param exception the exception with its message to be printed to the user.","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"    public static String getErrorText(Exception exception) throws DialogException {","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"        if (Dialog.containsId(exception.toString())) {","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"            return Dialog.get(exception.toString()).toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"            Dialog errorMessage \u003d Dialog.generate(exception.toString());","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"            errorMessage.add(\"☹ OOPS!!! \" + exception.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"            return errorMessage.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"     * Static method for printing to the user a welcome message and alice self-introduction.","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"     * @throws DialogException the dialog cannot have the same id while the app is running.","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"    public static String getWelcomeText() throws DialogException {","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"        String dialogId \u003d \"greeting\";","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"        if (Dialog.containsId(dialogId)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"            return Dialog.get(dialogId).toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"            Dialog greeting \u003d Dialog.generate(\"greeting\");","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"            greeting.add(\"Hello! I\u0027m Alice, your personal assistant, what can I do for you?\");","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"            return greeting.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"     * Static method returning a String of user commands in which alice can perform.","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"     * @throws DialogException the dialog cannot have the same id while the app is running.","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"    public static String getCommandListText() throws DialogException {","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"        String dialogId \u003d \"commands\";","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"        if (Dialog.containsId(dialogId)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"            return Dialog.get(dialogId).toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"            Dialog commandsListDialog \u003d Dialog.generate(dialogId);","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"This is the following commands, I can perform:\\n\");","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"1. \u0027todo \u003ctask description\u003e\u0027 - add a todo task to the list\");","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"2. \u0027deadline \u003ctask description\u003e /by \u003cby when\u003e\u0027 \"","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"                + \"- add a deadline task with specific deadline\");","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"3. \u0027event \u003ctask description\u003e /at \u003cat when\u003e\u0027 \"","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"                + \"- add an event task with specific time\");","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"4. \u0027date \u003cyyyy-mm-dd\u003e\u0027 \"","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"                + \"- list all todos and all the deadlines and events before specified time\");","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"5. \u0027list\u0027 - show the current task list\");","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"6. \u0027find \u003ckeyword\u003e\u0027 - list the task with specific keywords\");","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"7. \u0027done \u003ctask index\u003e\u0027 - mark that task as done\");","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"8. \u0027delete \u003ctask index\u003e\u0027 - delete that task from the list\");","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"9. \u0027learn \u003cvocab to learn\u003e\u0027 - prompt the user with process to learn a vocab\");","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"10.\u0027unlearn \u003cvocab to unlearn\u003e\u0027 - unlearn specific vocabulary taught by the user\");","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"11.\u0027commands\u0027 - show this current command window\");","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"            commandsListDialog.add(\"12.\u0027bye\u0027 - end session and save your task list\");","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"            return commandsListDialog.toString();","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"     * Get text for asking the user to feed in the feedback for Alice to learn new vocabulary.","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"kanjitp"},"content":"     * @param phraseToLearn phrase for alice to recognize.","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"kanjitp"},"content":"     * @return the dialog for Alice to ask user for feedback with specific phrase.","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"kanjitp"},"content":"     * @throws DialogException the dialog cannot have the same id while the app is running.","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"    public static String getAskForFeedbackText(String phraseToLearn) throws DialogException {","lastModifiedDate":"2021-09-12"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"        String dialogId \u003d \"learn \" + phraseToLearn;","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"        if (Dialog.containsId(dialogId)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"            return Dialog.get(dialogId).toString();","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"kanjitp"},"content":"            Dialog learnPhraseDialog \u003d Dialog.generate(dialogId);","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"kanjitp"},"content":"            learnPhraseDialog.add(\"What should be my feedback to ...\");","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"            learnPhraseDialog.add(phraseToLearn);","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"            learnPhraseDialog.add(\"I will recite every words you put down\");","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"            return learnPhraseDialog.toString();","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":164,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"     * Get text for informing the user that Alice would not get the input phrase anymore.","lastModifiedDate":"2021-09-16"},{"lineNumber":168,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":169,"author":{"gitId":"kanjitp"},"content":"     * @param phraseToUnlearn phrase for alice to recognize.","lastModifiedDate":"2021-09-16"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"     * @return the dialog for Alice to inform the user of the phrase that she will forget.","lastModifiedDate":"2021-09-16"},{"lineNumber":171,"author":{"gitId":"kanjitp"},"content":"     * @throws DialogException the dialog cannot have the same id while the app is running.","lastModifiedDate":"2021-09-16"},{"lineNumber":172,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"    public static String getUnlearnText(String phraseToUnlearn) throws DialogException {","lastModifiedDate":"2021-09-12"},{"lineNumber":174,"author":{"gitId":"kanjitp"},"content":"        String dialogId \u003d \"unlearn \" + phraseToUnlearn;","lastModifiedDate":"2021-09-12"},{"lineNumber":175,"author":{"gitId":"kanjitp"},"content":"        if (Dialog.containsId(dialogId)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":176,"author":{"gitId":"kanjitp"},"content":"            return Dialog.get(dialogId).toString();","lastModifiedDate":"2021-09-12"},{"lineNumber":177,"author":{"gitId":"kanjitp"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":178,"author":{"gitId":"kanjitp"},"content":"            Dialog learnPhraseDialog \u003d Dialog.generate(dialogId);","lastModifiedDate":"2021-09-12"},{"lineNumber":179,"author":{"gitId":"kanjitp"},"content":"            learnPhraseDialog.add(\"Alice will unlearn the following:\");","lastModifiedDate":"2021-09-12"},{"lineNumber":180,"author":{"gitId":"kanjitp"},"content":"            learnPhraseDialog.add(phraseToUnlearn);","lastModifiedDate":"2021-09-12"},{"lineNumber":181,"author":{"gitId":"kanjitp"},"content":"            learnPhraseDialog.add(\"Alice won\u0027t be able to recognize the phrase anymore ...\");","lastModifiedDate":"2021-09-12"},{"lineNumber":182,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":183,"author":{"gitId":"kanjitp"},"content":"            return learnPhraseDialog.toString();","lastModifiedDate":"2021-09-12"},{"lineNumber":184,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"kanjitp"},"content":"    /** Print to the user the taskList stored in the Ui in a taskDialog format. */","lastModifiedDate":"2021-09-12"},{"lineNumber":188,"author":{"gitId":"kanjitp"},"content":"    public String getCurrentListText() {","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"kanjitp"},"content":"        return taskDialog.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":190,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":191,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"kanjitp":191}},{"path":"src/main/java/ui/components/AlertBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package ui.components;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import javafx.stage.Modality;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":" * Prompt a Box for user to confirm about his/her action.","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":" * @since 0.00","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"public class AlertBox {","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"     * Display a prompt window to the user to interact with by either clicking yes or no","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"     * to commence with the passed in event handling or not.","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"     * @param title        the message at the top.","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"     * @param eventHandler eventHandler to execute when user click yes or press enter.","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    public static void display(String title, EventHandler\u003cActionEvent\u003e eventHandler) {","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        Stage stage \u003d new Stage();","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        setUpStage(title, eventHandler, stage);","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"        stage.showAndWait();","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"    private static void setUpStage(String title, EventHandler\u003cActionEvent\u003e eventHandler, Stage stage) {","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        stage.initModality(Modality.APPLICATION_MODAL);","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        stage.setMinWidth(250);","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        VBox vBoxLayout \u003d new VBox(10);","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        vBoxLayout.setAlignment(Pos.CENTER);","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        addTitle(title, vBoxLayout);","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        addButtons(eventHandler, stage, vBoxLayout);","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        Scene scene \u003d new Scene(vBoxLayout);","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"    private static void addTitle(String title, VBox vBoxLayout) {","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"        Label label \u003d new Label();","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"        label.setText(title);","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"        label.setStyle(\"-fx-font-family: Helvetica\");","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        vBoxLayout.getChildren().add(label);","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    private static void addButtons(EventHandler\u003cActionEvent\u003e eventHandler, Stage stage, VBox vBoxLayout) {","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        HBox horizontal \u003d new HBox(10);","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        Button yesButton \u003d new Button(\"Yes\");","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        yesButton.setStyle(\"-fx-font-family: Helvetica\");","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        yesButton.setDefaultButton(true);","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        Button noButton \u003d new Button(\"No\");","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        noButton.setStyle(\"-fx-font-family: Helvetica\");","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        yesButton.setOnAction(e -\u003e {","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"            eventHandler.handle(e);","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"            stage.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        });","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        noButton.setOnAction(e -\u003e stage.close());","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"        horizontal.setAlignment(Pos.CENTER);","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        horizontal.getChildren().addAll(yesButton, noButton);","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        vBoxLayout.getChildren().add(horizontal);","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"kanjitp":72}},{"path":"src/main/java/ui/components/CenterBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package ui.components;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":" * VBox for outputting a space background box to the middle of its container.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":" * Consist of logo at the top and dialog at the bottom.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":" * @author Kan Jitpakdi","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":" * @author GitHub: kanjitp","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":" * @version 0.03","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":" * @since 0.00","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"public class CenterBox extends VBox {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    private Label logo \u003d new Label();","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    private Label dialog \u003d new Label();","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"     * Constructor for the dialog box.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"     * Load the format from fxml and then set the text to Label.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    private CenterBox(String textLogo, String textDialog) {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/CenterBox.fxml\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        logo.setText(textLogo);","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        dialog.setText(textDialog);","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        this.setAlignment(Pos.CENTER);","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"     * Factory method to generate a CenterBox with specified Strings.","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"     * @param logo string to be use as logo at the top.","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"     * @param dialog string of the dialog at the bottom.","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"     * @return CenterBox with the design according to fxml.","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    public static CenterBox getCenterBox(String logo, String dialog) {","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        return new CenterBox(logo, dialog);","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"kanjitp":57}},{"path":"src/main/java/ui/components/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package ui.components;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import javafx.animation.Animation;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import javafx.animation.Transition;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":" * Structure for message bubble of both user and Alice.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":" * @author https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    private Label dialog \u003d new Label();","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    private Circle displayPicture \u003d new Circle();","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"     * Constructor for the dialog box.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    private DialogBox(String text, Image image) {","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        // animation for text typing","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        // tutorial by www.java2s.com","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"        Animation animation \u003d new Transition() {","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"            {","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"                setCycleDuration(Duration.millis(1000));","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"            @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"            protected void interpolate(double frac) {","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"                // cast to float so Math round to int","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"                int n \u003d Math.round(text.length() * (float) frac);","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"                dialog.setText(text.substring(0, n));","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        };","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        displayPicture.setRadius(50);","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        displayPicture.setFill(new ImagePattern(image));","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        animation.play();","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"    private void flip() {","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"     * Factory method for producing DialogBox.","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"     * @param text the message to be printed in the DialogBox.","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"     * @param img  image to use as the avatar.","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"     * @return DialogBox with message to the left and avatar to the right.","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"     * Return a DialogBox object for Alice.","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"     * @return DialogBox for Alice.","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"    public static DialogBox getAliceDialog(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"        db.flip();","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"        return db;","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"kanjitp":99}},{"path":"src/main/resources/fonts/Roboto/LICENSE.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"                                 Apache License","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"                           Version 2.0, January 2004","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"                        http://www.apache.org/licenses/","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"   1. Definitions.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"      \"License\" shall mean the terms and conditions for use, reproduction,","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"      and distribution as defined by Sections 1 through 9 of this document.","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"      \"Licensor\" shall mean the copyright owner or entity authorized by","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"      the copyright owner that is granting the License.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"      \"Legal Entity\" shall mean the union of the acting entity and all","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"      other entities that control, are controlled by, or are under common","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"      control with that entity. For the purposes of this definition,","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"      \"control\" means (i) the power, direct or indirect, to cause the","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"      direction or management of such entity, whether by contract or","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"      otherwise, or (ii) ownership of fifty percent (50%) or more of the","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"      outstanding shares, or (iii) beneficial ownership of such entity.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"      \"You\" (or \"Your\") shall mean an individual or Legal Entity","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"      exercising permissions granted by this License.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"      \"Source\" form shall mean the preferred form for making modifications,","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"      including but not limited to software source code, documentation","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"      source, and configuration files.","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"      \"Object\" form shall mean any form resulting from mechanical","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"      transformation or translation of a Source form, including but","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"      not limited to compiled object code, generated documentation,","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"      and conversions to other media types.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"      \"Work\" shall mean the work of authorship, whether in Source or","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"      Object form, made available under the License, as indicated by a","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"      copyright notice that is included in or attached to the work","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"      (an example is provided in the Appendix below).","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"      \"Derivative Works\" shall mean any work, whether in Source or Object","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"      form, that is based on (or derived from) the Work and for which the","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"      editorial revisions, annotations, elaborations, or other modifications","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"      represent, as a whole, an original work of authorship. For the purposes","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"      of this License, Derivative Works shall not include works that remain","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"      separable from, or merely link (or bind by name) to the interfaces of,","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"      the Work and Derivative Works thereof.","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"      \"Contribution\" shall mean any work of authorship, including","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"      the original version of the Work and any modifications or additions","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"      to that Work or Derivative Works thereof, that is intentionally","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"      submitted to Licensor for inclusion in the Work by the copyright owner","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"      or by an individual or Legal Entity authorized to submit on behalf of","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"      the copyright owner. For the purposes of this definition, \"submitted\"","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"      means any form of electronic, verbal, or written communication sent","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"      to the Licensor or its representatives, including but not limited to","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"      communication on electronic mailing lists, source code control systems,","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"      and issue tracking systems that are managed by, or on behalf of, the","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"      Licensor for the purpose of discussing and improving the Work, but","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"      excluding communication that is conspicuously marked or otherwise","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"      designated in writing by the copyright owner as \"Not a Contribution.\"","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"      \"Contributor\" shall mean Licensor and any individual or Legal Entity","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"      on behalf of whom a Contribution has been received by Licensor and","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"      subsequently incorporated within the Work.","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"   2. Grant of Copyright License. Subject to the terms and conditions of","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"      this License, each Contributor hereby grants to You a perpetual,","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"      worldwide, non-exclusive, no-charge, royalty-free, irrevocable","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"      copyright license to reproduce, prepare Derivative Works of,","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"      publicly display, publicly perform, sublicense, and distribute the","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"      Work and such Derivative Works in Source or Object form.","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"   3. Grant of Patent License. Subject to the terms and conditions of","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"      this License, each Contributor hereby grants to You a perpetual,","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"      worldwide, non-exclusive, no-charge, royalty-free, irrevocable","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"      (except as stated in this section) patent license to make, have made,","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"      use, offer to sell, sell, import, and otherwise transfer the Work,","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"      where such license applies only to those patent claims licensable","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"      by such Contributor that are necessarily infringed by their","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"      Contribution(s) alone or by combination of their Contribution(s)","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"      with the Work to which such Contribution(s) was submitted. If You","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"      institute patent litigation against any entity (including a","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"      cross-claim or counterclaim in a lawsuit) alleging that the Work","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"      or a Contribution incorporated within the Work constitutes direct","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"      or contributory patent infringement, then any patent licenses","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"      granted to You under this License for that Work shall terminate","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"      as of the date such litigation is filed.","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"   4. Redistribution. You may reproduce and distribute copies of the","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"      Work or Derivative Works thereof in any medium, with or without","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"      modifications, and in Source or Object form, provided that You","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"      meet the following conditions:","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"      (a) You must give any other recipients of the Work or","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"          Derivative Works a copy of this License; and","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"      (b) You must cause any modified files to carry prominent notices","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"          stating that You changed the files; and","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"      (c) You must retain, in the Source form of any Derivative Works","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"          that You distribute, all copyright, patent, trademark, and","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"          attribution notices from the Source form of the Work,","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"          excluding those notices that do not pertain to any part of","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"          the Derivative Works; and","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"      (d) If the Work includes a \"NOTICE\" text file as part of its","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"          distribution, then any Derivative Works that You distribute must","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"          include a readable copy of the attribution notices contained","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"          within such NOTICE file, excluding those notices that do not","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"          pertain to any part of the Derivative Works, in at least one","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"          of the following places: within a NOTICE text file distributed","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"          as part of the Derivative Works; within the Source form or","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"          documentation, if provided along with the Derivative Works; or,","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"          within a display generated by the Derivative Works, if and","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"          wherever such third-party notices normally appear. The contents","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"          of the NOTICE file are for informational purposes only and","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"          do not modify the License. You may add Your own attribution","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"          notices within Derivative Works that You distribute, alongside","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"          or as an addendum to the NOTICE text from the Work, provided","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"          that such additional attribution notices cannot be construed","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"          as modifying the License.","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"      You may add Your own copyright statement to Your modifications and","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"      may provide additional or different license terms and conditions","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"      for use, reproduction, or distribution of Your modifications, or","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"      for any such Derivative Works as a whole, provided Your use,","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"      reproduction, and distribution of the Work otherwise complies with","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"      the conditions stated in this License.","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"   5. Submission of Contributions. Unless You explicitly state otherwise,","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"      any Contribution intentionally submitted for inclusion in the Work","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"      by You to the Licensor shall be under the terms and conditions of","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"      this License, without any additional terms or conditions.","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"      Notwithstanding the above, nothing herein shall supersede or modify","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"      the terms of any separate license agreement you may have executed","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"      with Licensor regarding such Contributions.","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"   6. Trademarks. This License does not grant permission to use the trade","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"      names, trademarks, service marks, or product names of the Licensor,","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"      except as required for reasonable and customary use in describing the","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"      origin of the Work and reproducing the content of the NOTICE file.","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"kanjitp"},"content":"   7. Disclaimer of Warranty. Unless required by applicable law or","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"      agreed to in writing, Licensor provides the Work (and each","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"      Contributor provides its Contributions) on an \"AS IS\" BASIS,","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"      implied, including, without limitation, any warranties or conditions","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"kanjitp"},"content":"      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"kanjitp"},"content":"      PARTICULAR PURPOSE. You are solely responsible for determining the","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"kanjitp"},"content":"      appropriateness of using or redistributing the Work and assume any","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"      risks associated with Your exercise of permissions under this License.","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"   8. Limitation of Liability. In no event and under no legal theory,","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"      whether in tort (including negligence), contract, or otherwise,","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"      unless required by applicable law (such as deliberate and grossly","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"      negligent acts) or agreed to in writing, shall any Contributor be","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"kanjitp"},"content":"      liable to You for damages, including any direct, indirect, special,","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"kanjitp"},"content":"      incidental, or consequential damages of any character arising as a","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"      result of this License or out of the use or inability to use the","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"      Work (including but not limited to damages for loss of goodwill,","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"      work stoppage, computer failure or malfunction, or any and all","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"kanjitp"},"content":"      other commercial damages or losses), even if such Contributor","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"kanjitp"},"content":"      has been advised of the possibility of such damages.","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"kanjitp"},"content":"   9. Accepting Warranty or Additional Liability. While redistributing","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"      the Work or Derivative Works thereof, You may choose to offer,","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"kanjitp"},"content":"      and charge a fee for, acceptance of support, warranty, indemnity,","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"kanjitp"},"content":"      or other liability obligations and/or rights consistent with this","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"      License. However, in accepting such obligations, You may act only","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"kanjitp"},"content":"      on Your own behalf and on Your sole responsibility, not on behalf","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"kanjitp"},"content":"      of any other Contributor, and only if You agree to indemnify,","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"      defend, and hold each Contributor harmless for any liability","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"kanjitp"},"content":"      incurred by, or claims asserted against, such Contributor by reason","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"kanjitp"},"content":"      of your accepting any such warranty or additional liability.","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"kanjitp"},"content":"   END OF TERMS AND CONDITIONS","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"kanjitp"},"content":"   APPENDIX: How to apply the Apache License to your work.","lastModifiedDate":"2021-09-26"},{"lineNumber":180,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"kanjitp"},"content":"      To apply the Apache License to your work, attach the following","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"kanjitp"},"content":"      boilerplate notice, with the fields enclosed by brackets \"[]\"","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"kanjitp"},"content":"      replaced with your own identifying information. (Don\u0027t include","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"kanjitp"},"content":"      the brackets!)  The text should be enclosed in the appropriate","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"kanjitp"},"content":"      comment syntax for the file format. We also recommend that a","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"kanjitp"},"content":"      file or class name and description of purpose be included on the","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"kanjitp"},"content":"      same \"printed page\" as the copyright notice for easier","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"kanjitp"},"content":"      identification within third-party archives.","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"kanjitp"},"content":"   Copyright [yyyy] [name of copyright owner]","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"kanjitp"},"content":"   Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"kanjitp"},"content":"   you may not use this file except in compliance with the License.","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"kanjitp"},"content":"   You may obtain a copy of the License at","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"kanjitp"},"content":"       http://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"kanjitp"},"content":"   Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"kanjitp"},"content":"   distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"kanjitp"},"content":"   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"kanjitp"},"content":"   See the License for the specific language governing permissions and","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"kanjitp"},"content":"   limitations under the License.","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"kanjitp":202}},{"path":"src/main/resources/fonts/abeezee/SIL Open Font License.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"Copyright (c) 2011 by Anja Meiners (www.carrois.com post@carrois.com), with Reserved Font Name \u0027ABeeZee\u0027","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"This Font Software is licensed under the SIL Open Font License, Version 1.1.","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"This license is copied below, and is also available with a FAQ at: http://scripts.sil.org/OFL","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"-----------------------------------------------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"SIL OPEN FONT LICENSE Version 1.1 - 26 February 2007","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"-----------------------------------------------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"PREAMBLE","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"The goals of the Open Font License (OFL) are to stimulate worldwide development of collaborative font projects, to support the font creation efforts of academic and linguistic communities, and to provide a free and open framework in which fonts may be shared and improved in partnership with others.","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"The OFL allows the licensed fonts to be used, studied, modified and redistributed freely as long as they are not sold by themselves. The fonts, including any derivative works, can be bundled, embedded, redistributed and/or sold with any software provided that any reserved names are not used by derivative works. The fonts and derivatives, however, cannot be released under any other type of license. The requirement for fonts to remain under this license does not apply to any document created using the fonts or their derivatives.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"DEFINITIONS","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"\"Font Software\" refers to the set of files released by the Copyright Holder(s) under this license and clearly marked as such. This may include source files, build scripts and documentation.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"\"Reserved Font Name\" refers to any names specified as such after the copyright statement(s).","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"\"Original Version\" refers to the collection of Font Software components as distributed by the Copyright Holder(s).","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"\"Modified Version\" refers to any derivative made by adding to, deleting, or substituting -- in part or in whole -- any of the components of the Original Version, by changing formats or by porting the Font Software to a new environment.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"\"Author\" refers to any designer, engineer, programmer, technical writer or other person who contributed to the Font Software.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"PERMISSION \u0026 CONDITIONS","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"Permission is hereby granted, free of charge, to any person obtaining a copy of the Font Software, to use, study, copy, merge, embed, modify, redistribute, and sell modified and unmodified copies of the Font Software, subject to the following conditions:","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"1) Neither the Font Software nor any of its individual components, in Original or Modified Versions, may be sold by itself.","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"2) Original or Modified Versions of the Font Software may be bundled, redistributed and/or sold with any software, provided that each copy contains the above copyright notice and this license. These can be included either as stand-alone text files, human-readable headers or in the appropriate machine-readable metadata fields within text or binary files as long as those fields can be easily viewed by the user.","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"3) No Modified Version of the Font Software may use the Reserved Font Name(s) unless explicit written permission is granted by the corresponding Copyright Holder. This restriction only applies to the primary font name as presented to the users.","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font Software shall not be used to promote, endorse or advertise any Modified Version, except to acknowledge the contribution(s) of the Copyright Holder(s) and the Author(s) or with their explicit written permission.","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"5) The Font Software, modified or unmodified, in part or in whole, must be distributed entirely under this license, and must not be distributed under any other license. The requirement for fonts to remain under this license does not apply to any document created using the Font Software.","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"TERMINATION","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"This license becomes null and void if any of the above conditions are not met.","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"DISCLAIMER","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"THE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"kanjitp":43}},{"path":"src/main/resources/view/AlertBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"\u003cfx:root alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"         type\u003d\"javafx.scene.layout.VBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" stylesheets\u003d\"@Styles.css\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"        \u003cVBox alignment\u003d\"CENTER\" styleClass\u003d\"centerBox\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"            \u003cLabel fx:id\u003d\"logo\" style\u003d\"-fx-label-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"centerTextLogo\"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"                   textAlignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"            \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-label-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"centerDialog\"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"                   textAlignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"kanjitp":21}},{"path":"src/main/resources/view/CenterBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"\u003cfx:root alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"         type\u003d\"javafx.scene.layout.VBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" stylesheets\u003d\"@Styles.css\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"        \u003cVBox alignment\u003d\"CENTER\" styleClass\u003d\"centerBox\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"            \u003cLabel fx:id\u003d\"logo\" style\u003d\"-fx-label-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"centerTextLogo\"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"                textAlignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"            \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-label-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"centerDialog\"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"                textAlignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"kanjitp":21}},{"path":"src/main/resources/view/ChatPage.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"\u003cAnchorPane fx:id\u003d\"anchorPaneReference\" prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.ChatPage\" stylesheets\u003d\"@Styles.css\"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"            style\u003d\"-fx-background-color: rgba(95, 108, 153);\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"-1.0\" layoutY\u003d\"559.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"66.0\"","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"               prefWidth\u003d\"512.0\" AnchorPane.bottomAnchor\u003d\"0.0\" styleClass\u003d\"textField\"/\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    \u003cButton layoutX\u003d\"511.0\" layoutY\u003d\"734.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"66.0\"","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"            prefWidth\u003d\"90.0\" text\u003d\"Send\" style\u003d\"-fx-background-color: darkslateblue;\" textFill\u003d\"WHITE\"/\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"735.0\" fitToWidth\u003d\"true\"","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"                prefWidth\u003d\"600\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"600.0\" minHeight\u003d\"740\" styleClass\u003d\"mainBackground\"/\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"kanjitp":22}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"         prefWidth\u003d\"300.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" stylesheets\u003d\"@Styles.css\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"\u003cchildren\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-label-padding: 5;\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"messageBubble\"/\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    \u003cCircle fx:id\u003d\"displayPicture\" pickOnBounds\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"\u003c/children\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"\u003cpadding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"\u003c/padding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"kanjitp":18}},{"path":"src/main/resources/view/StartPage.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"\u003cAnchorPane fx:id\u003d\"paneReference\" prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\"","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"            style\u003d\"-fx-background-color: linear-gradient(#5f6c99, #5f2c61),","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"            repeating-image-pattern(\u0027images/stars.png\u0027),","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"            radial-gradient(center 50% 50%, radius 50%, #FFFFFF33, #00000033);\"","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"            xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.StartPage\"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"            stylesheets\u003d\"@Styles.css\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    \u003cButton id\u003d\"EnterButton\" fx:id\u003d\"enterButton\" layoutX\u003d\"435.0\" layoutY\u003d\"448.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"            onAction\u003d\"#handleFileNameInput\" prefHeight\u003d\"30.0\" prefWidth\u003d\"57.0\"","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"            style\u003d\"-fx-background-color: darkslateblue;\" text\u003d\"Enter\" textFill\u003d\"WHITE\"/\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    \u003cButton id\u003d\"ClearButton\" fx:id\u003d\"clearButton\" layoutX\u003d\"373.0\" layoutY\u003d\"448.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"            onAction\u003d\"#clearInputField\" style\u003d\"-fx-background-color: grey;\" text\u003d\"Clear\" textFill\u003d\"ghostwhite\"/\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    \u003cTextField id\u003d\"inputField\" fx:id\u003d\"inputField\" layoutX\u003d\"94.0\" layoutY\u003d\"380.0\" onAction\u003d\"#handleFileNameInput\"","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"               prefHeight\u003d\"54.0\" prefWidth\u003d\"397.0\" styleClass\u003d\"textField\"/\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    \u003cLabel layoutX\u003d\"97.0\" layoutY\u003d\"55.0\" prefHeight\u003d\"54.0\" prefWidth\u003d\"233.0\" text\u003d\"Welcome to\" textFill\u003d\"#DAA520\"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"           style\u003d\"-fx-font-size: 15.0\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    \u003cLabel layoutX\u003d\"186.0\" layoutY\u003d\"30.0\" prefHeight\u003d\"66.0\"","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"           style\u003d\"-fx-font: normal italic 72px \u0027verdana\u0027; -fx-text-fill: rgba(255, 230, 130)\" text\u003d\"Alice\"","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"           textAlignment\u003d\"CENTER\" textFill\u003d\"#ebd758\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"        \u003cfont\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"60.0\"/\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        \u003c/font\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    \u003cLabel layoutX\u003d\"97.0\" layoutY\u003d\"122.0\" prefHeight\u003d\"18.0\" prefWidth\u003d\"397.0\"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"           style\u003d\"-fx-background-color: linear-gradient(#5f6c99, #5f2c61),","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"           repeating-image-pattern(\u0027images/stars.png\u0027),","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"           radial-gradient(center 50% 50%, radius 50%, #FFFFFF33, #00000033); -fx-font-size: 17.0\"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"           text\u003d\"Make a slight change to create a big difference\" textFill\u003d\"#FFD700\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    \u003cListView fx:id\u003d\"listView\" prefHeight\u003d\"200.0\" prefWidth\u003d\"397.0\" layoutX\u003d\"94.0\" layoutY\u003d\"157.0\"","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"              styleClass\u003d\"listView\"/\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    \u003cLabel fx:id\u003d\"output\" layoutX\u003d\"94.0\" layoutY\u003d\"454.0\" prefHeight\u003d\"18.0\" prefWidth\u003d\"278.0\" textFill\u003d\"firebrick\"/\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    \u003cButton id\u003d\"deleteButton\" fx:id\u003d\"deleteButton\" layoutX\u003d\"94.0\" layoutY\u003d\"448.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"            onAction\u003d\"#handleDeleteFile\" prefHeight\u003d\"30.0\" prefWidth\u003d\"57.0\" style\u003d\"-fx-background-color: darkslateblue;\"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"            text\u003d\"Delete\" textFill\u003d\"WHITE\"/\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"kanjitp":46}},{"path":"src/test/java/dialog/DialogTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import dialog.exceptions.DialogException;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"public class DialogTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    public void generateTest() throws DialogException {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        String expected \u003d \"test1\\n\" + \"test2\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"        Dialog testDialog \u003d Dialog.generate(\"generateTest\");","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"        testDialog.add(\"test1\");","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"        testDialog.add(\"test2\");","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"        assertEquals(testDialog.toString(), expected);","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    public void generateTest2() {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"        Exception exception \u003d assertThrows(DialogException.class, () -\u003e {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"            Dialog testDialog1 \u003d Dialog.generate(\"generateTest2\");","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"            Dialog testDialog2 \u003d Dialog.generate(\"generateTest2\");","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"        });","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d \"generateTest2 already exists\";","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"        String actualMessage \u003d exception.getMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        assertEquals(expectedMessage, actualMessage);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    public void addTest() throws DialogException {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        Dialog testDialog \u003d Dialog.generate(\"addTest\");","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        testDialog.add(\"sentences\");","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        assertTrue(testDialog.sentences.contains(\"sentences\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    public void getTest() throws DialogException {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        Dialog testDialog \u003d Dialog.generate(\"getTest\");","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        testDialog.add(\"sentences\");","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d \"sentences\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        assertEquals(Dialog.get(\"getTest\").toString(), expectedMessage);","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"    public void containsIdTest() throws DialogException {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        Dialog testDialog \u003d Dialog.generate(\"containsIdTest\");","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        assertTrue(Dialog.containsId(\"containsIdTest\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"kanjitp":57}},{"path":"src/test/java/dialog/TaskDialogTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package dialog;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import dialog.exceptions.DialogException;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import dialog.exceptions.TaskDialogException;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import model.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import model.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import model.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import model.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import model.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"public class TaskDialogTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    public void addTaskTest() throws DialogException, TaskDialogException {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"        List\u003cTask\u003e tasks \u003d List.of(new Todo(\"todo1\"), new Todo(\"Todo2\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(tasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"        TaskDialog taskDialog \u003d (TaskDialog) TaskDialog.generate(\"addTaskTest\", taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"        taskDialog.addTask(new Deadline(\"deadlineInAddTest\", \"2020-08-21\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        String expected \u003d \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"            + \"    1.[T][ ✘ ] todo1\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"            + \"    2.[T][ ✘ ] Todo2\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"            + \"    3.[D][ ✘ ] deadlineInAddTest(by: Aug 21 2020)\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        assertEquals(expected, taskDialog.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    public void getFromDeadlineTest() throws DialogException, TaskDialogException {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        List\u003cTask\u003e tasks \u003d List.of(new Todo(\"todo1\"), new Todo(\"Todo2\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(tasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        TaskDialog taskDialog \u003d (TaskDialog) TaskDialog.generate(\"getFromDeadlineTest\", taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        taskDialog.addTask(new Deadline(\"deadline\", \"2020-08-21\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        taskDialog.addTask(new Deadline(\"deadline2\", \"2019-08-21\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        TaskDialog fromDeadline \u003d taskDialog.getFromDeadline(\"2019-08-21\");","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        String expected \u003d \"Deadline: Aug 21 2019\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"            + \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"            + \"    1.[T][ ✘ ] todo1\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"            + \"    2.[T][ ✘ ] Todo2\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"            + \"    3.[D][ ✘ ] deadline2(by: Aug 21 2019)\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"        assertEquals(expected, fromDeadline.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    public void getFromKeywordTest() throws DialogException, TaskDialogException {","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        List\u003cTask\u003e tasks \u003d List.of(new Todo(\"todo1\"), new Todo(\"Todo2\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(tasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        TaskDialog taskDialog \u003d (TaskDialog) TaskDialog.generate(\"getFromKeywordTest\", taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        taskDialog.addTask(new Event(\"Dinner with John\", \"2020-08-21\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        taskDialog.addTask(new Event(\"Golfing with John\", \"2019-08-21\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        TaskDialog fromKeyword \u003d taskDialog.getFromKeyword(\"John\");","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        String expected \u003d \"Find: John\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"            + \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"            + \"    1.[E][ ✘ ] Dinner with John(at: Aug 21 2020)\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"            + \"    2.[E][ ✘ ] Golfing with John(at: Aug 21 2019)\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        assertEquals(expected, fromKeyword.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"    public void markTaskAsDoneTest() throws DialogException, TaskDialogException {","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        List\u003cTask\u003e tasks \u003d List.of(new Todo(\"todo1\"), new Todo(\"Todo2\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(tasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        TaskDialog taskDialog \u003d (TaskDialog) TaskDialog.generate(\"markTaskAsDoneTest\", taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"        taskDialog.addTask(new Event(\"Dinner with Babe\", \"2020-08-21\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"        taskDialog.addTask(new Event(\"Golfing with Babe\", \"2019-08-21\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        taskDialog.markTaskAsDone(1);","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"        taskDialog.markTaskAsDone(2);","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"        String expected \u003d \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"            + \"    1.[T][ ✘ ] todo1\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"            + \"    2.[T][✔] Todo2\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"            + \"    3.[E][✔] Dinner with Babe(at: Aug 21 2020)\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"            + \"    4.[E][ ✘ ] Golfing with Babe(at: Aug 21 2019)\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"        assertEquals(expected, taskDialog.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"    public void deleteTaskByIndexTest() throws DialogException, TaskDialogException {","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"        List\u003cTask\u003e tasks \u003d List.of(new Todo(\"todo1\"), new Todo(\"Todo2\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e(tasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"        TaskDialog taskDialog \u003d (TaskDialog) TaskDialog.generate(\"deleteTaskByIndexTest\", taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"        taskDialog.addTask(new Event(\"Dinner with Jennifer\", \"2020-08-21\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"        taskDialog.addTask(new Event(\"Golfing with Jennifer\", \"2019-08-21\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"        taskDialog.deleteTaskByIndex(2);","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"        String expected \u003d \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"            + \"    1.[T][ ✘ ] todo1\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"            + \"    2.[T][ ✘ ] Todo2\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"            + \"    3.[E][ ✘ ] Golfing with Jennifer(at: Aug 21 2019)\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"        assertEquals(expected, taskDialog.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"kanjitp":112}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"task_list","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"yes","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"deadline return book /by 2020-06-06","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"event project meeting /at 2020-08-06","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"event project meeting /at 2020-08-06","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"deadline commit /by 2020-08-24","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"date 2020-08-06","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"date 2020-06-06","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"delete 0","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"bye","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kanjitp":21}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"task_list","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"done 4","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"delete 2","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"bye","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"kanjitp":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"# remove previous models.task record to make testing consistent","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"if [ -e \"./data/task_list.txt\" ]","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"then","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    rm ./data/task_list.txt","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"fi","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"java -classpath ../bin Alice \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    echo \"Test result first save: PASSED\"","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"else","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    echo \"Test result first save: FAILED\"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    exit 1","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"fi","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"# delete output from previous run for second test","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"if [ -e \"./ACTUAL2.TXT\" ]","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"then","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"    rm ACTUAL2.TXT","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"fi","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"java -classpath ../bin Alice \u003c input2.txt \u003e ACTUAL2.TXT","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"# convert to UNIX format","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"cp EXPECTED2.TXT EXPECTED-UNIX2.TXT","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"dos2unix ACTUAL2.TXT EXPECTED-UNIX2.TXT","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"# compare the output to the expected output","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"diff ACTUAL2.TXT EXPECTED-UNIX2.TXT","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"then","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"    echo \"Test result second save: PASSED\"","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"    echo \"Test result second save: FAILED\"","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kanjitp":31,"-":35}}]
