[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"\u003ch1\u003eDuke\u003c/h1\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"\u003ch2\u003eUser guide\u003c/h2\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"Duke is a desktop application for managing tasks, optimized for use via a Command Line Interface (CLI), while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"\u003ch3\u003eQuick start\u003c/h3\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"1. Ensure you have Java 11 or above installed in your computer","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"1. Download the latest duke.jar from here (when it is ready).","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"1. Copy the file to the folder you want to use as the home folder for Duke.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"1. Refer to the features below to see what Duke can do! :\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"\u003ch3\u003eFeatures\u003c/h3\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"\u003cb\u003eNotes about the command format\u003c/b\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"* Words encased in \u003cangle brackets\u003e are the parameters to be supplied by the user","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"* Parameters must be in the correct order","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"* The slashes are to be input together with the parameters, with the parameter after the slash coming immediately after the slash with no space.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"Adding a todo task: todo","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"Adds a todo task to Duke  ","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"Format: `todo \u003ctask\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"Example: `todo read book`","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"Adding an event: event","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"Adds an event to Duke  ","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"Format: `event \u003cevent\u003e /at\u003cdate in yyyy-mm-dd format\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"Example: `event CS2103 tutorial /at 2021-09-17`","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"Adding a deadline: deadline","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"Adds a deadline to Duke  ","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"Format: `deadline \u003ctask\u003e /by\u003cdate in yyyy-mm-dd format\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"Example: `deadline CS2103 iP /by 2021-09-17`","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"Listing all tasks: list","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"Shows a list of all the tasks Duke currently has  ","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"Format: `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"Marking a task as done: done","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"Marks a task as done  ","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"Format: `task \u003cindex of task\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"Example: `done 1`","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"Delete a task from Duke: delete","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"Deletes a task from Duke  ","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"Format: `delete \u003cindex of task\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"tanjoewel"},"content":"Example: `delete 1`","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"tanjoewel"},"content":"Find tasks that Duke has: find","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"tanjoewel"},"content":"Shows which tasks Duke has that match a certain keyword or phrase  ","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"tanjoewel"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"tanjoewel"},"content":"Example: `find CS2103`","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"tanjoewel"},"content":" ","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"tanjoewel"},"content":"Statistics about different types of tasks: stattask","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"tanjoewel"},"content":"Shows how many of each type of task Duke has  ","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"tanjoewel"},"content":"Format: `stattask`","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"tanjoewel"},"content":"Statistics about how many tasks are done: statdone","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"tanjoewel"},"content":"Shows how many tasks are marked as done  ","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"tanjoewel"},"content":"Format: `statdone`","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"tanjoewel"},"content":"Statistics about how many tasks are not marked as done: statnotdone","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"tanjoewel"},"content":"   ","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"tanjoewel"},"content":"Shows how many tasks are not marked as done  ","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"tanjoewel"},"content":"Format: `statnotdone`","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"tanjoewel":90}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanjoewel":15,"-":45}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":" * Represents a deadline task","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"    private String time;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"    private final String TASK_ICON \u003d \"D\";","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the deadline task","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"     * @param description","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"     * @param time","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"    public Deadlines(String description, String time) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"     * Obtains the correct task icon for a deadline task","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"     * @return Task icon","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"        return this.TASK_ICON;","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"     * Overridden equals method to check for task equality based on description and time","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"     * @param o representing any generic object","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"     * @return True if the object is equal to the deadline task based on description and time","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"        if (!(o instanceof Deadlines)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"        Deadlines e \u003d (Deadlines) o;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"        return this.description.equals(e.description) \u0026\u0026 this.time.equals(e.time);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"     * Overridden toString method to output the task in a readable format","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"     * @return String representing task in a readable format","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"        return this.getTaskIcon() + \"//\" + this.getStatusIcon() + \"//\" + description + \"//\" + time;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanjoewel":59}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"    @FXML","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"    @FXML","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"    private void flip() {","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"        db.flip();","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"        return db;","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"tanjoewel":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":" * Duke is an application to help store and track tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":" * Users are able to add and delete various types of tasks such as deadlines, events, and things to do.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":" * Duke can also list the existing tasks and mark tasks as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"@SuppressWarnings(\"checkstyle:Regexp\")","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"    private int index \u003d 0;","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the Duke object.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"     * @param filePath","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"        Storage store \u003d new Storage(filePath, this);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"        tasks \u003d new TaskList(store.loadTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"    public int getIndex() {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"        return this.index;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"    public void setIndex(int index) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"    public String getFilePath() {","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"        return this.filePath;","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"     * Main function to handle the flow of CLI application","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"     * Technically not needed since there is the GUi, but I will be keeping this anyway","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"     * @param args","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"        Duke bot \u003d new Duke(\"data/Duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"        Scanner scanObj \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"        bot.ui.printGreeting();","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"        while (true) {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"            String userInput \u003d scanObj.nextLine().trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"            Parser c \u003d new Parser(bot.tasks, userInput, bot.getIndex(), bot);","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"            String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"tanjoewel"},"content":"                    c.bye_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"tanjoewel"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"tanjoewel"},"content":"                        FileWriter fw \u003d new FileWriter(bot.filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"tanjoewel"},"content":"                        fw.write(c.generateTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tanjoewel"},"content":"                        fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tanjoewel"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"tanjoewel"},"content":"                        System.out.println(\"unable to write to file :\u003c\");","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"tanjoewel"},"content":"                    } finally {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"tanjoewel"},"content":"                        break;","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"tanjoewel"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"tanjoewel"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"tanjoewel"},"content":"                    c.list_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"tanjoewel"},"content":"                } else if (splitInput[0].equals(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"tanjoewel"},"content":"                    c.done_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"tanjoewel"},"content":"                } else if (splitInput[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"tanjoewel"},"content":"                    c.todo_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"tanjoewel"},"content":"                } else if (splitInput[0].equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"tanjoewel"},"content":"                    c.event_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"tanjoewel"},"content":"                } else if (splitInput[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"tanjoewel"},"content":"                    c.deadline_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"tanjoewel"},"content":"                } else if (splitInput[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"tanjoewel"},"content":"                    c.delete_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"tanjoewel"},"content":"                } else if (splitInput[0].equals(\"find\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"tanjoewel"},"content":"                    c.find_execute();","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"tanjoewel"},"content":"                } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"tanjoewel"},"content":"                    System.out.println(\"sorry! i\u0027m not taught that command yet :\u003c\");","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"tanjoewel"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"tanjoewel"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"tanjoewel"},"content":"                System.out.println(\"sorry! i\u0027m not taught that command yet :\u003c\u003c\");","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"tanjoewel"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":98,"author":{"gitId":"tanjoewel"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-09"},{"lineNumber":99,"author":{"gitId":"tanjoewel"},"content":"        Duke bot \u003d new Duke(\"data/Duke.txt\");","lastModifiedDate":"2021-09-09"},{"lineNumber":100,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":101,"author":{"gitId":"tanjoewel"},"content":"        bot.ui.printGreeting();","lastModifiedDate":"2021-09-09"},{"lineNumber":102,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"tanjoewel"},"content":"        Parser c \u003d new Parser(bot.tasks, input, bot.getIndex(), bot);","lastModifiedDate":"2021-09-09"},{"lineNumber":104,"author":{"gitId":"tanjoewel"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"tanjoewel"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":106,"author":{"gitId":"tanjoewel"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"tanjoewel"},"content":"                return c.bye_execute();","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"tanjoewel"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"tanjoewel"},"content":"                return c.list_execute();","lastModifiedDate":"2021-09-09"},{"lineNumber":110,"author":{"gitId":"tanjoewel"},"content":"            } else if (splitInput[0].equals(\"done\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"tanjoewel"},"content":"                return c.done_execute();","lastModifiedDate":"2021-09-09"},{"lineNumber":112,"author":{"gitId":"tanjoewel"},"content":"            } else if (splitInput[0].equals(\"todo\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"tanjoewel"},"content":"                return c.todo_execute();","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"tanjoewel"},"content":"            } else if (splitInput[0].equals(\"event\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"tanjoewel"},"content":"                return c.event_execute();","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"tanjoewel"},"content":"            } else if (splitInput[0].equals(\"deadline\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"tanjoewel"},"content":"                return c.deadline_execute();","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"tanjoewel"},"content":"            } else if (splitInput[0].equals(\"delete\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"tanjoewel"},"content":"                return c.delete_execute();","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"tanjoewel"},"content":"            } else if (splitInput[0].equals(\"find\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":121,"author":{"gitId":"tanjoewel"},"content":"                return c.find_execute();","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"tanjoewel"},"content":"            } else if (input.equals(\"StatTask\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"tanjoewel"},"content":"                return c.statTaskExecute();","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"tanjoewel"},"content":"            } else if (input.equals(\"StatDone\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"tanjoewel"},"content":"                return c.statDoneExecute();","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"tanjoewel"},"content":"            } else if (input.equals(\"StatNotDone\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"tanjoewel"},"content":"                return c.statNotDoneExecute();","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"tanjoewel"},"content":"            } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"tanjoewel"},"content":"                return \"sorry! i\u0027m not taught that command yet :\u003c\";","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"tanjoewel"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"tanjoewel"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"tanjoewel"},"content":"            return \"sorry! i\u0027m not taught that command yet :\u003c\u003c\";","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tanjoewel":131,"-":4}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":" * Represents an event task","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"    private String time;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"    private final String TASK_ICON \u003d \"E\";","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the event task","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"     * @param description","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"     * @param time","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"     * Obtains the correct task icon for an event task","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"     * @return Task icon","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"        return this.TASK_ICON;","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"     * Overridden equals method to check for task equality based on description and time","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"     * @param o representing any generic object","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"     * @return True if the object is equal to the deadline task based on description and time","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"        Event e \u003d (Event) o;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"        return this.description.equals(e.description) \u0026\u0026 this.time.equals(e.time);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"     * Overridden toString method to output the task in a readable format","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"     * @return String representing task in a readable format","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"        return this.getTaskIcon() + \"//\" + this.getStatusIcon() + \"//\" + description + \"//\" + time;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanjoewel":58}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"public class Launcher {","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"tanjoewel":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    private Duke duke \u003d new Duke(\"data/Duke.txt\");","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"            stage.show();","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"tanjoewel":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"    @FXML","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    @FXML","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"    @FXML","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"    @FXML","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bunny.png\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    @FXML","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"    @FXML","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"        );","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"tanjoewel":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":" * Represents a Parser that receives inputs from the user and executes the correct commands.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    private String userInput;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"    private int index;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"    private Ui response;","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the Parser object","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"     * @param tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"     * @param userInput","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"     * @param index","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    public Parser(TaskList tasks, String userInput, int index, Duke duke) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"        this.response \u003d new Ui();","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a bye command","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"     * Sends a goodbye message to the user","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"    public String bye_execute() {","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"        System.out.println(response.byeResponse());","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"        this.writeToFile(duke.getFilePath());","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"        Platform.exit();","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"        return response.byeResponse();","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a list command","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"     * Outputs the list of current tasks to the user","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"    public String list_execute() {","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"        String body \u003d \"\";","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"        while (i \u003c tasks.getNumberOfTasks()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"            body +\u003d \"    \" + (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"            i++;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d response.listResponse(tasks, body);","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"        this.writeToFile(duke.getFilePath());","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"        return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a done command","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"tanjoewel"},"content":"     * Marks the relevant task as done","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"tanjoewel"},"content":"    public String done_execute() {","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"tanjoewel"},"content":"        String userIndex \u003d userInput.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tanjoewel"},"content":"        int i \u003d Integer.valueOf(userIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"tanjoewel"},"content":"        tasks.get(i - 1).markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d response.doneResponse(i, tasks);","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"tanjoewel"},"content":"        this.writeToFile(duke.getFilePath());","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"tanjoewel"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"tanjoewel"},"content":"        return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a toDo command","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"tanjoewel"},"content":"     * Adds a todo task to the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"tanjoewel"},"content":"    public String todo_execute() {","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"tanjoewel"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"tanjoewel"},"content":"            Task newTask \u003d new ToDo(userInput.substring(5));","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"tanjoewel"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"tanjoewel"},"content":"            duke.setIndex(duke.getIndex() + 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"tanjoewel"},"content":"            String message \u003d response.addTaskResponse(duke.getIndex(), newTask);","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"tanjoewel"},"content":"            this.writeToFile(duke.getFilePath());","lastModifiedDate":"2021-09-09"},{"lineNumber":89,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"tanjoewel"},"content":"            return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":91,"author":{"gitId":"tanjoewel"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(response.errorMessage(\"todo\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"tanjoewel"},"content":"            return response.errorMessage(\"todo\");","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives an event command","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"tanjoewel"},"content":"     * Adds an event task to the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"tanjoewel"},"content":"    public String event_execute() {","lastModifiedDate":"2021-09-09"},{"lineNumber":102,"author":{"gitId":"tanjoewel"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"tanjoewel"},"content":"            int i \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"tanjoewel"},"content":"            String description \u003d userInput.substring(6 , i - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"tanjoewel"},"content":"            String[] split \u003d userInput.split(\"at\");","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"tanjoewel"},"content":"            String date \u003d split[1].substring(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"tanjoewel"},"content":"            LocalDate d \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"tanjoewel"},"content":"            String formattedTime \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"tanjoewel"},"content":"            Task newTask \u003d new Event(description, formattedTime);","lastModifiedDate":"2021-09-09"},{"lineNumber":110,"author":{"gitId":"tanjoewel"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"tanjoewel"},"content":"            duke.setIndex(duke.getIndex() + 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"tanjoewel"},"content":"            String message \u003d response.addTaskResponse(duke.getIndex(), newTask);","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"tanjoewel"},"content":"            this.writeToFile(duke.getFilePath());","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"tanjoewel"},"content":"            return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"tanjoewel"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(response.errorMessage(\"event\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"tanjoewel"},"content":"            return response.errorMessage(\"event\");","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a deadline command","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"tanjoewel"},"content":"     * Adds a deadline task to the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"tanjoewel"},"content":"    public String deadline_execute() {","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"tanjoewel"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"tanjoewel"},"content":"            int i \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"tanjoewel"},"content":"            String description \u003d userInput.substring(9 , i - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"tanjoewel"},"content":"            String[] split \u003d userInput.split(\"by\");","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"tanjoewel"},"content":"            String date \u003d split[1].substring(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"tanjoewel"},"content":"            LocalDate d \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"tanjoewel"},"content":"            String formattedTime \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"tanjoewel"},"content":"            Task newTask \u003d new Deadlines(description, formattedTime);","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"tanjoewel"},"content":"            tasks.addTask(newTask);","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"tanjoewel"},"content":"            duke.setIndex(duke.getIndex() + 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"tanjoewel"},"content":"            String message \u003d response.addTaskResponse(duke.getIndex(), newTask);","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"tanjoewel"},"content":"            this.writeToFile(duke.getFilePath());","lastModifiedDate":"2021-09-09"},{"lineNumber":139,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"tanjoewel"},"content":"            return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"tanjoewel"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(response.errorMessage(\"deadline\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"tanjoewel"},"content":"            return response.errorMessage(\"deadline\");","lastModifiedDate":"2021-09-09"},{"lineNumber":144,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a delete command","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"tanjoewel"},"content":"     * Deletes the relevant task from the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"tanjoewel"},"content":"    public String delete_execute() {","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"tanjoewel"},"content":"        String userIndex \u003d userInput.substring(7);","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"tanjoewel"},"content":"        int i \u003d Integer.valueOf(userIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"tanjoewel"},"content":"        Task task \u003d tasks.get(i - 1);","lastModifiedDate":"2021-09-09"},{"lineNumber":155,"author":{"gitId":"tanjoewel"},"content":"        if (task \u003d\u003d null) {","lastModifiedDate":"2021-09-09"},{"lineNumber":156,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(\"no task found!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"tanjoewel"},"content":"            return \"no task found!\";","lastModifiedDate":"2021-09-09"},{"lineNumber":158,"author":{"gitId":"tanjoewel"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"tanjoewel"},"content":"            duke.setIndex(duke.getIndex() - 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":160,"author":{"gitId":"tanjoewel"},"content":"            String message \u003d response.deleteTaskResponse(duke.getIndex(), task);","lastModifiedDate":"2021-09-09"},{"lineNumber":161,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"tanjoewel"},"content":"            tasks.removeTask(i - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"tanjoewel"},"content":"            this.writeToFile(duke.getFilePath());","lastModifiedDate":"2021-09-09"},{"lineNumber":164,"author":{"gitId":"tanjoewel"},"content":"            return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":165,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a find command","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"tanjoewel"},"content":"     * Finds tasks in the list that contain the keyword specified by the user","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"tanjoewel"},"content":"    public String find_execute() {","lastModifiedDate":"2021-09-09"},{"lineNumber":173,"author":{"gitId":"tanjoewel"},"content":"        String keyword \u003d userInput.split(\" \")[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"tanjoewel"},"content":"        String taskString \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":175,"author":{"gitId":"tanjoewel"},"content":"        boolean hasTask \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":176,"author":{"gitId":"tanjoewel"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumberOfTasks(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":177,"author":{"gitId":"tanjoewel"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"tanjoewel"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"tanjoewel"},"content":"            if (description.contains(keyword)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":180,"author":{"gitId":"tanjoewel"},"content":"                taskString +\u003d tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":181,"author":{"gitId":"tanjoewel"},"content":"                hasTask \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":182,"author":{"gitId":"tanjoewel"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":183,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":184,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d response.findResponse(taskString, hasTask);","lastModifiedDate":"2021-09-09"},{"lineNumber":185,"author":{"gitId":"tanjoewel"},"content":"        System.out.println(message);","lastModifiedDate":"2021-09-09"},{"lineNumber":186,"author":{"gitId":"tanjoewel"},"content":"        return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":187,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":188,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":189,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":190,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a StatTask command","lastModifiedDate":"2021-09-14"},{"lineNumber":191,"author":{"gitId":"tanjoewel"},"content":"     * Calls the Statistic#numOfTasks method","lastModifiedDate":"2021-09-14"},{"lineNumber":192,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":193,"author":{"gitId":"tanjoewel"},"content":"    public String statTaskExecute() {","lastModifiedDate":"2021-09-14"},{"lineNumber":194,"author":{"gitId":"tanjoewel"},"content":"        Statistic stat \u003d new Statistic(duke, tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":195,"author":{"gitId":"tanjoewel"},"content":"        return stat.numberOfTasks();","lastModifiedDate":"2021-09-14"},{"lineNumber":196,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":197,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":198,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":199,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a StatDone command","lastModifiedDate":"2021-09-14"},{"lineNumber":200,"author":{"gitId":"tanjoewel"},"content":"     * Calls the Statistic#numberOfDoneTasks() method","lastModifiedDate":"2021-09-14"},{"lineNumber":201,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":202,"author":{"gitId":"tanjoewel"},"content":"    public String statDoneExecute() {","lastModifiedDate":"2021-09-14"},{"lineNumber":203,"author":{"gitId":"tanjoewel"},"content":"        Statistic stat \u003d new Statistic(duke, tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":204,"author":{"gitId":"tanjoewel"},"content":"        return stat.numberOfDoneTasks();","lastModifiedDate":"2021-09-14"},{"lineNumber":205,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":206,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":207,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":208,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a statNotDoneExecute()","lastModifiedDate":"2021-09-14"},{"lineNumber":209,"author":{"gitId":"tanjoewel"},"content":"     * Calls the Statistic#numberOfNotDoneTasks() method","lastModifiedDate":"2021-09-14"},{"lineNumber":210,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":211,"author":{"gitId":"tanjoewel"},"content":"    public String statNotDoneExecute() {","lastModifiedDate":"2021-09-14"},{"lineNumber":212,"author":{"gitId":"tanjoewel"},"content":"        Statistic stat \u003d new Statistic(duke, tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":213,"author":{"gitId":"tanjoewel"},"content":"        return stat.numberOfNotDoneTasks();","lastModifiedDate":"2021-09-14"},{"lineNumber":214,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":215,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":216,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":217,"author":{"gitId":"tanjoewel"},"content":"     * Generates a formatted string of tasks to be outputted to the user and to be saved into hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":218,"author":{"gitId":"tanjoewel"},"content":"     * @return Formatted string of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":219,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":220,"author":{"gitId":"tanjoewel"},"content":"    public String generateTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":221,"author":{"gitId":"tanjoewel"},"content":"        String taskString \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":222,"author":{"gitId":"tanjoewel"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":223,"author":{"gitId":"tanjoewel"},"content":"        while (i \u003c tasks.getNumberOfTasks()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":224,"author":{"gitId":"tanjoewel"},"content":"            taskString +\u003d tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":225,"author":{"gitId":"tanjoewel"},"content":"            i++;","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":227,"author":{"gitId":"tanjoewel"},"content":"        return taskString;","lastModifiedDate":"2021-08-26"},{"lineNumber":228,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":230,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":231,"author":{"gitId":"tanjoewel"},"content":"     * asd","lastModifiedDate":"2021-09-09"},{"lineNumber":232,"author":{"gitId":"tanjoewel"},"content":"     * @param filePath","lastModifiedDate":"2021-09-09"},{"lineNumber":233,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":234,"author":{"gitId":"tanjoewel"},"content":"    public void writeToFile(String filePath) {","lastModifiedDate":"2021-09-09"},{"lineNumber":235,"author":{"gitId":"tanjoewel"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":236,"author":{"gitId":"tanjoewel"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-09"},{"lineNumber":237,"author":{"gitId":"tanjoewel"},"content":"            fw.write(this.generateTasks());","lastModifiedDate":"2021-09-09"},{"lineNumber":238,"author":{"gitId":"tanjoewel"},"content":"            fw.close();","lastModifiedDate":"2021-09-09"},{"lineNumber":239,"author":{"gitId":"tanjoewel"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":240,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(\"unable to write to file :\u003c\");","lastModifiedDate":"2021-09-09"},{"lineNumber":241,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":242,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":243,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanjoewel":243}},{"path":"src/main/java/duke/Statistic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":" * Class to handle calculating certain statistics to show the user","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":" * todo number of todo tasks, event tasks, deadline tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":" * todo number of done tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"public class Statistic {","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"    private Ui response;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the Statistic class","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"     * @param duke","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"     * @param taskList","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"    public Statistic(Duke duke, TaskList taskList) {","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"        this.response \u003d new Ui();","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"     * Calculates the number of tasks of each type","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"     * @return formatted message to send back to parser","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"    public String numberOfTasks() {","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"        int numOfToDo \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"        int numOfEvent \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"        int numOfDeadline \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"        for (int i \u003d 0; i \u003c taskList.getNumberOfTasks(); i++) {","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"            String taskIcon \u003d taskList.get(i).getTaskIcon();","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"            if (taskIcon \u003d\u003d \"T\") {","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"                numOfToDo +\u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"            } else if (taskIcon \u003d\u003d \"E\") {","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"                numOfEvent +\u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"            } else if (taskIcon \u003d\u003d \"D\") {","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"                numOfDeadline +\u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"        return response.statTaskResponse(numOfToDo, numOfEvent, numOfDeadline);","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"     * Calculates number of tasks marked as done","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"     * @return formatted message to send back to parser","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"    public String numberOfDoneTasks() {","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"        int result \u003d taskList.getNumberOfDoneTasks();","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"        return response.statDoneResponse(result);","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"     * Calculates number of tasks not marked as done","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"     * @return formatted message to send back to parser","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"    public String numberOfNotDoneTasks() {","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"        int result \u003d taskList.getNumberOfNotDoneTasks();","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"tanjoewel"},"content":"        return response.statNotDoneResponse(result);","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"tanjoewel":67}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":" * Represents a Storage class for storing the tasks into hard disk","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"    private String filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    private File file;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the Storage object","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"     * @param filePath","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"    //Solution for creating file when one does not exist is inspired by the code of Hong Ai Ling","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"    public Storage(String filePath, Duke duke) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"        if (!file.isFile()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"            file.getParentFile().mkdir();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"            try {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"                file.createNewFile();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"                System.out.println(\"Unable to create file :\u003c\");","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"     * Parses and load the tasks from hard disk","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"     * @return The list of tasks stored on hard disk","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"    //Solution below adapted from the code of Hong Ai Ling","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"    public List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"            List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"                String toParse \u003d s.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"                String[] split \u003d toParse.split(\"//\"); //gonna redo the format to something like T//1//read book","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"                String taskType \u003d split[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"                String isDone \u003d split[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"                String description \u003d split[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"                    Task task \u003d new ToDo(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"                    if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"                        task.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"                    result.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"                    Task task \u003d new Event(description, split[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"                    if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"                        task.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"tanjoewel"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"tanjoewel"},"content":"                    result.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"tanjoewel"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"tanjoewel"},"content":"                    Task task \u003d new Deadlines(description, split[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"tanjoewel"},"content":"                    if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"tanjoewel"},"content":"                        task.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"tanjoewel"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"tanjoewel"},"content":"                    result.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"tanjoewel"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"tanjoewel"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"tanjoewel"},"content":"            duke.setIndex(result.size());","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"tanjoewel"},"content":"            return result;","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"tanjoewel"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(\"File not found when trying to load tasks\");","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"tanjoewel"},"content":"        //the code should not reach this part","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"tanjoewel"},"content":"        return null;","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"tanjoewel":83}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":" * Parent task class that represents a generic task","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"     * Default constructor for the task object","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"    public Task() {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"        this.description \u003d null;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the task object","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"     * @param description","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"     * Retrieves the task icon of referenced task","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"     * @return Task icon of task","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"        return \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"     * Retrieves the status of a task on whether it is done or not","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"     * @return 1 if the task is done and 0 otherwise","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"     * Retrieves the description of a task","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"     * @return The description of a task","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"        return this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"     * Marks a task as done","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"     * Outputs the task as the description of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"tanjoewel"},"content":"     * @return The description of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"tanjoewel"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"tanjoewel"},"content":"        return this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanjoewel":72}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"import java.util.List;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":" * Represents a list of tasks which is used by Duke","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the TaskList object","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"     * @param tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"     * Adds a task to the TaskList","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"     * @param task","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"     * Removes a task from the TaskList","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"     * @param index","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"     * Returns the task at the specified index","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"     * @param index","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"     * @return Task at specified index","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"     * Returns the number of tasks in the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"     * @return Number of tasks in the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"tanjoewel"},"content":"     * Calculates how many tasks are marked as done","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"tanjoewel"},"content":"     * @return Number of tasks marked as done","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"tanjoewel"},"content":"    public int getNumberOfDoneTasks() {","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"tanjoewel"},"content":"        int result \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"tanjoewel"},"content":"        for (int i \u003d 0; i \u003c this.getNumberOfTasks(); i++) {","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"tanjoewel"},"content":"            String statusIcon \u003d tasks.get(i).getStatusIcon();","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"tanjoewel"},"content":"            if (statusIcon.equals(\"1\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"tanjoewel"},"content":"                result +\u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"tanjoewel"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"tanjoewel"},"content":"        return result;","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"tanjoewel"},"content":"     * Calculates how many tasks are not marked as done","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"tanjoewel"},"content":"     * @return Number of tasks not marked as done","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"tanjoewel"},"content":"    public int getNumberOfNotDoneTasks() {","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"tanjoewel"},"content":"        return this.getNumberOfTasks() - this.getNumberOfDoneTasks();","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"tanjoewel":89}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":" * Represents a todo task","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"    private final String TASK_ICON \u003d \"T\";","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the ToDo task","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"     * @param description","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"     * Returns the task icon that represents the todo task","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"     * @return The task icon that represents the todo task","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"        return this.TASK_ICON;","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"     * Overridden equals method to check for task equality based on description","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"     * @param o representing any generic object","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"     * @return True if the object is equal to the deadline task based on description","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"        if (!(o instanceof ToDo)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"        ToDo e \u003d (ToDo) o;","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"        return this.description.equals(e.description);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"     * Overridden toString method to output the task in a readable format","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"     * @return String representing task in a readable format","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"        return this.getTaskIcon() + \"//\" + this.getStatusIcon() + \"//\" + description;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanjoewel":54}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":" * Represents the UI class that handles user interaction","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"     * Generates a line to demarcate bot text","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"     * @return a line string","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"    private String generateLine() {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"        return \"----------------\";","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"     * Formats the response for parser to use when a bye command is received","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"     * @return message to send to user when a bye command is received","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"    public String byeResponse() {","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d generateLine() + \"\\n\" + \"okay :\u003c, bye!\" + \"\\n\" + generateLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"        return message;","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"     * Formats the response for parser to use when a list command is received","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"     * @param tasks","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"     * @param body","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"     * @return message to send to user when a list command is received","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"    public String listResponse(TaskList tasks, String body) {","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d generateLine() + \"\\n\" + \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"        message +\u003d body;","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"        message +\u003d generateLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"        return message;","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"     * Formats the response for parser to use when a done command is received","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"     * @param userIndex","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"     * @param tasks","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"     * @return message to send to user when a done command is received","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"    public String doneResponse(int userIndex, TaskList tasks) {","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d generateLine() + \"\\n\";","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"        if (tasks.get(userIndex - 1) \u003d\u003d null) {","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"            message +\u003d \"No task found!\\n\" + generateLine();","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"            message +\u003d \"Nice! I have marked this task as done:\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"                    + \"[X] \" + tasks.get(userIndex - 1).getDescription() + \"\\n\" + generateLine();","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"        return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"     * Formats the response for parser to use when a todo, event or deadline command is received","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"     * @param index","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"     * @param task","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"     * @return message to send to user when a todo, event or deadline command is received","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"tanjoewel"},"content":"    public String addTaskResponse(int index, Task task) {","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d generateLine() + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"tanjoewel"},"content":"                + \"Got it, I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"tanjoewel"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"tanjoewel"},"content":"                + \"Now you have \" + index + \" task(s) in the list\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"tanjoewel"},"content":"                + generateLine();","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"tanjoewel"},"content":"        return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":75,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"tanjoewel"},"content":"     * Formats the response for parser to use when a delete command is received","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"tanjoewel"},"content":"     * @param index","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"tanjoewel"},"content":"     * @param task","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"tanjoewel"},"content":"     * @return message to send to user when a delete command is received","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":82,"author":{"gitId":"tanjoewel"},"content":"    public String deleteTaskResponse(int index, Task task) {","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d generateLine() + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"tanjoewel"},"content":"                + \"Got it, I\u0027ve removed this task: \\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"tanjoewel"},"content":"                + task.toString() + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"tanjoewel"},"content":"                + \"Now you have \" + index + \" task(s) in the list\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"tanjoewel"},"content":"                + generateLine();","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"tanjoewel"},"content":"        return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":89,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":90,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"tanjoewel"},"content":"     * Formats the response for parser to use when a find command is received","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"tanjoewel"},"content":"     * @param taskString","lastModifiedDate":"2021-09-09"},{"lineNumber":95,"author":{"gitId":"tanjoewel"},"content":"     * @param hasTask","lastModifiedDate":"2021-09-09"},{"lineNumber":96,"author":{"gitId":"tanjoewel"},"content":"     * @return message to send to user when a find command is received","lastModifiedDate":"2021-09-09"},{"lineNumber":97,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":98,"author":{"gitId":"tanjoewel"},"content":"    public String findResponse(String taskString, boolean hasTask) {","lastModifiedDate":"2021-09-09"},{"lineNumber":99,"author":{"gitId":"tanjoewel"},"content":"        if (hasTask) {","lastModifiedDate":"2021-09-09"},{"lineNumber":100,"author":{"gitId":"tanjoewel"},"content":"            String message \u003d generateLine() + \"\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"tanjoewel"},"content":"                    + \"Here are your tasks: \\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":102,"author":{"gitId":"tanjoewel"},"content":"                    + taskString","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"tanjoewel"},"content":"                    + generateLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"tanjoewel"},"content":"            return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"tanjoewel"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":106,"author":{"gitId":"tanjoewel"},"content":"            String message \u003d generateLine() + \"\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"tanjoewel"},"content":"                    + \"There are no tasks with this keyword!\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"tanjoewel"},"content":"                    + generateLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"tanjoewel"},"content":"            return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":110,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":112,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"tanjoewel"},"content":"     * Formats the response for showing the user statistics on types of tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"tanjoewel"},"content":"     * @param todo","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"tanjoewel"},"content":"     * @param event","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"tanjoewel"},"content":"     * @param deadline","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"tanjoewel"},"content":"     * @return a formatted to send to user with how many of each type of tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"tanjoewel"},"content":"    public String statTaskResponse(int todo, int event, int deadline) {","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d generateLine() + \"\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"tanjoewel"},"content":"                + \"You have \" + todo + \" todo task(s)\" + \"\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"tanjoewel"},"content":"                + \"You have \" + event + \" event task(s)\" + \"\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"tanjoewel"},"content":"                + \"You have \" + deadline + \" deadline task(s)\" + \"\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"tanjoewel"},"content":"                + generateLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"tanjoewel"},"content":"        return message;","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"tanjoewel"},"content":"     * Formats the response for showing the user statistics on how many tasks are done","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"tanjoewel"},"content":"     * @param numOfDone","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"tanjoewel"},"content":"     * @return a formatted message to send to user with how many tasks are done","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"tanjoewel"},"content":"    public String statDoneResponse(int numOfDone) {","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d generateLine() + \"\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"tanjoewel"},"content":"                + \"You have \" + numOfDone + \" done task(s)! Keep going!\" + \"\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"tanjoewel"},"content":"                + generateLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"tanjoewel"},"content":"        return message;","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"tanjoewel"},"content":"     * Formats the response for showing the user statistics on how many tasks are not done","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":146,"author":{"gitId":"tanjoewel"},"content":"     * @param numOfNotDone","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"tanjoewel"},"content":"     * @return a formatted message to send to user with how many tasks are not done","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"tanjoewel"},"content":"    public String statNotDoneResponse(int numOfNotDone) {","lastModifiedDate":"2021-09-14"},{"lineNumber":150,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d generateLine() + \"\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"tanjoewel"},"content":"                + \"You have \" + numOfNotDone + \" task(s) not done! Keep going!\" + \"\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":152,"author":{"gitId":"tanjoewel"},"content":"                + generateLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":153,"author":{"gitId":"tanjoewel"},"content":"        return message;","lastModifiedDate":"2021-09-14"},{"lineNumber":154,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":156,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"tanjoewel"},"content":"     * Outputs the greeting to the user","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"tanjoewel"},"content":"    public void printGreeting() {","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"tanjoewel"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke, Joe Wel\u0027s personal slave!\\n\" + \"What can I do for you?\";","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"tanjoewel"},"content":"        System.out.println(greeting);","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":165,"author":{"gitId":"tanjoewel"},"content":"     * Formats an error message for parser to use","lastModifiedDate":"2021-09-09"},{"lineNumber":166,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":167,"author":{"gitId":"tanjoewel"},"content":"     * @param task","lastModifiedDate":"2021-09-09"},{"lineNumber":168,"author":{"gitId":"tanjoewel"},"content":"     * @return error message to send to user","lastModifiedDate":"2021-09-09"},{"lineNumber":169,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":170,"author":{"gitId":"tanjoewel"},"content":"    public String errorMessage(String task) {","lastModifiedDate":"2021-09-09"},{"lineNumber":171,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d generateLine() + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":172,"author":{"gitId":"tanjoewel"},"content":"                + \"Oops! The description of a \" + task + \" cannot be empty!\\n\" + generateLine();","lastModifiedDate":"2021-09-09"},{"lineNumber":173,"author":{"gitId":"tanjoewel"},"content":"        return message;","lastModifiedDate":"2021-09-09"},{"lineNumber":174,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":175,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":176,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"tanjoewel":176}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"tanjoewel":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"tanjoewel":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"import duke.Deadlines;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"import duke.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"import duke.ToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    public void taskIconTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"        Event e \u003d new Event(\"Dinner with mom\", \"at 7:30pm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"        Deadlines d \u003d new Deadlines(\"Finish CS2103 iP\", \"by 2021-08-26\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"        ToDo t \u003d new ToDo(\"Read The Mythical Man Month\");","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"        assertEquals(\"E\", e.getTaskIcon());","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"        assertEquals(\"D\", d.getTaskIcon());","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"        assertEquals(\"T\", t.getTaskIcon());","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"    public void statusIconTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"        Event e \u003d new Event(\"Dinner with mom\", \"at 7:30pm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"        assertEquals(\"0\", e.getStatusIcon());","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"        e.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"        assertEquals(\"1\", e.getStatusIcon());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"    public void generateTasksTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"        Event e \u003d new Event(\"Dinner with mom\", \"at 7:30pm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"        Deadlines d \u003d new Deadlines(\"Finish CS2103 iP\", \"by 2021-08-26\");","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"        ToDo t \u003d new ToDo(\"Read The Mythical Man Month\");","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"        tasks.addTask(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"        tasks.addTask(d);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"        tasks.addTask(t);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"        Parser p \u003d new Parser(tasks, \"doesn\u0027t matter\", 1, new Duke(\"data/Duke.txt\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"        String expected \u003d e.toString() + \"\\n\" + d.toString() + \"\\n\" + t.toString() + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"        assertEquals(expected, p.generateTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"tanjoewel":47}}]
