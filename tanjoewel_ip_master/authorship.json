[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanjoewel":1,"-":45}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":" * Represents a deadline task","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"    private String time;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the deadline task","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"     * @param description","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"     * @param time","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    public Deadlines(String description, String time) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"     * Obtains the correct task icon for a deadline task","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"     * @return Task icon","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"        return \"D\";","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"     * Overridden equals method to check for task equality based on description and time","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"     * @param o representing any generic object","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"     * @return True if the object is equal to the deadline task based on description and time","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"        if (!(o instanceof Deadlines)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"        Deadlines e \u003d (Deadlines) o;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"        return this.description.equals(e.description) \u0026\u0026 this.time.equals(e.time);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"     * Overridden toString method to output the task in a readable format","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"     * @return String representing task in a readable format","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"        return this.getTaskIcon() + \"//\" + this.getStatusIcon() + \"//\" + description + \"//\" + time;","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanjoewel":57}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":" * Duke is an application to help store and track tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":" * Users are able to add and delete various types of tasks such as deadlines, events, and things to do.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":" * Duke can also list the existing tasks and mark tasks as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"@SuppressWarnings(\"checkstyle:Regexp\")","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"    private int index \u003d 0; //will figure out a way to make this private :\u003c","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the Duke object.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"     * @param filePath","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"        Storage store \u003d new Storage(filePath, this);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"        tasks \u003d new TaskList(store.loadTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"    public int getIndex() {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"        return this.index;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"    public void setIndex(int index) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"     * Main function that does the main flow of the application","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"     * @param args","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"        Duke bot \u003d new Duke(\"data/Duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"        Scanner scanObj \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"        bot.ui.printGreeting();","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"        while (true) {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"            String userInput \u003d scanObj.nextLine().trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"            Parser c \u003d new Parser(bot.tasks, userInput, bot.getIndex(), bot);","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"            String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"                    c.bye_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"                        FileWriter fw \u003d new FileWriter(bot.filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"tanjoewel"},"content":"                        fw.write(c.generateTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"tanjoewel"},"content":"                        fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"tanjoewel"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"tanjoewel"},"content":"                        System.out.println(\"unable to write to file :\u003c\");","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tanjoewel"},"content":"                    } finally {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tanjoewel"},"content":"                        break;","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"tanjoewel"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"tanjoewel"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"tanjoewel"},"content":"                    c.list_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"tanjoewel"},"content":"                } else if (splitInput[0].equals(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"tanjoewel"},"content":"                    c.done_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"tanjoewel"},"content":"                } else if (splitInput[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"tanjoewel"},"content":"                    c.todo_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"tanjoewel"},"content":"                } else if (splitInput[0].equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"tanjoewel"},"content":"                    c.event_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"tanjoewel"},"content":"                } else if (splitInput[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"tanjoewel"},"content":"                    c.deadline_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"tanjoewel"},"content":"                } else if (splitInput[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"tanjoewel"},"content":"                    c.delete_execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"tanjoewel"},"content":"                } else if (splitInput[0].equals(\"find\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"tanjoewel"},"content":"                    c.find_execute();","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"tanjoewel"},"content":"                } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"tanjoewel"},"content":"                    System.out.println(\"split input: \" + splitInput[0]);","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"tanjoewel"},"content":"                    System.out.println(\"sorry! i\u0027m not taught that command yet :\u003c\");","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"tanjoewel"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"tanjoewel"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"tanjoewel"},"content":"                System.out.println(\"sorry! i\u0027m not taught that command yet :\u003c\u003c\");","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"tanjoewel"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tanjoewel":91,"-":4}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":" * Represents an event task","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"    private String time;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the event task","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"     * @param description","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"     * @param time","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"     * Obtains the correct task icon for an event task","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"     * @return Task icon","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"        return \"E\";","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"     * Overridden equals method to check for task equality based on description and time","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"     * @param o representing any generic object","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"     * @return True if the object is equal to the deadline task based on description and time","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"        Event e \u003d (Event) o;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"        return this.description.equals(e.description) \u0026\u0026 this.time.equals(e.time);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"     * Overridden toString method to output the task in a readable format","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"     * @return String representing task in a readable format","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"        return this.getTaskIcon() + \"//\" + this.getStatusIcon() + \"//\" + description + \"//\" + time;","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanjoewel":57}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":" * Represents a Parser that receives inputs from the user and executes the correct commands.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"    private String userInput;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"    private int index;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the Parser object","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"     * @param tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"     * @param userInput","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"     * @param index","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"    public Parser(TaskList tasks, String userInput, int index, Duke duke) {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a bye command","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"     * Sends a goodbye message to the user","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"    public void bye_execute() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"        String byeMsg \u003d \"    ----------------------------\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"                + \"    okay :\u003c, bye!\" + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"                + \"    ----------------------------\";","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"        System.out.println(byeMsg);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a list command","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"     * Outputs the list of current tasks to the user","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"    public void list_execute() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"        String message \u003d \"    ----------------------------\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"                + \"    \" + \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"        while (i \u003c tasks.getNumberOfTasks()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"            message +\u003d \"    \" + (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"            i++;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"        message +\u003d \"    ----------------------------\";","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a done command","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"     * Marks the relevant task as done","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"    public void done_execute() {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"        String userIndex \u003d userInput.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"        int i \u003d Integer.valueOf(userIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"        if (tasks.get(i - 1) \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(\"no task found!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"tanjoewel"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"tanjoewel"},"content":"            tasks.get(i - 1).markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"tanjoewel"},"content":"            String message \u003d \"    ----------------------------\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"tanjoewel"},"content":"                    + \"Nice! I have marked this task as done:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"tanjoewel"},"content":"                    + \"[X] \" + tasks.get(i - 1).getDescription() + \"\\n\" + \"    ----------------------------\";","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a toDo command","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"tanjoewel"},"content":"     * Adds a todo task to the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"tanjoewel"},"content":"    public void todo_execute() {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"tanjoewel"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"tanjoewel"},"content":"            Task tempTask \u003d new ToDo(userInput.substring(5));","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"tanjoewel"},"content":"            tasks.addTask(tempTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"tanjoewel"},"content":"            duke.setIndex(duke.getIndex() + 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"tanjoewel"},"content":"            String message \u003d \"    ----------------------------\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"tanjoewel"},"content":"                    + \"Got it, I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"tanjoewel"},"content":"                    + tempTask.toString() + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"tanjoewel"},"content":"                    + \"Now you have \" + duke.getIndex() + \" tasks in the list\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"tanjoewel"},"content":"                    + \"    ----------------------------\";","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"tanjoewel"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(\"Oops! The description of a todo cannot be empty!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives an event command","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"tanjoewel"},"content":"     * Adds an event task to the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"tanjoewel"},"content":"    public void event_execute() {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"tanjoewel"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"tanjoewel"},"content":"            int i \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"tanjoewel"},"content":"            String description \u003d userInput.substring(6 , i - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"tanjoewel"},"content":"            String[] split \u003d userInput.split(\"at\");","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"tanjoewel"},"content":"            String date \u003d split[1].substring(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"tanjoewel"},"content":"            LocalDate d \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"tanjoewel"},"content":"            String formattedTime \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"tanjoewel"},"content":"            Task tempTask \u003d new Event(description, formattedTime);","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"tanjoewel"},"content":"            tasks.addTask(tempTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"tanjoewel"},"content":"            duke.setIndex(duke.getIndex() + 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"tanjoewel"},"content":"            String message \u003d \"    ----------------------------\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"tanjoewel"},"content":"                    + \"Got it, I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"tanjoewel"},"content":"                    + tempTask.toString() + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"tanjoewel"},"content":"                    + \"Now you have \" + duke.getIndex() + \" tasks in the list\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"tanjoewel"},"content":"                    + \"    ----------------------------\";","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"tanjoewel"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(\"Oops! The description of an event cannot be empty and must contain a time!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a deadline command","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"tanjoewel"},"content":"     * Adds a deadline task to the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"tanjoewel"},"content":"    public void deadline_execute() {","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"tanjoewel"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"tanjoewel"},"content":"            int i \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"tanjoewel"},"content":"            String description \u003d userInput.substring(9 , i - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"tanjoewel"},"content":"            //String time \u003d userInput.substring(i+1);","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"tanjoewel"},"content":"            String[] split \u003d userInput.split(\"by\");","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"tanjoewel"},"content":"            String date \u003d split[1].substring(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"tanjoewel"},"content":"            LocalDate d \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"tanjoewel"},"content":"            String formattedTime \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"tanjoewel"},"content":"            Task tempTask \u003d new Deadlines(description, formattedTime);","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"tanjoewel"},"content":"            tasks.addTask(tempTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":136,"author":{"gitId":"tanjoewel"},"content":"            duke.setIndex(duke.getIndex() + 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"tanjoewel"},"content":"            String message \u003d \"    ----------------------------\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"tanjoewel"},"content":"                    + \"Got it, I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"tanjoewel"},"content":"                    + tempTask.toString() + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"tanjoewel"},"content":"                    + \"Now you have \" + duke.getIndex() + \" tasks in the list\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":141,"author":{"gitId":"tanjoewel"},"content":"                    + \"    ----------------------------\";","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"tanjoewel"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(\"Oops! The description of a deadline cannot be empty and must contain a time!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a delete command","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"tanjoewel"},"content":"     * Deletes the relevant task from the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"tanjoewel"},"content":"    public void delete_execute() {","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"tanjoewel"},"content":"        String userIndex \u003d userInput.substring(7);","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"tanjoewel"},"content":"        int i \u003d Integer.valueOf(userIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"tanjoewel"},"content":"        if (tasks.get(i - 1) \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(\"no task found!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"tanjoewel"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"tanjoewel"},"content":"            duke.setIndex(duke.getIndex() - 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":159,"author":{"gitId":"tanjoewel"},"content":"            String message \u003d \"    ----------------------------\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"tanjoewel"},"content":"                    + \"Got it, I\u0027ve removed this task: \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"tanjoewel"},"content":"                    + tasks.get(i - 1).toString() + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"tanjoewel"},"content":"                    + \"Now you have \" + duke.getIndex() + \" tasks in the list\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":163,"author":{"gitId":"tanjoewel"},"content":"                    + \"    ----------------------------\";","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"tanjoewel"},"content":"            tasks.removeTask(i - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"tanjoewel"},"content":"     * Executes when Duke receives a find command","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"tanjoewel"},"content":"     * Finds tasks in the list that contain the keyword specified by the user","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"tanjoewel"},"content":"    public void find_execute() {","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"tanjoewel"},"content":"        String keyword \u003d userInput.split(\" \")[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":175,"author":{"gitId":"tanjoewel"},"content":"        String taskString \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":176,"author":{"gitId":"tanjoewel"},"content":"        boolean hasTask \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":177,"author":{"gitId":"tanjoewel"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumberOfTasks(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"tanjoewel"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"tanjoewel"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2021-08-27"},{"lineNumber":180,"author":{"gitId":"tanjoewel"},"content":"            if (description.contains(keyword)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":181,"author":{"gitId":"tanjoewel"},"content":"                taskString +\u003d tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":182,"author":{"gitId":"tanjoewel"},"content":"                hasTask \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":183,"author":{"gitId":"tanjoewel"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":184,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":185,"author":{"gitId":"tanjoewel"},"content":"        if (hasTask) {","lastModifiedDate":"2021-08-27"},{"lineNumber":186,"author":{"gitId":"tanjoewel"},"content":"            String messageTrue \u003d \"    ----------------------------\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":187,"author":{"gitId":"tanjoewel"},"content":"                    + \"Here are your tasks: \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":188,"author":{"gitId":"tanjoewel"},"content":"                    + taskString","lastModifiedDate":"2021-08-27"},{"lineNumber":189,"author":{"gitId":"tanjoewel"},"content":"                    + \"    ----------------------------\";","lastModifiedDate":"2021-08-27"},{"lineNumber":190,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(messageTrue);","lastModifiedDate":"2021-08-27"},{"lineNumber":191,"author":{"gitId":"tanjoewel"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":192,"author":{"gitId":"tanjoewel"},"content":"            String messageFalse \u003d \"    ----------------------------\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":193,"author":{"gitId":"tanjoewel"},"content":"                    + \"There are no tasks with this keyword!\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":194,"author":{"gitId":"tanjoewel"},"content":"                    + \"    ----------------------------\";","lastModifiedDate":"2021-08-27"},{"lineNumber":195,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(messageFalse);","lastModifiedDate":"2021-08-27"},{"lineNumber":196,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":197,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":198,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":199,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":200,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":202,"author":{"gitId":"tanjoewel"},"content":"     * Generates a formatted string of tasks to be outputted to the user and to be saved into hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":203,"author":{"gitId":"tanjoewel"},"content":"     * @return Formatted string of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":204,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":205,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":206,"author":{"gitId":"tanjoewel"},"content":"    public String generateTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"tanjoewel"},"content":"        String taskString \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":208,"author":{"gitId":"tanjoewel"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":209,"author":{"gitId":"tanjoewel"},"content":"        while (i \u003c tasks.getNumberOfTasks()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":210,"author":{"gitId":"tanjoewel"},"content":"            taskString +\u003d tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":211,"author":{"gitId":"tanjoewel"},"content":"            i++;","lastModifiedDate":"2021-08-25"},{"lineNumber":212,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"tanjoewel"},"content":"        return taskString;","lastModifiedDate":"2021-08-26"},{"lineNumber":214,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":215,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"tanjoewel":215}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":" * Represents a Storage class for storing the tasks into hard disk","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"    private String filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    private File file;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the Storage object","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"     * @param filePath","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"    //Solution for creating file when one does not exist is inspired by the code of Hong Ai Ling","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"    public Storage(String filePath, Duke duke) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"        if (!file.isFile()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"            file.getParentFile().mkdir();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"            try {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"                file.createNewFile();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"                System.out.println(\"Unable to create file :\u003c\");","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"     * Parses and load the tasks from hard disk","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"     * @return The list of tasks stored on hard disk","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"    //Solution below adapted from the code of Hong Ai Ling","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"    public List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"            List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"                String toParse \u003d s.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"                String[] split \u003d toParse.split(\"//\"); //gonna redo the format to something like T//1//read book","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"                String taskType \u003d split[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"                String isDone \u003d split[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"                String description \u003d split[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"                    Task task \u003d new ToDo(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"                    if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"                        task.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"                    result.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"                    Task task \u003d new Event(description, split[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"                    if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"                        task.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"tanjoewel"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"tanjoewel"},"content":"                    result.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"tanjoewel"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"tanjoewel"},"content":"                    Task task \u003d new Deadlines(description, split[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"tanjoewel"},"content":"                    if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"tanjoewel"},"content":"                        task.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"tanjoewel"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"tanjoewel"},"content":"                    result.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"tanjoewel"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"tanjoewel"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"tanjoewel"},"content":"            duke.setIndex(result.size());","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"tanjoewel"},"content":"            return result;","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"tanjoewel"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"tanjoewel"},"content":"            System.out.println(\"File not found when trying to load tasks\");","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"tanjoewel"},"content":"        return null;","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"tanjoewel":82}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":" * Parent task class that represents a generic task","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"     * Default constructor for the task object","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"    public Task() {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"        this.description \u003d null;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the task object","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"     * @param description","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"     * Retrieves the task icon of referenced task","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"     * @return Task icon of task","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"    //thank you @Jeromesyl for pointing out I was missing this","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"        return \"a\";","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"     * Retrieves the status of a task on whether it is done or not","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"     * @return 1 if the task is done and 0 otherwise","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"     * Retrieves the description of a task","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"     * @return The description of a task","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"        return this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"     * Marks a task as done","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"     * Outputs the task as the description of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"tanjoewel"},"content":"     * @return The description of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"tanjoewel"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"tanjoewel"},"content":"        return this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanjoewel":73}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"import java.util.List;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":" * Represents a list of tasks which is used by Duke","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the TaskList object","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"     * @param tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"     * Adds a task to the TaskList","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"     * @param task","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"     * Removes a task from the TaskList","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"     * @param index","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"     * Returns the task at the specified index","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"     * @param index","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"     * @return Task at specified index","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"     * Returns the number of tasks in the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"     * @return Number of tasks in the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"tanjoewel"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"tanjoewel":64}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":" * Represents a todo task","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the todo task","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"     * @param description","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"     * Constructor for the ToDo task","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"     * @param description","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"     * Returns the task icon that represents the todo task","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"     * @return The task icon that represents the todo task","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"        return \"T\";","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"     * Overridden equals method to check for task equality based on description","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"     * @param o representing any generic object","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"     * @return True if the object is equal to the deadline task based on description","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"        if (!(o instanceof ToDo)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"tanjoewel"},"content":"        ToDo e \u003d (ToDo) o;","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"tanjoewel"},"content":"        return this.description.equals(e.description);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"tanjoewel"},"content":"     * Overridden toString method to output the task in a readable format","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"tanjoewel"},"content":"     * @return String representing task in a readable format","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"tanjoewel"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"tanjoewel"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"tanjoewel"},"content":"        return this.getTaskIcon() + \"//\" + this.getStatusIcon() + \"//\" + description;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"tanjoewel":60}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":" * Represents the UI class that handles user interaction","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"     * Outputs the greeting to the user","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"    public void printGreeting() {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke, Joe Wel\u0027s personal slave!\\n\" + \"What can I do for you?\";","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"        System.out.println(greeting);","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"tanjoewel":16}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjoewel"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"tanjoewel"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"tanjoewel"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"tanjoewel"},"content":"import duke.Deadlines;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"tanjoewel"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"tanjoewel"},"content":"import duke.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"tanjoewel"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"tanjoewel"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"tanjoewel"},"content":"import duke.ToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"tanjoewel"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"tanjoewel"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"tanjoewel"},"content":"    public void taskIconTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"tanjoewel"},"content":"        Event e \u003d new Event(\"Dinner with mom\", \"at 7:30pm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"tanjoewel"},"content":"        Deadlines d \u003d new Deadlines(\"Finish CS2103 iP\", \"by 2021-08-26\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"tanjoewel"},"content":"        ToDo t \u003d new ToDo(\"Read The Mythical Man Month\");","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"tanjoewel"},"content":"        assertEquals(\"E\", e.getTaskIcon());","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"tanjoewel"},"content":"        assertEquals(\"D\", d.getTaskIcon());","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"tanjoewel"},"content":"        assertEquals(\"T\", t.getTaskIcon());","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"tanjoewel"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"tanjoewel"},"content":"    public void statusIconTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"tanjoewel"},"content":"        Event e \u003d new Event(\"Dinner with mom\", \"at 7:30pm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"tanjoewel"},"content":"        assertEquals(\"0\", e.getStatusIcon());","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"tanjoewel"},"content":"        e.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"tanjoewel"},"content":"        assertEquals(\"1\", e.getStatusIcon());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"tanjoewel"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"tanjoewel"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"tanjoewel"},"content":"    public void generateTasksTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"tanjoewel"},"content":"        Event e \u003d new Event(\"Dinner with mom\", \"at 7:30pm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"tanjoewel"},"content":"        Deadlines d \u003d new Deadlines(\"Finish CS2103 iP\", \"by 2021-08-26\");","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"tanjoewel"},"content":"        ToDo t \u003d new ToDo(\"Read The Mythical Man Month\");","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"tanjoewel"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"tanjoewel"},"content":"        tasks.addTask(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"tanjoewel"},"content":"        tasks.addTask(d);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"tanjoewel"},"content":"        tasks.addTask(t);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"tanjoewel"},"content":"        Parser p \u003d new Parser(tasks, \"doesn\u0027t matter\", 1, new Duke(\"data/Duke.txt\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"tanjoewel"},"content":"        String expected \u003d e.toString() + \"\\n\" + d.toString() + \"\\n\" + t.toString() + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"tanjoewel"},"content":"        assertEquals(expected, p.generateTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"tanjoewel"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"tanjoewel"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"tanjoewel":47}}]
