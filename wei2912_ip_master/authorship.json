[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"plugins {","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.0.0\u0027","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"repositories { ","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"    mavenCentral() ","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"checkstyle {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"test {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"dependencies {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.7.2\u0027","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.7.2\u0027","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"shadowJar {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    manifest {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"        attributes \u0027Main-Class\u0027: \u0027main/java/duke.Launcher\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":42}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"### `list`","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"Print a list of all of your tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"### `done`","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"Mark a task as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"### `delete \u003cindex\u003e`","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"Delete a task.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"### `todo \u003cdescription\u003e`","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"Add a Todo task.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"### `deadline \u003cdescription\u003e /by \u003cdate\u003e`","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"Add a Deadline task.","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"### `event \u003cdescription\u003e /at \u003cdate\u003e`","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"Add an Event task.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"### `find \u003cquery\u003e`","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"Finds a task in the list, given a search query.","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"## Usage","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"### `list` - Print list of all tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"This command prints a list of all of your tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"**Example of usage**:","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"`list`","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"**Expected outcome**:","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"A list of all tasks, with task type and status icons in the following format:","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"1. [T][ ] foobar","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"2. [D][X] foo (by: Oct 8 2021)","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"3. [E][ ] derp (at: Feb 2 2021)","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"The task type is represented by the following: `[T]` indicates a Todo task, `[D]` indicates a Deadline task","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"and `[E]` indicates an Event task.","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"### `done \u003cindex\u003e` - Mark a task as done","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"This command marks a task as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"**Example of usage**:","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"`done 1` - marks the first task in the list as done","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"**Expected outcome**:","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"The status of the task is modified to done. (If this task was already marked as done, there is no change to","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"the status.)","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"### `delete \u003cindex\u003e` - Delete a task","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"This command deletes a task from the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"**Example of usage**:","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"`delete 2` - deletes the second task in the list","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"**Expected outcome**:","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"The second task in the list is deleted.","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"### `todo \u003cdescription\u003e` - Add a Todo task","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"This command adds a Todo task.","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"**Example of usage**:","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"`todo Eat a banana` - creates a new Todo task with description \"Eat a banana\"","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"**Expected outcome**:","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"A new Todo task is created and added to the bottom of the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"### `deadline \u003cdescription\u003e /by \u003cdate\u003e` - Add a Deadline task","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"This command adds a Deadline task.","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"**Example of usage**:","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"`deadline Clean room /by 2022-04-20` - creates a new Deadline task with description \"Clean room\" and a","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"wei2912"},"content":"deadline of 2022-04-20.","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"wei2912"},"content":"**Expected outcome**:","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"A new Deadline task is created and added to the bottom of the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"wei2912"},"content":"### `event \u003cdescription\u003e /at \u003cdate\u003e` - Add an Event task","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"This command adds an Event task.","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"**Example of usage**:","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"wei2912"},"content":"`event Project meeting /at 2022-04-20` - creates a new Event task with description \"Project meeting\" and a","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"wei2912"},"content":"date of 2022-04-20.","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"wei2912"},"content":"**Expected outcome**:","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"A new Event task is created and added to the bottom of the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"wei2912"},"content":"### `find \u003cquery\u003e` - Find a task","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"wei2912"},"content":"This command finds a task in the list, given a search query.","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"wei2912"},"content":"**Example of usage**:","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"wei2912"},"content":"`find meeting` - returns all tasks in the list with description containing the text \"meeting\"","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"wei2912"},"content":"**Expected outcome**:","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"wei2912"},"content":"A list of relevant tasks is printed.","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"-":17,"wei2912":112}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"echo.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"echo.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"goto fail","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"echo.","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"echo.","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"goto fail","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":":execute","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":":end","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":":fail","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"exit /b 1","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":":mainEnd","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":":omega","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":89}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":" * Class containing methods for Duke functionality.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    private static final String WELCOME_MSG \u003d String.join(","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"            \"\\n\",","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"            \"Hello from Duke!\",","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"            \"What can I do for you?\"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    );","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"     * Constructor for Duke object.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"     * @param storage Storage object.","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    public Duke(Storage storage) throws IOException {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"        this.tasks \u003d storage.readTaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"            return Parser.runCommand(this.tasks, this.storage, input);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"            return renderException(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"     * Renders a task into a string.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"     * @param task Task.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"     * @return Input task rendered as a string.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"    public static String renderTask(Task task) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"        final var dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"        final TaskType taskType \u003d TaskType.identifyTask(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        final String statusIcon \u003d task.getStatusIcon();","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"        final String taskIcon \u003d taskType.getTaskIcon();","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"        case TODO:","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"            return String.format(","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"                    \"[%s][%s] %s\",","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"                    taskIcon,","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"                    statusIcon,","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"                    task.getDescription()","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"            var deadline \u003d (Deadline) task;","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"            return String.format(","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"                    \"[%s][%s] %s (by: %s)\",","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"                    taskIcon,","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"                    statusIcon,","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"                    deadline.getDescription(),","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"                    deadline.getDeadline().format(dateFormatter)","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"        case EVENT:","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"            var event \u003d (Event) task;","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"            return String.format(","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"                    \"[%s][%s] %s (at: %s)\",","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"                    taskIcon,","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"                    statusIcon,","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"                    event.getDescription(),","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"                    event.getTime().format(dateFormatter)","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"            throw new UnsupportedOperationException(\"task type is not a valid enum value\");","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"     * Render welcome message.","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"     * @return Welcome message.","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"    public static String renderWelcome() {","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"        return WELCOME_MSG;","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"     * Render an exception message.","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"     * @param e Exception.","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"     * @return Exception message.","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"    public static String renderException(Exception e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"        return \"OOPS!!! \" + e.getMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"wei2912"},"content":"    private static Stream\u003cString\u003e generateTaskStringStream(TaskList tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"wei2912"},"content":"        return IntStream.range(0, tasks.size())","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"                .mapToObj(i -\u003e String.format(\"%d. %s\", i + 1, renderTask(tasks.get(i))));","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"wei2912"},"content":"     * Renders a list of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"wei2912"},"content":"     * @return String representing list of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"wei2912"},"content":"    public static String renderTaskList(TaskList tasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"wei2912"},"content":"        return String.join(","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"wei2912"},"content":"                \"\\n\",","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"wei2912"},"content":"                Stream.concat(","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"wei2912"},"content":"                        Stream.of(\"Here are the tasks in your list:\"),","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"                        generateTaskStringStream(tasks)","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"                ).toArray(String[]::new)","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"wei2912"},"content":"     * Print banner for a newly added task.","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"wei2912"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"wei2912"},"content":"     * @param task Newly added task.","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"wei2912"},"content":"     * @return String representing newly added task with list of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"wei2912"},"content":"    public static String renderTaskAdded(TaskList tasks, Task task) {","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"wei2912"},"content":"        return String.join(","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"wei2912"},"content":"                \"\\n\",","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"wei2912"},"content":"                \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"wei2912"},"content":"                \"  \" + renderTask(task),","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"wei2912"},"content":"                String.format(\"Now you have %d tasks in the list.\", tasks.size())","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"wei2912"},"content":"     * Print banner for found tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"wei2912"},"content":"     * @param foundTasks List of found tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"wei2912"},"content":"     * @return String representing list of found tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"wei2912"},"content":"    public static String renderFoundTasks(TaskList foundTasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"wei2912"},"content":"        return String.join(","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"wei2912"},"content":"                \"\\n\",","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"wei2912"},"content":"                Stream.concat(","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"wei2912"},"content":"                        Stream.of(\"Here are the matching tasks in your list:\"),","lastModifiedDate":"2021-09-01"},{"lineNumber":146,"author":{"gitId":"wei2912"},"content":"                        generateTaskStringStream(foundTasks)","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"wei2912"},"content":"                ).toArray(String[]::new)","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":149,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wei2912":148,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"wei2912":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"    private static final Path DATA_PATH \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"duke.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"            duke \u003d new Duke(new Storage(DATA_PATH));","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"            return;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"wei2912":38}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":" * Parser class containing static methods for the parsing of Duke commands and","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":" * inputs.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"    private static void addTask(TaskList tasks, Storage storage, Task task) throws IOException {","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"        storage.writeTaskList(tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"    private static Task popTask(TaskList tasks, Storage storage, int i) throws IOException {","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"        final Task task \u003d tasks.get(i);","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"        tasks.remove(i);","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        storage.writeTaskList(tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"        return task;","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    private static Task toggleTask(TaskList tasks, Storage storage, int i, boolean isDone) throws IOException {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        final Task task \u003d tasks.get(i);","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"        task.toggle(isDone);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"        storage.writeTaskList(tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"        return task;","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"     * Executes a command on the input task list and storage objects, given","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"     * an input.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"     * @param storage Storage object.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"     * @param input Command input.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"     * @return Boolean flag representing whether the program should terminate.","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"     * If the flag is true, the program should terminate; otherwise, the program","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"     * should continue running.","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"     * @throws Exception","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"    public static String runCommand(TaskList tasks, Storage storage, String input) throws Exception {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"        final var parameters \u003d input.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"        assert parameters.length \u003e 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        final var command \u003d parameters[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"        final var remaining \u003d input.replace(command, \"\").strip();","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"            if (!remaining.equals(\"\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"                throw new Exception(\"The list command cannot take in any parameters.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"            return Duke.renderTaskList(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"done\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"            final int i \u003d Integer.parseInt(remaining) - 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"            final Task task \u003d toggleTask(tasks, storage, i, true);","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"            return String.join(","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"                    \"\\n\",","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"                    \"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"                            \"  \" + Duke.renderTask(task)","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"            final int i \u003d Integer.parseInt(remaining) - 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"            final Task task \u003d popTask(tasks, storage, i);","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"            return String.join(","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"                    \"\\n\",","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"                    \"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"                    \"  \" + Duke.renderTask(task),","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"                    String.format(\"Now you have %d tasks in the list.\", tasks.size())","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"            if (remaining.equals(\"\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"                throw new Exception(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"            final Task task \u003d Parser.parseTaskLine(tasks, remaining, TaskType.TODO);","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"            addTask(tasks, storage, task);","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"            return Duke.renderTaskAdded(tasks, task);","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"deadline\") \u0026\u0026 remaining.contains(\"/by\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"            final Task task \u003d Parser.parseTaskLine(tasks, remaining, TaskType.DEADLINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"            addTask(tasks, storage, task);","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"            return Duke.renderTaskAdded(tasks, task);","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"event\") \u0026\u0026 remaining.contains(\"/at\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"            final Task task \u003d Parser.parseTaskLine(tasks, remaining, TaskType.EVENT);","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"            addTask(tasks, storage, task);","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"            return Duke.renderTaskAdded(tasks, task);","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"            if (remaining.equals(\"\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"                throw new Exception(\"The search query cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"            return Duke.renderFoundTasks(tasks.find(remaining));","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"            throw new Exception(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"wei2912"},"content":"     * Parses a task line into a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wei2912"},"content":"     * @param taskLine Task line.","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"     * @return Task object corresponding to the input parameters.","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"wei2912"},"content":"    public static Task parseTaskLine(TaskList tasks, String taskLine, TaskType taskType) {","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"wei2912"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"wei2912"},"content":"            return new Todo(taskLine);","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wei2912"},"content":"            final String[] deadlineParts \u003d taskLine.split(\"\\\\s+/by\\\\s+\", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"wei2912"},"content":"            assert deadlineParts.length \u003d\u003d 2;","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"wei2912"},"content":"            final String deadlineDescription \u003d deadlineParts[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"wei2912"},"content":"            final LocalDate deadlineDate \u003d LocalDate.parse(deadlineParts[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"wei2912"},"content":"            return new Deadline(deadlineDescription, deadlineDate);","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"            final String[] eventParts \u003d taskLine.split(\"\\\\s+/at\\\\s+\", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"            assert eventParts.length \u003d\u003d 2;","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"wei2912"},"content":"            final String eventDescription \u003d eventParts[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"wei2912"},"content":"            final LocalDate eventDate \u003d LocalDate.parse(eventParts[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"wei2912"},"content":"            final Optional\u003cEvent\u003e clashingEvent \u003d tasks.findEvent(eventDate);","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"wei2912"},"content":"            if (clashingEvent.isPresent()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"wei2912"},"content":"                throw new IllegalArgumentException(String.join(","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"wei2912"},"content":"                        \"\\n\",","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"wei2912"},"content":"                        \"Event date clashes with another event:\",","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"wei2912"},"content":"                        \"  \" + Duke.renderTask(clashingEvent.get())","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"wei2912"},"content":"                ));","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"wei2912"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"wei2912"},"content":"            return new Event(eventDescription, eventDate);","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"wei2912"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"wei2912"},"content":"            throw new UnsupportedOperationException(\"task type is not a valid enum value\");","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":136}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":" * Storage class for the storage and retrieval of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"    private Path path;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"     * Constructor for Storage object.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"     * @param path Path of data file to be written to.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    public Storage(Path path) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"     * Reads a list of tasks from the data file.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"     * @return List of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"    public TaskList readTaskList() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"        Files.createDirectories(this.path.getParent());","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"        if (!Files.exists(this.path)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"            Files.createFile(this.path);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"        Files.lines(this.path).forEach(taskRow -\u003e {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"            Task task \u003d parseTaskRow(tasks, taskRow);","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"            tasks.add(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"        });","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"        return tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"     * Writes a list of tasks to the data file.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"    public void writeTaskList(TaskList tasks) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"        Stream\u003cString\u003e linesStream \u003d tasks.stream()","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"                .map((task) -\u003e genTaskRow(task));","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"        Files.write(this.path, (Iterable\u003cString\u003e) linesStream::iterator);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"    private static Task parseTaskRow(TaskList tasks, String taskRow) {","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"        final var taskParts \u003d taskRow.split(\" \\\\| \", 3);","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"        assert taskParts.length \u003d\u003d 3;","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"        final var taskType \u003d TaskType.convertTaskIcon(taskParts[0]);","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"        final var taskIsDone \u003d Boolean.parseBoolean(taskParts[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"        final var taskLine \u003d taskParts[2];","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"        final Task task \u003d Parser.parseTaskLine(tasks, taskLine, taskType);","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"        task.toggle(taskIsDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"        return task;","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"    private static String genTaskRow(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"        return String.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"            \"%s | %b | %s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"            TaskType.identifyTask(task).getTaskIcon(),","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"            task.getIsDone(),","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"            genTaskLine(task)","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"    private static String genTaskLine(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"        final TaskType taskType \u003d TaskType.identifyTask(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"            return task.getDescription();","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"            final var deadline \u003d (Deadline) task;","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"            return String.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"                \"%s /by %s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"                deadline.getDescription(),","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"                deadline.getDeadline()","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"                        .format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"            final var event \u003d (Event) task;","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"            return String.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"                \"%s /at %s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"                event.getDescription(),","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"                event.getTime()","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"                        .format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wei2912"},"content":"            throw new UnsupportedOperationException(\"task type is not a valid enum value\");","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":103}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":" * Wrapper class around List object, representing a list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"     * Constructor for TaskList object.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"        this(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"     * Constructor for TaskList object.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"        return this.tasks.stream();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"    public Task remove(int i) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"        return this.tasks.remove(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"    public int size() {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"     * Retrieves a list of tasks whose description contain the search query.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"     * @param query Search query.","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"     * @return List of found tasks based on input search query.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"    public TaskList find(String query) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"        return new TaskList(","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"            this.stream()","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"                    .filter((task) -\u003e task.getDescription().contains(query))","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"                    .collect(Collectors.toList())","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"     * Retrieves an event which occurs on the input date.","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"     * @param date Input date.","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"     * @return An Optional container which holds the event occurring on the input date.","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"     * If no such event can be found, Empty is returned.","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"    public Optional\u003cEvent\u003e findEvent(LocalDate date) {","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"        return this.stream()","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"                .filter((task) -\u003e TaskType.identifyTask(task) \u003d\u003d TaskType.EVENT)","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"                .map((task) -\u003e (Event) task)","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"                .filter((event) -\u003e event.getTime().equals(date))","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"                .findAny();","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":80}},{"path":"src/main/java/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":" * Enum representing the type of a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"    EVENT(\"E\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"    TODO(\"T\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    private final String taskIcon;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"    private TaskType(String taskIcon) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"        this.taskIcon \u003d taskIcon;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"     * Getter for task icon.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"     * @return Task icon corresponding to type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"        return this.taskIcon;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"     * Identify type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"     * @param task Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"     * @return Type of input task.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    public static TaskType identifyTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"        return task instanceof Todo","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"            ? TaskType.TODO","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"            : task instanceof Deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"            ? TaskType.DEADLINE","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"            : task instanceof Event","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"            ? TaskType.EVENT","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"            : null;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"     * Convert task icon into a task type.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"     * @param taskIcon Task icon.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"     * @return Task type corresponding to input task icon.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"    public static TaskType convertTaskIcon(String taskIcon) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        switch (taskIcon) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"        case \"D\":","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"        case \"E\":","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"        case \"T\":","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"            return TaskType.TODO;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"            throw new UnsupportedOperationException(\"unknown task icon\");","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"};","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":61}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke.gui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"        this.dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"        this.displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"        final var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"wei2912":60}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke.gui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"     * Initialize function for MainWindow.","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"        this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"                DialogBox.getDukeDialog(this.duke.renderWelcome(), this.dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"        String input \u003d this.userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"        String response \u003d this.duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"        this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"                DialogBox.getUserDialog(input, this.userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"                DialogBox.getDukeDialog(response, this.dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        this.userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"wei2912":59}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":" * Class for Deadline tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"     * @param description String representing description of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"     * @param deadline LocalDate of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"     * Getter for deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"     * @return LocalDate representing the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"        return this.deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"wei2912":28}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":" * Class for Event tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"    private final LocalDate time;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"     * Constructor for Event object.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"     * @param description String representing description of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"     * @param time LocalDate of the time.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    public Event(String description, LocalDate time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    };","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"     * Getter for time.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"     * @return LocalDate representing the time.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"        return this.time;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"wei2912":28}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":" * Abstract class representing a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"    private final String description;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"     * @param description String representing description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"        this(description, false);","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"     * @param description String representing description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"     * @param isDone Boolean flag representing whether the task is done.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"     * Toggle the \u003ccode\u003eisDone\u003c/code\u003e flag of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"     * @param isDone Desired boolean value.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    public void toggle(boolean isDone) {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"     * Getter for the description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"        return this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"     * Getter for the done status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"     * @return Boolean representing whether the task is done.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"     * Getter for the status icon of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"     * @return String representing the status icon of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"wei2912":59}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":" * Class for Todo tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"     * Constructor for Todo object.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"     * @param description String representing description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"wei2912":14}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"wei2912":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"wei2912":19}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import duke.TaskType;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    void parseTaskLine_todoInput_correctTodo() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"        String description \u003d \"le description lol\";","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"        Task todo \u003d Parser.parseTaskLine(description, TaskType.TODO);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"        assert(todo instanceof Todo);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"        assertEquals(description, todo.getDescription());","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    void parseTaskLine_deadlineInput_correctDeadline() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        String description \u003d \"le description lol\";","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"        String date \u003d \"2021-08-06\";","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"        Task task \u003d Parser.parseTaskLine(","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"            String.format(\"%s /by %s\", description, date),","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"            TaskType.DEADLINE","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"        assert(task instanceof Deadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"        Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"        assertEquals(description, deadline.getDescription());","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"        assertEquals(LocalDate.of(2021, 8, 6), deadline.getDeadline());","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"    void parseTaskLine_eventInput_correctEvent() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"        String description \u003d \"le description lol\";","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"        String date \u003d \"2021-08-06\";","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"        Task task \u003d Parser.parseTaskLine(","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"            String.format(\"%s /at %s\", description, date),","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"            TaskType.EVENT","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"        assert(task instanceof Event);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        Event event \u003d (Event) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"        assertEquals(description, event.getDescription());","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"        assertEquals(LocalDate.of(2021, 8, 6), event.getTime());","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":54}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"wei2912":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"wei2912":1}}]
