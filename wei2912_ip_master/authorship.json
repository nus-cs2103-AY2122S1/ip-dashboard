[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"plugins {","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.0.0\u0027","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"repositories { ","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"    mavenCentral() ","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"checkstyle {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"test {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"dependencies {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.7.2\u0027","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.7.2\u0027","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"shadowJar {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"    manifest {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"        attributes \u0027Main-Class\u0027: \u0027duke.Duke\u0027","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":28}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"@rem","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"echo.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"echo.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"goto fail","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"echo.","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"echo.","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"goto fail","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":":execute","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":":end","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":":fail","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"exit /b 1","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":":mainEnd","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":":omega","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":89}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":" * Class for Deadline tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"     * @param description String representing description of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"     * @param deadline LocalDate of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"     * Getter for deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"     * @return LocalDate representing the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"        return this.deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"wei2912":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"    private static final Path DATA_PATH \u003d Paths.get(","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"        System.getProperty(\"user.dir\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"        \"data\",","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"        \"duke.txt\"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"    );","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"     * Main method for Duke class.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"     * @param args List of arguments.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"        Storage storage \u003d new Storage(DATA_PATH);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"        Ui.printWelcome();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"            tasks \u003d storage.readTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"            Ui.printException(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"            return;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        var sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"            var command \u003d sc.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"                boolean isEnd \u003d Parser.runCommand(tasks, storage, command);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"                if (isEnd) {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"                Ui.printException(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"        sc.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wei2912":42,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":" * Class for Event tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"    private LocalDate time;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"     * Constructor for Event object.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"     * @param description String representing description of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"     * @param time LocalDate of the time.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    public Event(String description, LocalDate time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"        super(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    };","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"     * Getter for time.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"     * @return LocalDate representing the time.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"        return this.time;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"wei2912":28}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":" * Parser class containing static methods for the parsing of Duke commands and","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":" * inputs.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"     * Executes a command on the input task list and storage objects, given","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"     * an input.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"     * @param storage Storage object.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"     * @param input Command input.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"     * @return Boolean flag representing whether the program should terminate.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"     * If the flag is true, the program should terminate; otherwise, the program","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"     * should continue running.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"     * @throws Exception","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    public static boolean runCommand(TaskList tasks, Storage storage,","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"            String input) throws Exception {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"        var parameters \u003d input.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"        var command \u003d parameters[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        if (command.equals(\"bye\") \u0026\u0026 parameters.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"            Ui.printBye();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"list\") \u0026\u0026 parameters.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"            Ui.printTaskList(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"done\") \u0026\u0026 parameters.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"            int i \u003d Integer.parseInt(parameters[1]) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"            var task \u003d tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"            task.toggle(true);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"            storage.writeTaskList(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"            Ui.printBanner(new String[] {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"                \"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"                \"  \" + Ui.renderTask(task)","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"            });","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"delete\") \u0026\u0026 parameters.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"            int i \u003d Integer.parseInt(parameters[1]) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"            var task \u003d tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"            tasks.remove(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"            storage.writeTaskList(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"            Ui.printBanner(new String[] {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"                \"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"                \"  \" + Ui.renderTask(task),","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"                String.format(\"Now you have %d tasks in the list.\",","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"                        tasks.size()),","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"            });","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"            if (parameters.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"                throw new Exception(","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"                    \"The description of a todo cannot be empty.\"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"                );","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"            String taskLine \u003d input.replace(\"todo\", \"\").strip();","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"            var task \u003d Parser.parseTaskLine(taskLine, TaskType.TODO);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"            storage.writeTaskList(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"            Ui.printTaskAdded(tasks, task);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"deadline\") \u0026\u0026 input.contains(\"/by\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"            String taskLine \u003d input.replace(\"deadline\", \"\").strip();","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"            var task \u003d Parser.parseTaskLine(taskLine, TaskType.DEADLINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"            storage.writeTaskList(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"            Ui.printTaskAdded(tasks, task);","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"event\") \u0026\u0026 input.contains(\"/at\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"            String taskLine \u003d input.replace(\"event\", \"\").strip();","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"            var task \u003d Parser.parseTaskLine(taskLine, TaskType.EVENT);","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"            storage.writeTaskList(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"            Ui.printTaskAdded(tasks, task);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"        } else if (command.equals(\"find\") \u0026\u0026 parameters.length \u003e\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"            String query \u003d input.replace(\"find\", \"\").strip();","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"            Ui.printFoundTasks(tasks.find(query));","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"            throw new Exception(","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"                \"I\u0027m sorry, but I don\u0027t know what that means :-(\"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"     * Parses a task line into a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"     * @param taskLine Task line.","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"     * @return Task object corresponding to the input parameters.","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"    public static Task parseTaskLine(String taskLine, TaskType taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"            return new Todo(taskLine);","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"            String[] deadlineParts \u003d taskLine.split(\"\\\\s+/by\\\\s+\", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"            return new Deadline(","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"                deadlineParts[0],","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"                LocalDate.parse(deadlineParts[1])","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wei2912"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"wei2912"},"content":"            String[] eventParts \u003d taskLine.split(\"\\\\s+/at\\\\s+\", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wei2912"},"content":"            return new Event(","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"                eventParts[0],","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"                LocalDate.parse(eventParts[1])","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"wei2912"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"wei2912"},"content":"            throw new UnsupportedOperationException(","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"                \"task type is not a valid enum value\"","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":112}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":" * Storage class for the storage and retrieval of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"    private Path path;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"     * Constructor for Storage object.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"     * @param path Path of data file to be written to.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    public Storage(Path path) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"     * Reads a list of tasks from the data file.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"     * @return List of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    public TaskList readTaskList() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        Files.createDirectories(this.path.getParent());","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"        if (!Files.exists(this.path)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"            Files.createFile(this.path);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"        return new TaskList(","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"            Files.lines(this.path).map((taskRow) -\u003e parseTaskRow(taskRow))","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"                    .collect(Collectors.toList())","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"     * Writes a list of tasks to the data file.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"    public void writeTaskList(TaskList tasks) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"        Stream\u003cString\u003e linesStream \u003d tasks.stream()","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"                .map((task) -\u003e genTaskRow(task));","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"        Files.write(this.path, (Iterable\u003cString\u003e) linesStream::iterator);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"    private static Task parseTaskRow(String taskRow) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"        var taskParts \u003d taskRow.split(\" \\\\| \", 3);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"        var taskType \u003d TaskType.convertTaskIcon(taskParts[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"        var taskIsDone \u003d Boolean.parseBoolean(taskParts[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"        var taskLine \u003d taskParts[2];","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        var task \u003d Parser.parseTaskLine(taskLine, taskType);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"        task.toggle(taskIsDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"        return task;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"    private static String genTaskRow(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"        return String.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"            \"%s | %b | %s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"            TaskType.identifyTask(task).getTaskIcon(),","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"            task.getIsDone(),","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"            genTaskLine(task)","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"    private static String genTaskLine(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"        var taskType \u003d TaskType.identifyTask(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"            return task.getDescription();","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"            var deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"            return String.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"                \"%s /by %s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"                deadline.getDescription(),","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"                deadline.getDeadline()","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"                        .format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"            var event \u003d (Event) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"            return String.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"                \"%s /at %s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"                event.getDescription(),","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"                event.getTime()","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"                        .format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"            throw new UnsupportedOperationException(","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"                \"task type is not a valid enum value\"","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":98}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":" * Abstract class representing a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"    private String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"     * @param description String representing description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"        this(description, false);","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"     * @param description String representing description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"     * @param isDone Boolean flag representing whether the task is done.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"     * Toggle the \u003ccode\u003eisDone\u003c/code\u003e flag of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"     * @param isDone Desired boolean value.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"    public void toggle(boolean isDone) {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"     * Getter for the description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"        return this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"     * Getter for the done status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"     * @return Boolean representing whether the task is done.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"     * Getter for the status icon of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"     * @return String representing the status icon of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"wei2912":59}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":" * Wrapper class around List object, representing a list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"     * Constructor for TaskList object.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"        this(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"     * Constructor for TaskList object.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        return this.tasks.stream();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"        return this.tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"    public Task remove(int i) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"        return this.tasks.remove(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"    public int size() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"     * Retrieves a list of tasks whose description contain the search query.","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"     * @param query Search query.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"     * @return List of found tasks based on input search query.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"    public TaskList find(String query) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"        return new TaskList(","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"            this.stream()","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"                    .filter((task) -\u003e task.getDescription().contains(query))","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"                    .collect(Collectors.toList())","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":61}},{"path":"src/main/java/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":" * Enum representing the type of a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"    DEADLINE(\"D\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"    EVENT(\"E\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"    TODO(\"T\");","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"    private final String taskIcon;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"    private TaskType(String taskIcon) {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"        this.taskIcon \u003d taskIcon;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"     * Getter for task icon.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"     * @return Task icon corresponding to type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"    public String getTaskIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"        return this.taskIcon;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"     * Identify type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"     * @param task Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"     * @return Type of input task.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"    public static TaskType identifyTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        return task instanceof Todo","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"            ? TaskType.TODO","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"            : task instanceof Deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"            ? TaskType.DEADLINE","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"            : task instanceof Event","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"            ? TaskType.EVENT","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"            : null;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"     * Convert task icon into a task type.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"     * @param taskIcon Task icon.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"     * @return Task type corresponding to input task icon.","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"    public static TaskType convertTaskIcon(String taskIcon) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"        switch (taskIcon) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"        case \"D\":","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"        case \"E\":","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        case \"T\":","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"            return TaskType.TODO;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"            throw new UnsupportedOperationException(\"unknown task icon\");","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"};","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":56}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":" * Class for Todo tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"     * Constructor for Todo object.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"     * @param description String representing description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"wei2912":14}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":" * Class containing methods for UI-related functionality.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"    private static final String SEPARATOR \u003d","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"            \"____________________________________________________________\";","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"    private static final String PREFIX \u003d \"\\t\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"    private static final String WELCOME_MSG \u003d","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"            \"Hello from\\n\" + LOGO + \"What can I do for you?\";","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    private static final String BYE_MSG \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"     * Renders a task into a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"     * @param task Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"     * @return Input task rendered as a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"    public static String renderTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"        var taskType \u003d TaskType.identifyTask(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"        String taskIcon \u003d taskType.getTaskIcon();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"        String statusIcon \u003d task.getStatusIcon();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"        case TODO:","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"            return String.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"                \"[%s][%s] %s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"                taskIcon,","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"                statusIcon,","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"                task.getDescription()","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"            var deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"            return String.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"                \"[%s][%s] %s (by: %s)\",","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"                taskIcon,","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"                statusIcon,","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"                deadline.getDescription(),","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"                deadline.getDeadline()","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"                    .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        case EVENT:","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"            var event \u003d (Event) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"            return String.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"                \"[%s][%s] %s (at: %s)\",","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"                taskIcon,","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"wei2912"},"content":"                statusIcon,","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wei2912"},"content":"                event.getDescription(),","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wei2912"},"content":"                event.getTime()","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"wei2912"},"content":"                    .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"wei2912"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"wei2912"},"content":"            throw new UnsupportedOperationException(","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"wei2912"},"content":"                \"task type is not a valid enum value\"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"wei2912"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"wei2912"},"content":"     * Print a banner.","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wei2912"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wei2912"},"content":"     * Each string in the \u003ccode\u003elines\u003c/code\u003e array is treated as a separate","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"wei2912"},"content":"     * line, and it is assumed that the string contains no newline characters.","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"wei2912"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"wei2912"},"content":"     * @param lines Array of strings corresponding to lines of a message.","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"wei2912"},"content":"    public static void printBanner(String[] lines) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"wei2912"},"content":"        System.out.println(PREFIX + SEPARATOR);","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"wei2912"},"content":"        for (String line : lines) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"wei2912"},"content":"            System.out.println(PREFIX + line);","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"wei2912"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"wei2912"},"content":"        System.out.println(PREFIX + SEPARATOR);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"wei2912"},"content":"     * Print welcome banner.","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"wei2912"},"content":"    public static void printWelcome() {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"wei2912"},"content":"        printBanner(WELCOME_MSG.split(\"\\n\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"wei2912"},"content":"     * Print bye banner.","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"wei2912"},"content":"    public static void printBye() {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"wei2912"},"content":"        printBanner(BYE_MSG.split(\"\\n\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"wei2912"},"content":"     * Print an exception banner.","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"wei2912"},"content":"     * @param e Exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"wei2912"},"content":"    public static void printException(Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"wei2912"},"content":"        printBanner(new String[]{ \"☹ OOPS!!! \" + e.getMessage() });","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"wei2912"},"content":"     * Print a list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"wei2912"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"wei2912"},"content":"    public static void printTaskList(TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"wei2912"},"content":"        printBanner(","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"wei2912"},"content":"            Stream.concat(","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"wei2912"},"content":"                Stream.of(\"Here are the tasks in your list:\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"wei2912"},"content":"                IntStream.range(0, tasks.size())","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"wei2912"},"content":"                    .mapToObj(i -\u003e String.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"wei2912"},"content":"                        \"%d. %s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"wei2912"},"content":"                        i + 1,","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"wei2912"},"content":"                        renderTask(tasks.get(i)))","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"wei2912"},"content":"                    )","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"wei2912"},"content":"            ).toArray(String[]::new)","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"wei2912"},"content":"     * Print banner for a newly added task.","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"wei2912"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"wei2912"},"content":"     * @param task Newly added task.","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"wei2912"},"content":"    public static void printTaskAdded(TaskList tasks, Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"wei2912"},"content":"        printBanner(new String[] {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"wei2912"},"content":"            \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"wei2912"},"content":"            \"  \" + renderTask(task),","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"wei2912"},"content":"            String.format(\"Now you have %d tasks in the list.\", tasks.size())","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"wei2912"},"content":"        });","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"wei2912"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"wei2912"},"content":"     * Print banner for found tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"wei2912"},"content":"     * @param foundTasks List of found tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"wei2912"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"wei2912"},"content":"    public static void printFoundTasks(TaskList foundTasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"wei2912"},"content":"        printBanner(","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"wei2912"},"content":"            Stream.concat(","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"wei2912"},"content":"                Stream.of(\"Here are the matching tasks in your list:\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"wei2912"},"content":"                IntStream.range(0, foundTasks.size())","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"wei2912"},"content":"                    .mapToObj(i -\u003e String.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"wei2912"},"content":"                        \"%d. %s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"wei2912"},"content":"                        i + 1,","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"wei2912"},"content":"                        renderTask(foundTasks.get(i)))","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"wei2912"},"content":"                    )","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"wei2912"},"content":"            ).toArray(String[]::new)","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":153}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei2912"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wei2912"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wei2912"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"wei2912"},"content":"import duke.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"wei2912"},"content":"import duke.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"wei2912"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"import duke.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wei2912"},"content":"import duke.TaskType;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wei2912"},"content":"import duke.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"wei2912"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"    void parseTaskLine_todoInput_correctTodo() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"wei2912"},"content":"        String description \u003d \"le description lol\";","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"wei2912"},"content":"        Task todo \u003d Parser.parseTaskLine(description, TaskType.TODO);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"wei2912"},"content":"        assert(todo instanceof Todo);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wei2912"},"content":"        assertEquals(description, todo.getDescription());","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wei2912"},"content":"    void parseTaskLine_deadlineInput_correctDeadline() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wei2912"},"content":"        String description \u003d \"le description lol\";","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"wei2912"},"content":"        String date \u003d \"2021-08-06\";","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wei2912"},"content":"        Task task \u003d Parser.parseTaskLine(","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wei2912"},"content":"            String.format(\"%s /by %s\", description, date),","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wei2912"},"content":"            TaskType.DEADLINE","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"wei2912"},"content":"        assert(task instanceof Deadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"wei2912"},"content":"        Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"wei2912"},"content":"        assertEquals(description, deadline.getDescription());","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"wei2912"},"content":"        assertEquals(LocalDate.of(2021, 8, 6), deadline.getDeadline());","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"wei2912"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"wei2912"},"content":"    void parseTaskLine_eventInput_correctEvent() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"wei2912"},"content":"        String description \u003d \"le description lol\";","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"wei2912"},"content":"        String date \u003d \"2021-08-06\";","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"wei2912"},"content":"        Task task \u003d Parser.parseTaskLine(","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"wei2912"},"content":"            String.format(\"%s /at %s\", description, date),","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"wei2912"},"content":"            TaskType.EVENT","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"wei2912"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"wei2912"},"content":"        assert(task instanceof Event);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"wei2912"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wei2912"},"content":"        Event event \u003d (Event) task;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"wei2912"},"content":"        assertEquals(description, event.getDescription());","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"wei2912"},"content":"        assertEquals(LocalDate.of(2021, 8, 6), event.getTime());","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"wei2912"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"wei2912"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wei2912":54}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"wei2912"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"wei2912":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"wei2912"},"content":"if ! javac -cp ../src/main/java/duke -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"wei2912":1}}]
