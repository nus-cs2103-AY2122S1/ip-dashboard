[{"path":"Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"Todo Read","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"Deadline s /by Mon","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"sj1999-BIT":2}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import Storage.*;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"import Task.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"import Task.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"import Task.DeadlineException;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"import Task.TodoException;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"import Task.EventsException;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"    private final Ui userInterface \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"        Duke user \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"        boolean end \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"        user.userInterface.greet();","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"        user.userInterface.getDataInputList();","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"        while (end) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"            end \u003d user.userInterface.echo();","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.println(\"__________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"//deals with interactions with the user","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"class Ui {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"    private final Storage store \u003d new Storage();","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"     * Generate the initiate message.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"    public void greet() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(\"__________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(\"__________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"     * generate the end message.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"    public void bye() {","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"        store.saveListInFile(\"src/main/java/Duke/Duke.txt\", taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"     * The original method to simply generate an echo message.","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"sj1999-BIT"},"content":"     * Now only meant to decide if the user has decided to end","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"sj1999-BIT"},"content":"     * the program.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"sj1999-BIT"},"content":"     * @return boolean","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"sj1999-BIT"},"content":"    public boolean echo() {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"sj1999-BIT"},"content":"        Scanner user \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"sj1999-BIT"},"content":"        while(user.hasNextLine()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"sj1999-BIT"},"content":"            String input \u003d user.nextLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"sj1999-BIT"},"content":"            return choiceOfAction(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"sj1999-BIT"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"sj1999-BIT"},"content":"     * To decide base on the input what is the next action.","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"sj1999-BIT"},"content":"     * The decision on whether to show list, set existing task to","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"sj1999-BIT"},"content":"     * done, or to create and record new task.","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"sj1999-BIT"},"content":"     * @param input by the user","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"sj1999-BIT"},"content":"     * @return boolean","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"sj1999-BIT"},"content":"    public boolean choiceOfAction(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"sj1999-BIT"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"sj1999-BIT"},"content":"            bye();","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"sj1999-BIT"},"content":"            return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"sj1999-BIT"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"sj1999-BIT"},"content":"            taskList.showList();","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"sj1999-BIT"},"content":"            return true;","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"sj1999-BIT"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"sj1999-BIT"},"content":"            String[] newInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"sj1999-BIT"},"content":"            String instruction \u003d newInput[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"sj1999-BIT"},"content":"            if (instruction.equals(\"done\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"sj1999-BIT"},"content":"                doneAction(newInput);","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"sj1999-BIT"},"content":"            } else if (instruction.equals(\"delete\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"sj1999-BIT"},"content":"                deleteAction(newInput);","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"sj1999-BIT"},"content":"            }else if (instruction.equals(\"find\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"sj1999-BIT"},"content":"                findAction(newInput);","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"sj1999-BIT"},"content":"            } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"sj1999-BIT"},"content":"                try {","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"sj1999-BIT"},"content":"                    Task newTask \u003d store.createTask(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"sj1999-BIT"},"content":"                    taskList.addTask(newTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"sj1999-BIT"},"content":"                } catch (TodoException tx) {","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"sj1999-BIT"},"content":"                    System.out.println(tx.getLocalizedMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"sj1999-BIT"},"content":"                } catch (DeadlineException dx) {","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"sj1999-BIT"},"content":"                    System.out.println(dx.getLocalizedMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"sj1999-BIT"},"content":"                } catch (EventsException ex) {","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"sj1999-BIT"},"content":"                    System.out.println(ex.getLocalizedMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"sj1999-BIT"},"content":"                } catch (Exception e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"sj1999-BIT"},"content":"                    System.out.println(e.getLocalizedMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"sj1999-BIT"},"content":"            return true;","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"sj1999-BIT"},"content":"     * Encapsulation up the class structure.","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"sj1999-BIT"},"content":"    public void getDataInputList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"sj1999-BIT"},"content":"        store.getDataInputList(this.taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"sj1999-BIT"},"content":"     * Function performs task when Done instruction is provided.","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"sj1999-BIT"},"content":"     * @param newInput is a String Array containing the Done and index of the Task.","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"sj1999-BIT"},"content":"    private void doneAction(String[] newInput) {","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"sj1999-BIT"},"content":"        if (newInput.length \u003c 2) {","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.println(\"Please input the index of the Task to be done!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"sj1999-BIT"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"sj1999-BIT"},"content":"            int index \u003d Integer.parseInt(newInput[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"sj1999-BIT"},"content":"            if (index \u003c\u003d taskList.getTaskList().size() \u0026\u0026 index \u003e 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"sj1999-BIT"},"content":"                taskList.getTaskList().get(index - 1).done();","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"sj1999-BIT"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"sj1999-BIT"},"content":"                System.out.println(\"    \" + this.taskList.getTaskList().get(index - 1));","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"sj1999-BIT"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"sj1999-BIT"},"content":"                System.out.println(\"invalid index\");","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"sj1999-BIT"},"content":"     * Function perform the action of deleting a task when requested. It also catches","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"sj1999-BIT"},"content":"     * the Exception throw.","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"sj1999-BIT"},"content":"     * @param newInput is the String Array containing the index of the Task.","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"sj1999-BIT"},"content":"    private void deleteAction(String[] newInput) {","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"sj1999-BIT"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"sj1999-BIT"},"content":"            taskList.deleteTask(newInput);","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"sj1999-BIT"},"content":"        }catch (Exception e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":146,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.println(e.getLocalizedMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":147,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":149,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":150,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"sj1999-BIT"},"content":"     * Action find keywords in main TaskList the fits the request.","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"sj1999-BIT"},"content":"     * @param newInput is a String Array that contains the keyword needed for the search.","lastModifiedDate":"2021-09-01"},{"lineNumber":153,"author":{"gitId":"sj1999-BIT"},"content":"     * @return TaskList Object containing the searched Tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":154,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":155,"author":{"gitId":"sj1999-BIT"},"content":"    private void findAction(String[] newInput) {","lastModifiedDate":"2021-09-01"},{"lineNumber":156,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":157,"author":{"gitId":"sj1999-BIT"},"content":"        if (newInput.length \u003e\u003d 2) {","lastModifiedDate":"2021-09-01"},{"lineNumber":158,"author":{"gitId":"sj1999-BIT"},"content":"            String keyword \u003d newInput[1];","lastModifiedDate":"2021-09-01"},{"lineNumber":159,"author":{"gitId":"sj1999-BIT"},"content":"            //TaskList tempList \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":160,"author":{"gitId":"sj1999-BIT"},"content":"            for (Task curTask : this.taskList.getTaskList()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":161,"author":{"gitId":"sj1999-BIT"},"content":"                for (String information : curTask.getFinalAction().split(\" \")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":162,"author":{"gitId":"sj1999-BIT"},"content":"                    if (information.equals(keyword)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"sj1999-BIT"},"content":"                        //tempList.addTaskWithoutMessage(curTask);","lastModifiedDate":"2021-09-01"},{"lineNumber":164,"author":{"gitId":"sj1999-BIT"},"content":"                        System.out.println(curTask);","lastModifiedDate":"2021-09-01"},{"lineNumber":165,"author":{"gitId":"sj1999-BIT"},"content":"                    }","lastModifiedDate":"2021-09-01"},{"lineNumber":166,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":167,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":168,"author":{"gitId":"sj1999-BIT"},"content":"            //tempList.showList();","lastModifiedDate":"2021-09-01"},{"lineNumber":169,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":170,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":171,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"sj1999-BIT":170,"-":1}},{"path":"src/main/java/Duke/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"Todo r","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"Deadline r /by 12/12/2019","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"Events rt /at 12/12/2019 1800","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sj1999-BIT":3}},{"path":"src/main/java/Duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"public class DukeTest {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"    public void TestSaveFile(){","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"            //clear file first","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"            String FILE_PATH \u003d \"C:/Users/shuiz/OneDrive/Documents/GitHub/ip/src/\" +","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"                    \"main/java/Duke/Duke.txt\";","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"            new FileWriter(FILE_PATH, false).close();","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"            FileInputStream in \u003d new FileInputStream(\"C:/Users/shuiz/OneDrive/Documents/GitHub/ip/src/\" +","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"                        \"main/java/Duke/TestInput.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"            System.setIn(in);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"            String[] args \u003d {\"\"};","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"            Duke.main(args);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"            FileInputStream f1 \u003d new FileInputStream(\"TestOutput.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"            FileInputStream f2 \u003d new FileInputStream(\"Duke.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"            assertEquals(f1, f2);","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"        }catch (IOException io) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.println(io.getLocalizedMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"    @Test","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"    public void testInvalidFormat() {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"            //clear file first","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"            String FILE_PATH \u003d \"C:/Users/shuiz/OneDrive/Documents/GitHub/ip/src/\" +","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"                    \"main/java/Duke/Duke.txt\";","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"            new FileWriter(FILE_PATH, false).close();","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"            FileInputStream in \u003d new FileInputStream(\"C:/Users/shuiz/OneDrive/Documents/GitHub/ip/src/\" +","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"                    \"main/java/Duke/TestInput2.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"            System.setIn(in);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"            String[] args \u003d {\"\"};","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"            Duke.main(args);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"            FileInputStream f1 \u003d new FileInputStream(\"TestOutput2.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"            FileInputStream f2 \u003d new FileInputStream(\"Duke.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"            assertEquals(f1, f2);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"        }catch (IOException io) {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.println(io.getLocalizedMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sj1999-BIT":56}},{"path":"src/main/java/Duke/TestInput.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"Todo readline","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"Deadline s /by 12/12/2019","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"Events a /at 12/12/2019 1800","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"done 1","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sj1999-BIT":5}},{"path":"src/main/java/Duke/TestInput2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"Todo","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"Deadline s /by","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"Events a /at 12/12/2019","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sj1999-BIT":4}},{"path":"src/main/java/Duke/testOutput.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"Todo readline done","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"Deadline s /by 12/12/2019","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"Events a /at 12/12/2019 1800","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"sj1999-BIT":3}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.*;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import Task.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"import Task.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"import Task.TaskTypes;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"import Task.DeadlineException;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"import Task.TodoException;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"import Task.EventsException;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"public class Storage {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"    private final Parser parser\u003d new Parser();","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"     * Function obtain data from previous file records. Creates the file if it\u0027s not present.","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"     * @param lst is the target TaskList","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"    public void getDataInputList(TaskList lst) {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"            File f \u003d new File(\"src/main/java/Duke/Duke.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"            if(!f.exists()){","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"            FileReader reader \u003d new FileReader(f);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"            BufferedReader br \u003d new BufferedReader(reader);  //creates a buffering character input stream","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"            String line;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"            Task curTask;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"                boolean isCurTaskDone \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"                String[] data \u003d line.split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"                int lengthLimit \u003d data.length;","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"                String taskData \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"                if (data[data.length - 1].equals(\"done\")){","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"                    isCurTaskDone \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"                    lengthLimit -\u003d 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"                try {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"                    for (int i \u003d 0; i \u003c lengthLimit; i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"                        taskData \u003d taskData.concat(data[i] + \" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"                    }","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"                    curTask \u003d parser.createTask(taskData);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"                    if (isCurTaskDone) {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"                        curTask.done();","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"                    }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"                    lst.getTaskList().add(curTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"                } catch (Exception e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"        }catch (FileNotFoundException f) {","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"        }catch(IOException io){","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.println(io.getLocalizedMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"sj1999-BIT"},"content":"     * Save the current Task in the target file.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"sj1999-BIT"},"content":"     * @param filename of the file for saving of data from tasklist.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"sj1999-BIT"},"content":"    public void saveListInFile(String filename, TaskList lst) {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"sj1999-BIT"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"sj1999-BIT"},"content":"            //clear the current data file","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"sj1999-BIT"},"content":"            PrintWriter pw \u003d new PrintWriter(filename);","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"sj1999-BIT"},"content":"            pw.close();","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"sj1999-BIT"},"content":"            //write into the file","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"sj1999-BIT"},"content":"            File tempFile \u003d new File(filename);","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"sj1999-BIT"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"sj1999-BIT"},"content":"            for (Task task : lst.getTaskList()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"sj1999-BIT"},"content":"                writer.write(parser.formatTaskIntoCommands(task));","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"sj1999-BIT"},"content":"            writer.close();","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"sj1999-BIT"},"content":"        }catch (IOException io) {","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"sj1999-BIT"},"content":"     * Create the correct Task using the information in the input String","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"sj1999-BIT"},"content":"     * @param input contains data regarding the action and date of the Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"sj1999-BIT"},"content":"     * @return the correct Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"sj1999-BIT"},"content":"     * @throws Exception if the input is invalid.","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"sj1999-BIT"},"content":"    public Task createTask(String input) throws Exception{","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"sj1999-BIT"},"content":"        return parser.createTask(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"sj1999-BIT"},"content":"// deals with making sense of the user command","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"sj1999-BIT"},"content":"class Parser {","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"sj1999-BIT"},"content":"     * Function reformat Task in TaskList back to valid format input commands.","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"sj1999-BIT"},"content":"     * @param task to be reformatted and store in file.","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"sj1999-BIT"},"content":"     * @return String command.","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"sj1999-BIT"},"content":"    public String formatTaskIntoCommands(Task task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"sj1999-BIT"},"content":"        String[] taskInfo \u003d task.toString().split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"sj1999-BIT"},"content":"        String output;","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"sj1999-BIT"},"content":"        String separator \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"sj1999-BIT"},"content":"        String keyword \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"sj1999-BIT"},"content":"        taskInfo \u003d Arrays.copyOfRange(taskInfo, 1, taskInfo.length);","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"sj1999-BIT"},"content":"        if (task.getType().equals(TaskTypes.Todo)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"sj1999-BIT"},"content":"            output \u003d \"Todo\";","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"sj1999-BIT"},"content":"        } else if (task.getType().equals(TaskTypes.Deadline)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"sj1999-BIT"},"content":"            output \u003d \"Deadline\";","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"sj1999-BIT"},"content":"            separator \u003d \"(by:\";","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"sj1999-BIT"},"content":"            keyword \u003d \"by\";","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"sj1999-BIT"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"sj1999-BIT"},"content":"            output \u003d \"Events\";","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"sj1999-BIT"},"content":"            separator \u003d \"(at:\";","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"sj1999-BIT"},"content":"            keyword \u003d \"at\";","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"sj1999-BIT"},"content":"        for (String str : taskInfo) {","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"sj1999-BIT"},"content":"            if (!str.equals(\")\") \u0026\u0026 !str.equals(\"\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"sj1999-BIT"},"content":"                if (str.equals(separator)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"sj1999-BIT"},"content":"                    str \u003d \"/\" + keyword;","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"sj1999-BIT"},"content":"                output \u003d output.concat(\" \" + str);","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"sj1999-BIT"},"content":"        if (task.getIsDone()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"sj1999-BIT"},"content":"            output +\u003d \" done\";","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"sj1999-BIT"},"content":"        return output + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"sj1999-BIT"},"content":"     * Function able to read the input the judge which Task to use.","lastModifiedDate":"2021-08-31"},{"lineNumber":129,"author":{"gitId":"sj1999-BIT"},"content":"     * @param action contains information for what task to be created.","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"sj1999-BIT"},"content":"     * @return the task created.","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"sj1999-BIT"},"content":"     * @throws Exception if format is invalid.","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"sj1999-BIT"},"content":"    public Task createTask(String action) throws Exception{","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"sj1999-BIT"},"content":"        // separate using the / as its the point of the date","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"sj1999-BIT"},"content":"        String[] dataOfAction \u003d action.split(\"/\")[0].split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"sj1999-BIT"},"content":"        String type \u003d dataOfAction[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"sj1999-BIT"},"content":"        //decide the correct header","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"sj1999-BIT"},"content":"        if (type.equals(\"Todo\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"sj1999-BIT"},"content":"            return new TodoTasks(action);","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"sj1999-BIT"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"sj1999-BIT"},"content":"            if (type.equals(\"Deadline\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"sj1999-BIT"},"content":"                return new DeadlineTask(action);","lastModifiedDate":"2021-08-31"},{"lineNumber":143,"author":{"gitId":"sj1999-BIT"},"content":"            } else if  (type.equals(\"Events\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"sj1999-BIT"},"content":"                return new EventsTask(action);","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"sj1999-BIT"},"content":"            } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"sj1999-BIT"},"content":"                throw new Exception(\"Error type\");","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"sj1999-BIT"},"content":"class TodoTasks extends Task{","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"sj1999-BIT"},"content":"     * constructor for Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"sj1999-BIT"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":156,"author":{"gitId":"sj1999-BIT"},"content":"     * @param action contains all the information to build a TodoTask.","lastModifiedDate":"2021-08-31"},{"lineNumber":157,"author":{"gitId":"sj1999-BIT"},"content":"     * @throws TodoException if the String action is invalid.","lastModifiedDate":"2021-08-31"},{"lineNumber":158,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":159,"author":{"gitId":"sj1999-BIT"},"content":"    public TodoTasks(String action) throws TodoException {","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"sj1999-BIT"},"content":"        super(action, \"[T][] \", TaskTypes.Todo);","lastModifiedDate":"2021-08-31"},{"lineNumber":161,"author":{"gitId":"sj1999-BIT"},"content":"        if (action.split(\" \").length \u003c 2){","lastModifiedDate":"2021-08-31"},{"lineNumber":162,"author":{"gitId":"sj1999-BIT"},"content":"            throw new TodoException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":163,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":164,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":165,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":167,"author":{"gitId":"sj1999-BIT"},"content":"class DeadlineTask extends Task{","lastModifiedDate":"2021-08-31"},{"lineNumber":168,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":169,"author":{"gitId":"sj1999-BIT"},"content":"     * constructor for Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":170,"author":{"gitId":"sj1999-BIT"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":171,"author":{"gitId":"sj1999-BIT"},"content":"     * @param action containinf all the data needed for the creation of Deadline Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":172,"author":{"gitId":"sj1999-BIT"},"content":"     * @throws DeadlineException if the String action is invalid.","lastModifiedDate":"2021-08-31"},{"lineNumber":173,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":174,"author":{"gitId":"sj1999-BIT"},"content":"    public DeadlineTask(String action) throws DeadlineException {","lastModifiedDate":"2021-08-31"},{"lineNumber":175,"author":{"gitId":"sj1999-BIT"},"content":"        super(action, \"[D][] \", TaskTypes.Deadline);","lastModifiedDate":"2021-08-31"},{"lineNumber":176,"author":{"gitId":"sj1999-BIT"},"content":"        if (action.split(\"/\").length \u003c 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":177,"author":{"gitId":"sj1999-BIT"},"content":"            throw new DeadlineException(\"incorrect format for deadline task\");","lastModifiedDate":"2021-08-31"},{"lineNumber":178,"author":{"gitId":"sj1999-BIT"},"content":"        } else if (action.split(\"/\")[1].split(\" \").length \u003c 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":179,"author":{"gitId":"sj1999-BIT"},"content":"            throw new DeadlineException(\"incorrect date format for Deadline task\");","lastModifiedDate":"2021-08-31"},{"lineNumber":180,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":181,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":182,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":183,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":184,"author":{"gitId":"sj1999-BIT"},"content":"class EventsTask extends Task{","lastModifiedDate":"2021-08-31"},{"lineNumber":185,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":186,"author":{"gitId":"sj1999-BIT"},"content":"     * constructor for Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":187,"author":{"gitId":"sj1999-BIT"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":188,"author":{"gitId":"sj1999-BIT"},"content":"     * @param action contains all the data need for the creation of the EventTasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":189,"author":{"gitId":"sj1999-BIT"},"content":"     * @throws EventsException if the action is invalid.","lastModifiedDate":"2021-08-31"},{"lineNumber":190,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":191,"author":{"gitId":"sj1999-BIT"},"content":"    public EventsTask(String action) throws EventsException {","lastModifiedDate":"2021-08-31"},{"lineNumber":192,"author":{"gitId":"sj1999-BIT"},"content":"        super(action, \"[E][] \", TaskTypes.Events);","lastModifiedDate":"2021-08-31"},{"lineNumber":193,"author":{"gitId":"sj1999-BIT"},"content":"        if (action.split(\"/\").length \u003c 2){","lastModifiedDate":"2021-08-31"},{"lineNumber":194,"author":{"gitId":"sj1999-BIT"},"content":"            throw new EventsException(\"incorrect format for Events task\");","lastModifiedDate":"2021-08-31"},{"lineNumber":195,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":196,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":197,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":198,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":199,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":200,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":201,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":202,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":203,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"sj1999-BIT":203}},{"path":"src/main/java/Task/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"public class DeadlineException extends Exception {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"    public DeadlineException(String message) {","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"        super(message);","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"sj1999-BIT":7}},{"path":"src/main/java/Task/EventsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"public class EventsException extends Exception {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"    public EventsException(String message) {","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"            super(message);","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"sj1999-BIT":7}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import Task.TaskTypes;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"//deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"public class Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"    private String done;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"    private String[] dataOfAction;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"    private String finalAction \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"    private final TaskTypes type;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"    private LocalDate localDate;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"     * Constructor for the Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"     * @param action is what to be done.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"     * @param done is the tick box before the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"     * @param type is what type of task to be created.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"    public Task(String action, String done, TaskTypes type) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"        dataOfAction \u003d action.split(\"/\")[0].split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"        for (int i \u003d 1; i \u003c dataOfAction.length; i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"            finalAction \u003d finalAction.concat(dataOfAction[i] + \" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"        if (action.split(\"/\").length \u003e 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"            String day \u003d setDate(action);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"            finalAction \u003d finalAction.concat(day);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"     * Create a tail made up of the deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"     * @param inputs String containing the date with some other information.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"     * @return String containing only the date with information correctly organised.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"    private String setDate(String inputs) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"        String[] data \u003d inputs.split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"        int pos \u003d 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"        String keywords \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"        if (type.equals(TaskTypes.Deadline)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"            keywords \u003d \"by\";","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"        } else if (type.equals(TaskTypes.Events)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"            keywords \u003d \"at\";","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"        for (String str : data) {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"            if (str.equals(\"/\" + keywords)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"            pos +\u003d 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"sj1999-BIT"},"content":"        String date \u003d data[pos + 1];","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"sj1999-BIT"},"content":"        this.localDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"sj1999-BIT"},"content":"        String output \u003d \" (\" + keywords + \": \";","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"sj1999-BIT"},"content":"        for (int i \u003d pos + 1 ;i \u003c data.length; i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"sj1999-BIT"},"content":"            output \u003d output.concat(\" \" + data[i]);","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"sj1999-BIT"},"content":"        return output + \" )\";","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"sj1999-BIT"},"content":"     * modify the task message if done.","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"sj1999-BIT"},"content":"    public void done() {","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"sj1999-BIT"},"content":"        done \u003d done.substring(0, 3) + \"[X] \";","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"sj1999-BIT"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"sj1999-BIT"},"content":"     * Override the original toString method to generate the correct value.","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"sj1999-BIT"},"content":"     * @return String representation of the Task, which is presentable at the terminal.","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"sj1999-BIT"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"sj1999-BIT"},"content":"        return done + finalAction;","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"sj1999-BIT"},"content":"    /////////////////getters////////////////////////","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"sj1999-BIT"},"content":"     * get Task Type","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"sj1999-BIT"},"content":"     * @return Task Type from the enum","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"sj1999-BIT"},"content":"    public TaskTypes getType() {","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"sj1999-BIT"},"content":"        return type;","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"sj1999-BIT"},"content":"     * get isDone of this Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"sj1999-BIT"},"content":"     * @return boolean value of isDone.","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"sj1999-BIT"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"sj1999-BIT"},"content":"        return isDone;","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"sj1999-BIT"},"content":"     * Getter to return the finalAction String of the Task.","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"sj1999-BIT"},"content":"     * @return finalAction.","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"sj1999-BIT"},"content":"    public String getFinalAction() {","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"sj1999-BIT"},"content":"        return finalAction;","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"sj1999-BIT":107}},{"path":"src/main/java/Task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"import Task.TaskTypes;","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"//contains the task list e.g., it has operations to add/delete tasks in the list","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"public class TaskList {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"     * Getter to obtain the TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"     * @return the TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"sj1999-BIT"},"content":"     * function adds a new Task into the taskList if valid.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"     * @param newTask is the newly created Task to be added to the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(\"    \" + newTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.format(\"Now you have %d tasks in the list.\\n\", taskList.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"     * Function adds a new Task into the tempList as a result of find request without","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"     * breaking the encapsulation. So no need to print message.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"     * @param newTask is the newly created Task to be added to the tempList.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"    public void addTaskWithoutMessage(Task newTask) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"     * function removes the task located at the index of the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"     * @param newInput contains information for the Task to be deleted.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"     * @throws Exception if the index provided is not within valid range.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"    public void deleteTask(String[] newInput ) throws Exception{","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"        if (newInput.length \u003c 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"            throw new Exception(\"invalid Syntax for delete instruction\");","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"            int index \u003d Integer.parseInt(newInput[1]);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"            if (index \u003e 0 \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"                System.out.println(\"    \" + taskList.get(index - 1).toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"                taskList.remove(index - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"                System.out.format(\"Now you have %d tasks in the list.\\n\", taskList.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"            } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"                throw new Exception(\"index not within valid range\");","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"sj1999-BIT"},"content":"     * create a message to show all the tasks and their states.","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"sj1999-BIT"},"content":"    public void showList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"sj1999-BIT"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"sj1999-BIT"},"content":"        for (Task action : taskList ) {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"sj1999-BIT"},"content":"            count++;","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.format(\"%d. \" + action + \"\\n\", count);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"sj1999-BIT":69}},{"path":"src/main/java/Task/TaskTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"public enum TaskTypes {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"    Todo,","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"    Deadline,","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"    Events","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"sj1999-BIT":7}},{"path":"src/main/java/Task/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"package Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"public class TodoException extends Exception {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"    public TodoException(String message) {","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"        super(message);","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"sj1999-BIT":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"Todo read","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"Deadline lab /by Mon","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"Events exam /at Tues 2-4pm","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"done 1","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"done 3","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"done 2","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"bye","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sj1999-BIT":8}}]
