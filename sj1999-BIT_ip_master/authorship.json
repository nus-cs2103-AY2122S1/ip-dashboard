[{"path":"Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"Todo Read","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"Deadline s /by Mon","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"sj1999-BIT":2}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"import javax.xml.stream.FactoryConfigurationError;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.File;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"sj1999-BIT"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"sj1999-BIT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"sj1999-BIT"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"sj1999-BIT"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"sj1999-BIT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"sj1999-BIT"},"content":"    private String line \u003d \"__________________________________\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"sj1999-BIT"},"content":"    // global varibale to keep track of all the task","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"sj1999-BIT"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"sj1999-BIT"},"content":"     * Task inner class.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"sj1999-BIT"},"content":"     * Able to keep track of task type, done and date.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"sj1999-BIT"},"content":"    private class Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"sj1999-BIT"},"content":"        private String done;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"sj1999-BIT"},"content":"        private String[] dataOfAction;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"sj1999-BIT"},"content":"        private String finalAction \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"sj1999-BIT"},"content":"        private TaskTypes type;","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"sj1999-BIT"},"content":"        private boolean isDone \u003d false;","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"sj1999-BIT"},"content":"        private LocalDate localDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"sj1999-BIT"},"content":"        /**","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"sj1999-BIT"},"content":"         * constructor for Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"sj1999-BIT"},"content":"         *","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"sj1999-BIT"},"content":"         * @param action","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"sj1999-BIT"},"content":"         */","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"sj1999-BIT"},"content":"        public Task(String action, String done, TaskTypes type) {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"sj1999-BIT"},"content":"            this.done \u003d done;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"sj1999-BIT"},"content":"            this.type \u003d type;","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"sj1999-BIT"},"content":"            dataOfAction \u003d action.split(\"/\")[0].split(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"sj1999-BIT"},"content":"            for (int i \u003d 1; i \u003c dataOfAction.length; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"sj1999-BIT"},"content":"                finalAction +\u003d dataOfAction[i] + \" \";","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"sj1999-BIT"},"content":"            if (action.split(\"/\").length \u003e 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"sj1999-BIT"},"content":"                String day \u003d setDate(action);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"sj1999-BIT"},"content":"                finalAction +\u003d day;","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"sj1999-BIT"},"content":"        /**","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"sj1999-BIT"},"content":"         * Create a tail made up of the deadline.","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"sj1999-BIT"},"content":"         * @param inputs","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"sj1999-BIT"},"content":"         * @return String","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"sj1999-BIT"},"content":"         */","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"sj1999-BIT"},"content":"        private String setDate(String inputs) {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"sj1999-BIT"},"content":"            String[] data \u003d inputs.split(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"sj1999-BIT"},"content":"            int pos \u003d 0;","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"sj1999-BIT"},"content":"            String keywords \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"sj1999-BIT"},"content":"            if (type.equals(TaskTypes.Deadline)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"sj1999-BIT"},"content":"                keywords \u003d \"by\";","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"sj1999-BIT"},"content":"            } else if (type.equals(TaskTypes.Events)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"sj1999-BIT"},"content":"                keywords \u003d \"at\";","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"sj1999-BIT"},"content":"            for (String str : data) {","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"sj1999-BIT"},"content":"                if (str.equals(\"/\" + keywords)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"sj1999-BIT"},"content":"                    break;","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"sj1999-BIT"},"content":"                pos +\u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"sj1999-BIT"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"sj1999-BIT"},"content":"            String date \u003d data[pos + 1];","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"sj1999-BIT"},"content":"            localDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"sj1999-BIT"},"content":"            String output \u003d \" (\" + keywords + \": \";","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"sj1999-BIT"},"content":"            for (int i \u003d pos + 1 ;i \u003c data.length; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"sj1999-BIT"},"content":"                output +\u003d \" \" + data[i];","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"sj1999-BIT"},"content":"            return output + \" )\";","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"sj1999-BIT"},"content":"        /**","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"sj1999-BIT"},"content":"         * modify the task message if done.","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"sj1999-BIT"},"content":"         */","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"sj1999-BIT"},"content":"        public void done() {","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"sj1999-BIT"},"content":"            done \u003d done.substring(0, 3) + \"[X] \";","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"sj1999-BIT"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"sj1999-BIT"},"content":"        /**","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"sj1999-BIT"},"content":"         * Override the original toString method to generate the correct value.","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"sj1999-BIT"},"content":"         * @return String","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"sj1999-BIT"},"content":"         */","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"sj1999-BIT"},"content":"        public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"sj1999-BIT"},"content":"            return done + finalAction;","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"sj1999-BIT"},"content":"        /////////////////getters////////////////////////","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"sj1999-BIT"},"content":"        /**","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"sj1999-BIT"},"content":"         * get Task Type","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"sj1999-BIT"},"content":"         * @return","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"sj1999-BIT"},"content":"         */","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"sj1999-BIT"},"content":"        public TaskTypes getType() {","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"sj1999-BIT"},"content":"            return type;","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"sj1999-BIT"},"content":"        /**","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"sj1999-BIT"},"content":"         * get isDone","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"sj1999-BIT"},"content":"         * @return","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"sj1999-BIT"},"content":"         */","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"sj1999-BIT"},"content":"        public boolean getIsDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"sj1999-BIT"},"content":"            return isDone;","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"sj1999-BIT"},"content":"    private enum TaskTypes {","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"sj1999-BIT"},"content":"        Todo,","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"sj1999-BIT"},"content":"        Deadline,","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"sj1999-BIT"},"content":"        Events","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"sj1999-BIT"},"content":"    private class TodoTasks extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"sj1999-BIT"},"content":"        /**","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"sj1999-BIT"},"content":"         * constructor for Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"sj1999-BIT"},"content":"         *","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"sj1999-BIT"},"content":"         * @param action","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"sj1999-BIT"},"content":"         */","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"sj1999-BIT"},"content":"        public TodoTasks(String action) throws TodoException{","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"sj1999-BIT"},"content":"            super(action, \"[T][] \", TaskTypes.Todo);","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"sj1999-BIT"},"content":"            if (action.split(\" \").length \u003c 2){","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"sj1999-BIT"},"content":"                throw new TodoException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"sj1999-BIT"},"content":"    private class DeadlineTask extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"sj1999-BIT"},"content":"        public TaskTypes type \u003d TaskTypes.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"sj1999-BIT"},"content":"        /**","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"sj1999-BIT"},"content":"         * constructor for Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"sj1999-BIT"},"content":"         *","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"sj1999-BIT"},"content":"         * @param action","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"sj1999-BIT"},"content":"         */","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"sj1999-BIT"},"content":"        public DeadlineTask(String action) throws DeadlineException {","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"sj1999-BIT"},"content":"            super(action, \"[D][] \", TaskTypes.Deadline);","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"sj1999-BIT"},"content":"            if (action.split(\"/\").length \u003c 2) {","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"sj1999-BIT"},"content":"                throw new DeadlineException(\"incorrect format for deadline task\");","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"sj1999-BIT"},"content":"            } else if (action.split(\"/\")[1].split(\" \").length \u003c 2) {","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"sj1999-BIT"},"content":"                throw new DeadlineException(\"incorrect date format for Deadline task\");","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"sj1999-BIT"},"content":"    private class EventsTask extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"sj1999-BIT"},"content":"        /**","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"sj1999-BIT"},"content":"         * constructor for Task.","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"sj1999-BIT"},"content":"         *","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"sj1999-BIT"},"content":"         * @param action","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"sj1999-BIT"},"content":"         */","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"sj1999-BIT"},"content":"        public EventsTask(String action) throws EventsException{","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"sj1999-BIT"},"content":"            super(action, \"[E][] \", TaskTypes.Events);","lastModifiedDate":"2021-08-30"},{"lineNumber":163,"author":{"gitId":"sj1999-BIT"},"content":"            if (action.split(\"/\").length \u003c 2){","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"sj1999-BIT"},"content":"                throw new EventsException(\"incorrect format for Events task\");","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"sj1999-BIT"},"content":"    ////////////exceptions////////////////////////////////////////////","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"sj1999-BIT"},"content":"    private class TodoException extends Exception {","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"sj1999-BIT"},"content":"        public TodoException(String message) {","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"sj1999-BIT"},"content":"            super(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"sj1999-BIT"},"content":"    private class EventsException extends Exception {","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"sj1999-BIT"},"content":"        public EventsException(String message) {","lastModifiedDate":"2021-08-28"},{"lineNumber":177,"author":{"gitId":"sj1999-BIT"},"content":"            super(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":178,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":180,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":181,"author":{"gitId":"sj1999-BIT"},"content":"    private class DeadlineException extends Exception {","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"sj1999-BIT"},"content":"        public DeadlineException(String message) {","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"sj1999-BIT"},"content":"            super(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"sj1999-BIT"},"content":"    ///////////////////////////////////////////////////////////////////","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":188,"author":{"gitId":"sj1999-BIT"},"content":"     * Function able to read the input the judge which Task to use.","lastModifiedDate":"2021-08-28"},{"lineNumber":189,"author":{"gitId":"sj1999-BIT"},"content":"     * @param action","lastModifiedDate":"2021-08-28"},{"lineNumber":190,"author":{"gitId":"sj1999-BIT"},"content":"     * @return","lastModifiedDate":"2021-08-28"},{"lineNumber":191,"author":{"gitId":"sj1999-BIT"},"content":"     * @throws Exception","lastModifiedDate":"2021-08-28"},{"lineNumber":192,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":193,"author":{"gitId":"sj1999-BIT"},"content":"    private Task createTask(String action) throws Exception{","lastModifiedDate":"2021-08-28"},{"lineNumber":194,"author":{"gitId":"sj1999-BIT"},"content":"        // separate using the / as its the point of the date","lastModifiedDate":"2021-08-28"},{"lineNumber":195,"author":{"gitId":"sj1999-BIT"},"content":"        String[] dataOfAction \u003d action.split(\"/\")[0].split(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":196,"author":{"gitId":"sj1999-BIT"},"content":"        String type \u003d dataOfAction[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":197,"author":{"gitId":"sj1999-BIT"},"content":"        //decide the correct header","lastModifiedDate":"2021-08-28"},{"lineNumber":198,"author":{"gitId":"sj1999-BIT"},"content":"        if (type.equals(\"Todo\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":199,"author":{"gitId":"sj1999-BIT"},"content":"            return new TodoTasks(action);","lastModifiedDate":"2021-08-28"},{"lineNumber":200,"author":{"gitId":"sj1999-BIT"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":201,"author":{"gitId":"sj1999-BIT"},"content":"            if (type.equals(\"Deadline\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"sj1999-BIT"},"content":"                return new DeadlineTask(action);","lastModifiedDate":"2021-08-28"},{"lineNumber":203,"author":{"gitId":"sj1999-BIT"},"content":"            } else if  (type.equals(\"Events\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":204,"author":{"gitId":"sj1999-BIT"},"content":"                return new EventsTask(action);","lastModifiedDate":"2021-08-28"},{"lineNumber":205,"author":{"gitId":"sj1999-BIT"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":206,"author":{"gitId":"sj1999-BIT"},"content":"                throw new Exception(\"Error type\");","lastModifiedDate":"2021-08-28"},{"lineNumber":207,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":208,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":209,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":210,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":211,"author":{"gitId":"sj1999-BIT"},"content":"     * Generate the initiate message.","lastModifiedDate":"2021-08-28"},{"lineNumber":212,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":213,"author":{"gitId":"sj1999-BIT"},"content":"    private void greet() {","lastModifiedDate":"2021-08-28"},{"lineNumber":214,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.println(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":220,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.println(logo);","lastModifiedDate":"2021-08-28"},{"lineNumber":221,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.println(\"Hello! I\u0027m Duke\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-28"},{"lineNumber":223,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.println(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":224,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":225,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":226,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":227,"author":{"gitId":"sj1999-BIT"},"content":"     * generate the end message.","lastModifiedDate":"2021-08-28"},{"lineNumber":228,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":229,"author":{"gitId":"sj1999-BIT"},"content":"    private void bye() {","lastModifiedDate":"2021-08-28"},{"lineNumber":230,"author":{"gitId":"sj1999-BIT"},"content":"        String line \u003d \"__________________________________\";","lastModifiedDate":"2021-08-28"},{"lineNumber":231,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":232,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":233,"author":{"gitId":"sj1999-BIT"},"content":"        saveListInFile(\"src/main/java/Duke.txt\");","lastModifiedDate":"2021-08-30"},{"lineNumber":234,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":235,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":236,"author":{"gitId":"sj1999-BIT"},"content":"     * The original method to simply generate an echo message.","lastModifiedDate":"2021-08-28"},{"lineNumber":237,"author":{"gitId":"sj1999-BIT"},"content":"     * Now only meant to decide if the user has decided to end","lastModifiedDate":"2021-08-28"},{"lineNumber":238,"author":{"gitId":"sj1999-BIT"},"content":"     * the program.","lastModifiedDate":"2021-08-28"},{"lineNumber":239,"author":{"gitId":"sj1999-BIT"},"content":"     * @return boolean","lastModifiedDate":"2021-08-28"},{"lineNumber":240,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":241,"author":{"gitId":"sj1999-BIT"},"content":"    private boolean echo() {","lastModifiedDate":"2021-08-28"},{"lineNumber":242,"author":{"gitId":"sj1999-BIT"},"content":"        Scanner user \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":243,"author":{"gitId":"sj1999-BIT"},"content":"        String input \u003d user.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":244,"author":{"gitId":"sj1999-BIT"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":245,"author":{"gitId":"sj1999-BIT"},"content":"            bye();","lastModifiedDate":"2021-08-28"},{"lineNumber":246,"author":{"gitId":"sj1999-BIT"},"content":"            return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":247,"author":{"gitId":"sj1999-BIT"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":248,"author":{"gitId":"sj1999-BIT"},"content":"            return choiceOfAction(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":249,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":250,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":251,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":252,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":253,"author":{"gitId":"sj1999-BIT"},"content":"     * function adds a new Task into the taskList if valid.","lastModifiedDate":"2021-08-28"},{"lineNumber":254,"author":{"gitId":"sj1999-BIT"},"content":"     * @param newTask","lastModifiedDate":"2021-08-28"},{"lineNumber":255,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":256,"author":{"gitId":"sj1999-BIT"},"content":"    private void addTask(Task newTask) {","lastModifiedDate":"2021-08-28"},{"lineNumber":257,"author":{"gitId":"sj1999-BIT"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":258,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":259,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-28"},{"lineNumber":260,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(\"    \" + newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":261,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.format(\"Now you have %d tasks in the list.\\n\", taskList.size());","lastModifiedDate":"2021-08-28"},{"lineNumber":262,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":263,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":264,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":265,"author":{"gitId":"sj1999-BIT"},"content":"     * function removes the task located at the index of the task list.","lastModifiedDate":"2021-08-28"},{"lineNumber":266,"author":{"gitId":"sj1999-BIT"},"content":"     * @param newInput","lastModifiedDate":"2021-08-28"},{"lineNumber":267,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":268,"author":{"gitId":"sj1999-BIT"},"content":"    private void deleteTask(String[] newInput ) throws Exception{","lastModifiedDate":"2021-08-28"},{"lineNumber":269,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":270,"author":{"gitId":"sj1999-BIT"},"content":"        if (newInput.length \u003c 2) {","lastModifiedDate":"2021-08-28"},{"lineNumber":271,"author":{"gitId":"sj1999-BIT"},"content":"            throw new Exception(\"invalid Syntax for delete instruction\");","lastModifiedDate":"2021-08-28"},{"lineNumber":272,"author":{"gitId":"sj1999-BIT"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":273,"author":{"gitId":"sj1999-BIT"},"content":"            int index \u003d Integer.parseInt(newInput[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":274,"author":{"gitId":"sj1999-BIT"},"content":"            if (index \u003e 0 \u0026\u0026 index \u003c\u003d taskList.size()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":275,"author":{"gitId":"sj1999-BIT"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-08-28"},{"lineNumber":276,"author":{"gitId":"sj1999-BIT"},"content":"                System.out.println(\"    \" + taskList.get(index - 1).toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":277,"author":{"gitId":"sj1999-BIT"},"content":"                taskList.remove(index - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":278,"author":{"gitId":"sj1999-BIT"},"content":"                System.out.format(\"Now you have %d tasks in the list.\\n\", taskList.size());","lastModifiedDate":"2021-08-28"},{"lineNumber":279,"author":{"gitId":"sj1999-BIT"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":280,"author":{"gitId":"sj1999-BIT"},"content":"                throw new Exception(\"index not within valid range\");","lastModifiedDate":"2021-08-28"},{"lineNumber":281,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":282,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":283,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":284,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":285,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":286,"author":{"gitId":"sj1999-BIT"},"content":"     * To decide base on the input what is the next action.","lastModifiedDate":"2021-08-28"},{"lineNumber":287,"author":{"gitId":"sj1999-BIT"},"content":"     * The decision on whether to show list, set existing task to","lastModifiedDate":"2021-08-28"},{"lineNumber":288,"author":{"gitId":"sj1999-BIT"},"content":"     * done, or to create and record new task.","lastModifiedDate":"2021-08-28"},{"lineNumber":289,"author":{"gitId":"sj1999-BIT"},"content":"     * @param input","lastModifiedDate":"2021-08-28"},{"lineNumber":290,"author":{"gitId":"sj1999-BIT"},"content":"     * @return boolean","lastModifiedDate":"2021-08-28"},{"lineNumber":291,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":292,"author":{"gitId":"sj1999-BIT"},"content":"    private boolean choiceOfAction(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":293,"author":{"gitId":"sj1999-BIT"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":294,"author":{"gitId":"sj1999-BIT"},"content":"            showList();","lastModifiedDate":"2021-08-28"},{"lineNumber":295,"author":{"gitId":"sj1999-BIT"},"content":"            return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":296,"author":{"gitId":"sj1999-BIT"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":297,"author":{"gitId":"sj1999-BIT"},"content":"            String[] newInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":298,"author":{"gitId":"sj1999-BIT"},"content":"            String instruction \u003d newInput[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":299,"author":{"gitId":"sj1999-BIT"},"content":"            if (instruction.equals(\"done\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":300,"author":{"gitId":"sj1999-BIT"},"content":"                int index \u003d Integer.parseInt(newInput[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":301,"author":{"gitId":"sj1999-BIT"},"content":"                if (index \u003c\u003d taskList.size() \u0026\u0026 index \u003e 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":302,"author":{"gitId":"sj1999-BIT"},"content":"                    taskList.get(index - 1).done();","lastModifiedDate":"2021-08-28"},{"lineNumber":303,"author":{"gitId":"sj1999-BIT"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-30"},{"lineNumber":304,"author":{"gitId":"sj1999-BIT"},"content":"                    System.out.println(\"    \" + this);","lastModifiedDate":"2021-08-30"},{"lineNumber":305,"author":{"gitId":"sj1999-BIT"},"content":"                } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":306,"author":{"gitId":"sj1999-BIT"},"content":"                    System.out.println(\"invalid index\");","lastModifiedDate":"2021-08-28"},{"lineNumber":307,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":308,"author":{"gitId":"sj1999-BIT"},"content":"            } else if (instruction.equals(\"delete\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":309,"author":{"gitId":"sj1999-BIT"},"content":"                try {","lastModifiedDate":"2021-08-28"},{"lineNumber":310,"author":{"gitId":"sj1999-BIT"},"content":"                    deleteTask(newInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":311,"author":{"gitId":"sj1999-BIT"},"content":"                }catch (Exception e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":312,"author":{"gitId":"sj1999-BIT"},"content":"                    System.out.println(e);","lastModifiedDate":"2021-08-28"},{"lineNumber":313,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":314,"author":{"gitId":"sj1999-BIT"},"content":"            }else {","lastModifiedDate":"2021-08-28"},{"lineNumber":315,"author":{"gitId":"sj1999-BIT"},"content":"                try {","lastModifiedDate":"2021-08-28"},{"lineNumber":316,"author":{"gitId":"sj1999-BIT"},"content":"                    Task newTask \u003d createTask(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":317,"author":{"gitId":"sj1999-BIT"},"content":"                    addTask(newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":318,"author":{"gitId":"sj1999-BIT"},"content":"                } catch (TodoException tx) {","lastModifiedDate":"2021-08-28"},{"lineNumber":319,"author":{"gitId":"sj1999-BIT"},"content":"                    System.out.println(tx);","lastModifiedDate":"2021-08-28"},{"lineNumber":320,"author":{"gitId":"sj1999-BIT"},"content":"                }catch (DeadlineException dx) {","lastModifiedDate":"2021-08-28"},{"lineNumber":321,"author":{"gitId":"sj1999-BIT"},"content":"                    System.out.println(dx);","lastModifiedDate":"2021-08-28"},{"lineNumber":322,"author":{"gitId":"sj1999-BIT"},"content":"                }catch (EventsException ex) {","lastModifiedDate":"2021-08-28"},{"lineNumber":323,"author":{"gitId":"sj1999-BIT"},"content":"                    System.out.println(ex);","lastModifiedDate":"2021-08-28"},{"lineNumber":324,"author":{"gitId":"sj1999-BIT"},"content":"                } catch (Exception e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":325,"author":{"gitId":"sj1999-BIT"},"content":"                    System.out.println(e);","lastModifiedDate":"2021-08-28"},{"lineNumber":326,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":328,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.println(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":329,"author":{"gitId":"sj1999-BIT"},"content":"            return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":330,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":331,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":332,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":333,"author":{"gitId":"sj1999-BIT"},"content":"     * create a message to show all the tasks and their states.","lastModifiedDate":"2021-08-28"},{"lineNumber":334,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":335,"author":{"gitId":"sj1999-BIT"},"content":"    private void showList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":336,"author":{"gitId":"sj1999-BIT"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-28"},{"lineNumber":337,"author":{"gitId":"sj1999-BIT"},"content":"        for (Task action : taskList ) {","lastModifiedDate":"2021-08-28"},{"lineNumber":338,"author":{"gitId":"sj1999-BIT"},"content":"            count++;","lastModifiedDate":"2021-08-28"},{"lineNumber":339,"author":{"gitId":"sj1999-BIT"},"content":"            System.out.format(\"%d. \" + action + \"\\n\", count);","lastModifiedDate":"2021-08-28"},{"lineNumber":340,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":341,"author":{"gitId":"sj1999-BIT"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-28"},{"lineNumber":342,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":343,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":344,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":345,"author":{"gitId":"sj1999-BIT"},"content":"     * Function obtain data from previous file records. Creates the file if it\u0027s not present.","lastModifiedDate":"2021-08-30"},{"lineNumber":346,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":347,"author":{"gitId":"sj1999-BIT"},"content":"    private void getDataInputList() {","lastModifiedDate":"2021-08-30"},{"lineNumber":348,"author":{"gitId":"sj1999-BIT"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":349,"author":{"gitId":"sj1999-BIT"},"content":"            File f \u003d new File(\"src/main/java/Duke.txt\");","lastModifiedDate":"2021-08-30"},{"lineNumber":350,"author":{"gitId":"sj1999-BIT"},"content":"            if(!f.exists()){","lastModifiedDate":"2021-08-30"},{"lineNumber":351,"author":{"gitId":"sj1999-BIT"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-30"},{"lineNumber":352,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":353,"author":{"gitId":"sj1999-BIT"},"content":"            FileReader reader \u003d new FileReader(new File(\"src/main/java/Duke.txt\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":354,"author":{"gitId":"sj1999-BIT"},"content":"            BufferedReader br \u003d new BufferedReader(reader);  //creates a buffering character input stream","lastModifiedDate":"2021-08-30"},{"lineNumber":355,"author":{"gitId":"sj1999-BIT"},"content":"            String line;","lastModifiedDate":"2021-08-30"},{"lineNumber":356,"author":{"gitId":"sj1999-BIT"},"content":"            Task curTask;","lastModifiedDate":"2021-08-30"},{"lineNumber":357,"author":{"gitId":"sj1999-BIT"},"content":"            boolean isCurTaskDone \u003d false;","lastModifiedDate":"2021-08-30"},{"lineNumber":358,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":359,"author":{"gitId":"sj1999-BIT"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-30"},{"lineNumber":360,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":361,"author":{"gitId":"sj1999-BIT"},"content":"                String[] data \u003d line.split(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":362,"author":{"gitId":"sj1999-BIT"},"content":"                int lengthLimit \u003d data.length;","lastModifiedDate":"2021-08-30"},{"lineNumber":363,"author":{"gitId":"sj1999-BIT"},"content":"                String taskData \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":364,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":365,"author":{"gitId":"sj1999-BIT"},"content":"                if (data[data.length - 1].equals(\"done\")){","lastModifiedDate":"2021-08-30"},{"lineNumber":366,"author":{"gitId":"sj1999-BIT"},"content":"                    isCurTaskDone \u003d true;","lastModifiedDate":"2021-08-30"},{"lineNumber":367,"author":{"gitId":"sj1999-BIT"},"content":"                    lengthLimit -\u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":368,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":369,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":370,"author":{"gitId":"sj1999-BIT"},"content":"                try {","lastModifiedDate":"2021-08-30"},{"lineNumber":371,"author":{"gitId":"sj1999-BIT"},"content":"                    for (int i \u003d 0; i \u003c lengthLimit; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":372,"author":{"gitId":"sj1999-BIT"},"content":"                        taskData +\u003d data[i] + \" \";","lastModifiedDate":"2021-08-30"},{"lineNumber":373,"author":{"gitId":"sj1999-BIT"},"content":"                    }","lastModifiedDate":"2021-08-30"},{"lineNumber":374,"author":{"gitId":"sj1999-BIT"},"content":"                    curTask \u003d createTask(taskData);","lastModifiedDate":"2021-08-30"},{"lineNumber":375,"author":{"gitId":"sj1999-BIT"},"content":"                    if (isCurTaskDone) {","lastModifiedDate":"2021-08-30"},{"lineNumber":376,"author":{"gitId":"sj1999-BIT"},"content":"                        curTask.done();","lastModifiedDate":"2021-08-30"},{"lineNumber":377,"author":{"gitId":"sj1999-BIT"},"content":"                    }","lastModifiedDate":"2021-08-30"},{"lineNumber":378,"author":{"gitId":"sj1999-BIT"},"content":"                    taskList.add(curTask);","lastModifiedDate":"2021-08-30"},{"lineNumber":379,"author":{"gitId":"sj1999-BIT"},"content":"                } catch (Exception e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":380,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":381,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":382,"author":{"gitId":"sj1999-BIT"},"content":"        }catch (FileNotFoundException f) {","lastModifiedDate":"2021-08-30"},{"lineNumber":383,"author":{"gitId":"sj1999-BIT"},"content":"        }catch(IOException io){","lastModifiedDate":"2021-08-30"},{"lineNumber":384,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":385,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":386,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":387,"author":{"gitId":"sj1999-BIT"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":388,"author":{"gitId":"sj1999-BIT"},"content":"     * Save the current Task in the target file.","lastModifiedDate":"2021-08-30"},{"lineNumber":389,"author":{"gitId":"sj1999-BIT"},"content":"     * @param filename","lastModifiedDate":"2021-08-30"},{"lineNumber":390,"author":{"gitId":"sj1999-BIT"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":391,"author":{"gitId":"sj1999-BIT"},"content":"    private void saveListInFile(String filename) {","lastModifiedDate":"2021-08-30"},{"lineNumber":392,"author":{"gitId":"sj1999-BIT"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":393,"author":{"gitId":"sj1999-BIT"},"content":"            //clear the current data file","lastModifiedDate":"2021-08-30"},{"lineNumber":394,"author":{"gitId":"sj1999-BIT"},"content":"            PrintWriter pw \u003d new PrintWriter(filename);","lastModifiedDate":"2021-08-30"},{"lineNumber":395,"author":{"gitId":"sj1999-BIT"},"content":"            pw.close();","lastModifiedDate":"2021-08-30"},{"lineNumber":396,"author":{"gitId":"sj1999-BIT"},"content":"            //write into the file","lastModifiedDate":"2021-08-30"},{"lineNumber":397,"author":{"gitId":"sj1999-BIT"},"content":"            File tempFile \u003d new File(filename);","lastModifiedDate":"2021-08-30"},{"lineNumber":398,"author":{"gitId":"sj1999-BIT"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(tempFile));","lastModifiedDate":"2021-08-30"},{"lineNumber":399,"author":{"gitId":"sj1999-BIT"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-08-30"},{"lineNumber":400,"author":{"gitId":"sj1999-BIT"},"content":"                writer.write(formatTaskIntoCommands(task));","lastModifiedDate":"2021-08-30"},{"lineNumber":401,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":402,"author":{"gitId":"sj1999-BIT"},"content":"            writer.close();","lastModifiedDate":"2021-08-30"},{"lineNumber":403,"author":{"gitId":"sj1999-BIT"},"content":"        }catch (IOException io) {","lastModifiedDate":"2021-08-30"},{"lineNumber":404,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":405,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":406,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":407,"author":{"gitId":"sj1999-BIT"},"content":"    private String formatTaskIntoCommands(Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":408,"author":{"gitId":"sj1999-BIT"},"content":"        String[] taskInfo \u003d task.toString().split(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":409,"author":{"gitId":"sj1999-BIT"},"content":"        String output;","lastModifiedDate":"2021-08-30"},{"lineNumber":410,"author":{"gitId":"sj1999-BIT"},"content":"        String separator \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":411,"author":{"gitId":"sj1999-BIT"},"content":"        String keyword \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":412,"author":{"gitId":"sj1999-BIT"},"content":"        taskInfo \u003d Arrays.copyOfRange(taskInfo, 1, taskInfo.length);","lastModifiedDate":"2021-08-30"},{"lineNumber":413,"author":{"gitId":"sj1999-BIT"},"content":"        if (task.getType().equals(TaskTypes.Todo)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":414,"author":{"gitId":"sj1999-BIT"},"content":"            output \u003d \"Todo\";","lastModifiedDate":"2021-08-30"},{"lineNumber":415,"author":{"gitId":"sj1999-BIT"},"content":"        } else if (task.getType().equals(TaskTypes.Deadline)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":416,"author":{"gitId":"sj1999-BIT"},"content":"            output \u003d \"Deadline\";","lastModifiedDate":"2021-08-30"},{"lineNumber":417,"author":{"gitId":"sj1999-BIT"},"content":"            separator \u003d \"(by:\";","lastModifiedDate":"2021-08-30"},{"lineNumber":418,"author":{"gitId":"sj1999-BIT"},"content":"            keyword \u003d \"by\";","lastModifiedDate":"2021-08-30"},{"lineNumber":419,"author":{"gitId":"sj1999-BIT"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":420,"author":{"gitId":"sj1999-BIT"},"content":"            output \u003d \"Events\";","lastModifiedDate":"2021-08-30"},{"lineNumber":421,"author":{"gitId":"sj1999-BIT"},"content":"            separator \u003d \"(at:\";","lastModifiedDate":"2021-08-30"},{"lineNumber":422,"author":{"gitId":"sj1999-BIT"},"content":"            keyword \u003d \"at\";","lastModifiedDate":"2021-08-30"},{"lineNumber":423,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":424,"author":{"gitId":"sj1999-BIT"},"content":"        for (String str : taskInfo) {","lastModifiedDate":"2021-08-30"},{"lineNumber":425,"author":{"gitId":"sj1999-BIT"},"content":"            if (!str.equals(\")\") \u0026\u0026 !str.equals(\"\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":426,"author":{"gitId":"sj1999-BIT"},"content":"                if (str.equals(separator)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":427,"author":{"gitId":"sj1999-BIT"},"content":"                    str \u003d \"/\" + keyword;","lastModifiedDate":"2021-08-30"},{"lineNumber":428,"author":{"gitId":"sj1999-BIT"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":429,"author":{"gitId":"sj1999-BIT"},"content":"                output +\u003d \" \" + str;","lastModifiedDate":"2021-08-30"},{"lineNumber":430,"author":{"gitId":"sj1999-BIT"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":431,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":432,"author":{"gitId":"sj1999-BIT"},"content":"        if (task.getIsDone()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":433,"author":{"gitId":"sj1999-BIT"},"content":"            output +\u003d \" done\";","lastModifiedDate":"2021-08-30"},{"lineNumber":434,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":435,"author":{"gitId":"sj1999-BIT"},"content":"        return output + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":436,"author":{"gitId":"sj1999-BIT"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":437,"author":{"gitId":"sj1999-BIT"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":439,"author":{"gitId":"sj1999-BIT"},"content":"        Duke bot \u003d new Duke();","lastModifiedDate":"2021-08-28"},{"lineNumber":440,"author":{"gitId":"sj1999-BIT"},"content":"        bot.greet();","lastModifiedDate":"2021-08-28"},{"lineNumber":441,"author":{"gitId":"sj1999-BIT"},"content":"        boolean end \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":442,"author":{"gitId":"sj1999-BIT"},"content":"        bot.getDataInputList();","lastModifiedDate":"2021-08-30"},{"lineNumber":443,"author":{"gitId":"sj1999-BIT"},"content":"        while (end) {","lastModifiedDate":"2021-08-28"},{"lineNumber":444,"author":{"gitId":"sj1999-BIT"},"content":"            end \u003d bot.echo();","lastModifiedDate":"2021-08-28"},{"lineNumber":445,"author":{"gitId":"sj1999-BIT"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":447,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"sj1999-BIT":438,"-":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sj1999-BIT"},"content":"Todo read","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"sj1999-BIT"},"content":"Deadline lab /by Mon","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"sj1999-BIT"},"content":"Events exam /at Tues 2-4pm","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"sj1999-BIT"},"content":"done 1","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"sj1999-BIT"},"content":"done 3","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"sj1999-BIT"},"content":"done 2","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"sj1999-BIT"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"sj1999-BIT"},"content":"bye","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"sj1999-BIT":8}}]
