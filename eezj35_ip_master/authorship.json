[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"eezj35"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eezj35":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"eezj35"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eezj35":1,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"eezj35"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eezj35"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"eezj35"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"eezj35"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"eezj35"},"content":"    private final StorageList SL;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"eezj35"},"content":"    private static Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eezj35"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eezj35"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"eezj35"},"content":"    private static final int TASK_TODO \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eezj35"},"content":"    private static final int TASK_DEADLINE \u003d 2;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eezj35"},"content":"    private static final int TASK_EVENT \u003d 3;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"eezj35"},"content":"    private static final int ERROR_OUTOFBOUNDS \u003d 4;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"eezj35"},"content":"    private static final int ERROR_UNKNOWN \u003d 5;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eezj35"},"content":"     * Constructor to initialise variables.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eezj35"},"content":"     * @param filePath File path to receive input from and write to.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eezj35"},"content":"     * @throws FileNotFoundException If file is not found.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eezj35"},"content":"    public Duke(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eezj35"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eezj35"},"content":"        ui.greeting();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eezj35"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"eezj35"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eezj35"},"content":"        SL \u003d new StorageList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"eezj35"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"eezj35"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"eezj35"},"content":"            new Duke(\"data/duketest.txt\").run();","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"eezj35"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"eezj35"},"content":"            ui.fileNotFoundMsg();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eezj35"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eezj35"},"content":"     * Executes the program after reading input from file or user.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eezj35"},"content":"    private void run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"eezj35"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"eezj35"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"eezj35"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"eezj35"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"eezj35"},"content":"                if (parser.isDoneCmd(input)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"eezj35"},"content":"                    marking(input);","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"eezj35"},"content":"                } else if (parser.isValidTodo(input)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"eezj35"},"content":"                    if(input.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"eezj35"},"content":"                        throw new DukeException(ui.taskErrorMsg(TASK_TODO));","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"eezj35"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"eezj35"},"content":"                    ToDo todo \u003d new ToDo(parser.getTodoDescription(input));","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"eezj35"},"content":"                    SL.addTask(todo);","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"eezj35"},"content":"                    ui.taskAddedMsg(todo.toString(), SL.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"eezj35"},"content":"                } else if (parser.isValidDeadline(input)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"eezj35"},"content":"                    if (input.length() \u003d\u003d 8) {","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"eezj35"},"content":"                        throw new DukeException(ui.taskErrorMsg(TASK_DEADLINE));","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"eezj35"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"eezj35"},"content":"                    String by \u003d parser.getDeadlineTime(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"eezj35"},"content":"                    Deadline dl \u003d new Deadline(parser.getDeadlineDescription(input), by);","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"eezj35"},"content":"                    SL.addTask(dl);","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"eezj35"},"content":"                    ui.taskAddedMsg(dl.toString(), SL.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"eezj35"},"content":"                } else if (parser.isValidEvent(input)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"eezj35"},"content":"                    if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"eezj35"},"content":"                        throw new DukeException(ui.taskErrorMsg(TASK_EVENT));","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"eezj35"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"eezj35"},"content":"                    String at \u003d parser.getEventTime(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"eezj35"},"content":"                    Event event \u003d new Event(parser.getEventDescription(input), at);","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"eezj35"},"content":"                    SL.addTask(event);","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"eezj35"},"content":"                    ui.taskAddedMsg(event.toString(), SL.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"eezj35"},"content":"                } else if (parser.isDeleteCmd(input)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"eezj35"},"content":"                    if (input.length() \u003d\u003d 6) {","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"eezj35"},"content":"                        throw new DukeException(ui.taskErrorMsg(ERROR_UNKNOWN));","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"eezj35"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"eezj35"},"content":"                    int idx \u003d parser.getDeleteIdx(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"eezj35"},"content":"                    SL.delete(idx);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"eezj35"},"content":"                } else if (parser.isFindCmd(input)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"eezj35"},"content":"                    if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"eezj35"},"content":"                        throw new DukeException(ui.taskErrorMsg(ERROR_UNKNOWN));","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"eezj35"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"eezj35"},"content":"                    String keyword \u003d input.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"eezj35"},"content":"                    SL.findAndPrint(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"eezj35"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"eezj35"},"content":"                    Task task \u003d new Task(input);","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"eezj35"},"content":"                    String desc \u003d task.getDescription();","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"eezj35"},"content":"                    switch (desc) {","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"eezj35"},"content":"                    case \"bye\":","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"eezj35"},"content":"                        ui.bye();","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"eezj35"},"content":"                        return;","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"eezj35"},"content":"                    case \"list\":","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"eezj35"},"content":"                        ui.displayListContents(SL);","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"eezj35"},"content":"                        break;","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"eezj35"},"content":"                    default:","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"eezj35"},"content":"                        throw new DukeException(ui.taskErrorMsg(ERROR_UNKNOWN));","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"eezj35"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"eezj35"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":115,"author":{"gitId":"eezj35"},"content":"                storage.save(SL);","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"eezj35"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":117,"author":{"gitId":"eezj35"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"eezj35"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"eezj35"},"content":"                ui.ioErrorMsg();","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"eezj35"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"eezj35"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":125,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"eezj35"},"content":"     * Marks tasks as done, and prints out relevant messages.","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"eezj35"},"content":"     * @param input The user input to be processed.","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"eezj35"},"content":"     * @throws DukeException If task index to be marked is not valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"eezj35"},"content":"    public void marking(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"eezj35"},"content":"        if (input.length() \u003e\u003d 6) {","lastModifiedDate":"2021-08-16"},{"lineNumber":133,"author":{"gitId":"eezj35"},"content":"            if (parser.isIntegerToBeMarked(input)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"eezj35"},"content":"                int taskNum \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"eezj35"},"content":"                if (taskNum \u003c SL.size() \u0026\u0026 taskNum \u003e\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"eezj35"},"content":"                    SL.get(taskNum).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"eezj35"},"content":"                    ui.taskDoneConfirmation();","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"eezj35"},"content":"                    SL.get(taskNum).displayTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"eezj35"},"content":"                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":140,"author":{"gitId":"eezj35"},"content":"                    throw new DukeException(ui.taskErrorMsg(ERROR_OUTOFBOUNDS));","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"eezj35"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"eezj35"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":143,"author":{"gitId":"eezj35"},"content":"                throw new DukeException(ui.taskErrorMsg(ERROR_UNKNOWN));","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"eezj35"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":145,"author":{"gitId":"eezj35"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":146,"author":{"gitId":"eezj35"},"content":"            throw new DukeException(ui.taskErrorMsg(ERROR_UNKNOWN));","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"eezj35"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"eezj35":146,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eezj35"},"content":"    public DukeException(){","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"eezj35"},"content":"        super();","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"eezj35"},"content":"    public DukeException(String message){","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"eezj35"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"eezj35":13}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eezj35"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"eezj35"},"content":"    public Parser() {}","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eezj35"},"content":"     * Checks if input is a done command.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eezj35"},"content":"     * @param input User command.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eezj35"},"content":"     * @return Whether input is a done command.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eezj35"},"content":"    public boolean isDoneCmd(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eezj35"},"content":"        return input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"done\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eezj35"},"content":"     * Checks if input is a valid todo command.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eezj35"},"content":"     * @param input User command.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eezj35"},"content":"     * @return Whether input is a valid todo command.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eezj35"},"content":"    public boolean isValidTodo(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eezj35"},"content":"        return input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"todo\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eezj35"},"content":"     * Retrieves description of todo command","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eezj35"},"content":"     * @param input User command.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eezj35"},"content":"     * @return Todo description.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eezj35"},"content":"    public String getTodoDescription(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eezj35"},"content":"        return input.substring(5);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eezj35"},"content":"     * Checks if input is a valid deadline command.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eezj35"},"content":"     * @param input User command.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eezj35"},"content":"     * @return Whether input is a valid deadline command.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eezj35"},"content":"    public boolean isValidDeadline(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eezj35"},"content":"        return input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"eezj35"},"content":"     * Retrieves description of deadline command","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eezj35"},"content":"     * @param input User command.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eezj35"},"content":"     * @return Deadline description.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"eezj35"},"content":"    public String getDeadlineDescription(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"eezj35"},"content":"        return input.substring(9, input.indexOf(\"/\") - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"eezj35"},"content":"     * Checks if input is a valid event command.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"eezj35"},"content":"     * @param input User command.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"eezj35"},"content":"     * @return Whether input is a valid event command.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eezj35"},"content":"    public boolean isValidEvent(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"eezj35"},"content":"        return input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"eezj35"},"content":"     * Retrieves description of event command","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"eezj35"},"content":"     * @param input User command.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"eezj35"},"content":"     * @return Event description.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eezj35"},"content":"    public String getEventDescription(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"eezj35"},"content":"        return input.substring(6, input.indexOf(\"/\") - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"eezj35"},"content":"     * Checks if input is a delete command.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"eezj35"},"content":"     * @param input User command.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"eezj35"},"content":"     * @return Whether input is a delete command.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"eezj35"},"content":"    public boolean isDeleteCmd(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"eezj35"},"content":"        return input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"delete\");","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"eezj35"},"content":"     * Returns the deadline associated with the deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"eezj35"},"content":"     * @param input User command.","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"eezj35"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"eezj35"},"content":"    public String getDeadlineTime(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"eezj35"},"content":"        return input.substring(input.indexOf(\"/\") + 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"eezj35"},"content":"     * Returns the event date and time associated with the event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"eezj35"},"content":"     * @param input User command.","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"eezj35"},"content":"     * @return The event date and time of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"eezj35"},"content":"    public String getEventTime(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"eezj35"},"content":"        return input.substring(input.indexOf(\"/\") + 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"eezj35"},"content":"     * Returns the index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"eezj35"},"content":"     * @param input User command.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"eezj35"},"content":"     * @return The delete index.","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"eezj35"},"content":"    public int getDeleteIdx(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"eezj35"},"content":"        return Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"eezj35"},"content":"     * Checks whether a done command has a valid index.","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"eezj35"},"content":"     * @param input Done command.","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"eezj35"},"content":"     * @return Whether index is valid integer.","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"eezj35"},"content":"    public boolean isIntegerToBeMarked(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"eezj35"},"content":"        return input.substring(5).matches(\"[0-9]+\");","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"eezj35"},"content":"     * Parses the event/deadline time of an input.","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"eezj35"},"content":"     * @param time The event time/deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"eezj35"},"content":"     * @return A LocalDateTime object holding the time information.","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"eezj35"},"content":"    public LocalDateTime parseLocalDateTime(String time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"eezj35"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"eezj35"},"content":"        if (time.substring(0, 1).matches(\"[0-9]+\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"eezj35"},"content":"            DateTimeFormatter anotherDtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"eezj35"},"content":"            return LocalDateTime.parse(time, anotherDtf);","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"eezj35"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"eezj35"},"content":"            return LocalDateTime.parse(time, dtf);","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"eezj35"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"eezj35"},"content":"    public boolean isFindCmd(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"eezj35"},"content":"        return input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"find\");","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"eezj35"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"eezj35":149}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"eezj35"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eezj35"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"eezj35"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eezj35"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"eezj35"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"eezj35"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"eezj35"},"content":"    private String filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"eezj35"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eezj35"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eezj35"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eezj35"},"content":"    public File load() throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"eezj35"},"content":"        File file \u003d new File(filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"eezj35"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eezj35"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eezj35"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eezj35"},"content":"        ui.fileConfirmation();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eezj35"},"content":"        return file;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"eezj35"},"content":"    public void save(StorageList storageList) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"eezj35"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"eezj35"},"content":"        String textToAdd \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eezj35"},"content":"        for (int i \u003d 0; i \u003c storageList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eezj35"},"content":"            Task task \u003d storageList.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eezj35"},"content":"            String taskType \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eezj35"},"content":"            String status \u003d task.isDone() ? \"1 \" : \"0 \";","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eezj35"},"content":"            String taskDesc \u003d task.getDescription();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eezj35"},"content":"            String taskTime \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"eezj35"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"eezj35"},"content":"                taskType \u003d \"T \";","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"eezj35"},"content":"                textToAdd +\u003d taskType + \"| \" + status + \"| \" + taskDesc + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"eezj35"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"eezj35"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"eezj35"},"content":"                    taskType \u003d \"D \";","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"eezj35"},"content":"                    taskTime \u003d ((Deadline) task).getBy();","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"eezj35"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"eezj35"},"content":"                    taskType \u003d \"E \";","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"eezj35"},"content":"                    taskTime \u003d ((Event) task).getAt();","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"eezj35"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eezj35"},"content":"                textToAdd +\u003d taskType + \"| \" + status + \"| \" + taskDesc + \" | \" + taskTime + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eezj35"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"eezj35"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"eezj35"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"eezj35"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"eezj35"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"eezj35":59}},{"path":"src/main/java/duke/StorageList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"eezj35"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eezj35"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"eezj35"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eezj35"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"eezj35"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"eezj35"},"content":"public class StorageList {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"eezj35"},"content":"    private final ArrayList\u003cTask\u003e storageList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"eezj35"},"content":"    private File file;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eezj35"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"eezj35"},"content":"    public StorageList(File file) throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eezj35"},"content":"        this.file \u003d file;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eezj35"},"content":"        readFile(new Scanner(file));","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"eezj35"},"content":"    private void readFile(Scanner sc) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eezj35"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eezj35"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eezj35"},"content":"            char type \u003d input.charAt(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eezj35"},"content":"            int doneState \u003d Integer.parseInt(input.substring(4, 5));","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"eezj35"},"content":"            if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"eezj35"},"content":"                String taskDesc \u003d input.substring(8);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"eezj35"},"content":"                ToDo todo \u003d new ToDo(taskDesc);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"eezj35"},"content":"                if (doneState \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eezj35"},"content":"                    todo.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eezj35"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eezj35"},"content":"                storageList.add(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"eezj35"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eezj35"},"content":"                int thirdBarIdx \u003d input.indexOf(\u0027|\u0027, 7);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"eezj35"},"content":"                String taskDesc \u003d input.substring(8, thirdBarIdx - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"eezj35"},"content":"                String taskTime \u003d input.substring(thirdBarIdx + 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"eezj35"},"content":"                if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"eezj35"},"content":"                    Deadline dl \u003d new Deadline(taskDesc, taskTime);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"eezj35"},"content":"                    if (doneState \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"eezj35"},"content":"                        dl.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eezj35"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eezj35"},"content":"                    storageList.add(dl);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"eezj35"},"content":"                } else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eezj35"},"content":"                    Event event \u003d new Event(taskDesc, taskTime);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"eezj35"},"content":"                    if(doneState \u003d\u003d 1){","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"eezj35"},"content":"                        event.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"eezj35"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"eezj35"},"content":"                    storageList.add(event);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"eezj35"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"eezj35"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"eezj35"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"eezj35"},"content":"     * Adds a task to the storage list/task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"eezj35"},"content":"     * @param task","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eezj35"},"content":"    public void addTask(Task task){","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"eezj35"},"content":"        storageList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"eezj35"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"eezj35"},"content":"     * @param idx Index of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"eezj35"},"content":"     * @return The task at index i.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eezj35"},"content":"    public Task get(int idx){","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"eezj35"},"content":"        return storageList.get(idx);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"eezj35"},"content":"     * Returns the size of the storage list.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"eezj35"},"content":"     * @return The size of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"eezj35"},"content":"    public int size(){","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"eezj35"},"content":"        return storageList.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"eezj35"},"content":"     * Deletes a task from the specified index in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"eezj35"},"content":"     * @param idx The index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"eezj35"},"content":"    public void delete(int idx) {","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"eezj35"},"content":"        String desc \u003d storageList.get(idx).getDescription();","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"eezj35"},"content":"        storageList.remove(idx);","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"eezj35"},"content":"        ui.taskDeleteMsg(desc, storageList.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"eezj35"},"content":"    public void findAndPrint(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"eezj35"},"content":"        int size \u003d storageList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"eezj35"},"content":"        int itemNumber \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"eezj35"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"eezj35"},"content":"            Task task \u003d storageList.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"eezj35"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"eezj35"},"content":"                System.out.println(\"        \" + itemNumber + \".\" + task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"eezj35"},"content":"                itemNumber++;","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"eezj35"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"eezj35"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"eezj35"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"eezj35":113}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eezj35"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"eezj35"},"content":"    public Ui() {}","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"     * Prints out farewell message.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eezj35"},"content":"    public void bye() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eezj35"},"content":"     * Prints out greeting message.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eezj35"},"content":"    public void greeting() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eezj35"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eezj35"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"eezj35"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"eezj35"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eezj35"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"Hello I am\\n\" + logo);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eezj35"},"content":"     * Prints a message to confirm that Duke has read the given file.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eezj35"},"content":"    public void fileConfirmation() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"I have received your file! Added tasks!\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eezj35"},"content":"     * Prints a message to warn users that Duke cannot find the given file.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"eezj35"},"content":"    public void fileNotFoundMsg() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"I am unable to find your file. \"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eezj35"},"content":"                + \"Check that your \u0027duketest\u0027 file exists,\"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eezj35"},"content":"                + \" or that your \u0027data\u0027 folder exists.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"eezj35"},"content":"     * Prints a message to warn users of an unknown error.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eezj35"},"content":"    public void ioErrorMsg() {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"Something went wrong!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eezj35"},"content":"     * Prints a message to confirm that a task has been added to the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eezj35"},"content":"     * @param desc The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"eezj35"},"content":"     * @param size The size of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"eezj35"},"content":"    public void taskAddedMsg(String desc, int size) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"        \" + desc);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"    Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"eezj35"},"content":"     * Prints a message to confirm that a task has been deleted from the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eezj35"},"content":"     * @param desc The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"eezj35"},"content":"     * @param size The size of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"eezj35"},"content":"    public void taskDeleteMsg(String desc, int size) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"        \" + desc);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"    Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eezj35"},"content":"     * Prints a message to confirm that a task has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"eezj35"},"content":"    public void taskDoneConfirmation() {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"eezj35"},"content":"     * Prints various error messages for various error events.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"eezj35"},"content":"     * @param caseNumber The case number.","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"eezj35"},"content":"     * @return The error message relevant to the problem.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"eezj35"},"content":"    public String taskErrorMsg(int caseNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"eezj35"},"content":"        switch (caseNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"eezj35"},"content":"        case 1:","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"eezj35"},"content":"            return \"   ☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"eezj35"},"content":"        case 2:","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"eezj35"},"content":"            return \"   ☹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"eezj35"},"content":"        case 3:","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"eezj35"},"content":"            return \"   ☹ OOPS!!! The description of an event cannot be empty.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"eezj35"},"content":"        case 4:","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"eezj35"},"content":"            return \"   ☹ OOPS!!! index out of bounds\";","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"eezj35"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"eezj35"},"content":"            return \"   ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"eezj35"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"eezj35"},"content":"     * Prints out all the tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"eezj35"},"content":"     * @param storageList The list storing all the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"eezj35"},"content":"    public void displayListContents(StorageList storageList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"eezj35"},"content":"        for (int i \u003d 0; i \u003c storageList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"eezj35"},"content":"            int num \u003d i + 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"eezj35"},"content":"            Task task \u003d storageList.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"eezj35"},"content":"            System.out.println(\"        \" + num + \".\" + task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"eezj35"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"eezj35"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"eezj35":117}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eezj35"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"eezj35"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"eezj35"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"eezj35"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"    protected LocalDateTime localDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"eezj35"},"content":"    private DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"eezj35"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"eezj35"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"eezj35"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eezj35"},"content":"     * Returns the deadline of the deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eezj35"},"content":"     * @return The deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eezj35"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"eezj35"},"content":"        return by;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eezj35"},"content":"     * Returns the formatted string representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eezj35"},"content":"     * @return String representation of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eezj35"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"eezj35"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"eezj35"},"content":"        localDateTime \u003d new Parser().parseLocalDateTime(by);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eezj35"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + localDateTime.format(dateTimeFormatter) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eezj35"},"content":"     * Prints out deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eezj35"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"eezj35"},"content":"    public void displayTask(){","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"        \" + toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"eezj35"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"eezj35":47}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eezj35"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"eezj35"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"eezj35"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"eezj35"},"content":"    protected String at;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"    protected LocalDateTime localDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"eezj35"},"content":"    private DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"eezj35"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"eezj35"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"eezj35"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eezj35"},"content":"     * Returns the event\u0027s date and time","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eezj35"},"content":"     * @return The event date and time.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eezj35"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"eezj35"},"content":"        return at;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eezj35"},"content":"     * Returns the formatted string representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eezj35"},"content":"     * @return String representation of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eezj35"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"eezj35"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"eezj35"},"content":"        localDateTime \u003d new Parser().parseLocalDateTime(at);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eezj35"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + localDateTime.format(dateTimeFormatter) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eezj35"},"content":"     * Prints out event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eezj35"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"eezj35"},"content":"    public void displayTask() {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"        \" + toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"eezj35"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"eezj35":46}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"eezj35"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"eezj35"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"eezj35"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"eezj35"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"eezj35"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"eezj35"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"eezj35"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"eezj35"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"eezj35"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"eezj35"},"content":"        return description;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"eezj35"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"eezj35"},"content":"        return isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"eezj35"},"content":"    public String toString(){","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"eezj35"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"eezj35"},"content":"    public void displayTask() {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"        \" + toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"eezj35"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"eezj35":35}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"eezj35"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"eezj35"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"     * Returns the formatted string representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eezj35"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eezj35"},"content":"     * @return String representation of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eezj35"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"eezj35"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"eezj35"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"eezj35"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eezj35"},"content":"     * Prints out todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eezj35"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eezj35"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"eezj35"},"content":"    public void displayTask() {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"eezj35"},"content":"        System.out.println(\"        \" + toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"eezj35"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"eezj35":26}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eezj35"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"eezj35"},"content":"public class EventTest {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"eezj35"},"content":"    public void testGetAt() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"eezj35"},"content":"        String input \u003d \"event project meeting /at Aug 20 2020 18:00\";","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"eezj35"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"eezj35"},"content":"        String time \u003d parser.getEventTime(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"eezj35"},"content":"        String desc \u003d parser.getEventDescription(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eezj35"},"content":"        Event event \u003d new Event(desc, time);","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"eezj35"},"content":"        assertEquals(\"Aug 20 2020 18:00\", event.getAt());","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eezj35"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eezj35"},"content":"    public void testToString(){","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"eezj35"},"content":"        String input \u003d \"event project meeting /at Aug 20 2020 18:00\";","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"eezj35"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eezj35"},"content":"        String time \u003d parser.getEventTime(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eezj35"},"content":"        String desc \u003d parser.getEventDescription(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eezj35"},"content":"        Event event \u003d new Event(desc, time);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"eezj35"},"content":"        assertEquals(\"[E][ ] project meeting (at: Aug 20 2020 18:00)\", event.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"eezj35"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"eezj35"},"content":"    public void testIsDone(){","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"eezj35"},"content":"        String input \u003d \"event project meeting /at Aug 20 2020 18:00\";","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eezj35"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eezj35"},"content":"        String time \u003d parser.getEventTime(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eezj35"},"content":"        String desc \u003d parser.getEventDescription(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eezj35"},"content":"        Event event \u003d new Event(desc, time);","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"eezj35"},"content":"        assertEquals(false, event.isDone());","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"eezj35"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"eezj35":40}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eezj35"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"eezj35"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eezj35"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"eezj35"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"eezj35"},"content":"    public void testIsValidTodo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"eezj35"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"eezj35"},"content":"        String input \u003d \"todo read book\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"eezj35"},"content":"        assertEquals(true, parser.isValidTodo(input));","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eezj35"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eezj35"},"content":"    public void testGetDeadlineDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eezj35"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eezj35"},"content":"        String input \u003d \"deadline return book /by Aug 20 2020 18:00\";","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"eezj35"},"content":"        assertEquals(\"return book\", parser.getDeadlineDescription(input));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eezj35"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eezj35"},"content":"    public void testGetEventTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eezj35"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eezj35"},"content":"        String input \u003d \"event project meeting /at Aug 20 2020 18:00\";","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eezj35"},"content":"        assertEquals(\"Aug 20 2020 18:00\", parser.getEventTime(input));","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"eezj35"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eezj35"},"content":"    public void testparseLocalDateTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eezj35"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eezj35"},"content":"        String input \u003d \"2020-10-25 18:00\";","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eezj35"},"content":"        assertEquals(\"2020-10-25T18:00\", parser.parseLocalDateTime(input).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eezj35"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eezj35"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eezj35"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"eezj35":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eezj35"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"eezj35"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"eezj35"},"content":"deadline return book /by Aug 20 2020 18:00","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eezj35"},"content":"event project meeting /at Aug 20 2020 18:00","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"eezj35":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"eezj35"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"eezj35"},"content":"java -classpath ..\\bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"eezj35":2,"-":19}}]
