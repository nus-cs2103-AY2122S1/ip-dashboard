[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lwlshawn":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"This is the user guide for Frosty! The (slightly) Christmas themed task manager that is happy to assist you.","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"### Adding tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"The application allows you to add the following types of tasks:","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"* Todo ","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"* Deadline ","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"* Event","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"Deadline and Event tasks have an added functionality of allowing you to add a date.","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"### Saving tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"You can input a save command into the application to save your list for future use!","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"If saved data is found, your previous session will be loaded into the application automatically.","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"### Other task related utilities:","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"The application also comes with the following list of helpful functions to aid you in managing your tasks:","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"1. Finding tasks related to a keyword","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"2. Deleting tasks from the list","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"3. Update the date/label of a task conveniently","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"To close the application, simply click on the X at the top right-hand! Below, the ","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"various other functions supported are demonstrated; so the expected outcome reflects","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"what should happen if you sequentially key in all the commands under \"example usage\"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"below.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"### `todo` - Adds a Todo task to the list","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"`todo check giftlist`","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"  [T][] check giftlist","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"### `deadline` - Adds a Deadline task to the list","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"`deadline make gifts /by 2020-12-20`","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"  [D][] make gifts (by: Dec 20 2020)","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"### `event` - Adds a Event task to the list","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"lwlshawn"},"content":"`event train raindeers to fly /at 2020-12-01`","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"lwlshawn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"lwlshawn"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"lwlshawn"},"content":"  [E][] train raindeers to fly (at: Dec 1 2020)","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"lwlshawn"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"lwlshawn"},"content":"### `list` - Displays the current list of tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"lwlshawn"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"lwlshawn"},"content":"`list`","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"lwlshawn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"lwlshawn"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"lwlshawn"},"content":"[T][] check giftlist","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"[D][] make gifts (by: Dec 20 2020)","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"lwlshawn"},"content":"[E][] train raindeers to fly (at: Dec 1 2020)","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"lwlshawn"},"content":"### `done` - Marks a task as done","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"lwlshawn"},"content":"`done 1`","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"lwlshawn"},"content":"The relevant task in the list will have its checkbox marked with an X","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"lwlshawn"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"lwlshawn"},"content":"[T][X] check giftlist","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"lwlshawn"},"content":"### `save` - Saves tasklist for future sessions","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"lwlshawn"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"lwlshawn"},"content":"`save`","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"lwlshawn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"lwlshawn"},"content":"Your list has been saved!","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"lwlshawn"},"content":"### `find` - Searches for tasks related to given prompt","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"lwlshawn"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"lwlshawn"},"content":"`find gift`","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"lwlshawn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"lwlshawn"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"lwlshawn"},"content":"[T][X] check giftlist","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"lwlshawn"},"content":"[D][] make gifts (by: Dec 20 2020)","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"lwlshawn"},"content":"### `delete` - Deletes a task from the list","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"lwlshawn"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"lwlshawn"},"content":"`delete 3`","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"lwlshawn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"lwlshawn"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"lwlshawn"},"content":"  [E][] train raindeers to fly (at: Dec 1 2020)","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"lwlshawn"},"content":"Now you have 2 tasks in the lsit.","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"lwlshawn"},"content":"### `update` - Update either the label or date of a task","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"lwlshawn"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":154,"author":{"gitId":"lwlshawn"},"content":"`update 1 create giftlist`","lastModifiedDate":"2021-09-16"},{"lineNumber":155,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"lwlshawn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"lwlshawn"},"content":"I\u0027ve updated your selected task to: ","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"lwlshawn"},"content":"  [T][] create giftlist","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"lwlshawn"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":162,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"lwlshawn"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":164,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":165,"author":{"gitId":"lwlshawn"},"content":"`update date 2 2021-12-10`","lastModifiedDate":"2021-09-16"},{"lineNumber":166,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":167,"author":{"gitId":"lwlshawn"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":170,"author":{"gitId":"lwlshawn"},"content":"I\u0027ve updated your selected task to:","lastModifiedDate":"2021-09-16"},{"lineNumber":171,"author":{"gitId":"lwlshawn"},"content":"  [D][] make gifts (by: Dec 20 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"lwlshawn":147,"-":25}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"        db.flip();","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"lwlshawn":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":" * Class containing main() method. Exception handling and highest level of program logic is implemented here.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"public class Duke {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    private static TaskList tasklist;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"    private static Ui ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"    private static Storage storage;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"     * Starts application and loads data if it exists. Saved data filename and location is","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"     * hardcoded in this implementation and data folder will be created if none is found.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    public Duke() {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"        storage \u003d new Storage(\"frosty.txt\", ui);","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"            tasklist \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"     * Returns response from the chat application given users input.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"     * @param input input from the user","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"     * @return String to be displayed to the user","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"            response \u003d c.execute(tasklist, ui, storage);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"            return ui.notifyError(e);","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"            return ui.notifyIndexOutOfBounds();","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"            return ui.notifyImproperIndex();","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"            return ui.notifyImproperDateTime();","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"        return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lwlshawn":51,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":" * Used for error handling in application","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"    public DukeException(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"lwlshawn":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"lwlshawn":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"lwlshawn":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/elf.jpg\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Frosty.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"     * Initialisation method that displays welcome message to user.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"                DialogBox.getDukeDialog(ui.init(), dukeImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"lwlshawn":59}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import duke.command.MarkDoneCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"import duke.command.SaveCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import duke.command.UpdateCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":" * Class responsible for parsing and understanding user input.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"public abstract class Parser {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    private static void checkDescription(String[] in) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"        if (in.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"            throw new DukeException(\"command is incorrect or incomplete\");","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    //needed to rebuild label in case it contained spaces and was split","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    //takes in array and index, re-combines all strings from index onwards into a single string","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    private static String generateLabelFrom(String[] words, int index) {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        String[] secondOnwards \u003d Arrays.copyOfRange(words, index, words.length);","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        return String.join(\" \", secondOnwards);","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    //valid command will have the form","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    //\"deadline {label} /by YYYY-mm-dd\" OR \"event {label} /at YYYY-mm-dd\"","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"    //function returns String[] array [label, date]","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    private static String[] processLabelAndDate(String[] words) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"        String originalInput \u003d String.join(\" \", words);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        String[] temp \u003d originalInput.split(\"/\", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        String[] typeAndLabel \u003d temp[0].split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"        String[] prefixAndDate \u003d temp[1].split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        checkDescription(typeAndLabel);","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"        checkDescription(prefixAndDate);","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"        String label \u003d generateLabelFrom(typeAndLabel, 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"        String date \u003d prefixAndDate[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"        return new String[]{label, date};","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"    //valid command will have the form:","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"    //update [index] [new description] (new description can be omitted, in which case \"\" is used) OR","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"    //update date [index] [new date]","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"    private static UpdateCommand parseUpdateCommand(String[] words) {","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"        if (words[1].equals(\"date\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"            return new UpdateCommand(Integer.parseInt(words[2]) - 1, LocalDate.parse(words[3]));","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"            return new UpdateCommand(Integer.parseInt(words[1]) - 1, generateLabelFrom(words, 2));","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"     * Takes in a String representing user input, and parses it, producing the appropriate Command.","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"     * @param in is a String representing user input.","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"     * @return Command to be executed by the application.","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"     * @throws DukeException if the user\u0027s input is missing a description or is incorrect.","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"lwlshawn"},"content":"     * @throws IndexOutOfBoundsException if the user\u0027s command gives a index that is out of bounds.","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"lwlshawn"},"content":"     * @throws NumberFormatException if the user\u0027s command has an index that the application does not understand.","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"lwlshawn"},"content":"     * @throws DateTimeParseException if the user\u0027s command has a date that does not match \"yyyy-mm-dd\" format.","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"lwlshawn"},"content":"    public static Command parse(String in) throws DukeException, IndexOutOfBoundsException,","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"lwlshawn"},"content":"            NumberFormatException, DateTimeParseException {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"lwlshawn"},"content":"        String[] words \u003d in.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"lwlshawn"},"content":"        //control block for single word commands","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"lwlshawn"},"content":"        switch(words[0]) {","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"lwlshawn"},"content":"        case \"list\":","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"lwlshawn"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"lwlshawn"},"content":"        case \"done\":","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"lwlshawn"},"content":"            return new MarkDoneCommand(Integer.parseInt(words[1]) - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"lwlshawn"},"content":"        case \"save\":","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"lwlshawn"},"content":"            return new SaveCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"lwlshawn"},"content":"            //fallthrough is intentional","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"lwlshawn"},"content":"        //control block for multi word commands","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"lwlshawn"},"content":"        //function call is a guard block. Command should have more than one word to reach this point.","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"lwlshawn"},"content":"        checkDescription(words);","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"lwlshawn"},"content":"        switch(words[0]) {","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"lwlshawn"},"content":"        case \"find\":","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"lwlshawn"},"content":"            return new FindCommand(generateLabelFrom(words, 1));","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"lwlshawn"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"lwlshawn"},"content":"            return new DeleteCommand(Integer.parseInt(words[1]) - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"lwlshawn"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"lwlshawn"},"content":"            return new AddCommand(\"todo\", generateLabelFrom(words, 1));","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"lwlshawn"},"content":"        case \"update\":","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"lwlshawn"},"content":"            return parseUpdateCommand(words);","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"lwlshawn"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"lwlshawn"},"content":"            String[] deadlineLabelAndDate \u003d processLabelAndDate(words);","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"lwlshawn"},"content":"            String deadlineLabel \u003d deadlineLabelAndDate[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"lwlshawn"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(deadlineLabelAndDate[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"lwlshawn"},"content":"            return new AddCommand(\"deadline\", deadlineLabel, deadlineDate);","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"lwlshawn"},"content":"        case \"event\":","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"lwlshawn"},"content":"            String[] eventLabelAndDate \u003d processLabelAndDate(words);","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"lwlshawn"},"content":"            String eventLabel \u003d eventLabelAndDate[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"lwlshawn"},"content":"            LocalDate eventDate \u003d LocalDate.parse(eventLabelAndDate[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"lwlshawn"},"content":"            return new AddCommand(\"event\", eventLabel, eventDate);","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"lwlshawn"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"lwlshawn"},"content":"            throw new DukeException(\"command is incorrect or incomplete\");","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"lwlshawn":126}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import java.io.File;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import java.nio.file.FileSystems;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":" * Class responsible for saving and loading the data at the start and end of application runs.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"public class Storage {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    private BufferedWriter writer;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    private BufferedReader reader;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    private Path path;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"     * Initialises a storage object, that will create a data directory in the source directory if it does not exist.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"     * Currently fileName represents where the data is to be saved, and it is hard-coded in Duke.java.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"     * @param fileName is the file the application will write to, in the data folder.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    public Storage (String fileName, Ui ui) {","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"        path \u003d FileSystems.getDefault().getPath(\"data\", fileName);","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        if (directory.mkdir()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"            ui.notifyFolderCreated();","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"            ui.notifyFolderFound();","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"     * Loads located saved data if it exists, and parses it to create a TaskList representing the saved sessions data.","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"     * @return a list of tasks saved from previous session.","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"     * @throws IOException if initialising the reader fails, or reading from the save data causes an error.","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"     * @throws DukeException if the saved data has a format that is not recognised.","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"        ArrayList\u003cTask\u003e loadedData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"        reader \u003d Files.newBufferedReader(path, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"        String data \u003d reader.readLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"        if (data \u003d\u003d null) {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"            return loadedData;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"            while (data !\u003d null) {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"                loadedData.add(formatForLoad(data));","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"                data \u003d reader.readLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"        return loadedData;","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"     * Saves the tasklist from the current session in a text file in the data directory.","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"     * @param tasklist contains the tasks from the current session.","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"lwlshawn"},"content":"     * @throws IOException if writing to the text file fails, or initialising the writer fails.","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"lwlshawn"},"content":"    public void save(TaskList tasklist) throws IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"lwlshawn"},"content":"        writer \u003d Files.newBufferedWriter(path, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"lwlshawn"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"lwlshawn"},"content":"            writer.write(formatForSave(tasklist.get(i)));","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"lwlshawn"},"content":"            writer.newLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"lwlshawn"},"content":"        writer.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"lwlshawn"},"content":"    //converts a Task Object into a string to be saved to a txt file.","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"lwlshawn"},"content":"    private String formatForSave(Task task) {","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"lwlshawn"},"content":"        String entry \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"lwlshawn"},"content":"        entry \u003d entry + task.getType() + \"|\";","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"lwlshawn"},"content":"        entry \u003d entry + task.getIsDone() + \"|\";","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"        entry \u003d entry + task.getLabel();","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"lwlshawn"},"content":"        if (task.getType().equals(\"E\") || task.getType().equals(\"D\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"lwlshawn"},"content":"            entry \u003d entry + \"|\" + task.getDate();","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"        return entry;","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"lwlshawn"},"content":"    //dual of formatForSave. Converts from saved string back to Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"lwlshawn"},"content":"    private Task formatForLoad(String savedData) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"lwlshawn"},"content":"        String[] arr \u003d savedData.split(\"[|]\");","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"lwlshawn"},"content":"        Task t;","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"lwlshawn"},"content":"        if (arr[0].equals(\"T\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"lwlshawn"},"content":"            t \u003d new Todo(arr[2]);","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"lwlshawn"},"content":"        } else if (arr[0].equals(\"D\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"lwlshawn"},"content":"            t \u003d new Deadline(arr[2], LocalDate.parse(arr[3]));","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"lwlshawn"},"content":"        } else if (arr[0].equals(\"E\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"lwlshawn"},"content":"            t \u003d new Event(arr[2], LocalDate.parse(arr[3]));","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"lwlshawn"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"lwlshawn"},"content":"            throw new DukeException(\"format of saved data is incorrect\");","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"lwlshawn"},"content":"        if (Boolean.parseBoolean(arr[1])) {","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"lwlshawn"},"content":"            t.setIsDone(true);","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"lwlshawn"},"content":"        return t;","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"lwlshawn":111}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":" * Class to manage the list of users tasks during an application run. Class is basically an alias for","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":" * Java\u0027s arraylist with a more limited interface, implemented due to course requirements.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"public class TaskList {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"     * Constructor called when loading in data.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"     * @param loadedData loadedData is the TaskList from a previous session.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedData) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"        tasks \u003d loadedData;","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    public int size() {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"    public Task delete(int i) {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"        return tasks.remove(i);","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        tasks.add(t);","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"lwlshawn":42}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":" * Ui class to handle printing notices to the user, and reading of user input to pass to Parser.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"public class Ui {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"     * Method called at beginning of application run. Prints welcome message.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"    public String init() {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"        return \"I\u0027m Frosty, your personal task manager! How can I help?\";","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"     * Returns a String representing tasks in the list.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"     * @param tasklist tasks to be displayed.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"     * @return String representation of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    public String displayList(TaskList tasklist) {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"        String res \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"            res +\u003d tasklist.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        return res;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"     * Returns a String representing tasks found.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"     * @param tasklist tasks to be displayed.","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"     * @return String representation of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"    public String displayFindList(TaskList tasklist) {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"        String res \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"            res +\u003d tasklist.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        return res;","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"     * Returns a String to notify user of task being added.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"     * @param tasklist tasks containing new added task.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"     * @return String representation of message.","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"    public String notifySuccessfulAdd(TaskList tasklist) {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"        String res \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"        res +\u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"        res +\u003d \"  \" + tasklist.get(tasklist.size() - 1) + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"        res +\u003d \"Now you have \" + tasklist.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"        return res;","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"     * Returns a String to notify user that task has been marked done.","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"     * @param tasklist tasks containing task marked done.","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"     * @param index index of the task marked done.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"     * @return String to notify user that task has been marked done.","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"    public String notifySuccessfulMarkDone(TaskList tasklist, int index) {","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"        String res \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"lwlshawn"},"content":"        res +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"lwlshawn"},"content":"        res +\u003d \"  \" + tasklist.get(index);","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"lwlshawn"},"content":"        return res;","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"lwlshawn"},"content":"     * Returns a String to notify user that task has been deleted.","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"lwlshawn"},"content":"     * @param tasklist remaining tasks after deletion","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"lwlshawn"},"content":"     * @param removed task that was removed","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"lwlshawn"},"content":"     * @return String to notify user that task has been deleted.","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"lwlshawn"},"content":"    public String notifySuccessfulDelete(TaskList tasklist, Task removed) {","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"lwlshawn"},"content":"        String res \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"lwlshawn"},"content":"        res +\u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"lwlshawn"},"content":"        res +\u003d \"  \" + removed + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"        res +\u003d \"Now you have \" + tasklist.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"lwlshawn"},"content":"        return res;","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"    public String notifySavingComplete() {","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"lwlshawn"},"content":"        return (\"Your list has been saved!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"lwlshawn"},"content":"    public String notifySavingError() {","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"lwlshawn"},"content":"        return (\"Something went wrong and I can\u0027t save your list, sorry!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"lwlshawn"},"content":"    public String notifyIndexOutOfBounds() {","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"lwlshawn"},"content":"        return (\"Sorry! Your command has an invalid index choice, or is missing components\");","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"lwlshawn"},"content":"    public String notifyImproperIndex() {","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"lwlshawn"},"content":"        return (\"Sorry! I can\u0027t understand the index for your command\");","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"lwlshawn"},"content":"    public String notifyError(DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"lwlshawn"},"content":"        return (\"Sorry! Your command has the following issue: \" + e.getMessage());","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"lwlshawn"},"content":"    public String notifyImproperDateTime() {","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"lwlshawn"},"content":"        return (\"Sorry! I don\u0027t recognise the format for the date and time you\u0027ve entered.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"lwlshawn"},"content":"    public String notifyFolderFound() {","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"lwlshawn"},"content":"        return (\"I\u0027ve found the data folder. Your session will be saved there.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"lwlshawn"},"content":"    public String notifyFolderCreated() {","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"lwlshawn"},"content":"        return (\"I couldn\u0027t find a data folder. I\u0027ve initialised one for your data.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"lwlshawn"},"content":"    public String notifyUpdateComplete(Task after) {","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"lwlshawn"},"content":"        return (\"I\u0027ve updated your selected task to:\\n\" + \"  \" + after);","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"lwlshawn"},"content":"    public String notifyUpdateError() {","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"lwlshawn"},"content":"        return \"Sorry! You\u0027ve tried to update the date of a todo task\";","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"lwlshawn":128}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke.command;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":" * Implements the logic for adding a Task to the users list.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    private final String type;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    private final String label;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"     * Constructor called when adding a Todo task to the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"     * @param type Type tells execute method the kind of Task object to create.","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"     * @param label Label is a description of the Task to be added.","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    public AddCommand(String type, String label) {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"     * Constructor called when adding a Deadline or Event Task to the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"     * @param type Type tells execute method the kind of Task object to create.","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"     * @param label Label is a description of the Task to be added.","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"     * @param date Date is an added description accompanying Deadline and Event tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    public AddCommand(String type, String label, LocalDate date) {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"     * Adds a Task to the TaskList. Differentiates Task objects based on their label","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"     * before adding them to the TaskList.","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"     * @param tasklist TaskList that contains all the users current tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"     * @param ui Ui object for interaction with user","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"     * @param store Storage object that handles save and load functionality.","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage store) {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"        if (type.equals(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"            tasklist.add(new Todo(label));","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"        } else if (type.equals(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"            tasklist.add(new Deadline(label, date));","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"        } else if (type.equals(\"event\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"            tasklist.add(new Event(label, date));","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"            assert false; //Execution should never reach this point","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"        return ui.notifySuccessfulAdd(tasklist);","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwlshawn":62}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke.command;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":" * Each function of the application is implemented by creating a class that extends Command. That class overrides","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":" * execute to achieve its specific task. Common features to all Commands implemented here.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    public abstract String execute(TaskList tasklist, Ui ui, Storage store);","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwlshawn":13}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke.command;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":" * Implements the logic for deleting tasks from the users list.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    private final int index;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     * Constructor called when deleting a task from the TaskList.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     * @param index Index of item to be deleted","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    public DeleteCommand (int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"     * @param tasklist TaskList that contains all the users current tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"     * @param ui Ui object for interaction with user","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"     * @param store Storage object that handles save and load functionality.","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"     * @throws IndexOutOfBoundsException If user gives an index not corresponding to an item in the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage store) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        Task removed \u003d tasklist.delete(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        return ui.notifySuccessfulDelete(tasklist, removed);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwlshawn":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke.command;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"    private String keyword;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage store) {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"        Task t;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"        TaskList temp \u003d new TaskList();","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"        for (int i \u003d 0; i \u003c tasklist.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"            t \u003d tasklist.get(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"            if (t.getLabel().contains(keyword)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"                temp.add(t);","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"        return ui.displayFindList(temp);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lwlshawn":27}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke.command;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":" * This command is for displaying the users current list of tasks","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"     * Uses the Ui object to display a list of the users tasks","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"     * @param tasklist TaskList that contains all the users current tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"     * @param ui Ui object for interaction with user","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     * @param store Storage object that handles save and load functionality.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage store) {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"        return ui.displayList(tasklist);","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwlshawn":21}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke.command;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":" * Implements the logic for marking a Task as done in the users list.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"    private final int index;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"     * Constructor called when marking a Task as done","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     * @param index Index indicates the Task to be marked.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    public MarkDoneCommand(int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"     * Marks a task as done and prints a message that reflects the change to notify the user.","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"     * @param tasklist TaskList that contains all the users current tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"     * @param ui Ui object for interaction with user","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"     * @param store Storage object that handles save and load functionality.","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage store) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        tasklist.get(index).setIsDone(true);","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        return ui.notifySuccessfulMarkDone(tasklist, index);","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwlshawn":32}},{"path":"src/main/java/duke/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage store) {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"            store.save(tasklist);","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"            return ui.notifySavingComplete();","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"            return ui.notifySavingError();","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"lwlshawn":20}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke.command;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"    private int index;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    private String label;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"    private LocalDate date;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     * Constructor for UpdateCommand with label","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"     * @param index item in tasklist to be updated","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"     * @param label new label for the item in tasklist","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    public UpdateCommand(int index, String label) {","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"     * Constructor for UpdateCommand with date","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"     * @param index item in tasklist to be updated","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"     * @param date new date for the item in tasklist","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"    public UpdateCommand(int index, LocalDate date) {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage store) {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"        assert (this.date !\u003d null || this.label !\u003d null);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        if (this.label !\u003d null) {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"            tasklist.get(index).setLabel(label);","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"            Task after \u003d tasklist.get(index);","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"            return ui.notifyUpdateComplete(after);","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"            //guard clause; should not set date of todo","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"            if (tasklist.get(index).getType().equals(\"T\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"                return ui.notifyUpdateError();","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"            tasklist.get(index).setDate(date);","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"            Task after \u003d tasklist.get(index);","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"            return ui.notifyUpdateComplete(after);","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"lwlshawn":53}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":" * Class for Deadline type Task objects.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"     * Basic constructor for Deadline Task objects.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     * @param label description of the Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     * @param date date associated with the Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    public Deadline(String label, LocalDate date) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"        super(label);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"     * Getter for type.","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"     * @return \"D\" as an identifier for other parts of the application.","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    public String getType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        return \"D\";","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        return date.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"lwlshawn":47}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":" * Class for Event type Task objects.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"     * Basic constructor for Event Task objects.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     * @param label description of the Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     * @param date date associated with the Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    public Event(String label, LocalDate date) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"        super(label);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"     * Getter for type.","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"     * @return \"E\" as an identifier for other parts of the application.","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    public String getType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        return \"E\";","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        return date.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"lwlshawn":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":" * Abstract parent of all Task objects in the application.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"    protected String label;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"     * Basic constructor, creates a task with the given label.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"     * @param label The description the task is created with. Not allowed to be empty.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    public Task(String label) {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"     * Method used to mark the task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"     * @param isDone Indicates whether the task is marked as done.","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"     * Getter for boolean isDone.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"     * @return the isDone of the Task.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"        return isDone;","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"     * Getter for label.","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"     * @return the label of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    public String getLabel() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"        return label;","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"     * Setter for label.","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"     * @param label the new label of the task.","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"    public void setLabel(String label) {","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"lwlshawn"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"lwlshawn"},"content":"     * Getter for type. Implementation left to subclasses.","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"lwlshawn"},"content":"     * @return a capital letter in a string e.g. \"D\" for a Deadline Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"lwlshawn"},"content":"    public abstract String getType();","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"lwlshawn"},"content":"     * Getter for date. Not applicable for Todo tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"lwlshawn"},"content":"     * @return A String representing the date associated with the Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"lwlshawn"},"content":"    public abstract String getDate();","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"lwlshawn"},"content":"     * Setter for date. Not applicable for Todo tasks.","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"lwlshawn"},"content":"    public abstract void setDate(LocalDate date);","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"lwlshawn"},"content":"     * Override of toString to provide a user friendly String representation of Task objects.","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"lwlshawn"},"content":"     * @return a String representing the Task meant to be printed for the user.","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"lwlshawn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"lwlshawn"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"lwlshawn"},"content":"            return \"[X] \" + label;","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"lwlshawn"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"lwlshawn"},"content":"            return \"[ ] \" + label;","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"lwlshawn"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"lwlshawn":92}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":" * Class for Todo type Task objects.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"     * Basic constructor for Todo Task objects.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"     * @param label description of the Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    public Todo(String label) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"        super(label);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"     * Getter for type.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"     * @return \"T\" as an identifier for other parts of the application.","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    public String getType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        return \"T\";","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"     * Not to be called from Todo tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"        assert false;","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        return \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"     * Not to be called from Todo tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    public void setDate(LocalDate date) {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"        assert false;","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"lwlshawn":50}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"120.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"lwlshawn":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"lwlshawn":19}},{"path":"src/test/java/duke/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"    //store is irrelevant, tl code is simple enough that i did not stub it.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"    private TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"    private UiStub ui \u003d new UiStub();","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"    private Storage store \u003d new Storage(\"\", ui);","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"    void testAddTask_addOneTodo_listWithOneTodo() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"        Command c \u003d new AddCommand(\"todo\", \"a simple todo task\");","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"        c.execute(tl, ui, store);","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"        Task expected \u003d new Todo(\"a simple todo task\");","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(expected.getLabel(), tl.get(0).getLabel()); //same label","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(expected.getType(), tl.get(0).getType()); //same type","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(1, tl.size()); //exactly one task added","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lwlshawn"},"content":"    void testAddTask_addOneDeadline_listWithOneDeadline() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"lwlshawn"},"content":"        LocalDate date \u003d LocalDate.parse(\"2020-02-20\");","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lwlshawn"},"content":"        Command c \u003d new AddCommand(\"deadline\", \"a simple deadline task\", date);","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lwlshawn"},"content":"        c.execute(tl, ui, store);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lwlshawn"},"content":"        Task expected \u003d new Deadline(\"a simple deadline task\", date);","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(expected.getLabel(), tl.get(0).getLabel());","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(expected.getType(), tl.get(0).getType());","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(1, tl.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"lwlshawn"},"content":"    void testAddTask_addOneEvent_listWithOneEvent() {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"lwlshawn"},"content":"        LocalDate date \u003d LocalDate.parse(\"2021-01-10\");","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"lwlshawn"},"content":"        Command c \u003d new AddCommand(\"event\", \"a simple event task\", date);","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"lwlshawn"},"content":"        c.execute(tl, ui, store);","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"lwlshawn"},"content":"        Task expected \u003d new Event(\"a simple event task\", date);","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(expected.getLabel(), tl.get(0).getLabel());","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(expected.getType(), tl.get(0).getType());","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(1, tl.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwlshawn":56}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lwlshawn"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lwlshawn"},"content":"    void testParse_taskWithEmptyDescription_throwException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lwlshawn"},"content":"        Exception exception \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"todo \"));","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(\"command is incorrect or incomplete\", exception.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lwlshawn"},"content":"    @Test","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lwlshawn"},"content":"    void testParse_parseDeadlineWithDate_deadlineWithProperDate() throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"lwlshawn"},"content":"        Command c \u003d Parser.parse(\"deadline unit tests /by 2021-11-11\");","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lwlshawn"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lwlshawn"},"content":"        UiStub ui \u003d new UiStub();","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"        Storage store \u003d new Storage(\"\", ui);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"lwlshawn"},"content":"        c.execute(tl, ui, store);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(\"D\", tl.get(0).getType());","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(1, tl.size());","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"lwlshawn"},"content":"        assertEquals(\"unit tests\", tl.get(0).getLabel());","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwlshawn":29}},{"path":"src/test/java/duke/UiStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"package duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"public class UiStub extends duke.Ui {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"    public String notifySuccessfulAdd(duke.TaskList tl) {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"        duke.task.Task t \u003d tl.get(0);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"        return (\"You have successfully added \" + t);","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lwlshawn"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lwlshawn":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lwlshawn"},"content":"todo read book","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"lwlshawn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"lwlshawn"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"lwlshawn"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"lwlshawn"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"lwlshawn"},"content":"delete 3","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"lwlshawn"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"lwlshawn"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"lwlshawn":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"lwlshawn"},"content":"","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"lwlshawn":1,"-":21}}]
