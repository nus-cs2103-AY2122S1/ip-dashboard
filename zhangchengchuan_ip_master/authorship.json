[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"### KopitiamUncle","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"\u003e \"Teh O or Teh C‚Äù ‚Äì A kopitiam uncle, probably","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"KopitiamUncle keeps tracks of your drinks **AND** your tasks.. It\u0027s,","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"* Uniquely Singaporean","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"* Chides you once in a while","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"* ~Easy~ **Extremely** easy to use and talk to","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"All you need to do is,","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"1. Download it from [here](https://github.com/zhangchengchuan/ip/releases/tag/A-Jar).","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"1. Run the programme","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"1. Talk to the uncle.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"1. Be amazed! ü§Ø ","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"And it is **FREE**!","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"Features:","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"- [X]  Managing tasks","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"- [X]  Managing deadlines","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"- [ ]  Reminders (coming soon)","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the main method:","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"```java","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"public class Main {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"        new Duke(\"./tasks.txt\").run();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhangchengchuan":29,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    implementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhangchengchuan":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"* Add Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"* Remove Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"* Complete Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"* View List of Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"* Snooze Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"* Clear List of Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"## Type of Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"- [X] Events ü§Ø","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"- [X] Deadlines ü§Ø","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"- [X] Todos ü§Ø","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"### `todo` - Add Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"A Todo with the description you entered will be created. `event` and `deadline`","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"can be used in place of `todo` to create different types of tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"`todo Household Chores`","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"Kopitiam uncle will reply you acknowledging the creation of a Todo","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"### `list` - List Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"Your current list of tasks will be displayed","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"`list`","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"Kopitiam uncle will show you your entire list.","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"### `remove` - Remove Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"You can remove a task by entering `remove` followed by the index of the task.","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"`remove 1`","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"Kopitiam uncle will remove the first task.","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"### `done` - Complete a Task","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"You can complete a task by entering `done` followed by the index of the task.","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"`done 1`","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"Kopitiam uncle will complete the first task.","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"### `snooze` - Snooze Tasks for 1 week","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"Increased the duration of date and time of a task by 1 week","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"`snooze 1`","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"Kopitiam uncle will snooze the first task.","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"### `clear` - Clear List of Tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"The entire list of tasks will be wiped out.","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"zhangchengchuan"},"content":"`clear`","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"zhangchengchuan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"Kopitiam uncle will remove all tasks. If you restart the chatbot, the list will","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"be empty","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"zhangchengchuan":76,"-":18}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"public class Duke {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"     * Initializes a new Duke Object so that it can run the programme.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"     * @param path relative position of the txt file","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    public Duke(String path) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"        storage \u003d new Storage(path);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"     * Runs the Duke Object by calling introduceDuke() from the Ui class. It is capable of","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"     * Understanding user\u0027s commands and catching errors when thrown.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    public void run() {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"        ui.introduceDuke();","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"            String fullCommand \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"                fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"                assert !fullCommand.equals(\"\") : \"fullCommand should not be empty\";","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"        ByteArrayOutputStream stream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"        PrintStream ps \u003d new PrintStream(stream);","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"        PrintStream old \u003d System.out;","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"        System.setOut(ps);","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"        System.out.flush();","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"        System.setOut(old);","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"        return stream.toString();","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"    public String introduceDuke() {","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"        ByteArrayOutputStream stream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"        PrintStream ps \u003d new PrintStream(stream);","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"        PrintStream old \u003d System.out;","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"        System.setOut(ps);","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"        ui.introduceDuke();","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"        System.out.flush();","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"        System.setOut(old);","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"        return stream.toString();","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"zhangchengchuan"},"content":"     * This is the main file for this java programme.","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"zhangchengchuan"},"content":"     * @param args There is no arguments that is required to run this programme.","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"        new Duke(\"./tasks.txt\").run();","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zhangchengchuan":94,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import duke.gui.Main;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"zhangchengchuan":14}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.command;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.IndexNotInListException;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.NoDescriptionException;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.WrongInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":" * The Command class is responsible for directing the user\u0027s interaction with Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    private static boolean isExit;","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"     * Executes the specified action that is expected of the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"     * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"     * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"     * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws DukeException If an error caused by Duke\u0027s limitation occurs","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"    public abstract void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"    public static class SnoozeCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"        private final String input;","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"        public SnoozeCommand(String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"         * Postpone the task by 1 week.","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage)","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"                throws NoDescriptionException, WrongInputException, IndexNotInListException {","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"done\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"You say snooze but neh tell me snooze which one?!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"                try {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"                    int index \u003d Integer.parseInt(input.split(\" \")[1].trim());","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"                    Task task \u003d tasklist.snooze(index - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"                    ui.showTaskSnoozed(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"                    storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"                    throw new WrongInputException(\"Not a valid number leh!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"    public static class ListCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"            ui.showTasklist(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"    public static class ClearCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the clearing of the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"            tasklist.deleteAll();","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"            ui.showTasklistDeleted();","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"            storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"    public static class FindCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"        private final String input;","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"        public FindCommand(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) throws NoDescriptionException {","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"find\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"Oi, what you want me find?!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"zhangchengchuan"},"content":"                String keyword \u003d input.split(\" \")[1].trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"zhangchengchuan"},"content":"                ArrayList\u003cTask\u003e searches \u003d tasklist.find(keyword);","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"zhangchengchuan"},"content":"                ui.showSearches(searches);","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"zhangchengchuan"},"content":"    public static class DoneCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"zhangchengchuan"},"content":"        private final String input;","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"zhangchengchuan"},"content":"        public DoneCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the completing of a specific task and outputting the behaviour of duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage)","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"zhangchengchuan"},"content":"                throws IndexNotInListException, WrongInputException, NoDescriptionException {","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"done\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":129,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"You say done but neh tell me do which one?!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"zhangchengchuan"},"content":"                try {","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"zhangchengchuan"},"content":"                    int index \u003d Integer.parseInt(input.split(\" \")[1].trim());","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"zhangchengchuan"},"content":"                    Task task \u003d tasklist.complete(index - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"zhangchengchuan"},"content":"                    ui.showTaskCompleted(task, tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"zhangchengchuan"},"content":"                    storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"zhangchengchuan"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"zhangchengchuan"},"content":"                    throw new WrongInputException(\"Not a valid number leh!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"zhangchengchuan"},"content":"    public static class TodoCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"zhangchengchuan"},"content":"        private final String input;","lastModifiedDate":"2021-09-02"},{"lineNumber":146,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"zhangchengchuan"},"content":"        public TodoCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":152,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the TodoCommand, which creates a new Todo task and displaying the appropriate reaction from Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":153,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) throws NoDescriptionException {","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"todo\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"Oi, description of your todo cannot be empty lah!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"zhangchengchuan"},"content":"                String description \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"zhangchengchuan"},"content":"                Task todo \u003d Todo.createTodo(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"zhangchengchuan"},"content":"                todo.setType(\u0027T\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"zhangchengchuan"},"content":"                tasklist.insert(todo);","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"zhangchengchuan"},"content":"                storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"zhangchengchuan"},"content":"                ui.showTaskAdded(todo, tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"zhangchengchuan"},"content":"    public static class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":175,"author":{"gitId":"zhangchengchuan"},"content":"        private final String input;","lastModifiedDate":"2021-09-02"},{"lineNumber":176,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":177,"author":{"gitId":"zhangchengchuan"},"content":"        public DeadlineCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":180,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":181,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":182,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the Deadline, which creates a new Deadline task and displaying the appropriate reaction from Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":183,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":184,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":185,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":186,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":187,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":188,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":189,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) throws NoDescriptionException,","lastModifiedDate":"2021-09-02"},{"lineNumber":190,"author":{"gitId":"zhangchengchuan"},"content":"                WrongInputException {","lastModifiedDate":"2021-09-02"},{"lineNumber":191,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"deadline\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":192,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"Oi, description of your deadline cannot be empty lah!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":193,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":194,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":195,"author":{"gitId":"zhangchengchuan"},"content":"                String description \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":196,"author":{"gitId":"zhangchengchuan"},"content":"                Task deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":197,"author":{"gitId":"zhangchengchuan"},"content":"                if (description.contains(\"/by\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":198,"author":{"gitId":"zhangchengchuan"},"content":"                    String name \u003d description.split(\"/by\", 2)[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":199,"author":{"gitId":"zhangchengchuan"},"content":"                    String date \u003d description.split(\"/by\", 2)[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":200,"author":{"gitId":"zhangchengchuan"},"content":"                    deadline \u003d Deadline.createDeadline(name, date);","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"zhangchengchuan"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":202,"author":{"gitId":"zhangchengchuan"},"content":"                    deadline \u003d Deadline.createDeadline(description, \"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":203,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":204,"author":{"gitId":"zhangchengchuan"},"content":"                deadline.setType(\u0027D\u0027);","lastModifiedDate":"2021-09-08"},{"lineNumber":205,"author":{"gitId":"zhangchengchuan"},"content":"                tasklist.insert(deadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":206,"author":{"gitId":"zhangchengchuan"},"content":"                storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":207,"author":{"gitId":"zhangchengchuan"},"content":"                ui.showTaskAdded(deadline, tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":208,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":209,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":210,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":211,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":212,"author":{"gitId":"zhangchengchuan"},"content":"    public static class EventCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":213,"author":{"gitId":"zhangchengchuan"},"content":"        private final String input;","lastModifiedDate":"2021-09-02"},{"lineNumber":214,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":215,"author":{"gitId":"zhangchengchuan"},"content":"        public EventCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":216,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":217,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":218,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":219,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":220,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the Event, which creates a new Event task and displaying the appropriate reaction from Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":221,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":222,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":223,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":224,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":225,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":226,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":227,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) throws NoDescriptionException,","lastModifiedDate":"2021-09-02"},{"lineNumber":228,"author":{"gitId":"zhangchengchuan"},"content":"                WrongInputException {","lastModifiedDate":"2021-09-02"},{"lineNumber":229,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"event\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":230,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"Oi, description of your event cannot be empty lah!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":231,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":232,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":233,"author":{"gitId":"zhangchengchuan"},"content":"                String description \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":234,"author":{"gitId":"zhangchengchuan"},"content":"                Task event;","lastModifiedDate":"2021-08-27"},{"lineNumber":235,"author":{"gitId":"zhangchengchuan"},"content":"                if (description.contains(\"/at\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":236,"author":{"gitId":"zhangchengchuan"},"content":"                    String name \u003d description.split(\"/at\", 2)[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":237,"author":{"gitId":"zhangchengchuan"},"content":"                    String date \u003d description.split(\"/at\", 2)[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":238,"author":{"gitId":"zhangchengchuan"},"content":"                    event \u003d Event.createEvent(name, date);","lastModifiedDate":"2021-08-27"},{"lineNumber":239,"author":{"gitId":"zhangchengchuan"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":240,"author":{"gitId":"zhangchengchuan"},"content":"                    event \u003d Event.createEvent(description, \"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":241,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":242,"author":{"gitId":"zhangchengchuan"},"content":"                event.setType(\u0027E\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":243,"author":{"gitId":"zhangchengchuan"},"content":"                tasklist.insert(event);","lastModifiedDate":"2021-08-27"},{"lineNumber":244,"author":{"gitId":"zhangchengchuan"},"content":"                storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":245,"author":{"gitId":"zhangchengchuan"},"content":"                ui.showTaskAdded(event, tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":246,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":247,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":248,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":249,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":250,"author":{"gitId":"zhangchengchuan"},"content":"    public static class DeleteCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":251,"author":{"gitId":"zhangchengchuan"},"content":"        private final String input;","lastModifiedDate":"2021-09-02"},{"lineNumber":252,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":253,"author":{"gitId":"zhangchengchuan"},"content":"        public DeleteCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":254,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":255,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":256,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":257,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":258,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the DeleteCommand, which deletes a specific task from the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":259,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":260,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":261,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":262,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":263,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":264,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":265,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage)","lastModifiedDate":"2021-08-27"},{"lineNumber":266,"author":{"gitId":"zhangchengchuan"},"content":"                throws IndexNotInListException, NoDescriptionException, WrongInputException {","lastModifiedDate":"2021-08-27"},{"lineNumber":267,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"delete\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":268,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"You say want delete but neh tell me do which one?!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":269,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":270,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":271,"author":{"gitId":"zhangchengchuan"},"content":"                try {","lastModifiedDate":"2021-08-27"},{"lineNumber":272,"author":{"gitId":"zhangchengchuan"},"content":"                    int index \u003d Integer.parseInt(input.split(\" \")[1].trim());","lastModifiedDate":"2021-08-27"},{"lineNumber":273,"author":{"gitId":"zhangchengchuan"},"content":"                    Task task \u003d tasklist.delete(index - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":274,"author":{"gitId":"zhangchengchuan"},"content":"                    ui.showTaskDeleted(task, tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":275,"author":{"gitId":"zhangchengchuan"},"content":"                    storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":276,"author":{"gitId":"zhangchengchuan"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":277,"author":{"gitId":"zhangchengchuan"},"content":"                    throw new WrongInputException(\"Not a valid number leh!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":278,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":279,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":280,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":281,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":282,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":283,"author":{"gitId":"zhangchengchuan"},"content":"    public static class NonsenseCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":284,"author":{"gitId":"zhangchengchuan"},"content":"        private final String input;","lastModifiedDate":"2021-09-02"},{"lineNumber":285,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":286,"author":{"gitId":"zhangchengchuan"},"content":"        public NonsenseCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":287,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":288,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":289,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":290,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":291,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the NonsenseCommand, which only occurs if duke does not understand what the user typed.","lastModifiedDate":"2021-08-29"},{"lineNumber":292,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":293,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":294,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":295,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":296,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":297,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":298,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":299,"author":{"gitId":"zhangchengchuan"},"content":"            ui.showNonsenseMessage(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":300,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":301,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":302,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":303,"author":{"gitId":"zhangchengchuan"},"content":"    public static class ExitCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":304,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":305,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":306,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes theExitCommand, which will cause Duke to terminate immediately.","lastModifiedDate":"2021-08-29"},{"lineNumber":307,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":308,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":309,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":310,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":311,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":312,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":313,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":314,"author":{"gitId":"zhangchengchuan"},"content":"            ui.showExitMessage();","lastModifiedDate":"2021-08-27"},{"lineNumber":315,"author":{"gitId":"zhangchengchuan"},"content":"            isExit \u003d true;","lastModifiedDate":"2021-09-08"},{"lineNumber":316,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":317,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":318,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":319,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":320,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns whether the programme should terminate or not","lastModifiedDate":"2021-08-29"},{"lineNumber":321,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":322,"author":{"gitId":"zhangchengchuan"},"content":"     * @return the boolean variable","lastModifiedDate":"2021-08-29"},{"lineNumber":323,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":324,"author":{"gitId":"zhangchengchuan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":325,"author":{"gitId":"zhangchengchuan"},"content":"        return isExit;","lastModifiedDate":"2021-09-08"},{"lineNumber":326,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":327,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zhangchengchuan":327}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":7}},{"path":"src/main/java/duke/exceptions/IndexNotInListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class IndexNotInListException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public IndexNotInListException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":7}},{"path":"src/main/java/duke/exceptions/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class NoDescriptionException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public NoDescriptionException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":7}},{"path":"src/main/java/duke/exceptions/NoPreviousFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class NoPreviousFileException extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public NoPreviousFileException(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zhangchengchuan":7}},{"path":"src/main/java/duke/exceptions/NonsenseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class NonsenseException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public NonsenseException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":7}},{"path":"src/main/java/duke/exceptions/WrongInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class WrongInputException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public WrongInputException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"zhangchengchuan":7}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.gui;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"zhangchengchuan":61}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"package duke.gui;","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    private Duke duke \u003d new Duke(\"./tasks.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"            stage.setTitle(\"Kopitiam Uncle\");","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"zhangchengchuan":34}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.gui;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/guy.jpg\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/kopitiam uncle.jpg\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"        introduceDuke();","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"    private void introduceDuke() {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"        String response \u003d duke.introduceDuke();","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"        assert !response.equals(\"\") : \"response should not be empty\";","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"zhangchengchuan":62}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.parser;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns a Command after taking in the user\u0027s input.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"     * What the command does will be completely","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"     * up to what was entered by the user. Each Command will","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"     * entail different behaviour from Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"     * @param stringCommand This is the input that the user typed into console.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"     * @return a Command that can be executed to perform a specific action.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    public static Command parse(final String stringCommand) {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"        String keyword \u003d stringCommand.split(\" \")[0].trim().toLowerCase();","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"        assert !keyword.equals(\"\") : \"keyword should not be empty\";","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"        switch (keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"        case \"list\":","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"            return new Command.ListCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"        case \"snooze\":","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"            return new Command.SnoozeCommand(stringCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"        case \"clear\":","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"            return new Command.ClearCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"        case \"find\":","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"                return new Command.FindCommand(stringCommand);","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"        case \"done\":","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"            return new Command.DoneCommand(stringCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"            return new Command.TodoCommand(stringCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"        case \"event\":","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"            return new Command.EventCommand(stringCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"            return new Command.DeadlineCommand(stringCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"            return new Command.DeleteCommand(stringCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"            return new Command.ExitCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"            return new Command.NonsenseCommand(stringCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zhangchengchuan":44}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.File;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.NoPreviousFileException;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":" * Storage allows the creation and update of txt files to maintain past tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    private final String path;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    public Storage(String path) {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns a list of Tasks that were stored in the tasks.txt file.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"     * @return a list of Tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws DukeException If error writing to the files or no file detected.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(path));","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"            String currentLine;","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"            while ((currentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"                if (!currentLine.equals(\"Tasks:\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"                    Task task \u003d convertToTask(currentLine);","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"                    list.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"            br.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"            } catch (IOException e2) {","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"                System.out.println(\"Error creating txt file\");","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"            throw new NoPreviousFileException(\"No previous file \"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"                     + \"detected, creating new one.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"        return list;","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"    private static Task convertToTask(String output) {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"        char type \u003d output.charAt(1);","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"        char done \u003d output.charAt(4);","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"        String taskAndDate \u003d output.substring(7);","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"        Task task;","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"        if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"            task \u003d new Todo(taskAndDate);","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"        } else if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"            // Deadlines","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"            if (taskAndDate.contains(\"(by: \")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"                String name \u003d taskAndDate.split(\" \\\\(by: \")[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"                String date \u003d taskAndDate.split(\" \\\\(by: \")[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"                // Chop of last \")\"","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"                date \u003d date.substring(0, date.length() - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"                task \u003d new Deadline(name, \" \" + date);","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"                task \u003d new Deadline(taskAndDate, \"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"            // Events","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"            if (taskAndDate.contains(\"(at: \")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"                String name \u003d taskAndDate.split(\" \\\\(at: \")[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"                String date \u003d taskAndDate.split(\" \\\\(at: \")[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"zhangchengchuan"},"content":"                // Chop of last \")\"","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"                date \u003d date.substring(0, date.length() - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"zhangchengchuan"},"content":"                task \u003d new Event(name, \" \" + date);","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"                task \u003d new Event(taskAndDate, \"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"        task.setType(type);","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"zhangchengchuan"},"content":"        if (done \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"zhangchengchuan"},"content":"            task.setDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"zhangchengchuan"},"content":"        return task;","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"zhangchengchuan"},"content":"     * Updates the txt file to store and remember the tasks entered.","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"zhangchengchuan"},"content":"     * @param tasklist This is taken in so that the txt file can be updated.","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"zhangchengchuan"},"content":"    public void updateTxtFile(TaskList tasklist) {","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"zhangchengchuan"},"content":"        BufferedWriter bw;","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"zhangchengchuan"},"content":"            bw \u003d new BufferedWriter(new FileWriter(path));","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"zhangchengchuan"},"content":"            for (Task t : tasklist.getTaskList()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"zhangchengchuan"},"content":"                if (t.getType() \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"zhangchengchuan"},"content":"                    Deadline dl \u003d (Deadline) t;","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"zhangchengchuan"},"content":"                    bw.write(dl + \"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"zhangchengchuan"},"content":"                } else if (t.getType() \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"zhangchengchuan"},"content":"                    Event e \u003d (Event) t;","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"zhangchengchuan"},"content":"                    bw.write(e + \"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"zhangchengchuan"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"zhangchengchuan"},"content":"                    Todo todo \u003d (Todo) t;","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"zhangchengchuan"},"content":"                    bw.write(todo + \"\\n\");","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"zhangchengchuan"},"content":"            bw.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"zhangchengchuan"},"content":"            System.out.println(\"Error reading and writing file.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zhangchengchuan":128}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.WrongInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    protected String by;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"        super(name.trim());","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"    public static Deadline createDeadline(String name, String by) throws WrongInputException {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"        if (by.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"            return new Deadline(name, by);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"            return new Deadline(name, processDateAndTime(by));","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"    private static String processDateAndTime(String dateAndTime) throws WrongInputException {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"        String input \u003d dateAndTime.trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"        String[] list \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"        if (list.length !\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"            throw new WrongInputException(\"You must enter Date and Time in this format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"        String date \u003d list[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"        String time \u003d list[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter resultDateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter resultTimeFormat \u003d DateTimeFormatter.ofPattern(\"HH.mm a\");","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"            output \u003d \" \" + LocalDate.parse(date, dateFormat).format(resultDateFormat).toString() + \", \"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"                    + LocalTime.parse(time, timeFormat).format(resultTimeFormat).toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"            return output;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"            throw new WrongInputException(\"You must enter Date and Time in this format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"    public Task snoozeTask() {","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"        String[] list \u003d this.by.split(\", \");","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"        String date \u003d list[0].trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"        String newDate \u003d LocalDate.parse(date, dateFormat).plus(1, ChronoUnit.WEEKS).format(dateFormat);","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"        this.by \u003d \" \" + newDate + \", \" + list[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"        return this;","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"        if (!by.equals(\"\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"            return \"[D]\" + super.toString() + \" (by:\" + by + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"            return \"[D]\" + super.toString();","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":75}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.WrongInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    protected String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    protected String oldAt;","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"     * Constructor for Event","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"     * @param name this is the description of the event","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"     * @param at this is the timing for the event","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    public Event(String name, String at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"        super(name.trim());","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"        this.oldAt \u003d at;","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns an event based on given description and time","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"     * @param name description of task","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"     * @param at time to task","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"     * @return an Event task","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws WrongInputException when input format is not correct","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"    public static Event createEvent(String name, String at) throws WrongInputException {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"        if (at.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"            return new Event(name, at);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"            return new Event(name, processDateAndTime(at));","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"    private static String processDateAndTime(String dateAndTime) throws WrongInputException {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"        String input \u003d dateAndTime.trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"        String[] list \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"        if (list.length !\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"            throw new WrongInputException(\"You must enter Date and Time in this format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"        String date \u003d list[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"        String time \u003d list[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter resultDateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter resultTimeFormat \u003d DateTimeFormatter.ofPattern(\"HH.mm a\");","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"            output \u003d \" \" + LocalDate.parse(date, dateFormat).format(resultDateFormat).toString() + \", \"","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"                    + LocalTime.parse(time, timeFormat).format(resultTimeFormat).toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"            return output;","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"            throw new WrongInputException(\"You must enter Date and Time in this format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"    public Task snoozeTask() {","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"        String[] list \u003d this.at.split(\", \");","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"        String date \u003d list[0].trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"        LocalDate newDate \u003d LocalDate.parse(date, dateFormat).plus(1, ChronoUnit.WEEKS);","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"        this.at \u003d \" \" + newDate.toString() + \", \" + list[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"        return this;","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"        if (!at.equals(\"\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"            return \"[E]\" + super.toString() + \" (at:\" + at + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"zhangchengchuan"},"content":"            return \"[E]\" + super.toString();","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":91}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    protected Boolean done;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"    protected String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    protected char type;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"    public Task(String input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"        this.name \u003d input;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"        return (done ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    public Task completeTask() {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"        return this;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"    public abstract Task snoozeTask();","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    public void setType(char type) {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    public char getType() {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"        return this.type;","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"    public String getName() {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"        return this.name;","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"        return \"[\" + getStatus() + \"] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"zhangchengchuan":44}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.IndexNotInListException;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"public class TaskList {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"     * Empty constructor for when nothing is passed into the instantiation of a tasklist object.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"     * Creates a task list object with a list of tasks passed into the constructor","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"     * @param list is a list of tasks loaded from the txt file","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"        taskList.addAll(list);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"     * Inserts a task into the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"     * @param task the task to be inserted.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    public void insert(Task task) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"     * Marks the referenced task as completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"     * @param index The index of the task in the list","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"     * @return the task that is completed","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws IndexNotInListException when the index passed in is less than 0 or greater than size of list.","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"    public Task complete(int index) throws IndexNotInListException {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"            throw new IndexNotInListException(\"Haiyo, you sure there is a task \" + index + \" anot...\");","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"        return taskList.get(index).completeTask();","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"     * Deletes the reference task","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"     * @param index index of the task to be deleted","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"     * @return the task that was deleted","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws IndexNotInListException when the index passed in is less than 0 or greater than size of list.","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"    public Task delete(int index) throws IndexNotInListException {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"            throw new IndexNotInListException(\"Haiyo, you sure there is a task \" + index + \" anot...\");","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"        return taskList.remove(index);","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns the complete list of tasks currently","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"     * @return a list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"        return taskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"        ArrayList\u003cTask\u003e searches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"        for (Task t: taskList) {","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"            if (t.getName().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"                searches.add(t);","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"        return searches;","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"     * Deletes all the tasks that are currently on the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"    public void deleteAll() {","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"        taskList.clear();","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns the size of the current list.","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"     * @return an int representing the size of the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"zhangchengchuan"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"zhangchengchuan"},"content":"     * Snooze the task by 1 week.","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"zhangchengchuan"},"content":"     * @param index the index of the task the user is referring to.","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"zhangchengchuan"},"content":"     * @return the task that has been in snoozed","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws IndexNotInListException when the index passed in is less than 0 or greater than size of list.","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"zhangchengchuan"},"content":"    public Task snooze(int index) throws IndexNotInListException {","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"zhangchengchuan"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"zhangchengchuan"},"content":"            throw new IndexNotInListException(\"Haiyo, you sure there is a task \" + index + \" anot...\");","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"zhangchengchuan"},"content":"        return taskList.get(index).snoozeTask();","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zhangchengchuan":111}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.WrongInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    public Todo(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"        super(input.trim());","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"    public static Todo createTodo(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"        return new Todo(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"    public Task snoozeTask() {","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"        return this;","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":23}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke.ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    public void formatMessages(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"        String output \u003d \"     --------------------------------------\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"                + \"      \" + message + \"\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"                + \"\\n     --------------------------------------\";","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    public void introduceDuke() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"        String introduction \u003d \"Hello, I am Ah Seng, the foodcourt uncle. Come chitchat with me.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(introduction);","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"        String loadingError \u003d \"No previous .txt File detected. Creating a new one for you.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(loadingError);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"    public void showExitMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"        String endingMessage \u003d \"Ah ok bye. Next time treat uncle kopi ok?\";","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(endingMessage);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    public void showNonsenseMessage(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"        String endingMessage \u003d input + \"? What talking you...?\";","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(endingMessage);","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(errorMessage);","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"    public void showTaskAdded(Task task, TaskList tasklist) {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"        String msg \u003d \"OK uncle added a task for you liao.\\n\" + \"      \" + task.toString()","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"                + \"\\n      You now have \" + tasklist.getSize() + \" tasks remaining.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(msg);","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"    public void showTaskDeleted(Task task, TaskList taskList) {","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"        String msg \u003d \"OK, uncle removed a task for you liao.\\n\" + \"      \" + task.toString()","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"                + \"\\n      You now have \" + taskList.getSize() + \" tasks remaining.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(msg);","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"    public void showTaskCompleted(Task task, TaskList taskList) {","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"        String msg \u003d \"Sweechai Butterfly la, you finished this task:\\n\" + \"      \" + task.toString()","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"                + \"\\n      You now have \" + taskList.getSize() + \" tasks remaining.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(msg);","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"    public void showTasklist(TaskList tasklist) {","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"        StringBuilder output \u003d new StringBuilder(\"Wahseh, these are all the tasks you haven\u0027t do ley!\\n      \");","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"        for (Task task : tasklist.getTaskList()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"            if (i !\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"                output.append(\"      \");","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"            output.append(i).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"            i +\u003d 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(output.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"    public void showTasklistDeleted() {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"        String msg \u003d \"Ok la, Uncle get rid of all your tasks already.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(msg);","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"    public void showTaskSnoozed(Task task) {","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"        String msg \u003d \"Uncle help you extend one week liao. Don\u0027t forget to do it ah!\\n\" + \"      \" + task.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(msg);","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"zhangchengchuan"},"content":"    public void showSearches(ArrayList\u003cTask\u003e searches) {","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"        StringBuilder output \u003d new StringBuilder(\"Ah boy, here is the list you wanted.\\n      \");","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"        for (Task task : searches) {","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"            if (i !\u003d 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"zhangchengchuan"},"content":"                output.append(\"      \");","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"zhangchengchuan"},"content":"            output.append(i).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"zhangchengchuan"},"content":"            i +\u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(output.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zhangchengchuan":104}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"zhangchengchuan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"zhangchengchuan":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import org.junit.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.WrongInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    public void testDeadlineTaskCreated_success() throws WrongInputException {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"        Deadline deadline1 \u003d Deadline.createDeadline(\"Do Homework\", \"02/08/2021 1800\");","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(\"[D][ ] Do Homework (by: 02 Aug 2021, 18.00 PM)\", deadline1.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"        Deadline deadline2 \u003d Deadline.createDeadline(\"Submit Project\", \"10/08/2021 1700\");","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(\"[D][ ] Submit Project (by: 10 Aug 2021, 17.00 PM)\", deadline2.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"zhangchengchuan":20}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(2,2);","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"zhangchengchuan":13}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import duke.exceptions.WrongInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"public class EventTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    public void  testEventTaskCreated_success() throws WrongInputException {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"        Event event1 \u003d Event.createEvent(\"Cycling\", \"02/08/2021 1800\");","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(\"[E][ ] Cycling (at: 02 Aug 2021, 18.00 PM)\", event1.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"        Event event2 \u003d Event.createEvent(\"Eat\", \"10/08/2021 1700\");","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(\"[E][ ] Eat (at: 10 Aug 2021, 17.00 PM)\", event2.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"zhangchengchuan":18}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"[T][ ] buy eggs","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"[E][X] volunteer (at: 15 Nov 2021, 14.00 PM)","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"[T][ ] eat food","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"[D][ ] homework (by: 20 Feb 2020, 19.00 PM)","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"[T][ ] walk dog","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"[T][ ] Household Chores","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"zhangchengchuan":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"event project meeting /at Monday 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"todo return book","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"done 5","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"done 6","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"done 7","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhangchengchuan":1,"-":20}}]
