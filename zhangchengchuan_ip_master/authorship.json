[{"path":"src/main/java/Duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Exceptions.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Exceptions.IndexNotInListException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Exceptions.NoDescriptionException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Exceptions.WrongInputException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":" * The Command class is responsible for directing the user\u0027s interaction with Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    private static boolean exit;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"     * Executes the specified action that is expected of the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"     * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"     * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"     * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws DukeException If an error caused by Duke\u0027s limitation occurs","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"    public abstract void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"    public static class ListCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"            ui.showTasklist(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"    public static class ClearCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the clearing of the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"            tasklist.deleteAll();","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"            ui.showTasklistDeleted();","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"            storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"    public static class FindCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"        String input;","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"        public FindCommand(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) throws NoDescriptionException {","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"find\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"Oi, what you want me find?!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"                String keyword \u003d input.split(\" \")[1].trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"                ArrayList\u003cTask\u003e searches \u003d tasklist.find(keyword);","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"                ui.showSearches(searches);","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"    public static class DoneCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"        String input;","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"        public DoneCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the completing of a specific task and outputting the behaviour of duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage)","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"                throws IndexNotInListException, WrongInputException, NoDescriptionException {","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"done\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"You say done but neh tell me do which one?!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"zhangchengchuan"},"content":"                try {","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"zhangchengchuan"},"content":"                    int index \u003d Integer.parseInt(input.split(\" \")[1].trim());","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"zhangchengchuan"},"content":"                    Task task \u003d tasklist.complete(index-1);","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"zhangchengchuan"},"content":"                    ui.showTaskCompleted(task, tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"zhangchengchuan"},"content":"                    storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"zhangchengchuan"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"zhangchengchuan"},"content":"                    throw new WrongInputException(\"Not a valid number leh!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"zhangchengchuan"},"content":"    public static class TodoCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"zhangchengchuan"},"content":"        String input;","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"zhangchengchuan"},"content":"        public TodoCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the TodoCommand, which creates a new Todo task and displaying the appropriate reaction from Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) throws NoDescriptionException{","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"todo\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"Oi, description of your todo cannot be empty lah!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"zhangchengchuan"},"content":"                String description \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"zhangchengchuan"},"content":"                Task todo \u003d Todo.createTodo(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"zhangchengchuan"},"content":"                todo.setType(\u0027T\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"zhangchengchuan"},"content":"                tasklist.insert(todo);","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"zhangchengchuan"},"content":"                storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"zhangchengchuan"},"content":"                ui.showTaskAdded(todo, tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"zhangchengchuan"},"content":"    public static class DeadlineCommand extends Command{","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"zhangchengchuan"},"content":"        String input;","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"zhangchengchuan"},"content":"        public DeadlineCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the Deadline, which creates a new Deadline task and displaying the appropriate reaction from Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":152,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":153,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) throws NoDescriptionException, WrongInputException {","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"deadline\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"Oi, description of your deadline cannot be empty lah!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"zhangchengchuan"},"content":"                String description \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"zhangchengchuan"},"content":"                Task deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"zhangchengchuan"},"content":"                if (description.contains(\"/by\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"zhangchengchuan"},"content":"                    String name \u003d description.split(\"/by\", 2)[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"zhangchengchuan"},"content":"                    String date \u003d description.split(\"/by\", 2)[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"zhangchengchuan"},"content":"                    deadline \u003d Deadline.createDeadline(name, date);","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"zhangchengchuan"},"content":"                    deadline.setType(\u0027D\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"zhangchengchuan"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"zhangchengchuan"},"content":"                    deadline \u003d Deadline.createDeadline(description, \"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"zhangchengchuan"},"content":"                    deadline.setType(\u0027D\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"zhangchengchuan"},"content":"                tasklist.insert(deadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"zhangchengchuan"},"content":"                storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":175,"author":{"gitId":"zhangchengchuan"},"content":"                ui.showTaskAdded(deadline, tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":176,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":177,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":180,"author":{"gitId":"zhangchengchuan"},"content":"    public static class EventCommand extends Command{","lastModifiedDate":"2021-08-27"},{"lineNumber":181,"author":{"gitId":"zhangchengchuan"},"content":"        String input;","lastModifiedDate":"2021-08-27"},{"lineNumber":182,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":183,"author":{"gitId":"zhangchengchuan"},"content":"        public EventCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":184,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":185,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":186,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":187,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":188,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the Event, which creates a new Event task and displaying the appropriate reaction from Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":189,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":190,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":191,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":192,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":194,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":195,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) throws NoDescriptionException, WrongInputException {","lastModifiedDate":"2021-08-27"},{"lineNumber":196,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"event\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":197,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"Oi, description of your event cannot be empty lah!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":198,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":199,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":200,"author":{"gitId":"zhangchengchuan"},"content":"                String description \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"zhangchengchuan"},"content":"                Task event;","lastModifiedDate":"2021-08-27"},{"lineNumber":202,"author":{"gitId":"zhangchengchuan"},"content":"                if (description.contains(\"/at\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":203,"author":{"gitId":"zhangchengchuan"},"content":"                    String name \u003d description.split(\"/at\", 2)[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":204,"author":{"gitId":"zhangchengchuan"},"content":"                    String date \u003d description.split(\"/at\", 2)[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":205,"author":{"gitId":"zhangchengchuan"},"content":"                    event \u003d Event.createEvent(name, date);","lastModifiedDate":"2021-08-27"},{"lineNumber":206,"author":{"gitId":"zhangchengchuan"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":207,"author":{"gitId":"zhangchengchuan"},"content":"                    event \u003d Event.createEvent(description, \"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":208,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":209,"author":{"gitId":"zhangchengchuan"},"content":"                event.setType(\u0027E\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":210,"author":{"gitId":"zhangchengchuan"},"content":"                tasklist.insert(event);","lastModifiedDate":"2021-08-27"},{"lineNumber":211,"author":{"gitId":"zhangchengchuan"},"content":"                storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":212,"author":{"gitId":"zhangchengchuan"},"content":"                ui.showTaskAdded(event, tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":213,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":214,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":215,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":216,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":217,"author":{"gitId":"zhangchengchuan"},"content":"    public static class DeleteCommand extends Command{","lastModifiedDate":"2021-08-27"},{"lineNumber":218,"author":{"gitId":"zhangchengchuan"},"content":"        String input;","lastModifiedDate":"2021-08-27"},{"lineNumber":219,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":220,"author":{"gitId":"zhangchengchuan"},"content":"        public DeleteCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":221,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":222,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":223,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":224,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":225,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the DeleteCommand, which deletes a specific task from the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":226,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":227,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":228,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":229,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":230,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":231,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":232,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage)","lastModifiedDate":"2021-08-27"},{"lineNumber":233,"author":{"gitId":"zhangchengchuan"},"content":"                throws IndexNotInListException, NoDescriptionException, WrongInputException {","lastModifiedDate":"2021-08-27"},{"lineNumber":234,"author":{"gitId":"zhangchengchuan"},"content":"            if (input.trim().toLowerCase().equals(\"delete\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":235,"author":{"gitId":"zhangchengchuan"},"content":"                String message \u003d \"You say want delete but neh tell me do which one?!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":236,"author":{"gitId":"zhangchengchuan"},"content":"                throw new NoDescriptionException(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":237,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":238,"author":{"gitId":"zhangchengchuan"},"content":"                try {","lastModifiedDate":"2021-08-27"},{"lineNumber":239,"author":{"gitId":"zhangchengchuan"},"content":"                    int index \u003d Integer.parseInt(input.split(\" \")[1].trim());","lastModifiedDate":"2021-08-27"},{"lineNumber":240,"author":{"gitId":"zhangchengchuan"},"content":"                    Task task \u003d tasklist.delete(index-1);","lastModifiedDate":"2021-08-27"},{"lineNumber":241,"author":{"gitId":"zhangchengchuan"},"content":"                    ui.showTaskDeleted(task, tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":242,"author":{"gitId":"zhangchengchuan"},"content":"                    storage.updateTxtFile(tasklist);","lastModifiedDate":"2021-08-27"},{"lineNumber":243,"author":{"gitId":"zhangchengchuan"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":244,"author":{"gitId":"zhangchengchuan"},"content":"                    throw new WrongInputException(\"Not a valid number leh!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":245,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":246,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":247,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":248,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":249,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":250,"author":{"gitId":"zhangchengchuan"},"content":"    public static class NonsenseCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":251,"author":{"gitId":"zhangchengchuan"},"content":"        String input;","lastModifiedDate":"2021-08-27"},{"lineNumber":252,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":253,"author":{"gitId":"zhangchengchuan"},"content":"        public NonsenseCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":254,"author":{"gitId":"zhangchengchuan"},"content":"            this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":255,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":256,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":257,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":258,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes the NonsenseCommand, which only occurs if duke does not understand what the user typed.","lastModifiedDate":"2021-08-29"},{"lineNumber":259,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":260,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":261,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":262,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":263,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":264,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":265,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":266,"author":{"gitId":"zhangchengchuan"},"content":"            ui.showNonsenseMessage(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":267,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":268,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":269,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":270,"author":{"gitId":"zhangchengchuan"},"content":"    public static class ExitCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":271,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":272,"author":{"gitId":"zhangchengchuan"},"content":"        /**","lastModifiedDate":"2021-08-29"},{"lineNumber":273,"author":{"gitId":"zhangchengchuan"},"content":"         * Executes theExitCommand, which will cause Duke to terminate immediately.","lastModifiedDate":"2021-08-29"},{"lineNumber":274,"author":{"gitId":"zhangchengchuan"},"content":"         *","lastModifiedDate":"2021-08-29"},{"lineNumber":275,"author":{"gitId":"zhangchengchuan"},"content":"         * @param tasklist Takes in a tasklist to update the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":276,"author":{"gitId":"zhangchengchuan"},"content":"         * @param ui Takes in an instance of the ui class to show details to the user","lastModifiedDate":"2021-08-29"},{"lineNumber":277,"author":{"gitId":"zhangchengchuan"},"content":"         * @param storage Takes in an instance of the storage to update and renew the txt files.","lastModifiedDate":"2021-08-29"},{"lineNumber":278,"author":{"gitId":"zhangchengchuan"},"content":"         */","lastModifiedDate":"2021-08-29"},{"lineNumber":279,"author":{"gitId":"zhangchengchuan"},"content":"        @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":280,"author":{"gitId":"zhangchengchuan"},"content":"        public void execute(TaskList tasklist, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":281,"author":{"gitId":"zhangchengchuan"},"content":"            ui.showExitMessage();","lastModifiedDate":"2021-08-27"},{"lineNumber":282,"author":{"gitId":"zhangchengchuan"},"content":"            exit \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":283,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":284,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":285,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":286,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":287,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns whether the programme should terminate or not","lastModifiedDate":"2021-08-29"},{"lineNumber":288,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":289,"author":{"gitId":"zhangchengchuan"},"content":"     * @return the boolean variable","lastModifiedDate":"2021-08-29"},{"lineNumber":290,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":291,"author":{"gitId":"zhangchengchuan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":292,"author":{"gitId":"zhangchengchuan"},"content":"        return exit;","lastModifiedDate":"2021-08-27"},{"lineNumber":293,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":294,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zhangchengchuan":294}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Command.Command;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Exceptions.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Parser.Parser;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"public class Duke {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"     * Initializes a new Duke Object so that it can run the programme.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"     * @param path relative position of the txt file","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"    public Duke(String path) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"        storage \u003d new Storage(path);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"     * Runs the Duke Object by calling introduceDuke() from the Ui class. It is capable of","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"     * Understanding user\u0027s commands and catching errors when thrown.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"    public void run() {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"        ui.introduceDuke();","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"            String fullCommand \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"                fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"     * This is the main file for this java programme.","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"     * @param args There is no arguments that is required to run this programme.","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"        new Duke(\"./tasks.txt\").run();","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zhangchengchuan":59,"-":1}},{"path":"src/main/java/Duke/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Exceptions;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":7}},{"path":"src/main/java/Duke/Exceptions/IndexNotInListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Exceptions;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class IndexNotInListException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public IndexNotInListException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":7}},{"path":"src/main/java/Duke/Exceptions/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Exceptions;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class NoDescriptionException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public NoDescriptionException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":7}},{"path":"src/main/java/Duke/Exceptions/NoPreviousFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Exceptions;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class NoPreviousFileException extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public NoPreviousFileException(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zhangchengchuan":7}},{"path":"src/main/java/Duke/Exceptions/NonsenseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Exceptions;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class NonsenseException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public NonsenseException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":7}},{"path":"src/main/java/Duke/Exceptions/WrongInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Exceptions;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class WrongInputException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public WrongInputException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"zhangchengchuan":7}},{"path":"src/main/java/Duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Parser;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Command.Command;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns a Command after taking in the user\u0027s input. What the command does will be completely","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"     * up to what was entered by the user. Each Command will entail different behaviour from Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"     * @param stringCommand This is the input that the user has typed into the console.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"     * @return a Command that can be executed to perform a specific action.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"    public static Command parse(String stringCommand) {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"        String keyword \u003d stringCommand.split(\" \")[0].trim().toLowerCase();","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"        switch (keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"            case \"list\":","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"                return new Command.ListCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"            case \"clear\":","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"                return new Command.ClearCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"            case \"find\":","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"                return new Command.FindCommand(stringCommand);","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"            case \"done\":","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"                return new Command.DoneCommand(stringCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"                return new Command.TodoCommand(stringCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"            case \"event\":","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"                return new Command.EventCommand(stringCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"                return new Command.DeadlineCommand(stringCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"                return new Command.DeleteCommand(stringCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"                return new Command.ExitCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"            default:","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"                return new Command.NonsenseCommand(stringCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zhangchengchuan":39}},{"path":"src/main/java/Duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Exceptions.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Exceptions.NoPreviousFileException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.File;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":" * Storage allows the creation and update of txt files to maintain past tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    private final String path;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"    public Storage(String path) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns a list of Tasks that were stored in the tasks.txt file.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"     * @return a list of Tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws DukeException If there is an error writing to the files or when there is no previous file detected.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(path));","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"            String line;","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"                if (!line.equals(\"Tasks:\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"                    Task task \u003d convertToTask(line);","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"                    list.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"            br.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"            } catch (IOException e2) {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"                System.out.println(\"Error creating txt file\");","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"            throw new NoPreviousFileException(\"No previous file detected, creating new one.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"        return list;","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"    private static Task convertToTask(String output) {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"        char type \u003d output.charAt(1);","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"        char done \u003d output.charAt(4);","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"        String taskAndDate \u003d output.substring(7);","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"        Task task;","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"        if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"            task \u003d new Todo(taskAndDate);","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"        } else if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"            // Deadlines","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"            if (taskAndDate.contains(\"(by: \")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"                String name \u003d taskAndDate.split(\" \\\\(by: \")[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"                String date \u003d taskAndDate.split(\" \\\\(by: \")[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"                // Chop of last \")\"","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"                date \u003d date.substring(0, date.length()-1);","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"                task \u003d new Deadline(name, \" \" + date);","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"                task \u003d new Deadline(taskAndDate, \"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"            // Events","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"            if (taskAndDate.contains(\"(at: \")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"                String name \u003d taskAndDate.split(\" \\\\(at: \")[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"                String date \u003d taskAndDate.split(\" \\\\(at: \")[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"                // Chop of last \")\"","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"                date \u003d date.substring(0, date.length()-1);","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"zhangchengchuan"},"content":"                task \u003d new Event(name, \" \" + date);","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"zhangchengchuan"},"content":"                task \u003d new Event(taskAndDate, \"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"        task.setType(type);","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"        if (done \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"            task.setDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"zhangchengchuan"},"content":"        return task;","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"zhangchengchuan"},"content":"     * Updates the txt file that is used to store and remember the tasks entered.","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"zhangchengchuan"},"content":"     * @param tasklist This is taken in so that the txt file can be updated.","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"zhangchengchuan"},"content":"    public void updateTxtFile(TaskList tasklist) {","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"zhangchengchuan"},"content":"        BufferedWriter bw;","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"zhangchengchuan"},"content":"            bw \u003d new BufferedWriter(new FileWriter(path));","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"zhangchengchuan"},"content":"            for (Task t : tasklist.getTaskList()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"zhangchengchuan"},"content":"                if (t.getType() \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"zhangchengchuan"},"content":"                    Deadline dl \u003d (Deadline) t;","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"zhangchengchuan"},"content":"                    bw.write(dl + \"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"zhangchengchuan"},"content":"                } else if (t.getType() \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"zhangchengchuan"},"content":"                    Event e \u003d (Event) t;","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"zhangchengchuan"},"content":"                    bw.write(e + \"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"zhangchengchuan"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"zhangchengchuan"},"content":"                    bw.write(t + \"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"zhangchengchuan"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"zhangchengchuan"},"content":"            bw.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"zhangchengchuan"},"content":"            System.out.println(\"Error reading and writing file.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zhangchengchuan":125}},{"path":"src/main/java/Duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Exceptions.WrongInputException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    protected String by;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"        super(name.trim());","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    public static Deadline createDeadline(String name, String by) throws WrongInputException {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"        if (by.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"            return new Deadline(name, by);","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"            return new Deadline(name, processDateAndTime(by));","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    private static String processDateAndTime(String dateAndTime) throws WrongInputException {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"        String input \u003d dateAndTime.trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"        String[] list \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"        if (list.length !\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"            throw new WrongInputException(\"You must enter Date and Time in this format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"        String date \u003d list[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"        String time \u003d list[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter dateF \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter timeF \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter resultDF \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter resultTF \u003d DateTimeFormatter.ofPattern(\"HH.mm a\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"            output \u003d \" \" + LocalDate.parse(date, dateF).format(resultDF).toString() + \", \"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"                    + LocalTime.parse(time, timeF).format(resultTF).toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"            return output;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"            throw new WrongInputException(\"You must enter Date and Time in this format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":56}},{"path":"src/main/java/Duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Exceptions.WrongInputException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    protected String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    public Event(String name, String at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"        super(name.trim());","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    public static Event createEvent(String name, String at) throws WrongInputException {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"        if (at.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"            return new Event(name, at);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"            return new Event(name, processDateAndTime(at));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    private static String processDateAndTime(String dateAndTime) throws WrongInputException {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"        String input \u003d dateAndTime.trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"        String[] list \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"        if (list.length !\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"            throw new WrongInputException(\"You must enter Date and Time in this format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"        String date \u003d list[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"        String time \u003d list[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter dateF \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter timeF \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter resultDF \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"            DateTimeFormatter resultTF \u003d DateTimeFormatter.ofPattern(\"HH.mm a\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"            output \u003d \" \" + LocalDate.parse(date, dateF).format(resultDF).toString()","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"                    + \", \" + LocalTime.parse(time, timeF).format(resultTF).toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"            return output;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"            throw new WrongInputException(\"You must enter Date and Time in this format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":56}},{"path":"src/main/java/Duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    protected Boolean done;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"    protected String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    protected char type;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"    public Task(String input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"        this.name \u003d input;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"        return (done ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    public Task completeTask() {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"        return this;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"    public void setType(char type) {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"    public char getType() {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"        return this.type;","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"    public String getName() {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"        return this.name;","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"        return \"[\" + getStatus() + \"] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"zhangchengchuan":42}},{"path":"src/main/java/Duke/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Exceptions.IndexNotInListException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"public class TaskList {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"     * Empty constructor for when nothing is passed into the instantiation of a tasklist object.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"     * Creates a task list object with a list of tasks passed into the constructor","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"     * @param list is a list of tasks loaded from the txt file","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"        taskList.addAll(list);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"     * Inserts a task into the list of tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"     * @param task the task to be inserted.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"    public void insert(Task task) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"     * Marks the referenced task as completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"     * @param index The index of the task in the list","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"     * @return the task that is completed","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws IndexNotInListException when the index passed in is less than 0 or greater than size of list.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"    public Task complete(int index) throws IndexNotInListException {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"            throw new IndexNotInListException(\"Haiyo, you sure there is a task \" + index + \" anot...\");","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"        return taskList.get(index).completeTask();","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"     * Deletes the reference task","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"     * @param index index of the task to be deleted","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"     * @return the task that was deleted","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"     * @throws IndexNotInListException when the index passed in is less than 0 or greater than size of list.","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"    public Task delete(int index) throws IndexNotInListException {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"            throw new IndexNotInListException(\"Haiyo, you sure there is a task \" + index + \" anot...\");","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"        return taskList.remove(index);","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns the complete list of tasks currently","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"     * @return a list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"        return taskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"    public ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"        ArrayList\u003cTask\u003e searches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"        for (Task t: taskList) {","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"            if (t.getName().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"                searches.add(t);","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"        return searches;","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"     * Deletes all the tasks that are currently on the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"    public void deleteAll() {","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"        taskList.clear();","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"zhangchengchuan"},"content":"     * Returns the size of the current list.","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"     * @return an int representing the size of the list.","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zhangchengchuan":97}},{"path":"src/main/java/Duke/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"    public Todo(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"        super(input.trim());","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"    public static Todo createTodo(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"        return new Todo(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":16}},{"path":"src/main/java/Duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    public void formatMessages(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"        String output \u003d \"     --------------------------------------\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"                + \"      \" + message + \"\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"                + \"\\n     --------------------------------------\";","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"    public void introduceDuke() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"zhangchengchuan"},"content":"        String introduction \u003d \"Hello, I am Ah Seng, the foodcourt uncle. Come chitchat with me.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(introduction);","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"zhangchengchuan"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"zhangchengchuan"},"content":"        String loadingError \u003d \"No previous .txt File detected. Creating a new one for you.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(loadingError);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"zhangchengchuan"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"zhangchengchuan"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"zhangchengchuan"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"zhangchengchuan"},"content":"    public void showExitMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"zhangchengchuan"},"content":"        String endingMessage \u003d \"Ah ok bye. Next time treat uncle kopi ok?\";","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(endingMessage);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"zhangchengchuan"},"content":"    public void showNonsenseMessage(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"zhangchengchuan"},"content":"        String endingMessage \u003d input + \"? What talking you...?\";","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(endingMessage);","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"zhangchengchuan"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(errorMessage);","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"zhangchengchuan"},"content":"    public void showTaskAdded(Task task, TaskList tasklist) {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"zhangchengchuan"},"content":"        String msg \u003d \"OK uncle added a task for you liao.\\n\" + \"      \" + task.toString()","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"zhangchengchuan"},"content":"                + \"\\n      You now have \" + tasklist.getSize() + \" tasks remaining.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(msg);","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"zhangchengchuan"},"content":"    public void showTaskDeleted(Task task, TaskList taskList) {","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"zhangchengchuan"},"content":"        String msg \u003d \"OK, uncle removed a task for you liao.\\n\" + \"      \" + task.toString()","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"zhangchengchuan"},"content":"                + \"\\n      You now have \" + taskList.getSize() + \" tasks remaining.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(msg);","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"zhangchengchuan"},"content":"    public void showTaskCompleted(Task task, TaskList taskList) {","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"zhangchengchuan"},"content":"        String msg \u003d \"Sweechai Butterfly la, you finished this task:\\n\" + \"      \" + task.toString()","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"zhangchengchuan"},"content":"                + \"\\n      You now have \" + taskList.getSize() + \" tasks remaining.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(msg);","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"zhangchengchuan"},"content":"    public void showTasklist(TaskList tasklist) {","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"zhangchengchuan"},"content":"        StringBuilder output \u003d new StringBuilder(\"Wahseh, these are all the tasks you haven\u0027t do ley!\\n      \");","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"zhangchengchuan"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"zhangchengchuan"},"content":"        for (Task task : tasklist.getTaskList()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"zhangchengchuan"},"content":"            if (i !\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"zhangchengchuan"},"content":"                output.append(\"      \");","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"zhangchengchuan"},"content":"            output.append(i).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"zhangchengchuan"},"content":"            i +\u003d 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(output.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"zhangchengchuan"},"content":"    public void showTasklistDeleted() {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"zhangchengchuan"},"content":"        String msg \u003d \"Ok la, Uncle get rid of all your tasks already.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(msg);","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"zhangchengchuan"},"content":"    public void showSearches(ArrayList\u003cTask\u003e searches) {","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"zhangchengchuan"},"content":"        StringBuilder output \u003d new StringBuilder(\"Ah boy, here is the list you wanted.\\n      \");","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"zhangchengchuan"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"zhangchengchuan"},"content":"        for (Task task : searches) {","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"zhangchengchuan"},"content":"            if (i !\u003d 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"zhangchengchuan"},"content":"                output.append(\"      \");","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"zhangchengchuan"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"zhangchengchuan"},"content":"            output.append(i).append(\". \").append(task.toString()).append(\"\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"zhangchengchuan"},"content":"            i +\u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"zhangchengchuan"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"zhangchengchuan"},"content":"        formatMessages(output.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"zhangchengchuan":99}},{"path":"src/test/java/Duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Exceptions.WrongInputException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    public void  testDeadlineTaskCreated_success() throws WrongInputException {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"        Deadline deadline1 \u003d Deadline.createDeadline(\"Do Homework\", \"02/08/2021 1800\");","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(\"[D][ ] Do Homework (by: 02 Aug 2021, 18.00 PM)\", deadline1.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"        Deadline deadline2 \u003d Deadline.createDeadline(\"Submit Project\", \"10/08/2021 1700\");","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(\"[D][ ] Submit Project (by: 10 Aug 2021, 17.00 PM)\", deadline2.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"zhangchengchuan":18}},{"path":"src/test/java/Duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(2,2);","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"zhangchengchuan":13}},{"path":"src/test/java/Duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"package Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Exceptions.WrongInputException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"import Duke.Tasks.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"public class EventTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"    public void  testEventTaskCreated_success() throws WrongInputException {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"        Event event1 \u003d Event.createEvent(\"Cycling\", \"02/08/2021 1800\");","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(\"[E][ ] Cycling (at: 02 Aug 2021, 18.00 PM)\", event1.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"        Event event2 \u003d Event.createEvent(\"Eat\", \"10/08/2021 1700\");","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"        assertEquals(\"[E][ ] Eat (at: 10 Aug 2021, 17.00 PM)\", event2.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"zhangchengchuan"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"zhangchengchuan":18}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"[E][X] Cycling (at: 02 Aug 2021, 18.00 pm)","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"[E][ ] Cycling (at: 02 Aug 2021, 18.00 pm)","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"[E][ ] homework (at:) (at:)","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"[E][X] dance (at: 02 Aug 2012, 14.00 pm)","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"[D][ ] homework (by:)","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"[D][ ] project (by: 03 Sep 1940, 12.00 pm)","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JavaDoc","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"zhangchengchuan":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhangchengchuan"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"zhangchengchuan"},"content":"event project meeting /at Monday 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"zhangchengchuan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"zhangchengchuan"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"zhangchengchuan"},"content":"todo return book","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zhangchengchuan"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zhangchengchuan"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"zhangchengchuan"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"zhangchengchuan"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"zhangchengchuan"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"zhangchengchuan"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"zhangchengchuan"},"content":"done 5","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"zhangchengchuan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"zhangchengchuan"},"content":"done 6","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"zhangchengchuan"},"content":"done 7","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"zhangchengchuan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"zhangchengchuan"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"zhangchengchuan":17}}]
