[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DesmondTo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"    archiveClassifier \u003d \"v0.2\"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DesmondTo":17,"-":44}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":" * A chat-bot that handles todo-list operations.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"public class Duke {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a duke chat-bot.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     * @param filePath The relative path of the file that stores the user\u0027s task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     * Generates a response to user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     * @param input The user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"            return e.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"DesmondTo":47}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DesmondTo":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.control.MainWindow;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DesmondTo":32}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.IncompleteDescriptionException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.InvalidDateFormatException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":" * A class that handles task-addition command.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    private enum TaskType {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"        TODO, EVENT, DEADLINE","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    private static final String errorMessage \u003d \"Task description is not found!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    private final boolean hasTaskDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    private final TaskType taskType;","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    private final String taskTag;","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    private final LocalDate taskDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an AddCommand instance that handles the logic of task-addition.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     * @param taskType The type of the to-be-added task.","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     * @param taskFullDetail The description of the to-be-added task.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"     * @throws IncompleteDescriptionException The exception for handling command with incomplete description.","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"     * @throws InvalidDateFormatException The exception for handling command with invalid date format.","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"    public AddCommand(String taskType, String taskTag, String taskFullDetail) throws IncompleteDescriptionException,","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"            InvalidDateFormatException, MissingArgumentException {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"        this.taskType \u003d getTaskType(taskType);","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        this.taskTag \u003d taskTag;","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        this.hasTaskDate \u003d checksHasTaskDate(taskType);","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"        String[] taskDetails \u003d splitDetail(taskFullDetail);","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"        this.taskDescription \u003d getTaskDescription(taskDetails);","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"        this.taskDate \u003d getTaskDate(taskDetails);","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"    /** The following methods are the method used in constructing an AddCommand instance. */","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"    // Returns the enumeration of task type string.","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"    private TaskType getTaskType(String taskTypeString) {","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        return TaskType.valueOf(taskTypeString.toUpperCase());","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"    // Checks whether the task has Date","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"    private boolean checksHasTaskDate(String taskType) {","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"        return !taskType.equals(\"todo\");","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"    // Returns an array consisting task details and throws exception if fullDetail cannot be split.","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"    private String[] splitDetail(String fullDetail) throws MissingArgumentException {","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"        String delimiter \u003d getDelimiter();","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"        // Splits the full detail into 2 if the task type is not a todo.","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"        String[] details \u003d fullDetail.split(delimiter, taskType.equals(TaskType.TODO) ? 1 : 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"        identifyMissingArgument(details);","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"        return details;","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"    // Returns task description if it is not empty, else, throws exception.","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"    private String getTaskDescription(String[] taskDetails) throws IncompleteDescriptionException {","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"        String description \u003d taskDetails[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"        identifyAllWhiteSpace(description);","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"        return description;","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"DesmondTo"},"content":"    // Returns task date if it is not empty/invalid, else, throws exception.","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"    private LocalDate getTaskDate(String[] taskDetails) throws IncompleteDescriptionException,","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"            InvalidDateFormatException {","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"        if (hasTaskDate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"            String taskDateString \u003d taskDetails[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"            identifyAllWhiteSpace(taskDateString);","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"            identifyInvalidDateFormat(taskDateString);","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"            date \u003d getLocalDate(taskDateString);","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"        return date;","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":"    /** The following methods are getter helper function. */","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"DesmondTo"},"content":"    // Returns the regex used to split the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"DesmondTo"},"content":"    private String getDelimiter() {","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"        return taskType.equals(TaskType.EVENT)","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"DesmondTo"},"content":"                ? \" /at \"","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"                : taskType.equals(TaskType.DEADLINE)","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"                ? \" /by \"","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"                : \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"DesmondTo"},"content":"    // Returns hint for the possibly missing argument in the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"DesmondTo"},"content":"    private static String getHint(TaskType taskType) {","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"DesmondTo"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"DesmondTo"},"content":"        case TODO:","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"DesmondTo"},"content":"            return \"some description (eg. borrow book)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"DesmondTo"},"content":"        case EVENT:","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"DesmondTo"},"content":"            return \" /at \";","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"DesmondTo"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"DesmondTo"},"content":"            return \" /by \";","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"DesmondTo"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"DesmondTo"},"content":"            return \"miss any argument\";","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"DesmondTo"},"content":"    // Parses date string to LocalDate instance, then, returns it.","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"DesmondTo"},"content":"    private LocalDate getLocalDate(String dateString) throws InvalidDateFormatException {","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"DesmondTo"},"content":"            return LocalDate.parse(dateString);","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"DesmondTo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"DesmondTo"},"content":"            throw new InvalidDateFormatException(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"DesmondTo"},"content":"    /** The followings are methods that identify if exceptions should be thrown. */","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"DesmondTo"},"content":"    // Throws exception if detail array has missing argument(s).","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"DesmondTo"},"content":"    private void identifyMissingArgument(String[] details) throws MissingArgumentException {","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"DesmondTo"},"content":"        boolean isShortDescription \u003d details.length \u003c 2;","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"DesmondTo"},"content":"        if (hasTaskDate \u0026\u0026 isShortDescription) {","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"DesmondTo"},"content":"            String taskTypeString \u003d taskType.toString().toLowerCase();","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"DesmondTo"},"content":"            String hint \u003d getHint(taskType);","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"DesmondTo"},"content":"            throw new MissingArgumentException(taskTypeString, hint);","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"DesmondTo"},"content":"    // Throws IncompleteDescriptionException when the task description or the task date consists purely whitespace(s).","lastModifiedDate":"2021-09-07"},{"lineNumber":141,"author":{"gitId":"DesmondTo"},"content":"    private void identifyAllWhiteSpace(String detail) throws IncompleteDescriptionException {","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"DesmondTo"},"content":"        boolean isAllWhiteSpace \u003d detail.isBlank();","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"DesmondTo"},"content":"        if (isAllWhiteSpace) {","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"DesmondTo"},"content":"            throw new IncompleteDescriptionException(errorMessage);","lastModifiedDate":"2021-09-07"},{"lineNumber":145,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"DesmondTo"},"content":"    // Throws InvalidDateFormatException when the task date specified has invalid format.","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"DesmondTo"},"content":"    private void identifyInvalidDateFormat(String dateString) throws InvalidDateFormatException {","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"DesmondTo"},"content":"        boolean isInvalidDateFormat \u003d !dateString.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\");","lastModifiedDate":"2021-09-07"},{"lineNumber":151,"author":{"gitId":"DesmondTo"},"content":"        String invalidDateFormatMessage \u003d \"Please specify the date in yyyy-mm-dd format!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"DesmondTo"},"content":"        if (isInvalidDateFormat) {","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"DesmondTo"},"content":"            throw new InvalidDateFormatException(invalidDateFormatMessage);","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":155,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"DesmondTo"},"content":"    /** The followings are methods used in \u0027execute(...)\u0027 method. */","lastModifiedDate":"2021-09-08"},{"lineNumber":158,"author":{"gitId":"DesmondTo"},"content":"    // Returns a task instance according to the type, description and date, if any.","lastModifiedDate":"2021-09-07"},{"lineNumber":159,"author":{"gitId":"DesmondTo"},"content":"    private Task createTask() {","lastModifiedDate":"2021-09-07"},{"lineNumber":160,"author":{"gitId":"DesmondTo"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-07"},{"lineNumber":161,"author":{"gitId":"DesmondTo"},"content":"        case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"DesmondTo"},"content":"            return new Todo(taskTag, taskDescription);","lastModifiedDate":"2021-09-08"},{"lineNumber":163,"author":{"gitId":"DesmondTo"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"DesmondTo"},"content":"            return new Event(taskTag, taskDescription, taskDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":165,"author":{"gitId":"DesmondTo"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"DesmondTo"},"content":"            return new Deadline(taskTag, taskDescription, taskDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":167,"author":{"gitId":"DesmondTo"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"DesmondTo"},"content":"            return null;","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"DesmondTo"},"content":"    // Returns a response telling the user that the task has been successfully added and stored.","lastModifiedDate":"2021-09-07"},{"lineNumber":173,"author":{"gitId":"DesmondTo"},"content":"    private String createResponse(TaskList tasks, Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":174,"author":{"gitId":"DesmondTo"},"content":"        String prefix \u003d \"Got it. I\u0027ve added this task:\\n \";","lastModifiedDate":"2021-09-07"},{"lineNumber":175,"author":{"gitId":"DesmondTo"},"content":"        int taskNum \u003d tasks.getTaskNum();","lastModifiedDate":"2021-09-07"},{"lineNumber":176,"author":{"gitId":"DesmondTo"},"content":"        String summary \u003d \"\\nNow you have \" + taskNum + \" tasks in the list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":177,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":178,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"%s%s\", prefix + task, summary);","lastModifiedDate":"2021-09-07"},{"lineNumber":179,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":180,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":181,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the task-addition command.","lastModifiedDate":"2021-09-03"},{"lineNumber":183,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":190,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"DesmondTo"},"content":"            Task task \u003d createTask();","lastModifiedDate":"2021-09-07"},{"lineNumber":192,"author":{"gitId":"DesmondTo"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"DesmondTo"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"DesmondTo"},"content":"            return createResponse(tasks, task);","lastModifiedDate":"2021-09-07"},{"lineNumber":196,"author":{"gitId":"DesmondTo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"DesmondTo"},"content":"            return new Ui().showError(e.getMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":198,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean false since it is not a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":203,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean false.","lastModifiedDate":"2021-09-03"},{"lineNumber":205,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":210}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":" * A class that handles user command.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the command based on different command types.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     * @throws DukeException The possible exceptions thrown when the program runs.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"     * Returns a boolean value of whether it is a command that exit the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean value of whether it is a command that exit the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":" * A class that handles task-deletion command.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    private final int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a DeleteCommand object that handles task-deletion command.","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     * @param taskNum The number of the to-be-deleted task.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    public DeleteCommand(int taskNum) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        assert taskNum \u003e 0 : \"Task number should be at least 1.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    // Returns a response telling the user that the task has been successfully deleted.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    private String createResponse(TaskList tasks, Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"        String prefix \u003d \"Noted. I\u0027ve deleted this task:\\n \";","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        int taskNum \u003d tasks.getTaskNum();","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        String summary \u003d \"\\nNow you have \" + taskNum + \" tasks in the list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"%s%s\", prefix + task, summary);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the task-deletion command.","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        Task task \u003d tasks.getTasks().get(taskNum - 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"        tasks.delete(taskNum - 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"        return createResponse(tasks, task);","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean false since it is not a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean false.","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":59}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":" * A class that handles task-mark-as-done command.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    private static final String errorMessage \u003d \"The number of the task must be at least 1.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    private final int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a DoneCommand that handles task-mark-as-done command.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     * @param taskNum The number of the to-be-marked-as-done task.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    public DoneCommand(int taskNum) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        assert taskNum \u003e 0 : \"Task number should be at least 1.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    // Returns a response telling the user that the task has been successfully marked as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    private String createResponse(Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        String prefix \u003d \"Nice! I\u0027ve marked this task as done:\\n \";","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"%s%s\", prefix, task);","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the task-mark-as-done command.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        Task task \u003d tasks.getTasks().get(taskNum - 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        return createResponse(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean false since it is not a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean false.","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":58}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":" * A class that handles exit-program command.","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the exit-program command.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        return \"Bye. Have a nice day!\";","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean true since it is a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean true.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":33}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":" * A class that handles command of finding a task by searching for a keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    private final String keyword;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a FindCommand that handles command of finding a task by searching for a keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    // Appends matched result to response.","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    private void appendMatched(StringBuilder response, String task, int index) {","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"        String matchedResult \u003d String.format(\" %d.%s\\n\", index, task);","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"        if (task.contains(keyword)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"            response.append(matchedResult);","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after finding a task by searching for a keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"            String taskString \u003d task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"            appendMatched(response, taskString, index++);","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        return response.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean false since it is not a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean false.","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":58}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":" * A class that handles task-listing command.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    // Appends task if the task is not null.","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    private void appendToResponseIfNotNull(StringBuilder response, Task task, int currentIndex) {","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"            String taskToAppend \u003d String.format(\"\\n %d.%s\", currentIndex, task);","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"            response.append(taskToAppend);","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    // Appends task to current response.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    private void appendToResponse(StringBuilder response, TaskList tasks, int currentIndex) {","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"            appendToResponseIfNotNull(response, task, currentIndex);","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"            currentIndex++;","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the task-listing command.","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        int currentIndex \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        appendToResponse(response, tasks, currentIndex);","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        return response.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean false since it is not a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean false.","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":54}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":" * A class that handles unknown command.","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response which hints the user about the functional commands.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"        String prefix \u003d \"Nani? What did you say?\\nTry the following commands instead:\";","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        String suggestion1 \u003d \"1. list - List all the existing tasks\";","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        String suggestion2 \u003d \"2. bye - Exit from duke.Duke\u0027s service\";","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"        String suggestion3 \u003d \"3. done {N} -  Mark task of number \u0027N\u0027 as done\";","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"        String suggestion4 \u003d \"4. delete {N} - Delete task of number \u0027N\u0027\";","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"        String suggestion5 \u003d \"5. todo {description} - Add a todo with the specified \u0027description\u0027\";","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        String suggestion6 \u003d \"6. event {description} /at {date} - \"","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"                + \"Add an event with the specified \u0027description\u0027 happening at \u0027date\u0027\";","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        String suggestion7 \u003d \"7. deadline {description} /by {date} - \"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"                + \"Add a deadline with the specified \u0027description\u0027 expires at \u0027date\u0027\";","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"%s\\n%s\\n%s\\n%s\\n%s\\n%s\\n%s\\n%s\\n\",","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"                prefix, suggestion1, suggestion2, suggestion3, suggestion4, suggestion5, suggestion6, suggestion7);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean false since it is not a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean false.","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":44}},{"path":"src/main/java/duke/control/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.control;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DesmondTo":61}},{"path":"src/main/java/duke/control/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.control;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jotaro.png\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dio.png\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    private final String welcomeMessage \u003d new Ui().showWelcome();","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage)","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    // Exit Duke after 2 seconds if the user input \"bye\"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"    private void delayedExit(String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"        boolean isExitCommand \u003d input.equals(\"bye\");","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"        Timer timer \u003d new Timer();","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        TimerTask timerTask \u003d new TimerTask() {","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"            public void run() {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"                Platform.exit();","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        };","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"        int delayedTime \u003d 2000;","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"        if (isExitCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"            timer.schedule(timerTask, delayedTime);","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"        delayedExit(input);","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DesmondTo":79}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":" * An exception that handles the possible exceptions thrown when the program runs.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"public class DukeException extends IOException {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a DukeException instance that handles the possible exceptions thrown when the program runs.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     * @param message The message to be displayed when this exception is caught.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation of this exception.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation of this exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"WRYYYY!!! %s\", super.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"DesmondTo":28}},{"path":"src/main/java/duke/exception/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * An exception that handles command with empty command.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class EmptyCommandException extends DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an EmptyCommandException instance that handles empty command.","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     * @param errorMessage The message that prompts user to write some command.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    public EmptyCommandException(String errorMessage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"DesmondTo":16}},{"path":"src/main/java/duke/exception/IncompleteDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * An exception that handles command with incomplete description.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class IncompleteDescriptionException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an IncompleteDescriptionException instance that handles command with incomplete description.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     * @param message The message to be displayed when this exception is caught.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    public IncompleteDescriptionException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"DesmondTo":16}},{"path":"src/main/java/duke/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * An exception that handles command description with invalid date format.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class InvalidDateFormatException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an InvalidDateFormatException instance that handles command description with invalid date format.","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     * @param message The message to be displayed when this exception is caught.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"    public InvalidDateFormatException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":15}},{"path":"src/main/java/duke/exception/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * An exception that handles command with missing argument.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    private static final String errorMessage \u003d \"Some arguments are missing in the [%s] command. \"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"            + \"Check if you have [%s] in your command.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an MissingArgumentException instance that handles command with missing argument(s).","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     * @param commandPrefix The prefix used to identify the type of command.","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     * @param hint The hint message to inform user potential missing arguments.","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    public MissingArgumentException(String commandPrefix, String hint) {","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"        super(String.format(errorMessage, commandPrefix, hint));","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"DesmondTo":20}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":" * A task class which falls under deadline category.","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a Deadline instance which is one of the task\u0027s type.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    public Deadline(String tag, String description, LocalDate by) {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"        super(tag, description);","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    public String toDataString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"DEADLINE %s | %s\", super.toDataString(), by);","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        String taskType \u003d \"[D]\";","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        String taskDescription \u003d super.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        String byDate \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"        String taskBy \u003d \" (by: \" + byDate + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        return taskType + taskDescription + taskBy;","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"DesmondTo":48}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"/** A task class which falls under event category. */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an Event instance which is one of the task\u0027s type.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     * @param at The date of the task being carried out.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    public Event(String tag, String description, LocalDate at) {","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"        super(tag, description);","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    public String toDataString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"EVENT %s | %s\", super.toDataString(), at);","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        String taskType \u003d \"[E]\";","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        String taskDescription \u003d super.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        String atDate \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        String taskAt \u003d \" (at: \" + atDate + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"        return taskType + taskDescription + taskAt;","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"DesmondTo":46}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * A task class which represents the user\u0027s tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    protected String tag;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a task instance which represents the user\u0027s task.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    public Task(String tag, String description) {","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     * Marks a task as done, then show a message telling the user that the task has been marked done successfully.","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"    public String toDataString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"| %d | %s | %s\", isDone ? 1 : 0, tag, description);","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"%s%s%s %s\", getStatusIcon(), tag.isBlank() ? \"\" : \" #\" , tag, description);","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"DesmondTo":56}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * A task class which falls under todo category.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a Todo instance which is one of the task\u0027s type.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    public Todo(String tag, String description) {","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"        super(tag, description);","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    public String toDataString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"TODO %s\", super.toDataString());","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"        String taskType \u003d \"[T]\";","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"        String taskDescription \u003d super.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"        return taskType + taskDescription;","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"DesmondTo":39}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":" * A class that deals with making sense of the user command.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    private enum CommandType {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        LIST, DONE, TAG, TODO, EVENT, DEADLINE, DELETE, FIND, BYE, UNKNOWN","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    // Returns CommandType representation of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    private static CommandType toEnum(String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        for (CommandType commandType : CommandType.values()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"            String commandTypeName \u003d commandType.name();","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"            boolean isMatched \u003d commandTypeName.equalsIgnoreCase(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"            if (isMatched) {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"                return commandType;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"        return CommandType.UNKNOWN;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    // Returns hint for the possibly missing argument in the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    private static String getHint(CommandType commandType) {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        case DONE:","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        case DELETE:","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"            return \"task number (eg. 3)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"        case EVENT:","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"            return \"/at\";","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"            return \"/by\";","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"        case FIND:","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"            return \"any keyword (eg. book)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"            return \"miss any argument\";","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"    // Returns an array containing each component of the full command.","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"    // Checks if the command description is empty (does not apply to command with only one argument),","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"    // then throws exception accordingly.","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"    private static String[] splitCommand(String fullCommand) throws MissingArgumentException {","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"        String[] commandComponents \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"        String commandPrefix \u003d commandComponents[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"        CommandType commandType \u003d toEnum(commandPrefix);","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"        boolean hasNoArgument \u003d (commandType.equals(CommandType.LIST) || commandType.equals(CommandType.TODO))","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"                || (commandType.equals(CommandType.BYE) || commandType.equals(CommandType.UNKNOWN));","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"        if (hasNoArgument) {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"            return commandComponents;","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"        boolean isShortCommand \u003d commandComponents.length \u003c 2;","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"        boolean isMissingArgument \u003d isShortCommand || commandComponents[1].isBlank();","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"        if (isMissingArgument) {","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"            String hint \u003d getHint(commandType);","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"            throw new MissingArgumentException(commandPrefix, hint);","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"        return commandComponents;","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"    // Returns the tag by extracting it out from the command description.","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"    private static String[] splitCommandDescriptionFromTag(String commandDescription) {","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"        String descriptionWithoutTagSyntax \u003d commandDescription.replaceFirst(\"t/\", \"\");","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"        return descriptionWithoutTagSyntax.split(\" \", 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"    // Returns command instance based on the command given by the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"    private static Command createCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"        String[] commandComponents \u003d splitCommand(fullCommand);","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"        String commandType \u003d commandComponents[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"        String commandDescription \u003d commandComponents.length \u003e 1 ? commandComponents[1] : \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"        int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"DesmondTo"},"content":"        switch (toEnum(commandType)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"        case LIST:","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"        case BYE:","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":"        case DONE:","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"DesmondTo"},"content":"            taskNum \u003d Integer.parseInt(commandDescription);","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"DesmondTo"},"content":"            return new DoneCommand(taskNum);","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"        case DELETE:","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"DesmondTo"},"content":"            taskNum \u003d Integer.parseInt(commandDescription);","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"            return new DeleteCommand(taskNum);","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"        case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"DesmondTo"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"DesmondTo"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"DesmondTo"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"DesmondTo"},"content":"            boolean hasTag \u003d commandDescription.contains(\"t/\");","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"DesmondTo"},"content":"            String[] descriptionWithTag \u003d hasTag","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"DesmondTo"},"content":"                    ? splitCommandDescriptionFromTag(commandDescription)","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"DesmondTo"},"content":"                    : new String[]{};","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"DesmondTo"},"content":"            String tag \u003d hasTag ? descriptionWithTag[0] : \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"DesmondTo"},"content":"            String descriptionWithoutTag \u003d hasTag ? descriptionWithTag[1] : commandDescription;","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"DesmondTo"},"content":"            return new AddCommand(commandType, tag, descriptionWithoutTag);","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"DesmondTo"},"content":"        case FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"DesmondTo"},"content":"            return new FindCommand(commandDescription);","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"DesmondTo"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"DesmondTo"},"content":"            return new UnknownCommand();","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"DesmondTo"},"content":"     * Returns a command class based on the type specified in the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"DesmondTo"},"content":"     * @param fullCommand The command input by the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"DesmondTo"},"content":"     * @return The command class based on the type specified in the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"DesmondTo"},"content":"     * @throws MissingArgumentException The exception that handles command with empty description.","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"DesmondTo"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"DesmondTo"},"content":"        boolean isEmptyCommand \u003d fullCommand.isEmpty() || fullCommand.isBlank();","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"DesmondTo"},"content":"        if (isEmptyCommand) {","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"DesmondTo"},"content":"            throw new EmptyCommandException(\"Do not enter empty command!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":134,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":135,"author":{"gitId":"DesmondTo"},"content":"        return createCommand(fullCommand);","lastModifiedDate":"2021-09-07"},{"lineNumber":136,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":137}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":" * A class that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    private final Path filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    private final Path directoryPath;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a Storage instance that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     * @param filePath The relative path of the file that stores all the tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        this.directoryPath \u003d Paths.get(new File(filePath).getParent());","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     * Returns a list of string containing the tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * @return The list of string containing the tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     * @throws DukeException The exception that handles the possible exceptions thrown when the program runs.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    public List\u003cString\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        List\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"            if (!Files.exists(directoryPath)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"                Files.createDirectory(directoryPath);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"            assert Files.exists(directoryPath) : \"Directory should be created\";","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"            assert Files.exists(filePath) : \"File should be created\";","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"            taskList \u003d Files.readAllLines(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"        } catch (IOException | UnsupportedOperationException | SecurityException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"            new Ui().showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"            throw new DukeException(\"Empty list\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"        return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"     * Writes tasks list to the file.","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"     * @param taskLists The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"    public void save(TaskList taskLists) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"            FileWriter dataFileWriter \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"            for (Task task : taskLists.getTasks()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"                dataFileWriter.write(task.toDataString() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"            dataFileWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"            new Ui().showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":81}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import java.util.List;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":" * A class that contains the task list and deals with add/delete operation on the list.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    private enum TaskType {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"        TODO, EVENT, DEADLINE","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    private int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a TaskList instance that contains the task list and deals with add/delete operation on the list.","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a TaskList instance that contains the task list and deals with add/delete operation on the list.","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     * @param storageLoad The list containing all the user\u0027s tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * @throws DukeException The exception that handles the possible exceptions thrown when the program runs.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    public TaskList(List\u003cString\u003e storageLoad) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        if (storageLoad \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"            throw new DukeException(\"Loading failed!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        addLoad(storageLoad);","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    private Task createTask(TaskType type, String tag, String description, String date) {","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"        switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"        case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"            return new Todo(tag, description);","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"            LocalDate at \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"            return new Event(tag, description, at);","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"            LocalDate by \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"            return new Deadline(tag, description, by);","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"            return null;","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"    private void addLoad(List\u003cString\u003e storageLoad) {","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"        for (String taskString : storageLoad) {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"            // Extract task details into three parts","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"            String[] taskDetails \u003d taskString.split(\" \\\\| \", 5);","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"            TaskType type \u003d TaskType.valueOf(taskDetails[0]);","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"            String tag \u003d taskDetails[2];","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"            String description \u003d taskDetails[3];","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"            String date \u003d type.equals(TaskType.TODO) ? null : taskDetails[4];","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"            Task task \u003d createTask(type, tag, description, date);","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"            boolean isTask \u003d task !\u003d null;","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"            boolean isDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"            if (isTask \u0026\u0026 isDone) {","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"                task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"            if (isTask) {","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"                add(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"        return tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"    public int getTaskNum() {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"        return taskNum;","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"     * Adds task to the task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"DesmondTo"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"DesmondTo"},"content":"        taskNum++;","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"DesmondTo"},"content":"     * Deletes task from the task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"DesmondTo"},"content":"     * @param taskNum The task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"DesmondTo"},"content":"    public void delete(int taskNum) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"DesmondTo"},"content":"        tasks.remove(taskNum);","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"DesmondTo"},"content":"        taskNum--;","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":112}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * A class that deals with interactions with the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    protected static final String LOGO \u003d \"\\t\\t          __      __      ___        \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"            + \"\\t\\t         |  _ \\\\   |   |  /   _   \\\\\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"            + \"\\t\\t         | | |  |  |   |  |  /  \\\\  |\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"            + \"\\t\\t         | |_|  |  |   |  |  \\\\_/  |\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"            + \"WRYYYY, Kono |___/   |__|   \\\\___/   da!\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an Ui that deals with interactions with the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     * Returns welcome message to greet the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"        return LOGO;","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"     * Returns the error message to the screen.","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"     * @param errorMessage The error message based on the exception caught/.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"        return \"Something went wrong:\\n \" + errorMessage;","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"DesmondTo":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DesmondTo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.control.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DesmondTo":19}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.InvalidDateFormatException;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":" * A test class which tests if addCommand\u0027s methods work as intended.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * Passes test if IncompleteDescriptionException is thrown when the event has empty description.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    public void addCommand_emptyEvent_exceptionThrown() {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new AddCommand(\"EVENT\", \"\", \"\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"     * Passes test IncompleteDescriptionException is thrown when the deadline has empty description.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    public void addCommand_emptyDeadline_exceptionThrown() {","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        assertThrows(MissingArgumentException.class, () -\u003e new AddCommand(\"DEADLINE\", \"\", \"\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"     * Passes test InvalidDateFormatException is thrown when the event has invalid date format.","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    public void addCommand_invalidEventDate_exceptionThrown() {","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"                new AddCommand(\"EVENT\", \"\", \"sample event /at tomorrow\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"     * Passes test InvalidDateFormatException is thrown when the deadline has invalid date format.","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"    @Test","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"    public void addCommand_invalidDeadlineDate_exceptionThrown() {","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        assertThrows(InvalidDateFormatException.class, () -\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"                new AddCommand(\"DEADLINE\", \"\", \"sample deadline /by tomorrow\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":48}},{"path":"src/test/java/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.IncompleteDescriptionException;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":" * A test class which tests if Parser\u0027s methods work as intended.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     * Passes test when EmptyDescriptionException is thrown when the command is empty.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    public void emptyCommandTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        assertThrows(EmptyCommandException.class, () -\u003e Parser.parse(\"\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     * Passes test when EmptyDescriptionException is thrown when the command is incomplete.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    public void incompleteCommandTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        assertThrows(IncompleteDescriptionException.class, () -\u003e Parser.parse(\"todo \"));","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     * Passes test when EmptyDescriptionException is thrown when the command consists of purely whitespace.","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"    public void allSpaceCommandTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"        assertThrows(EmptyCommandException.class, () -\u003e Parser.parse(\"      \"));","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"deadline return book /by 2021-08-24","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"event project meeting /at 2021-09-01","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"event /at","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"event /at 2021-08-13","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"event someDescription /at","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"event someDescription /at","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"event someDescription /at 2021-09-31","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"deadline /by","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"deadline /by 2021-09-31","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"deadline someDescription /by","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"deadline someDescription /by","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"deadline someDescription /by 2021-09-31","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"DesmondTo":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DesmondTo":2,"-":19}}]
