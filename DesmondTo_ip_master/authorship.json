[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DesmondTo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"    archiveClassifier \u003d \"v0.2\"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DesmondTo":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"# \u003cspan style\u003d\"color:darkcyan\"\u003eJoJoBot User Guide\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"JoJoBot is a desktop app for **managing tasks, optimized for use via a Command Line Interface (CLI)** while still having ","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"the benefits of a Graphical User Interface (GUI). If you can type fast, JoJoBot can get your contact management tasks ","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"done faster than traditional GUI apps.","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"* [Quick start](#quick-start)","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"* [Features](#features)","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"  * [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"  * [Adding a todo task: `todo`](#adding-a-todo-task-todo)","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"  * [Adding an event task: `event`](#adding-an-event-task-event)","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"  * [Adding a deadline task: `deadline`](#adding-a-deadline-task-deadline)","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"  * [Marking a task as done: `done`](#marking-a-task-as-done-done)","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"  * [Deleting a task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"  * [Finding task(s) by keyword: `find`](#finding-tasks-by-keyword-find)","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"  * [Tagging a task: `tag`](#tagging-a-task-tag)","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"  * [Exiting the program: `bye`](#exiting-the-program-bye)","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"* [Command summary](#command-summary)","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"\u003chr /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"##  \u003cspan style\u003d\"color:orangered\"\u003eQuick start\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"2. Download the latest `jojobot.jar` from here.","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"3. Copy the file to the folder you want to use as the home folder for your JoJoBot.","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. ","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"Note how the app contains some sample data.","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    ![image info](./Ui.png)","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing help and pressing Enter will open the help window.","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"Some example commands you can try:","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    * `list` : Lists all contacts.","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    * `event Beat Dio /at 2021-09-14`: Adds an event `Beat Dio` to the JoJoBot.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    * `delete 3` : Deletes the 3rd task shown in the current list.","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"    * `bye` : Exits the app.","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"---","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"## \u003cspan style\u003d\"color:orangered\"\u003eFeatures\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"\u003eℹ️ **Notes about the command format:**","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"\u003e* Words in `UPPER_CASE` are the parameters to be supplied by the user.\\","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"\u003ee.g. in `todo n/TASK_DESCRIPTION`, `TASK_DESCRIPTION` is a parameter which can be used as `todo Use stand`.","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"\u003e* Items in square brackets are optional.\\","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"\u003ee.g `TASK_DESCRIPTION [t/TAG]` can be used as `Use stand t/JoJo` or as `Use stand`.","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"\u003e* Parameters cannot be in any order. Please follow the command formats below closely.\\","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"\u003e* Extraneous parameters for commands that do not take in parameters (such as list and bye) will be ","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"deemed as unknown command.\\","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"\u003ee.g. if the command specifies `list 123`, it will be unrecognizable by JoJoBot.","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"### \u003cspan style\u003d\"color:orange\"\u003eListing all tasks: `list`\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"Format: `list`","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"### \u003cspan style\u003d\"color:orange\"\u003eAdding a todo task: `todo`\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"Adds a Todo task, with the given task description, to the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"Examples:","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"* `todo read book`","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"### \u003cspan style\u003d\"color:orange\"\u003eAdding an event task: `event`\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"Adds an Event task, with the given task description and date, to the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"Format: `event TASK_DESCRIPTION /at AT`","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"The `AT` must be in **YYYY-MM-DD** format.","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"Examples:","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"* `event go party /at midnight`","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"* `event attend wedding /at 2021-08-31`","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"DesmondTo"},"content":"### \u003cspan style\u003d\"color:orange\"\u003eAdding a deadline task: `deadline`\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"Adds a Deadline task, with the given task description and date, to the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"Format: `deadline TASK_DESCRIPTION /by BY`","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":"The `BY` must be in **YYYY-MM-DD** format.","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"DesmondTo"},"content":"Example:","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"* `deadline submit assignment /by 2021-09-16`","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"### \u003cspan style\u003d\"color:orange\"\u003eMarking a task as done: `done`\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"Marks the task with the given index in the task list as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"DesmondTo"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"DesmondTo"},"content":"The `INDEX` refers to the index number shown in the task list.\\","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"DesmondTo"},"content":"The `INDEX` must be a **positive integer 1, 2, 3,…**\\","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"DesmondTo"},"content":"The `INDEX` must be **in the range of number of existing task in the list.**","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"DesmondTo"},"content":"Examples:","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"DesmondTo"},"content":"* `done 2` marks 2nd task in the list as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"DesmondTo"},"content":"### \u003cspan style\u003d\"color:orange\"\u003eDeleting a task: `delete`\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"DesmondTo"},"content":"Deletes the task with the given index from the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"DesmondTo"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"DesmondTo"},"content":"The `INDEX` refers to the index number shown in the task list.\\","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"DesmondTo"},"content":"The `INDEX` must be a **positive integer 1, 2, 3,…**\\","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"DesmondTo"},"content":"The `INDEX` must be **in the range of number of existing task in the list.**","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"DesmondTo"},"content":"Examples:","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"DesmondTo"},"content":"* `delete 2` deletes 2nd task in the list","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"DesmondTo"},"content":"Finding task(s) by keyword: find","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"DesmondTo"},"content":"Finds task(s) which contain(s) the given keyword.","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"DesmondTo"},"content":"### \u003cspan style\u003d\"color:orange\"\u003eFinding task(s) by keyword: `find`\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"DesmondTo"},"content":"The search is **case-sensitive** e.g. `read` will **NOT** match `Read`.","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"DesmondTo"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"DesmondTo"},"content":"* Only the first given keyword is searched.\\","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"DesmondTo"},"content":"e.g. `find read book` will only find task(s) which contain(s) the keyword `read`.","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"DesmondTo"},"content":"* **Only** description is searched.\\","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"DesmondTo"},"content":"e.g. `find book` will only show tasks with the description containing keyword `book`.","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"DesmondTo"},"content":"* Partial words will be matched.\\","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"DesmondTo"},"content":"e.g. `re` will match `read` and `lecture`.","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"DesmondTo"},"content":"### \u003cspan style\u003d\"color:orange\"\u003eTagging a task: `[t/TAG]`\u003cspan\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"DesmondTo"},"content":"Tags a specific task with tag when added. It is optional. It can neither be edited nor removed afterwards.","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"DesmondTo"},"content":"e.g. ","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"DesmondTo"},"content":"1. `todo t/DIO Stand is ZAWARUDO` adds a todo with tag `DIO`","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"DesmondTo"},"content":"2. `event t/JOTARO Stand is Star Platinum /at 2021-09-14` adds an event with tag `JOTARO`","lastModifiedDate":"2021-09-14"},{"lineNumber":146,"author":{"gitId":"DesmondTo"},"content":"3. `deadline t/JOSEPH Stand is Hermit Purple /by 2021-09-14` adds a deadline with tag `JOSEPH`","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"DesmondTo"},"content":"### \u003cspan style\u003d\"color:orange\"\u003eExiting the program: `bye`\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"DesmondTo"},"content":"Exits the program after 2 seconds of entering the command.","lastModifiedDate":"2021-09-14"},{"lineNumber":150,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"DesmondTo"},"content":"Format: exit","lastModifiedDate":"2021-09-14"},{"lineNumber":152,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":153,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":154,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"DesmondTo"},"content":"## \u003cspan style\u003d\"color:orangered\"\u003eFAQ\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":156,"author":{"gitId":"DesmondTo"},"content":"**Q:** How do I transfer my data to another Computer?\\","lastModifiedDate":"2021-09-14"},{"lineNumber":157,"author":{"gitId":"DesmondTo"},"content":"**A:** Install the app in the other computer and overwrite the empty data file it creates with the file that contains the ","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"DesmondTo"},"content":"data of your previous AddressBook home folder.","lastModifiedDate":"2021-09-14"},{"lineNumber":159,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":160,"author":{"gitId":"DesmondTo"},"content":"## \u003cspan style\u003d\"color:orangered\"\u003eCommand Summary\u003c/span\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":161,"author":{"gitId":"DesmondTo"},"content":"**Action** | **Format *e.g.* Examples**","lastModifiedDate":"2021-09-14"},{"lineNumber":162,"author":{"gitId":"DesmondTo"},"content":"------------ | -------------","lastModifiedDate":"2021-09-14"},{"lineNumber":163,"author":{"gitId":"DesmondTo"},"content":"**LIST** | `list`","lastModifiedDate":"2021-09-14"},{"lineNumber":164,"author":{"gitId":"DesmondTo"},"content":"**TODO** | `todo TASK_DESCRIPTION` \u003cbr /\u003ee.g.`todo read book`","lastModifiedDate":"2021-09-14"},{"lineNumber":165,"author":{"gitId":"DesmondTo"},"content":"**EVENT**| `event TASK_DESCRIPTION /at AT` \u003cbr /\u003ee.g.  `event go party /at midnight` or `event attend wedding /at 2021-08-31`","lastModifiedDate":"2021-09-14"},{"lineNumber":166,"author":{"gitId":"DesmondTo"},"content":"**DEADLINE**| `deadline TASK_DESCRIPTION /by BY` \u003cbr /\u003ee.g. `deadline submit assignment /by 2021-09-16`","lastModifiedDate":"2021-09-14"},{"lineNumber":167,"author":{"gitId":"DesmondTo"},"content":"**DONE**| `done INDEX` \u003cbr /\u003ee.g. `done 2` marks 2nd task in the list as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":168,"author":{"gitId":"DesmondTo"},"content":"**DELETE**| `delete INDEX` \u003cbr /\u003ee.g. `delete 2` deletes 2nd task in the list","lastModifiedDate":"2021-09-14"},{"lineNumber":169,"author":{"gitId":"DesmondTo"},"content":"**FIND**| `find KEYWORD` \u003cbr /\u003ee.g. `find read book``","lastModifiedDate":"2021-09-14"},{"lineNumber":170,"author":{"gitId":"DesmondTo"},"content":"**TAG**| `[t/TAG]` \u003cbr /\u003ee.g. `todo t/DIO Stand is ZAWARUDO` or `event t/JOTARO Stand is Star Platinum /at 2021-09-14` or `deadline t/JOSEPH Stand is Hermit Purple /by 2021-09-14`","lastModifiedDate":"2021-09-14"},{"lineNumber":171,"author":{"gitId":"DesmondTo"},"content":"**EXIT**| `bye`","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"DesmondTo":157,"-":14}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":" * A chat-bot that handles todo-list operations.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"public class Duke {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a duke chat-bot.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     * @param filePath The relative path of the file that stores the user\u0027s task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     * Generates a response to user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     * @param input The user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"DesmondTo":47}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DesmondTo":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.control.MainWindow;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    private Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"            Image icon \u003d new Image(\"/images/icon.png\");","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"            scene.getStylesheets().add(\"/css/mainStyle.css\");","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"            stage.setTitle(\"JoJoBot\");","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DesmondTo":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":" * A class that handles user command.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the command based on different command types.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     * @throws DukeException The possible exceptions thrown when the program runs.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"     * Returns a boolean value of whether it is a command that exit the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean value of whether it is a command that exit the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":29}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import duke.util.CommandModifier;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import duke.util.ExceptionChecker;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":" * A class that handles deadline-addition command.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    private static final String commandType \u003d \"deadline\";","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    private static final String delimiter \u003d \" /by \";","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    private String[] tags;","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    private String description;","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    private LocalDate date;","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an TodoCommand instance that handles the logic of deadline-addition.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"     * @param description The deadline description.","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"     * @throws EmptyDescriptionException The exception being thrown when the deadline has empty description.","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    public DeadlineCommand(String description) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkEmptyDescription(commandType, description);","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkMissingArgument(commandType, description, delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkIncompleteDescription(commandType, description, delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkInvalidDateFormat(description, delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkDateParsing(description, delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        this.tags \u003d CommandModifier.getTags(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        this.description \u003d CommandModifier.removeTagsFrom(tags, description);","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        this.date \u003d CommandModifier.toLocalDate(description, delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"    // Returns a response telling the user that the task has been successfully added and stored.","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    private String createResponse(TaskList tasks, Task task) {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"        String prefix \u003d \"HOHOHO. I\u0027ve added this deadline:\\n \";","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"        int taskNum \u003d tasks.getTaskNum();","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"        String summary \u003d \"\\nNow you have \" + taskNum + \" tasks in the list.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"%s%s\", prefix + task, summary);","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"    // Returns a deadline instance.","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"    private Deadline createDeadline() {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        return new Deadline(tags, description, date);","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the command based on different command types.","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks   The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"     * @param ui      The ui that deals with interactions with the user.","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"     * @throws DukeException The possible exceptions thrown when the program runs.","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"            Deadline deadline \u003d createDeadline();","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"            tasks.add(deadline);","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"            return createResponse(tasks, deadline);","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"            return new Ui().showError(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"     * Returns a boolean value of whether it is a command that exit the program.","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean value of whether it is a command that exit the program.","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"DesmondTo":89}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.CommandModifier;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.ExceptionChecker;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":" * A class that handles task-deletion command.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    private final int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a DeleteCommand object that handles task-deletion command.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     * @param taskNum The number of the to-be-deleted task.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    public DeleteCommand(String description) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkEmptyDescription(\"delete\", description);","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkInvalidDescription(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        this.taskNum \u003d CommandModifier.toInt(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    // Returns a response telling the user that the task has been successfully deleted.","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    private String createResponse(TaskList tasks, Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"        String prefix \u003d \"Hinjaku! Hinjaku!\\nI\u0027ve deleted this task:\\n \";","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"        int taskNum \u003d tasks.getTaskNum();","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"        String summary \u003d \"\\nNow you have \" + taskNum + \" tasks in the list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"%s%s\", prefix + task, summary);","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the task-deletion command.","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkTaskExistence(taskNum, tasks.getTaskNum());","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"        Task task \u003d tasks.getTasks().get(taskNum - 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"        tasks.delete(taskNum - 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        return createResponse(tasks, task);","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean false since it is not a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean false.","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":64}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.CommandModifier;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.util.ExceptionChecker;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":" * A class that handles task-mark-as-done command.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    private final int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a DoneCommand that handles task-mark-as-done command.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     * @param description The command description.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    public DoneCommand(String description) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkEmptyDescription(\"done\", description);","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkInvalidDescription(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"        this.taskNum \u003d CommandModifier.toInt(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    // Returns a response telling the user that the task has been successfully marked as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    private String createResponse(Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"        String prefix \u003d \"ZAWARUDO! I\u0027ve marked this task as done:\\n \";","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"%s%s\", prefix, task);","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the task-mark-as-done command.","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws TaskNotFoundException {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkTaskExistence(taskNum, tasks.getTaskNum());","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"        Task task \u003d tasks.getTasks().get(taskNum - 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"        return createResponse(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean false since it is not a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean false.","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":63}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import duke.util.CommandModifier;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import duke.util.ExceptionChecker;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":" * A class that handles event-addition command.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    private static final String commandType \u003d \"event\";","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    private static final String delimiter \u003d \" /at \";","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    private String[] tags;","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    private String description;","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    private LocalDate date;","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an TodoCommand instance that handles the logic of event-addition.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"     * @param description The event description.","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"     * @throws EmptyDescriptionException The exception being thrown when the event has empty description.","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    public EventCommand(String description) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkEmptyDescription(commandType, description);","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkMissingArgument(commandType, description, delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkIncompleteDescription(commandType, description, delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkInvalidDateFormat(description, delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkDateParsing(description, delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        this.tags \u003d CommandModifier.getTags(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        this.description \u003d CommandModifier.removeTagsFrom(tags, description);","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        this.date \u003d CommandModifier.toLocalDate(description, delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"    // Returns a response telling the user that the task has been successfully added and stored.","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    private String createResponse(TaskList tasks, Task task) {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"        String prefix \u003d \"HOHOHO. I\u0027ve added this event:\\n \";","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"        int taskNum \u003d tasks.getTaskNum();","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"        String summary \u003d \"\\nNow you have \" + taskNum + \" tasks in the list.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"%s%s\", prefix + task, summary);","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"    // Returns a event instance.","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"    private Event createEvent() {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        return new Event(tags, description, date);","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the command based on different command types.","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks   The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"     * @param ui      The ui that deals with interactions with the user.","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"     * @throws DukeException The possible exceptions thrown when the program runs.","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"            Event event \u003d createEvent();","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"            tasks.add(event);","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"            return createResponse(tasks, event);","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"            return new Ui().showError(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"     * Returns a boolean value of whether it is a command that exit the program.","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean value of whether it is a command that exit the program.","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"DesmondTo":89}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.ExtraArgumentException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.util.ExceptionChecker;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":" * A class that handles exit-program command.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a ExitCommand instance that handles task-listing command.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     * @param command The command input by the user.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     * @throws ExtraArgumentException The exception for handling command with extraneous argument.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    public ExitCommand(String command) throws ExtraArgumentException {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkExtraArgument(\"bye\", command);","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the exit-program command.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"        return \"MUDA! MUDA! MUDA! MUDA! ROAD ROLLER DAAAAAAA\";","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean true since it is a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean true.","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":45}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.ExceptionChecker;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":" * A class that handles command of finding a task by searching for a keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    private final String keyword;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a FindCommand that handles command of finding a task by searching for a keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    public FindCommand(String keyword) throws EmptyDescriptionException {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkEmptyDescription(\"find\", keyword);","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    // Appends matched result to response.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    private void appendMatched(StringBuilder response, String task, int index) {","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"        String matchedResult \u003d String.format(\" %d.%s\\n\", index, task);","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        if (task.contains(keyword)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"            response.append(matchedResult);","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after finding a task by searching for a keyword.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Oh? You\u0027re approaching me?\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"                + \"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"            String taskString \u003d task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"            appendMatched(response, taskString, index++);","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"        return response.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean false since it is not a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean false.","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":62}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.ExtraArgumentException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.ExceptionChecker;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":" * A class that handles task-listing command.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a ListCommand instance that handles task-listing command.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     * @param command The command input by the user.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     * @throws ExtraArgumentException The exception for handling command with extraneous argument.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    public ListCommand(String command) throws ExtraArgumentException {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkExtraArgument(\"list\", command);","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    // Appends task if the task is not null.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    private void appendToResponseIfNotNull(StringBuilder response, Task task, int currentIndex) {","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"            String taskToAppend \u003d String.format(\"\\n %d.%s\", currentIndex, task);","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"            response.append(taskToAppend);","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    // Appends task to current response.","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    private void appendToResponse(StringBuilder response, TaskList tasks, int currentIndex) {","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"            appendToResponseIfNotNull(response, task, currentIndex);","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"            currentIndex++;","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the task-listing command.","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"        StringBuilder response \u003d new StringBuilder(\"Toki yo tomare!\\nHere are the tasks in your list:\");","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"        int currentIndex \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        appendToResponse(response, tasks, currentIndex);","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"        return response.toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean false since it is not a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean false.","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":66}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.util.CommandModifier;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import duke.util.ExceptionChecker;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":" * A class that handles todo-addition command.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    private String[] tags;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    private String description;","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an TodoCommand instance that handles the logic of todo-addition.","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     * @param description The todo description.","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     * @throws EmptyDescriptionException The exception being thrown when the todo has empty description.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    public TodoCommand(String description) throws EmptyDescriptionException {","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkEmptyDescription(\"todo\", description);","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"        this.tags \u003d CommandModifier.getTags(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"        this.description \u003d CommandModifier.removeTagsFrom(tags, description);","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    // Returns a response telling the user that the task has been successfully added and stored.","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"    private String createResponse(TaskList tasks, Task task) {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"        String prefix \u003d \"HOHOHO. I\u0027ve added this todo:\\n \";","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"        int taskNum \u003d tasks.getTaskNum();","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        String summary \u003d \"\\nNow you have \" + taskNum + \" tasks in the list.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"%s%s\", prefix + task, summary);","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"    // Returns a todo instance.","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"    private Todo createTodo() {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        return new Todo(tags, description);","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response after executing the task-addition command.","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"            Todo todo \u003d createTodo();","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"            tasks.add(todo);","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"            return createResponse(tasks, todo);","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"            return new Ui().showError(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"     * Returns a boolean value of whether it is a command that exit the program.","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean value of whether it is a command that exit the program.","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"DesmondTo":78}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":" * A class that handles unknown command.","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     * Returns the response which hints the user about the functional commands.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     * @param tasks The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     * @param ui The ui that deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * @param storage The storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"        String prefix \u003d \"Nani? What did you say?\\nTry the following commands instead:\";","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        String suggestion1 \u003d \"1. list - List all the existing tasks\";","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        String suggestion2 \u003d \"2. bye - Exit from duke.Duke\u0027s service\";","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"        String suggestion3 \u003d \"3. done {N} -  Mark task of number \u0027N\u0027 as done\";","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"        String suggestion4 \u003d \"4. delete {N} - Delete task of number \u0027N\u0027\";","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"        String suggestion5 \u003d \"5. todo {description} - Add a todo with the specified \u0027description\u0027\";","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        String suggestion6 \u003d \"6. event {description} /at {date} - \"","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"                + \"Add an event with the specified \u0027description\u0027 happening at \u0027date\u0027\";","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        String suggestion7 \u003d \"7. deadline {description} /by {date} - \"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"                + \"Add a deadline with the specified \u0027description\u0027 expires at \u0027date\u0027\";","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"%s\\n%s\\n%s\\n%s\\n%s\\n%s\\n%s\\n%s\\n\",","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"                prefix, suggestion1, suggestion2, suggestion3, suggestion4, suggestion5, suggestion6, suggestion7);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * Returns the boolean false since it is not a command that exits the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     * @return The boolean false.","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":44}},{"path":"src/main/java/duke/control/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.control;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    private Circle displayPicture;","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"    private void setDukeDialogBackground() {","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        dialog.setStyle(\"-fx-background-color: #182533;\");","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"        db.setDukeDialogBackground();","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DesmondTo":68}},{"path":"src/main/java/duke/control/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.control;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jotaro.png\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dio.png\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    private final String welcomeMessage \u003d new Ui().showWelcome();","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage)","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    // Exit Duke after 2 seconds if the user input \"bye\"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"    private void delayedExit(String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"        boolean isExitCommand \u003d input.equals(\"bye\");","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"        Timer timer \u003d new Timer();","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        TimerTask timerTask \u003d new TimerTask() {","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"            public void run() {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"                Platform.exit();","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        };","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"        int delayedTime \u003d 2000;","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"        if (isExitCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"            timer.schedule(timerTask, delayedTime);","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"        delayedExit(input);","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DesmondTo":78}},{"path":"src/main/java/duke/exception/DateParsingFailException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * An exception that handles the failure of parsing date string to LocalDate.","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class DateParsingFailException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a DukeException instance that handles the failure of parsing date string to LocalDate.","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     * @param message The message to be displayed when this exception is caught.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"    public DateParsingFailException(String message) {","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"        super(message);","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"DesmondTo":15}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":" * An exception that handles the possible exceptions thrown when the program runs.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"public class DukeException extends IOException {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a DukeException instance that handles the possible exceptions thrown when the program runs.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     * @param message The message to be displayed when this exception is caught.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation of this exception.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation of this exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"WRYYYY!!! %s\", super.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"DesmondTo":28}},{"path":"src/main/java/duke/exception/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * An exception that handles command with empty command.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class EmptyCommandException extends DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an EmptyCommandException instance that handles empty command.","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     * @param errorMessage The message that prompts user to write some command.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    public EmptyCommandException(String errorMessage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"DesmondTo":16}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"    private static final String message \u003d \"Did you forget to write some descriptions after \\\"%s\\\"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a EmptyDescriptionException instance that handles task with empty description.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"     * @param type The task type.","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    public EmptyDescriptionException(String type) {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"        super(String.format(message, type));","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"DesmondTo":14}},{"path":"src/main/java/duke/exception/ExtraArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * A class that handles command with extraneous argument.","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class ExtraArgumentException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    private static final String message \u003d \"Do not write anything after \\\"%s\\\" !\";","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an ExtraArgumentException instance that handles command with extraneous argument.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     * @param commandType The type of command.","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    public ExtraArgumentException(String commandType) {","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"        super(String.format(message, commandType));","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"DesmondTo":17}},{"path":"src/main/java/duke/exception/IncompleteDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * An exception that handles command with incomplete description.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class IncompleteDescriptionException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    private static final String message \u003d \"Write some descriptions at both sides of \\\"%s\\\"!\";","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an IncompleteDescriptionException instance that handles command with incomplete description.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     * @param type The task type.","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    public IncompleteDescriptionException(String type) {","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"        super(String.format(message, type));","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"DesmondTo":17}},{"path":"src/main/java/duke/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * An exception that handles command description with invalid date format.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class InvalidDateFormatException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    private static final String message \u003d \"Your date (after \\\"%s\\\") is not in YYYY-MM-DD format!\";","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an InvalidDateFormatException instance that handles command description with invalid date format.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     * @param argument The argument before the date String.","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    public InvalidDateFormatException(String argument) {","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"        super(String.format(message, argument));","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":17}},{"path":"src/main/java/duke/exception/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"public class InvalidDescriptionException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an InvalidDescriptionException instance that handles command with invalid Description.","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"     * @param message The message to be displayed when this exception is caught.","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    public InvalidDescriptionException(String message) {","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"        super(message);","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"DesmondTo":13}},{"path":"src/main/java/duke/exception/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * An exception that handles command with missing argument.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    private static final String message \u003d \"Did you forgot to include \\\"%s\\\" after \\\"%s\\\"?\";","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an MissingArgumentException instance that handles command with missing argument(s).","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     * @param type The type of the task.","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     * @param argument The argument used by the command to be functional.","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    public MissingArgumentException(String type, String argument) {","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"        super(String.format(message, argument, type));","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"DesmondTo":19}},{"path":"src/main/java/duke/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"public class TaskNotFoundException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"    private static final String message \u003d \"Task number %d not found! Try a positive number smaller or equal to %d\";","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a TaskNotFoundException instance that handles the situation where a task cannot be found.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"     * @param index The task index specified by the user.","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     * @param totalTaskNum The total number of existing tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"    public TaskNotFoundException(int index, int totalTaskNum) {","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"        super(String.format(message, index, totalTaskNum));","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"DesmondTo":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":" * A task class which falls under deadline category.","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a Deadline instance which is one of the task\u0027s type.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * @param tags The string array consisting all the tags.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    public Deadline(String[] tags, String description, LocalDate by) {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        super(tags, description);","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    public String toDataString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"DEADLINE %s | %s\", super.toDataString(), by);","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        String taskType \u003d \"[D]\";","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        String taskDescription \u003d super.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"        String byDate \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        String taskBy \u003d \" (by: \" + byDate + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"        return taskType + taskDescription + taskBy;","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"DesmondTo":49}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"/** A task class which falls under event category. */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an Event instance which is one of the task\u0027s type.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"     * @param tags The string array consisting all the tags.","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     * @param at The date of the task being carried out.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    public Event(String[] tags, String description, LocalDate at) {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"        super(tags, description);","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"    public String toDataString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"EVENT %s | %s\", super.toDataString(), at);","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        String taskType \u003d \"[E]\";","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        String taskDescription \u003d super.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        String atDate \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        String taskAt \u003d \" (at: \" + atDate + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        return taskType + taskDescription + taskAt;","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"DesmondTo":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.util.CommandModifier;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":" * A task class which represents the user\u0027s tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    protected String[] tags;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a task instance which represents the user\u0027s task.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     * @param tags The string array consisting all the tags.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    public Task(String[] tags, String description) {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * Marks a task as done, then show a message telling the user that the task has been marked done successfully.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"    public String toDataString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"| %d | %s| %s\", isDone ? 1 : 0, CommandModifier.toTagArrayDataString(tags), description);","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"%s %s%s\", getStatusIcon(), CommandModifier.toTagArrayString(tags), description);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"DesmondTo":59}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * A task class which falls under todo category.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a Todo instance which is one of the task\u0027s type.","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     * @param tags The string array consisting all the tags.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    public Todo(String[] tags, String description) {","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"        super(tags, description);","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation in the format to be written in tasks.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    public String toDataString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"        return String.format(\"TODO %s\", super.toDataString());","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"     * Returns a string representation of this task.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"        String taskType \u003d \"[T]\";","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"        String taskDescription \u003d super.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"        return taskType + taskDescription;","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"DesmondTo":40}},{"path":"src/main/java/duke/util/CommandModifier.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"public class CommandModifier {","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"     * Returns the tag array, if any.","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"     * @return The tag array.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"    public static String[] getTags(String description) {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"        String[] substringsWithTag \u003d description.split(\"t/\");","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"        int tagNumber \u003d substringsWithTag.length - 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"        String[] tags \u003d new String[tagNumber];","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"        for (int i \u003d 1; i \u003c tagNumber + 1; i++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"            String stringsWithTag \u003d substringsWithTag[i];","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"            boolean isNeitherEmptyNorBlank \u003d !stringsWithTag.isEmpty() \u0026\u0026 !stringsWithTag.isBlank();","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"            int firstSpaceIndex \u003d stringsWithTag.indexOf(\" \");","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"            boolean spaceNotFound \u003d firstSpaceIndex \u003d\u003d -1;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"            String firstWord \u003d spaceNotFound ? stringsWithTag : stringsWithTag.substring(0, firstSpaceIndex);","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"            boolean isFirstWordNeitherEmptyNorBlank \u003d !firstWord.isEmpty() \u0026\u0026 !firstWord.isBlank();","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"            if (isNeitherEmptyNorBlank \u0026\u0026 isFirstWordNeitherEmptyNorBlank) {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"                tags[i - 1] \u003d firstWord;","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        return tags;","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     * Returns description without any tag(s) inside.","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    public static String removeTagsFrom(String[] tags, String description) {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        for (String tag : tags) {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"            if (tag !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"                description \u003d description.replaceAll(\"t/\" + tag, \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"        description \u003d description.replaceAll(\" t/ \", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        description \u003d description.replaceAll(\"t/ \", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        description \u003d description.replaceAll(\" t/\", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"        description \u003d description.replaceAll(\"t/\", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"        return description;","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"     * Returns the list of tags in String representation, for storage in data.","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"    public static String toTagArrayDataString(String[] tags) {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        StringBuilder tagList \u003d new StringBuilder();","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"        for (String tag : tags) {","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"            if (tag !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"                tagList.append(String.format(\"%s \", tag));","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"        return tagList.toString();","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"     * Returns the list of tags in String representation.","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"    public static String toTagArrayString(String[] tags) {","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"        StringBuilder tagList \u003d new StringBuilder();","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"        for (String tag : tags) {","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"            if (tag !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"                tagList.append(String.format(\"#%s \", tag));","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"        return tagList.toString();","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"     * Returns the LocalDate representation of the date specified in the description.","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"     * @return The LocalDate representation of the date specified in the description.","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"    public static LocalDate toLocalDate(String description, String delimiter) {","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"        String dateString \u003d description.split(delimiter)[1];","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"        return LocalDate.parse(dateString);","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"     * Returns the integer representation of the command description.","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"     * @param description The command description.","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":"     * @return The integer representation of the command description.","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"DesmondTo"},"content":"    public static Integer toInt(String description) {","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"DesmondTo"},"content":"        return Integer.parseInt(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"DesmondTo":100}},{"path":"src/main/java/duke/util/ExceptionChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DateParsingFailException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.ExtraArgumentException;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.IncompleteDescriptionException;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.InvalidDateFormatException;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.InvalidDescriptionException;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":" * A class that checks if it should throw exception.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"public class ExceptionChecker {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     * Throws EmptyCommandException if the command is either empty or consists of whitespaces only.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     * @throws EmptyCommandException The exception thrown when the empty command is detected.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    public static void checkEmptyCommand(String command) throws EmptyCommandException {","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"        if (command.isBlank() || command.isEmpty()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"            throw new EmptyCommandException(\"Empty command is not allowed here!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     * Throws ExtraArgumentException if the command contains extraneous argument.","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     * @throws ExtraArgumentException The exception thrown when the extraneous argument is detected.","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    public static void checkExtraArgument(String type, String command) throws ExtraArgumentException {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        boolean hasExtra \u003d command.split(\" \", 2).length \u003e 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        if (hasExtra) {","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"            throw new ExtraArgumentException(type);","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"     * Throws EmptyDescriptionException if the task has no description.","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"     * @throws EmptyDescriptionException The exception thrown when the task has empty description.","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"    public static void checkEmptyDescription(String type, String description) throws EmptyDescriptionException {","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        if (description.isBlank() || description.isEmpty()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"            throw new EmptyDescriptionException(type);","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"     * Throws MissingArgumentException if the command does not specify its corresponding argument.","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"     * @param command The command involved.","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"     * @param description The command description.","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"     * @param argument The argument.","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"     * @throws MissingArgumentException The exception thrown when there is missing argument in the command.","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"    public static void checkMissingArgument(String command, String description, String argument)","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"            throws MissingArgumentException {","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"        boolean isMissingArgument \u003d !(\" \" + description).contains(argument);","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"        if (isMissingArgument) {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"            throw new MissingArgumentException(command, argument);","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"     * Throws IncompleteDescriptionException if the task description is incomplete.","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"     * @param type The task type.","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"     * @param delimiter The delimiter used to split the description into left and right parts.","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"     * @throws IncompleteDescriptionException The exception thrown when the task description is incomplete.","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"    public static void checkIncompleteDescription(String type, String description, String delimiter)","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"DesmondTo"},"content":"            throws IncompleteDescriptionException {","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"        String[] components \u003d description.split(delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"        boolean hasEmpty \u003d components.length \u003c 2;","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"        if (hasEmpty) {","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"            throw new IncompleteDescriptionException(type);","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"        boolean hasBlank \u003d components[0].isBlank() || components[1].isBlank();","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"        if (hasBlank) {","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"DesmondTo"},"content":"            throw new IncompleteDescriptionException(type);","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":"     * Throws InvalidDateFormatException if the date string has invalid format.","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"     * @param delimiter The delimiter used to split the description into left and right parts.","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"DesmondTo"},"content":"     * @throws InvalidDateFormatException The exception thrown when the date string has invalid format.","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"    public static void checkInvalidDateFormat(String description, String delimiter)","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"            throws InvalidDateFormatException {","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"DesmondTo"},"content":"        boolean isInvalidDateFormat \u003d !description.split(delimiter)[1].matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\");","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"DesmondTo"},"content":"        if (isInvalidDateFormat) {","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"DesmondTo"},"content":"            throw new InvalidDateFormatException(delimiter.substring(1, 4));","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"DesmondTo"},"content":"     * Throws DateParsingFailException if the date string cannot be parsed into LocalDate.","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"DesmondTo"},"content":"     * @param delimiter The delimiter used to split the description into left and right parts.","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"DesmondTo"},"content":"     * @throws DateParsingFailException The exception thrown when the date string cannot be parsed into LocalDate.","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"DesmondTo"},"content":"    public static void checkDateParsing(String description, String delimiter) throws DateParsingFailException {","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"DesmondTo"},"content":"            String dateString \u003d description.split(delimiter)[1];","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"DesmondTo"},"content":"            LocalDate.parse(dateString);","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"DesmondTo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"DesmondTo"},"content":"            throw new DateParsingFailException(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"DesmondTo"},"content":"     * Throws InvalidDescriptionException if the description is not \u0027int\u0027 and not more than 0.","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"DesmondTo"},"content":"     * @param description The task description.","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"DesmondTo"},"content":"     * @throws InvalidDescriptionException The exception thrown when the description is not \u0027int\u0027 and not more than 0.","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"DesmondTo"},"content":"    public static void checkInvalidDescription(String description) throws InvalidDescriptionException {","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"DesmondTo"},"content":"            int index \u003d Integer.parseInt(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"DesmondTo"},"content":"            if (index \u003c\u003d 0) {","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"DesmondTo"},"content":"                throw new InvalidDescriptionException(\"Your index must be at least 1.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"DesmondTo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"DesmondTo"},"content":"            throw new InvalidDescriptionException(description + \" is not an integer number!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"DesmondTo"},"content":"        } catch (InvalidDescriptionException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"DesmondTo"},"content":"            throw new InvalidDescriptionException(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"DesmondTo"},"content":"     * Throws TaskNotFoundException when the index is larger than the total task number.","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"DesmondTo"},"content":"     * @throws TaskNotFoundException The exception thrown when the index is larger than the total task number","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"DesmondTo"},"content":"    public static void checkTaskExistence(int index, int totalTaskNum) throws TaskNotFoundException {","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"DesmondTo"},"content":"        if (index \u003e totalTaskNum) {","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"DesmondTo"},"content":"            throw new TaskNotFoundException(index, totalTaskNum);","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"DesmondTo":156}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":" * A class that deals with making sense of the user command.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    private enum CommandType {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        LIST, DONE, TAG, TODO, EVENT, DEADLINE, DELETE, FIND, BYE, UNKNOWN","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    // Returns the array consisting command components.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"    private static String[] toComponents(String command) {","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"        return command.split(\" \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    // Returns CommandType representation of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    private static CommandType toType(String command) {","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"        String commandTypeByUser \u003d toComponents(command)[0].toUpperCase();","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"        for (CommandType commandType : CommandType.values()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"            String validType \u003d commandType.name();","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"            boolean isValid \u003d commandTypeByUser.equals(validType);","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"            if (isValid) {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"                return commandType;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        return CommandType.UNKNOWN;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"    // Returns the description of the command.","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"    private static String toDescription(String command) {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"        String[] components \u003d toComponents(command);","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"        return components.length \u003c 2 ? \"\" : components[1];","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"    // Returns command instance based on the command given by the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"    private static Command createCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        CommandType commandType \u003d toType(command);","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"        case LIST:","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"            return new ListCommand(command);","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        case BYE:","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"            return new ExitCommand(command);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"        case DONE:","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"            return new DoneCommand(toDescription(command));","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"        case DELETE:","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"            return new DeleteCommand(toDescription(command));","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"        case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"            return new TodoCommand(toDescription(command));","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"            return new EventCommand(toDescription(command));","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"            return new DeadlineCommand(toDescription(command));","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"        case FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"            return new FindCommand(toDescription(command));","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"            return new UnknownCommand();","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"     * Returns a command class based on the type specified in the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"     * @param command The command input by the user.","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"     * @return The command class based on the type specified in the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"     * @throws EmptyCommandException The exception being thrown when the empty command is detected.","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"DesmondTo"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"        ExceptionChecker.checkEmptyCommand(command);","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"        return createCommand(command);","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":87}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":" * A class that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    private final Path filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    private final Path directoryPath;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a Storage instance that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     * @param filePath The relative path of the file that stores all the tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"        this.directoryPath \u003d Paths.get(new File(filePath).getParent());","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     * Returns a list of string containing the tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * @return The list of string containing the tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     * @throws DukeException The exception that handles the possible exceptions thrown when the program runs.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"    public List\u003cString\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"        List\u003cString\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"            if (!Files.exists(directoryPath)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"                Files.createDirectory(directoryPath);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"            assert Files.exists(directoryPath) : \"Directory should be created\";","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"            if (!Files.exists(filePath)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"            assert Files.exists(filePath) : \"File should be created\";","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"            taskList \u003d Files.readAllLines(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"        } catch (IOException | UnsupportedOperationException | SecurityException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"            new Ui().showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"            throw new DukeException(\"Empty list\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"        return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"     * Writes tasks list to the file.","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"     * @param taskLists The list that stores all the tasks to be added/deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"    public void save(TaskList taskLists) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"            FileWriter dataFileWriter \u003d new FileWriter(filePath.toString());","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"            for (Task task : taskLists.getTasks()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"                dataFileWriter.write(task.toDataString() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"            dataFileWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"            new Ui().showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":81}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import java.util.List;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":" * A class that contains the task list and deals with add/delete operation on the list.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    private enum TaskType {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"        TODO, EVENT, DEADLINE","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    private int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a TaskList instance that contains the task list and deals with add/delete operation on the list.","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     * Constructs a TaskList instance that contains the task list and deals with add/delete operation on the list.","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"     * @param storageLoad The list containing all the user\u0027s tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"     * @throws DukeException The exception that handles the possible exceptions thrown when the program runs.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    public TaskList(List\u003cString\u003e storageLoad) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"        if (storageLoad \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"DesmondTo"},"content":"            throw new DukeException(\"Loading failed!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"DesmondTo"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"DesmondTo"},"content":"        addLoad(storageLoad);","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"DesmondTo"},"content":"    private Task createTask(TaskType type, String[] tags, String description, String date) {","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"DesmondTo"},"content":"        switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"DesmondTo"},"content":"        case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"DesmondTo"},"content":"            return new Todo(tags, description);","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"DesmondTo"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"DesmondTo"},"content":"            LocalDate at \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"DesmondTo"},"content":"            return new Event(tags, description, at);","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"DesmondTo"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"DesmondTo"},"content":"            LocalDate by \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"DesmondTo"},"content":"            return new Deadline(tags, description, by);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"DesmondTo"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"DesmondTo"},"content":"            return null;","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"DesmondTo"},"content":"    private void addLoad(List\u003cString\u003e storageLoad) {","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"DesmondTo"},"content":"        for (String taskString : storageLoad) {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"DesmondTo"},"content":"            // Extract task details into three parts","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"DesmondTo"},"content":"            String[] taskDetails \u003d taskString.split(\" \\\\| \", 5);","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"DesmondTo"},"content":"            TaskType type \u003d TaskType.valueOf(taskDetails[0]);","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"DesmondTo"},"content":"            String[] tags \u003d taskDetails[2].split(\" \");","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"DesmondTo"},"content":"            String description \u003d taskDetails[3];","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"DesmondTo"},"content":"            String date \u003d type.equals(TaskType.TODO) ? null : taskDetails[4];","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"DesmondTo"},"content":"            Task task \u003d createTask(type, tags, description, date);","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"DesmondTo"},"content":"            boolean isTask \u003d task !\u003d null;","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"DesmondTo"},"content":"            boolean isDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"DesmondTo"},"content":"            if (isTask \u0026\u0026 isDone) {","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"DesmondTo"},"content":"                task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"DesmondTo"},"content":"            if (isTask) {","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"DesmondTo"},"content":"                add(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"DesmondTo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"DesmondTo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"DesmondTo"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"DesmondTo"},"content":"        return tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"DesmondTo"},"content":"    public int getTaskNum() {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"DesmondTo"},"content":"        return taskNum;","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"DesmondTo"},"content":"     * Adds task to the task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"DesmondTo"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"DesmondTo"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"DesmondTo"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"DesmondTo"},"content":"        taskNum++;","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"DesmondTo"},"content":"     * Deletes task from the task list.","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"DesmondTo"},"content":"     * @param taskNum The task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"DesmondTo"},"content":"    public void delete(int taskNum) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"DesmondTo"},"content":"        tasks.remove(taskNum);","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"DesmondTo"},"content":"        this.taskNum--;","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":112}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":" * A class that deals with interactions with the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"    protected static final String LOGO \u003d \"\\t\\t            __      __      ___        \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"            + \"\\t\\t           |  _ \\\\   |   |  /   _   \\\\\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"            + \"\\t\\t           | | |  |  |   |  |  /  \\\\  |\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"            + \"\\t\\t           | |_|  |  |   |  |  \\\\_/  |\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"            + \"WRYYYY, Kono   |___/   |__|   \\\\____/   da!\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"     * Constructs an Ui that deals with interactions with the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"     * Returns welcome message to greet the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"        return LOGO;","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"     * Returns the error message to the screen.","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"     * @param errorMessage The error message based on the exception caught/.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"        return \"Wryyyyy!\\n\" + errorMessage;","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"DesmondTo":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"         styleClass\u003d\"hbox-group\" stylesheets\u003d\"@../css/dialogBoxStyle.css\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"#ffffff00\" radius\u003d\"40.0\" stroke\u003d\"TRANSPARENT\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DesmondTo":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"            prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/mainStyle.css\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.control.MainWindow\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" promptText\u003d\"Tell Dio something...\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"                   prefHeight\u003d\"42.0\" prefWidth\u003d\"324.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"DesmondTo":24}},{"path":"src/test/java/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"package util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.EmptyCommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"import duke.exception.IncompleteDescriptionException;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":" * A test class which tests if Parser\u0027s methods work as intended.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"     * Passes test when EmptyDescriptionException is thrown when the command is empty.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"    public void emptyCommandTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"        assertThrows(EmptyCommandException.class, () -\u003e Parser.parse(\"\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"     * Passes test when EmptyDescriptionException is thrown when the command is incomplete.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"    public void incompleteCommandTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DesmondTo"},"content":"        assertThrows(IncompleteDescriptionException.class, () -\u003e Parser.parse(\"todo \"));","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DesmondTo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DesmondTo"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"DesmondTo"},"content":"     * Passes test when EmptyDescriptionException is thrown when the command consists of purely whitespace.","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"DesmondTo"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"DesmondTo"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DesmondTo"},"content":"    public void allSpaceCommandTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DesmondTo"},"content":"        assertThrows(EmptyCommandException.class, () -\u003e Parser.parse(\"      \"));","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"DesmondTo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DesmondTo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"DesmondTo":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DesmondTo"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"DesmondTo"},"content":"deadline return book /by 2021-08-24","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"DesmondTo"},"content":"event project meeting /at 2021-09-01","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DesmondTo"},"content":"todo join sports club","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"DesmondTo"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"DesmondTo"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"DesmondTo"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"DesmondTo"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"DesmondTo"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"DesmondTo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"DesmondTo"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"DesmondTo"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"DesmondTo"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"DesmondTo"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"DesmondTo"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"DesmondTo"},"content":"event /at","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"event /at 2021-08-13","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"DesmondTo"},"content":"event someDescription /at","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"DesmondTo"},"content":"event someDescription /at","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DesmondTo"},"content":"event someDescription /at 2021-09-31","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"DesmondTo"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"DesmondTo"},"content":"deadline /by","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"DesmondTo"},"content":"deadline /by 2021-09-31","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DesmondTo"},"content":"deadline someDescription /by","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DesmondTo"},"content":"deadline someDescription /by","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"DesmondTo"},"content":"deadline someDescription /by 2021-09-31","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DesmondTo"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"DesmondTo":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"DesmondTo"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"DesmondTo"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DesmondTo":2,"-":19}}]
