[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import duke.utility.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import duke.utility.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"/**\u003ch1\u003eDuke task tracker\u003c/h1\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":" * The Duke program is an interactive task tracker that helps the user track general tasks, events and deadlines.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":" * The program interacts with the user using an {@link duke.utility.Ui} and uses a custom {@link duke.utility.TaskList}","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":" * class to keep track of tasks. It also makes use of a {@link duke.utility.Storage} class that enables logging of","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":" * the tasks locally. This saved task list will be read and imported everytime the the program runs, so that the user","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":" * can pick up where they left off.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":" * ","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":" * @author Justin Ngo","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"     * Initialises a new \u003ccode\u003eDuke\u003c/code\u003e object with its own {@link duke.utility.Ui} and","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"     * {@link duke.utility.TaskList}.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"     * If possible it will create a {@link duke.utility.Storage} object from a given filepath, which enables loading ","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"     * of previous tasks from that specified file if it exists, or automatically creates such a file for future ","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"     * logging. If error is encountered creating the file, the program will not log tasks for that run of the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"     * @param logPath File path of previous saved task log (if any).","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"    public Duke(String logPath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"            this.storage \u003d new Storage(logPath);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"            this.tasks \u003d new TaskList(storage.loadPreviousTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"            System.out.println(\"Unable to create/open specified file.\\nTasks will not be logged.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"            this.storage \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"    private void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"        this.ui.startListening(this.tasks, this.storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"        new Duke(\"taskLog.txt\").run();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"whoisjustinngo":49,"-":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"    DukeException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"        super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"     * An exception that is thrown if user types an unrecognisable command.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"    public static class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"        public InvalidCommandException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"            super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"     * An exception that is thrown if the user gives an incomplete or invalid command e.g. missing date and time for","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"     * {@link duke.task.Event} and {@link duke.task.Deadline} classes, missing task name etc.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"    public static class InvalidTaskDescriptionException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"        public InvalidTaskDescriptionException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"            super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"     * An exception that is thrown if the user tries to add a task with the same name as a task already in the list ","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"     * of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"    public static class DuplicateTaskException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"        public DuplicateTaskException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"            super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"     * An exception that is thrown if the user specifies an invalid task number to delete, e.g. if the task number ","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"     * specified is \u003c 0 or \u003e the number of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"    public static class InvalidTaskNumException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"        public InvalidTaskNumException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"            super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"     * An exception that is thrown when the user attempts to modify or look for a task that does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"    public static class NoSuchTaskException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"        public NoSuchTaskException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"            super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"     * An exception that is thrown when the user tries to mark an already completed task as completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"    public static class TaskAlreadyCompleteException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"        public TaskAlreadyCompleteException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"            super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"     * An exception that is thrown when the user tries to print or access the list of tasks when there are no tasks ","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"     * in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"    public static class EmptyTaskListException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"        public EmptyTaskListException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"            super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"whoisjustinngo":75}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":" * \u003ch2\u003eDeadline\u003c/h2\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":" * A task which has an additional \u003ccode\u003edateTime\u003c/code\u003e field which informs the user when the task needs to be ","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":" * completed by.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":" * @see Event","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":" * @see ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    public Deadline(String taskName, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"        super(taskName);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"    private Deadline(Deadline oldDeadline) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"        super(oldDeadline);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"        this.dateTime \u003d oldDeadline.dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"    public static Deadline createTask(String name, boolean isCompleted, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"        Deadline d \u003d new Deadline(name, dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"        if (isCompleted) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"            return new Deadline(d);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"            return d;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"     * @return a new \u003ccode\u003eDeadline\u003c/code\u003e which is exactly the same except with completion status set to ","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"     * \u003ccode\u003etrue\u003c/code\u003e.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"    public Deadline markAsCompleted() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"        return new Deadline(this);","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"        return \"D: \" + super.toString() + \" before: \" + this.dateTime.format(DateTimeFormatter.ofPattern(","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"                Task.dateTimeFormat));","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"whoisjustinngo":52}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":" * \u003ch2\u003eEvent\u003c/h2\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":" * A task which has an additional \u003ccode\u003edateTime\u003c/code\u003e field which informs the user when this event occurs.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":" * @see Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":" * @see ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"    public Event(String eventName, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"        super(eventName);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"    private Event(Event oldEvent) {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"        super(oldEvent);","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"        this.dateTime \u003d oldEvent.dateTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"    public static Event createTask(String name, boolean isCompleted, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"        Event e \u003d new Event(name, dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"        if (isCompleted) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"            return new Event(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"            return e;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"     * @return a new \u003ccode\u003eEvent\u003c/code\u003e which is exactly the same except with completion status set to ","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"     * \u003ccode\u003etrue\u003c/code\u003e.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"    public Event markAsCompleted() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"        return new Event(this);","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"        return \"E: \" + super.toString() + \" on: \" + this.dateTime.format(DateTimeFormatter.ofPattern(","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"                Task.dateTimeFormat));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"whoisjustinngo":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"    private final String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"    private final boolean isCompleted;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"    protected static String dateTimeFormat \u003d \"E, dd MMM yyyy, HH:mm\"; ","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"     * Creates a new basic \u003ccode\u003eTask\u003c/code\u003e object, which has a name and a completion status. ","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"     * @param taskName the name of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"     * @see ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"    Task(String taskName) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"    protected Task(Task oldTask) {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"        this.taskName \u003d oldTask.taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"     * Changes status of a task to \u0027completed\u0027.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"     * @return a new {@link duke.task.Task} exactly the same as \u003ccode\u003ethis\u003c/code\u003e but with the ","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"     * \u003ccode\u003eisCompleted\u003c/code\u003e set to true.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"     * @see Event","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"     * @see ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"     * @see Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"    public abstract Task markAsCompleted();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"     * Gets the name of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"     * @return the name of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"        return this.taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"     * Gets the completion status of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"     * @return the completion status of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"    public boolean getIsCompleted() {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"        return this.isCompleted;","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"        return \"[\" + (isCompleted ? \"X\": \" \") + \"] \" + this.taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"whoisjustinngo":54}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":" * \u003ch2\u003eToDo\u003c/h2\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":" * A simple task which only has a name and a completion status.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":" * For more complex tasks with a date \u0026 time see {@link duke.task.Deadline}, {@link duke.task.Event}.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"     * Creates a simple task which has only completion status. Default completion status is \u003ccode\u003efalse\u003c/code\u003e.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"     * @param taskName the name of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"     * @see Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"     * @see Event","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"        super(taskName);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    private ToDo(ToDo oldTask) {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"        super(oldTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"     * Factory method for task creation.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"     * @param name name of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"     * @param isCompleted completion status of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"     * @return the newly created task.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"    public static ToDo createTask(String name, boolean isCompleted) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"        ToDo t \u003d new ToDo(name);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"        if (isCompleted) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"            return new ToDo(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"            return t;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"     * @return a new \u003ccode\u003eToDo\u003c/code\u003e which is exactly the same except with completion status set to \u003ccode\u003etrue\u003c/code\u003e.","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"    public ToDo markAsCompleted() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"        return new ToDo(this);","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"        return \"T: \" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"whoisjustinngo":53}},{"path":"src/main/java/duke/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package duke.utility;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":" * \u003ch2\u003eParser\u003c/h2\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":" * Auxiliary class that parses commands from the user and hands the parsed commands and details to","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":" * {@link duke.utility.TaskList} to track.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"    Parser(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"     * Parses a given command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"     * @param command command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"     * @return a string that updates the user of the outcome of the command.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"    String parseCommand(String command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"        if (command.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"            return \"Please type some commands!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"        String[] commandTokens \u003d command.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"        // parse command","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"            switch (commandTokens[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"                return \"TERMINATE\";","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"            case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"                return this.parseDoneTask(command.substring(5).trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"            case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"                return this.taskList.getAllTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"                return this.parseDeleteTask(command.substring(7));","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"                return this.taskList.search(command.substring(5).trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"                return this.parseNewTask(command); // default is add new duke.task","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"            return ex.getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"            return \"Invalid task description: \"  ","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"                    + \"invalid date/time\\nPlease use [command type] [task name] / [dd-mm-yyyy] [time (in 24hr \"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"                    + \"format)]\\ne.g. event lecture / 21-02-2021 1500\";","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"            return \"Unable to log task.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (StringIndexOutOfBoundsException ex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"            return \"Invalid task description: missing details!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"            return \"Invalid input for delete command. Please enter [delete] followed by the number of the line to \"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"                    + \"delete\\ne.g. delete 2\";","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"            return \"Unexpected error occurred. Please check input.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"    private String parseDeleteTask(String taskNum) throws DukeException.InvalidTaskNumException, IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"        String message \u003d this.taskList.deleteTask(Integer.parseInt(taskNum.trim()));","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"        if (this.storage !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"            this.storage.deleteTaskLogEntry(Integer.parseInt(taskNum.trim()) - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"        return message;","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"whoisjustinngo"},"content":"    private String parseDoneTask(String taskName) throws DukeException.NoSuchTaskException,","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"whoisjustinngo"},"content":"            DukeException.TaskAlreadyCompleteException, IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"whoisjustinngo"},"content":"        String message \u003d this.taskList.markAsCompleted(taskName);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"whoisjustinngo"},"content":"        if (this.storage !\u003d null) { // log","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"whoisjustinngo"},"content":"            int taskIdx \u003d this.taskList.getTaskIdx(taskName);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"whoisjustinngo"},"content":"            this.storage.changeTaskLogToCompleted(taskIdx);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"whoisjustinngo"},"content":"        return message;","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"whoisjustinngo"},"content":"    private String parseNewTask(String command) throws DukeException.DuplicateTaskException,","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"whoisjustinngo"},"content":"            DukeException.InvalidTaskDescriptionException, DukeException.InvalidCommandException, IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"whoisjustinngo"},"content":"        String[] commandTokens \u003d command.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"whoisjustinngo"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"whoisjustinngo"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"whoisjustinngo"},"content":"        if (commandTokens[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"whoisjustinngo"},"content":"            taskName \u003d command.substring(5).trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"whoisjustinngo"},"content":"            if (this.taskList.existingTasks.contains(taskName)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"whoisjustinngo"},"content":"                throw new DukeException.DuplicateTaskException(\"Task already in list!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"whoisjustinngo"},"content":"            } else if (taskName.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"whoisjustinngo"},"content":"                throw new DukeException.InvalidTaskDescriptionException(\"Invalid task description: missing name \"","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"whoisjustinngo"},"content":"                        + \"/ date \u0026 time!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"whoisjustinngo"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"whoisjustinngo"},"content":"                task \u003d new ToDo(taskName);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"whoisjustinngo"},"content":"                if (this.storage !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"whoisjustinngo"},"content":"                    this.storage.append(\"T\", \"F\", taskName);","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"whoisjustinngo"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"whoisjustinngo"},"content":"                return this.taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"whoisjustinngo"},"content":"        } else if (commandTokens[0].equals(\"event\") || commandTokens[0].equals(\"deadline\")) { //either event / deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"whoisjustinngo"},"content":"            String details \u003d command.substring(commandTokens[0].length() + 1).trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"whoisjustinngo"},"content":"            String[] detailTokens \u003d details.split(\"/\");","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"whoisjustinngo"},"content":"            if (detailTokens.length \u003c 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"whoisjustinngo"},"content":"                throw new DukeException.InvalidTaskDescriptionException(\"Invalid task description: missing name \"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"whoisjustinngo"},"content":"                        + \"/ date \u0026 time!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"whoisjustinngo"},"content":"            } else if (detailTokens.length \u003e 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"whoisjustinngo"},"content":"                throw new DukeException.InvalidTaskDescriptionException(\"Invalid task description: \"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"whoisjustinngo"},"content":"                        + \"invalid date/time\\nPlease use [command type] [task name] / [dd-mm-yyyy] [time (in 24hr \"","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"whoisjustinngo"},"content":"                        + \"format)]\\ne.g. event lecture / 21-02-2021 1500\");","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"whoisjustinngo"},"content":"            } else if (this.taskList.existingTasks.contains(detailTokens[0].trim())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"whoisjustinngo"},"content":"                throw new DukeException.DuplicateTaskException(\"Task already in list!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"whoisjustinngo"},"content":"            } else { // valid","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"whoisjustinngo"},"content":"                taskName \u003d detailTokens[0].trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"whoisjustinngo"},"content":"                String[] dateTimeString \u003d detailTokens[1].trim().split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"whoisjustinngo"},"content":"                LocalDate date \u003d LocalDate.parse(dateTimeString[0], DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"whoisjustinngo"},"content":"                LocalTime time \u003d LocalTime.parse(dateTimeString[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"whoisjustinngo"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"whoisjustinngo"},"content":"                if (commandTokens[0].trim().equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"whoisjustinngo"},"content":"                    task \u003d new Event(taskName, dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"whoisjustinngo"},"content":"                    if (storage !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"whoisjustinngo"},"content":"                        this.storage.append(\"E\", \"F\", taskName,","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"whoisjustinngo"},"content":"                                dateTime.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"whoisjustinngo"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"whoisjustinngo"},"content":"                } else { //deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"whoisjustinngo"},"content":"                    task \u003d new Deadline(taskName, dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"whoisjustinngo"},"content":"                    if (storage !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"whoisjustinngo"},"content":"                        this.storage.append(\"D\", \"F\", taskName,","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"whoisjustinngo"},"content":"                                dateTime.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"whoisjustinngo"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"whoisjustinngo"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"whoisjustinngo"},"content":"                return this.taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"whoisjustinngo"},"content":"        } else { // invalid input","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"whoisjustinngo"},"content":"            throw new DukeException.InvalidCommandException(\"Invalid command!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"whoisjustinngo":150}},{"path":"src/main/java/duke/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package duke.utility;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":" * \u003ch2\u003eStorage\u003c/h2\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":" * A class that helps read previous task logs from local memory and write to that task log based on user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"     * Creates a link to a locally saved task log or creates a new file for future logging of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"     * @param filePath the path to the file to read from and write to or location to create the new file if it does not","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"     *                exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"     * @throws IOException if file does not exist and cannot be created.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"        // try to load the file, if not, create it","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"        File previousLog \u003d new File(this.filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"        if (! previousLog.createNewFile()) { // file already exists","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"            System.out.println(\"Successfully established connection with file \" + filePath","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"                    + \"\\nPrevious duke.task log imported.\"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"                    + \"\\nAll changes to task log will be saved there.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"        } else { // new file is created","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"            System.out.println(\"Specified file not found.\\nNew file created: \" + filePath","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"                    + \"\\nTask log will be saved there.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"     * Parses the locally saved task log from the file path provided and generates a list of tasks to import.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"     * @return a list of tasks generated from parsing the locally saved task log.","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"     * @throws FileNotFoundException if the stipulated file can neither be read from (e.g. does not exist) nor","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"     * be created.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"    public List\u003cTask\u003e loadPreviousTasks() throws FileNotFoundException {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"        List\u003cTask\u003e prevTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"        Scanner sc \u003d new Scanner(new File(this.filePath));","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"            String task \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"            String[] tokens \u003d task.split(\";\");","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"            boolean isCompleted \u003d tokens[1].equals(\"T\");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"            String taskName \u003d tokens[2];","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"            // format: duke.task type | isCompleted | event name | date/time","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"            switch (tokens[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"            case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"                prevTasks.add(ToDo.createTask(taskName, isCompleted));","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"            case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"                prevTasks.add(Event.createTask(taskName, isCompleted, LocalDateTime.parse(tokens[3].trim(),","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"                        DateTimeFormatter.ISO_LOCAL_DATE_TIME)));","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"            case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"                prevTasks.add(Deadline.createTask(taskName, isCompleted, LocalDateTime.parse(tokens[3].trim(),","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"                        DateTimeFormatter.ISO_LOCAL_DATE_TIME)));","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"            };","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"        return prevTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"    void append(String e, String f, String taskName, String dateTime) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"        this.append(e, f, taskName + \";\" + dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"    void append(String type, String isCompleted, String detail) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"whoisjustinngo"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, true); // append flag true -\u003e append, not overwrite","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"whoisjustinngo"},"content":"        fw.write(type + \";\" + isCompleted + \";\" + detail + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"whoisjustinngo"},"content":"        fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"whoisjustinngo"},"content":"    void changeTaskLogToCompleted(int lineNum) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"whoisjustinngo"},"content":"        int currentLine \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"whoisjustinngo"},"content":"        Scanner sc \u003d new Scanner(new File(this.filePath));","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"whoisjustinngo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"whoisjustinngo"},"content":"        while (sc.hasNextLine()) { // read the entire file except the line to change, which is ignored","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"whoisjustinngo"},"content":"            String entry \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"whoisjustinngo"},"content":"            if (currentLine !\u003d lineNum) { // line to be modified","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"whoisjustinngo"},"content":"                sb.append(entry);","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"whoisjustinngo"},"content":"            } else { // generate new entry","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"whoisjustinngo"},"content":"                sb.append(entry.replaceAll(\";F;\", \";T;\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"whoisjustinngo"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"whoisjustinngo"},"content":"            currentLine++;","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"whoisjustinngo"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, false); // append flag false -\u003e overwrite file","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"whoisjustinngo"},"content":"        fw.write(sb.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"whoisjustinngo"},"content":"        fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"whoisjustinngo"},"content":"        sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"whoisjustinngo"},"content":"    void deleteTaskLogEntry(int lineIdx) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"whoisjustinngo"},"content":"        int currentLine \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"whoisjustinngo"},"content":"        Scanner sc \u003d new Scanner(new File(this.filePath));","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"whoisjustinngo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"whoisjustinngo"},"content":"        while (sc.hasNextLine()) { // read the entire file except the line to change, which would be ignored","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"whoisjustinngo"},"content":"            String entry \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"whoisjustinngo"},"content":"            if (currentLine !\u003d lineIdx) { // line to be modified","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"whoisjustinngo"},"content":"                sb.append(entry);","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"whoisjustinngo"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"whoisjustinngo"},"content":"            currentLine++;","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"whoisjustinngo"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath, false); // append false -\u003e overwrite file","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"whoisjustinngo"},"content":"        fw.write(sb.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"whoisjustinngo"},"content":"        fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"whoisjustinngo"},"content":"        sc.close();   ","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"whoisjustinngo":126}},{"path":"src/main/java/duke/utility/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package duke.utility;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":" * \u003ch2\u003eTaskList\u003c/h2\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":" * Organises all tasks created by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":" * Handles details from the {@link duke.utility.Parser} class and adds, modifies, or deletes tasks accordingly.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"    protected final HashSet\u003cString\u003e existingTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"        this.existingTasks \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"    public TaskList(List\u003cTask\u003e previousTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"        this.existingTasks \u003d new HashSet\u003cString\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"        for (Task previousTask : previousTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"            this.tasks.add(previousTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"            this.existingTasks.add(previousTask.getTaskName());","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"    String add(Task task) { //TODO refactor: add task from here not from parser","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"        this.existingTasks.add(task.getTaskName());","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"        return String.format(\"New task added to list:\\n%s\", task);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"    protected String markAsCompleted(String taskName) throws DukeException.TaskAlreadyCompleteException,","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"            DukeException.NoSuchTaskException {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"        int taskIdx \u003d this.getTaskIdx(taskName);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"        Task completedTask \u003d this.tasks.get(taskIdx);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"        if (completedTask.getIsCompleted()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"            throw new DukeException.TaskAlreadyCompleteException(\"Task is already complete!!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"        this.tasks.remove(taskIdx);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"        this.tasks.add(taskIdx, completedTask.markAsCompleted());","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"        return \"Task marked as completed:\\n\" + this.tasks.get(taskIdx).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"    String deleteTask(int taskNum) throws DukeException.InvalidTaskNumException {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"        if (taskNum \u003e this.tasks.size() || taskNum \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"            throw new DukeException.InvalidTaskNumException(\"Task number \" + taskNum + \" does not exist!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"            Task toRemove \u003d this.tasks.get(taskNum - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"            this.tasks.remove(taskNum - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"            this.existingTasks.remove(toRemove.getTaskName());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"            return \"Successfully deleted:\\n\" + toRemove;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"     * Aggregates all the tasks in the list and presents it neatly to output to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"     * @return all the tasks currently in the list as a \u003ccode\u003eString\u003c/code\u003e representation.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"     * @throws DukeException.EmptyTaskListException if the taskList currently contains no tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"    public String getAllTasks() throws DukeException.EmptyTaskListException {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"            throw new DukeException.EmptyTaskListException(\"There are no items in your list!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"        sb.append(\"Your list contains:\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"            String itemNum \u003d i + 1 + \". \";","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"            sb.append(itemNum);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"            sb.append(this.tasks.get(i).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"            if (i \u003c this.tasks.size() - 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"                sb.append(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"whoisjustinngo"},"content":"    protected int getTaskIdx(String taskName) throws DukeException.NoSuchTaskException {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"whoisjustinngo"},"content":"        int currentTaskNum \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"whoisjustinngo"},"content":"        while (currentTaskNum \u003c this.tasks.size()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"whoisjustinngo"},"content":"            if (this.tasks.get(currentTaskNum).getTaskName().equals(taskName)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"whoisjustinngo"},"content":"                return currentTaskNum;","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"whoisjustinngo"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"whoisjustinngo"},"content":"                currentTaskNum++;","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"whoisjustinngo"},"content":"        throw new DukeException.NoSuchTaskException(\"Task is not in list!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"whoisjustinngo"},"content":"    protected String search(String keywords) throws DukeException.InvalidTaskDescriptionException, ","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"whoisjustinngo"},"content":"            DukeException.NoSuchTaskException {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"whoisjustinngo"},"content":"        if (keywords.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"whoisjustinngo"},"content":"            throw new DukeException.InvalidTaskDescriptionException(\"Please enter some keywords to search for!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"whoisjustinngo"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"whoisjustinngo"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"whoisjustinngo"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"whoisjustinngo"},"content":"                String taskName \u003d this.tasks.get(i).getTaskName();","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"whoisjustinngo"},"content":"                if (taskName.contains(keywords)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"whoisjustinngo"},"content":"                    sb.append(i + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"whoisjustinngo"},"content":"                    sb.append(\".\");","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"whoisjustinngo"},"content":"                    sb.append(this.tasks.get(i).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"whoisjustinngo"},"content":"                    if (i \u003c this.tasks.size() - 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"whoisjustinngo"},"content":"                        sb.append(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"whoisjustinngo"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"whoisjustinngo"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"whoisjustinngo"},"content":"            if (sb.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"whoisjustinngo"},"content":"                throw new DukeException.NoSuchTaskException(String.format(\"No tasks found containing the keyword(s) \" ","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"whoisjustinngo"},"content":"                        + \"\\\"%s\\\"\", keywords));","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"whoisjustinngo"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"whoisjustinngo"},"content":"                return String.format(\"Tasks found with names containing \\\"%s\\\" as a substring:\\n\", keywords) + sb; ","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"whoisjustinngo":123}},{"path":"src/main/java/duke/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package duke.utility;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"        ","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"     * Starts listening for commands from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"     * @param tasks the {@link duke.utility.TaskList} this Ui is linked to.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"     * @param storage the {@link duke.utility.Storage} this Ui is linked to.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"    public void startListening(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"        Parser parser \u003d new Parser(tasks, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"        String welcomeMessage \u003d \"Hello I\u0027m Duke!\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"        this.printMessage(welcomeMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"        boolean shouldContinue \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"        while (shouldContinue) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"            String command \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"            String message \u003d parser.parseCommand(command);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"            if (message.equals(\"TERMINATE\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"                shouldContinue \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"                this.printMessage(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"        printMessage(\"Goodbye for now!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"     * Outputs a message.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"     * @param message the message to print.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"        System.out.println(\"-------------------------\");","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"        System.out.println(\"-------------------------\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"whoisjustinngo":44}},{"path":"src/test/java/duke/utility/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package duke.utility;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"    public void parseCommand_invalidCommands_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"        Parser p \u003d new Parser(new TaskList(), null); ","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"        assertEquals(\"Please type some commands!\", p.parseCommand(\"\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"        assertEquals(\"Please type some commands!\", p.parseCommand(\"  \"));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"        assertEquals(\"Invalid task description: missing name / date \u0026 time!\", p.parseCommand(\"event\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"        assertEquals(\"Invalid input for delete command. Please enter [delete] followed by the number of\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"                \" the line to delete\\ne.g. delete 2\", p.parseCommand(\"delete abc\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"        assertEquals(\"Invalid command!\", p.parseCommand(\"beans\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"        assertEquals(\"Invalid task description: \"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"                + \"invalid date/time\\nPlease use [command type] [task name] / [dd-mm-yyyy] [time (in 24hr \" +","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"                \"format)]\\ne.g. event lecture / 21-02-2021 1500\", p.parseCommand(\"deadline essay / 12 Nov 1998 1234\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"    public void parseCommand_modifyNonExistentItems_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"        Task t \u003d new ToDo(\"code\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"        List\u003cTask\u003e l \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"        l.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"        TaskList tl \u003d new TaskList(l);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"        Parser p \u003d new Parser(tl, null);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"        assertEquals(\"Task is not in list!\", p.parseCommand(\"done sleep\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"        assertEquals(\"Task number 3 does not exist!\", p.parseCommand(\"delete 3\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"whoisjustinngo":38}},{"path":"src/test/java/duke/utility/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package duke.utility;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"    public void storageInit_invalidPath_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"            Storage s \u003d new Storage(\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"            ","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"whoisjustinngo":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"beans","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"hello world","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"todo project","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"event project /on monday","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"done project","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"event meeting /on monday 5pm","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"deadline meeting/on tuesday 3pm","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"deadline essay /by sunday 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"done essay","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"done essay","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"whoisjustinngo":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"if ! javac -cp /Users/justin/Desktop/Y3S1-codes/cs2103/iP/src/main/java -Xlint:none -d ../bin /Users/justin/Desktop/Y3S1-codes/cs2103/iP/src/main/java/*.java","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"whoisjustinngo":1,"-":37}}]
