[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermannws"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"shermannws"},"content":" * Represents a Deadline Task which inherits from Task and contains the dateTime for the deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"shermannws"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"shermannws"},"content":" * @author Sherman Ng Wei Sheng","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"shermannws"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"shermannws"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"shermannws"},"content":"    private String dateTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"shermannws"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"shermannws"},"content":"     * Constructor to initialise a new Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"shermannws"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"shermannws"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"shermannws"},"content":"     * @param dateTime The date and time of the deadline for the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"shermannws"},"content":"    public Deadline(String description, String dateTime) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"shermannws"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"shermannws"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"shermannws"},"content":"     * Overridden toString method.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"shermannws"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"shermannws"},"content":"     * @return The String representation of the task, prefixed with a status icon and deadlines identifier.","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"shermannws"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"shermannws"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"shermannws"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", this.getStatusIcon(), this.description, this.dateTime);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"shermannws"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"shermannws":29}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermannws"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"shermannws"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"shermannws"},"content":" * Represents a Personal Assistant Chatbot that helps a person keeps track of various things.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"shermannws"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"shermannws"},"content":" * @author Sherman Ng Wei Sheng","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"shermannws"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"shermannws"},"content":"    private String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"shermannws"},"content":"    private TaskList list;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"shermannws"},"content":"     * Class constructor specifying the name of the Chatbot to be created.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"shermannws"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"shermannws"},"content":"     * @param name Name of the Chatbot.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"shermannws"},"content":"    public Duke(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"shermannws"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"shermannws"},"content":"        this.list \u003d new TaskList();","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"shermannws"},"content":"     * Print the greeting message of the Chatbot.","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"shermannws"},"content":"    private void greet() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"shermannws"},"content":"        String message \u003d ","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"shermannws"},"content":"                \"    ____________________________________________________________\\n\" + ","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"shermannws"},"content":"                \"    Hello! I\u0027m \" + this.name + \"\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"shermannws"},"content":"                \"    What can I do for you?\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"shermannws"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"shermannws"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"shermannws"},"content":"     * Print the goodbye message of the Chatbot.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"shermannws"},"content":"    private void terminate() {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"shermannws"},"content":"        String message \u003d ","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"shermannws"},"content":"                \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"shermannws"},"content":"                \"    Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"shermannws"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"shermannws"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"shermannws"},"content":"     * Add the given task into the list and print a log accordingly.","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"shermannws"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"shermannws"},"content":"     * @param task The Task object to be added.","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"shermannws"},"content":"    private void addTask(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"shermannws"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"shermannws"},"content":"        String message \u003d","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"shermannws"},"content":"                \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"shermannws"},"content":"                \"    Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"shermannws"},"content":"                \"      \" + task + \"\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"shermannws"},"content":"                String.format(\"    Now you have %d tasks in the list.\\n\", this.list.size()) +        ","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"shermannws"},"content":"                \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"shermannws"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"shermannws"},"content":"     * Prints the formatted list of content in \u003ccode\u003elist\u003c/code\u003e.","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"shermannws"},"content":"    private void printList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"shermannws"},"content":"        int listSize \u003d this.list.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"shermannws"},"content":"        ","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"shermannws"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"shermannws"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"shermannws"},"content":"        for (int i \u003d 0; i \u003c listSize; i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"shermannws"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"shermannws"},"content":"            Task content \u003d this.list.get(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"shermannws"},"content":"            System.out.println(\"    \" + index + \".\" + content);","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"shermannws"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"shermannws"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"shermannws"},"content":"     * Check if a given string is a command that denotes that a task is done.","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"shermannws"},"content":"     * If it is a valid Done command, the corresponding task will be marked done and returns true.","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"shermannws"},"content":"     * If it is a Done command with an incorrect index, an error prompt will be displayed and returns true.","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"shermannws"},"content":"     * For all other command received, returns false.","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"shermannws"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"shermannws"},"content":"     * @param command The string corresponding to the input given by the user in the command line.","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"shermannws"},"content":"     * @return A boolean value, true if it is a Done command and false otherwise.","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"shermannws"},"content":"    private boolean handleDoneCommand(String command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"shermannws"},"content":"        String[] splitWord \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"shermannws"},"content":"        ","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"shermannws"},"content":"        if (splitWord.length !\u003d 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"shermannws"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"shermannws"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"shermannws"},"content":"        String firstWord \u003d splitWord[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"shermannws"},"content":"        String secondWord \u003d splitWord[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"shermannws"},"content":"        int secondWordLength \u003d secondWord.length();","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"shermannws"},"content":"        ","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"shermannws"},"content":"        if (firstWord.equals(\"done\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"shermannws"},"content":"            for (int i \u003d 0; i \u003c secondWordLength; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"shermannws"},"content":"                if (Character.isDigit(secondWord.charAt(i))) {","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"shermannws"},"content":"                    continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"shermannws"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"shermannws"},"content":"                    return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"shermannws"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"shermannws"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"shermannws"},"content":"            int taskToBeMarkDone \u003d Integer.parseInt(secondWord) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"shermannws"},"content":"            boolean markedDone \u003d this.list.markDoneAtIndex(taskToBeMarkDone);","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"shermannws"},"content":"            if (markedDone) {","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"shermannws"},"content":"                String message \u003d","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"shermannws"},"content":"                        \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"shermannws"},"content":"                        \"    Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"shermannws"},"content":"                        \"      \" + this.list.get(taskToBeMarkDone) + \"\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"shermannws"},"content":"                        \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"shermannws"},"content":"                System.out.println(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"shermannws"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"shermannws"},"content":"                String message \u003d","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"shermannws"},"content":"                        \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"shermannws"},"content":"                        \"    Kindly key in a valid index to be marked done.\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"shermannws"},"content":"                        \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"shermannws"},"content":"                System.out.println(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"shermannws"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"shermannws"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"shermannws"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"shermannws"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"shermannws"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"shermannws"},"content":"     * Method to start the Chatbot and listen for user input.","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"shermannws"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"shermannws"},"content":"     * @param sc Scanner object to listen for user input.","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"shermannws"},"content":"    public void start(Scanner sc) {","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"shermannws"},"content":"        this.greet();","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"shermannws"},"content":"        while (true) {","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"shermannws"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"shermannws"},"content":"            String[] splitWord \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"shermannws"},"content":"            String firstWord \u003d splitWord[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"shermannws"},"content":"            ","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"shermannws"},"content":"            switch (firstWord) {","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"shermannws"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"shermannws"},"content":"                    this.terminate();","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"shermannws"},"content":"                    return;","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"shermannws"},"content":"                case \"list\":","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"shermannws"},"content":"                    this.printList();","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"shermannws"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"shermannws"},"content":"                case \"done\":","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"shermannws"},"content":"                    boolean isDoneCommand \u003d handleDoneCommand(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"shermannws"},"content":"                    if (isDoneCommand) {","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"shermannws"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"shermannws"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"shermannws"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"shermannws"},"content":"                    String toDoDescription \u003d splitWord[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"shermannws"},"content":"                    this.addTask(new ToDo(toDoDescription));","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"shermannws"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"shermannws"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"shermannws"},"content":"                    String deadlineDescription \u003d splitWord[1].split(\" /by \", 2)[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"shermannws"},"content":"                    String deadlineDateTime \u003d splitWord[1].split(\" /by \", 2)[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"shermannws"},"content":"                    this.addTask(new Deadline(deadlineDescription, deadlineDateTime));","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"shermannws"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"shermannws"},"content":"                case \"event\":","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"shermannws"},"content":"                    String eventDescription \u003d splitWord[1].split(\" /at \", 2)[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"shermannws"},"content":"                    String eventDateTime \u003d splitWord[1].split(\" /at \", 2)[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"shermannws"},"content":"                    this.addTask(new Event(eventDescription, eventDateTime));","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"shermannws"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"shermannws"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"shermannws"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"shermannws"},"content":"     * Main method to initialise a Duke object.","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"shermannws"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"shermannws"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":175,"author":{"gitId":"shermannws"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"shermannws"},"content":"        Duke duke \u003d new Duke(\"Duke\");","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"shermannws"},"content":"        duke.start(sc);","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"shermannws":176,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermannws"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"shermannws"},"content":" * Represents a Event Task which inherits from Task and contains the dateTime for the event.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"shermannws"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"shermannws"},"content":" * @author Sherman Ng Wei Sheng","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"shermannws"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"shermannws"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"shermannws"},"content":"    private String dateTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"shermannws"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"shermannws"},"content":"     * Constructor to initialise a new Event.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"shermannws"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"shermannws"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"shermannws"},"content":"     * @param dateTime The date and time of the event.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"shermannws"},"content":"    public Event(String description, String dateTime) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"shermannws"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"shermannws"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"shermannws"},"content":"     * Overridden toString method.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"shermannws"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"shermannws"},"content":"     * @return The String representation of the task, prefixed with a status icon and events identifier.","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"shermannws"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"shermannws"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"shermannws"},"content":"        return String.format(\"[E][%s] %s (at: %s)\", this.getStatusIcon(), this.description, this.dateTime);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"shermannws"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"shermannws":29}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermannws"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"shermannws"},"content":" * Represents a Task which contains a String description and a boolean status.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"shermannws"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"shermannws"},"content":" * @author Sherman Ng Wei Sheng","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"shermannws"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"shermannws"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"shermannws"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"shermannws"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"shermannws"},"content":"     * Constructor to initialise a new Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"shermannws"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"shermannws"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"shermannws"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"shermannws"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"shermannws"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"shermannws"},"content":"     * Method to obtain the status icon of the particular task.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"shermannws"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"shermannws"},"content":"     * @return The status icon depending on whether the task is marked as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"shermannws"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"shermannws"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"shermannws"},"content":"     * Method to mark the task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"shermannws"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"shermannws"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"shermannws"},"content":"     * Overridden toString method.","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"shermannws"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"shermannws"},"content":"     * @return The String representation of the task, prefixed with a status icon.","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"shermannws"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"shermannws"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"shermannws"},"content":"        return getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"shermannws"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"shermannws":45}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermannws"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"shermannws"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"shermannws"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"shermannws"},"content":" * Represents a list that contains a \u003ccode\u003eList\u003c/code\u003e of tasks.","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"shermannws"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"shermannws"},"content":" * @author Sherman Ng Wei Sheng","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"shermannws"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"shermannws"},"content":"public class TaskList {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"shermannws"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"shermannws"},"content":"     * Constructor to initialise a new TaskList","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"shermannws"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"shermannws"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"shermannws"},"content":"     * Method to add a new task to the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"shermannws"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"shermannws"},"content":"     * @param task Task to be added","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"shermannws"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"shermannws"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"shermannws"},"content":"     * Method to retrieve the size of the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"shermannws"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"shermannws"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"shermannws"},"content":"    public int size() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"shermannws"},"content":"        return this.list.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"shermannws"},"content":"     * Method to obtain the Task at the given index.","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"shermannws"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"shermannws"},"content":"     * @param index The index to retrieve the Task from in the TaskList.","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"shermannws"},"content":"     * @return The Task that is located at the given index.","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"shermannws"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"shermannws"},"content":"        return this.list.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"shermannws"},"content":"     * If given a valid index, returns true and mark the Task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"shermannws"},"content":"     * If given an invalid index, returns false.","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"shermannws"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"shermannws"},"content":"     * @param index The given index to mark the Task located there as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"shermannws"},"content":"     * @return A boolean value, true if successfully marked as done and false if invalid index given.","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"shermannws"},"content":"    public boolean markDoneAtIndex(int index) {","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"shermannws"},"content":"        if (index \u003e this.size()-1 || index \u003c 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"shermannws"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"shermannws"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"shermannws"},"content":"            Task taskToBeMarkDone \u003d this.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"shermannws"},"content":"            taskToBeMarkDone.markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"shermannws"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"shermannws"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"shermannws"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"shermannws":63}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shermannws"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"shermannws"},"content":" * Represents a ToDo Task which inherits from Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"shermannws"},"content":" *","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"shermannws"},"content":" * @author Sherman Ng Wei Sheng","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"shermannws"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"shermannws"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"shermannws"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"shermannws"},"content":"     * Constructor to initialise a new ToDo.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"shermannws"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"shermannws"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"shermannws"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"shermannws"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"shermannws"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"shermannws"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"shermannws"},"content":"     * Overridden toString method.","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"shermannws"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"shermannws"},"content":"     * @return The String representation of the task, prefixed with a status icon and todos identifier.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"shermannws"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"shermannws"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"shermannws"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"shermannws"},"content":"        return String.format(\"[T][%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"shermannws"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"shermannws"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"shermannws":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shermannws"},"content":"todo test todo","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"shermannws"},"content":"deadline test deadline /by Week 2 Thu 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"shermannws"},"content":"event test event /at Week 2 Fri 1900","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"shermannws"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"shermannws"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"shermannws"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"shermannws"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"shermannws"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"shermannws"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"shermannws"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"shermannws"},"content":"todo test todo again","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"shermannws"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"shermannws"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"shermannws":13}}]
