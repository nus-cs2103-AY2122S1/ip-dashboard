[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.7.2\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.7.2\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jacobnbh":18,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"### Add task","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"add a task based on its task type (ToDo, Deadline, Event) to the Duke bot","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"### Show task list","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"returns a list of all the tasks in the bot","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"### Delete task","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"delete a task from the Task List","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"### Mark task as done","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"mark a task as done from the Task List","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"### Find Task","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"find a task from the Task List","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"### Add notes","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"add a short note snippet for a task ","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"### Show notes","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"show the notes of the respective task","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"### `todo` - add a task of type \u0027ToDo\u0027","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"`todo borrow book`","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"### `deadline` - add a task of type \u0027Deadline\u0027","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"Examples of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"`deadline project submission /by 2021-09-19 1800`","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"`deadline return book / by 21/10/2021 1300`","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"### `event ` - add a task of type \u0027Event\u0027","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"Examples of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"`event project meeting /at 2021/09/20 1300`","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"`event family gathering /at 22/10/2021 1900`","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"### `list` - returns a list of all the added tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"### `done` - marks respective task as done","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"`done 2 // marks task number 2 on the task list as done`","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Jacobnbh"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"Jacobnbh"},"content":"### `delete` - deletes respective task in the task list","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"Jacobnbh"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"Jacobnbh"},"content":"`delete 4 // deletes task number 4 from the task list`","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"Jacobnbh"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"Jacobnbh"},"content":"### `find` - finds task from task list based on keyword","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Jacobnbh"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"Jacobnbh"},"content":"`find borrow book`","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"Jacobnbh"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"Jacobnbh"},"content":"### `addNote` - adds notes to the respective task ","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"Jacobnbh"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"Jacobnbh"},"content":"`addNote read book / textbook on algorithms`","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"Jacobnbh"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"Jacobnbh"},"content":"### `showNote` - show notes of the respective task","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"Jacobnbh"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":103,"author":{"gitId":"Jacobnbh"},"content":"`showNote project meeting`","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Jacobnbh":79,"-":24}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"import duke.Main;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Jacobnbh":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import duke.command.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import duke.io.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":" * Duke class encapsulates a Duke program. It contains the","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":" * initialization of the Duke bot, as well as the methods","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":" * required to parse and return user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"     * Constructor for a Duke bot. It also initializes the","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"     * UI, Storage and tries to load an existing Task List.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"        this.storage \u003d new Storage(\"/data/duke.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"            /* try loading text file from storage */","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"     * Takes in a user input, parses it and returns a response","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"     * @param input user input in the form of a command","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"     * @return the response with regard to the input","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"        assert input !\u003d null : \"input cannot be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"            response \u003d new Parser(input, this.taskList, this.storage, this.ui).compute();","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"            response \u003d e.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"        return response;","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"     * Returns a welcome message to the user","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"     * @return Duke\u0027s welcome message","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"    public String welcomeMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"        return this.ui.welcomeMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Jacobnbh":60,"-":3}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":" * Main class encapsulates a link between the Duke program and the MainWindow GUI","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"     * Initializes the javafx stage to be shown on the GUI","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"     * @param stage stage to be set on the GUI","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"        assert stage !\u003d null : \"stage cannot be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Jacobnbh":34}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"import duke.io.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":" * Parser class encapsulates a parser within the Duke bot that processes","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":" * user inputs. The parser takes in a command from the user, processes it","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":" * and returns a description of the command.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    private String input;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"     * Constructor for a Parser","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"     * @param input user input in the form of a command","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"     * @param taskList list of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"     * @param storage text file to read and write from","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"     * @param ui user interface containing messages to return to the user","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"    public Parser(String input, TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"     * Initializes a new Event task, writes the task to the text file,","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"     * and returns a full description of the Event task.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"     * @param taskDescription a short description of the Event task","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"     * @param tList list of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"     * @return a full description of the Event task","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"     * @throws ArrayIndexOutOfBoundsException","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"    public String newEvent(String taskDescription, TaskList tList) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"        Event newEvent \u003d new Event(taskDescription);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"        tList.addTask(newEvent);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"        String textToAppend \u003d newEvent.showType() + \" | \"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"                + (newEvent.checkDone().equals(\"[X]\") ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"                + (newEvent.checkNotes().equals(\"[N]\") ? \"N\" : \"X\") + \" | \"","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"                + newEvent.showTaskName() + \" | \"","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"                + newEvent.showWhen() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"            this.storage.save(textToAppend, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"            return de.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"        return this.ui.deadlineOrEventAddedMessage(","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"                newEvent.showType(), newEvent.checkDone(), newEvent.showTaskName(),","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"                newEvent.showDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"                newEvent.showTime(), taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"     * Initializes a new Deadline task, writes the task to the text file,","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"     * and returns a full description of the Deadline task.","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"Jacobnbh"},"content":"     * @param taskDescription a short description of the Deadline task","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"Jacobnbh"},"content":"     * @param tList list of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"     * @return a full description of the Deadline task","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"Jacobnbh"},"content":"     * @throws ArrayIndexOutOfBoundsException","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"Jacobnbh"},"content":"    public String newDeadline(String taskDescription, TaskList tList) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"Jacobnbh"},"content":"        Deadline newDeadline \u003d new Deadline(taskDescription);","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"Jacobnbh"},"content":"        tList.addTask(newDeadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Jacobnbh"},"content":"        String textToAppend \u003d newDeadline.showType() + \" | \"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Jacobnbh"},"content":"                + (newDeadline.checkDone().equals(\"[X]\") ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Jacobnbh"},"content":"                + (newDeadline.checkNotes().equals(\"[N]\") ? \"N\" : \"X\") + \" | \"","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"Jacobnbh"},"content":"                + newDeadline.showTaskName() + \" | \"","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"Jacobnbh"},"content":"                + newDeadline.showWhen() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"Jacobnbh"},"content":"            this.storage.save(textToAppend, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"Jacobnbh"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"Jacobnbh"},"content":"            return de.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"Jacobnbh"},"content":"        return this.ui.deadlineOrEventAddedMessage(","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"Jacobnbh"},"content":"                newDeadline.showType(), newDeadline.checkDone(), newDeadline.showTaskName(),","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"Jacobnbh"},"content":"                newDeadline.showDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"Jacobnbh"},"content":"                newDeadline.showTime(), taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"Jacobnbh"},"content":"     * Initializes a new ToDo task, writes the task to the text file,","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"Jacobnbh"},"content":"     * and returns a full description of the ToDo task.","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"Jacobnbh"},"content":"     * @param taskDescription a short description of the ToDo task","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"Jacobnbh"},"content":"     * @param tList list of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"Jacobnbh"},"content":"     * @return a full description of the ToDo task","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"Jacobnbh"},"content":"     * @throws ArrayIndexOutOfBoundsException","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"Jacobnbh"},"content":"    public String newToDo(String taskDescription, TaskList tList) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"Jacobnbh"},"content":"        ToDo newToDo \u003d new ToDo(taskDescription);","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"Jacobnbh"},"content":"        tList.addTask(newToDo);","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"Jacobnbh"},"content":"        String textToAppend \u003d newToDo.showType() + \" | \"","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"Jacobnbh"},"content":"                + (newToDo.checkDone().equals(\"[X]\") ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"Jacobnbh"},"content":"                + (newToDo.checkNotes().equals(\"[N]\") ? \"N\": \"X\") + \" | \"","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"Jacobnbh"},"content":"                + newToDo.showFullDescription() + \"\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"Jacobnbh"},"content":"            this.storage.save(textToAppend, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"Jacobnbh"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"Jacobnbh"},"content":"            return de.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"Jacobnbh"},"content":"        return this.ui.todoAddedMessage(","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"Jacobnbh"},"content":"                newToDo.showType(), newToDo.checkDone(), newToDo.showFullDescription(), this.taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"Jacobnbh"},"content":"     * Computes the task type to add to the task list depending on the command given","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"Jacobnbh"},"content":"     * @param taskDescription a short description of the task including its name, type, deadline","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"Jacobnbh"},"content":"     * @return a full description of the task","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"Jacobnbh"},"content":"     * @throws DukeException \"description cannot be empty\" exception","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"Jacobnbh"},"content":"    public String manageAddTask(String[] taskDescription) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"Jacobnbh"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":141,"author":{"gitId":"Jacobnbh"},"content":"            if (taskDescription[0].equals(\"todo\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":142,"author":{"gitId":"Jacobnbh"},"content":"                output \u003d newToDo(taskDescription[1], this.taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"Jacobnbh"},"content":"            } else if (taskDescription[0].equals(\"deadline\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":144,"author":{"gitId":"Jacobnbh"},"content":"                output \u003d newDeadline(taskDescription[1], this.taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":145,"author":{"gitId":"Jacobnbh"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":146,"author":{"gitId":"Jacobnbh"},"content":"                output \u003d newEvent(taskDescription[1], this.taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":147,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":148,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":149,"author":{"gitId":"Jacobnbh"},"content":"            return output;","lastModifiedDate":"2021-09-08"},{"lineNumber":150,"author":{"gitId":"Jacobnbh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":151,"author":{"gitId":"Jacobnbh"},"content":"            throw new DukeException(\"The description of a \" + taskDescription[0] + \" cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":152,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":153,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":154,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":155,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":156,"author":{"gitId":"Jacobnbh"},"content":"     * Marks the task as done or deletes the task depending on the command given","lastModifiedDate":"2021-09-08"},{"lineNumber":157,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":158,"author":{"gitId":"Jacobnbh"},"content":"     * @param taskDescription a short description of the task","lastModifiedDate":"2021-09-08"},{"lineNumber":159,"author":{"gitId":"Jacobnbh"},"content":"     * @return a full description of the completion or deletion of the task","lastModifiedDate":"2021-09-08"},{"lineNumber":160,"author":{"gitId":"Jacobnbh"},"content":"     * @throws DukeException \"invalid index number\" exception","lastModifiedDate":"2021-09-08"},{"lineNumber":161,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":162,"author":{"gitId":"Jacobnbh"},"content":"    public String manageDoneAndDeleteTask(String[] taskDescription) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":163,"author":{"gitId":"Jacobnbh"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":164,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":165,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":166,"author":{"gitId":"Jacobnbh"},"content":"            int taskIndex \u003d Integer.parseInt(taskDescription[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":167,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":168,"author":{"gitId":"Jacobnbh"},"content":"            if (taskDescription[0].equals(\"delete\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":169,"author":{"gitId":"Jacobnbh"},"content":"                output \u003d this.taskList.deleteTask(taskIndex);","lastModifiedDate":"2021-09-08"},{"lineNumber":170,"author":{"gitId":"Jacobnbh"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":171,"author":{"gitId":"Jacobnbh"},"content":"                output \u003d this.taskList.markDone(taskIndex);","lastModifiedDate":"2021-09-08"},{"lineNumber":172,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":173,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":174,"author":{"gitId":"Jacobnbh"},"content":"            try {","lastModifiedDate":"2021-09-08"},{"lineNumber":175,"author":{"gitId":"Jacobnbh"},"content":"                this.storage.rewrite(this.taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":176,"author":{"gitId":"Jacobnbh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":177,"author":{"gitId":"Jacobnbh"},"content":"                System.out.println(e);","lastModifiedDate":"2021-09-08"},{"lineNumber":178,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":179,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":180,"author":{"gitId":"Jacobnbh"},"content":"            return output;","lastModifiedDate":"2021-09-08"},{"lineNumber":181,"author":{"gitId":"Jacobnbh"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":182,"author":{"gitId":"Jacobnbh"},"content":"            throw new DukeException(\"Please enter a valid task number.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":183,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":184,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"Jacobnbh"},"content":"    public String manageAddTaskNotes(String taskNameAndNotes) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":187,"author":{"gitId":"Jacobnbh"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":188,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":189,"author":{"gitId":"Jacobnbh"},"content":"        String[] taskNameAndNotesArray \u003d taskNameAndNotes.split(\"/\", 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":190,"author":{"gitId":"Jacobnbh"},"content":"        String taskName \u003d taskNameAndNotesArray[0].trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":191,"author":{"gitId":"Jacobnbh"},"content":"        String taskNotes \u003d taskNameAndNotesArray[1].trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":192,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":193,"author":{"gitId":"Jacobnbh"},"content":"        this.taskList.writeTaskNotes(taskName, taskNotes);","lastModifiedDate":"2021-09-08"},{"lineNumber":194,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":195,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":196,"author":{"gitId":"Jacobnbh"},"content":"            this.storage.rewrite(this.taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":197,"author":{"gitId":"Jacobnbh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":198,"author":{"gitId":"Jacobnbh"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-08"},{"lineNumber":199,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":200,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":201,"author":{"gitId":"Jacobnbh"},"content":"        output \u003d this.ui.notesAddedMessage(taskName, taskNotes);","lastModifiedDate":"2021-09-08"},{"lineNumber":202,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":203,"author":{"gitId":"Jacobnbh"},"content":"        return output;","lastModifiedDate":"2021-09-08"},{"lineNumber":204,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":205,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":206,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":207,"author":{"gitId":"Jacobnbh"},"content":"     * Takes the input received by the parser and deciphers the command","lastModifiedDate":"2021-09-01"},{"lineNumber":208,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":209,"author":{"gitId":"Jacobnbh"},"content":"     * @return the respective descriptions of the task or command","lastModifiedDate":"2021-09-01"},{"lineNumber":210,"author":{"gitId":"Jacobnbh"},"content":"     * @throws DukeException unable to process command exception","lastModifiedDate":"2021-09-08"},{"lineNumber":211,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":212,"author":{"gitId":"Jacobnbh"},"content":"    public String compute() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":213,"author":{"gitId":"Jacobnbh"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":214,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":215,"author":{"gitId":"Jacobnbh"},"content":"        String[] instruction \u003d this.input.split(\" \", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":216,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":217,"author":{"gitId":"Jacobnbh"},"content":"        switch (instruction[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"Jacobnbh"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":219,"author":{"gitId":"Jacobnbh"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-01"},{"lineNumber":220,"author":{"gitId":"Jacobnbh"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":221,"author":{"gitId":"Jacobnbh"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-01"},{"lineNumber":222,"author":{"gitId":"Jacobnbh"},"content":"        case \"event\":","lastModifiedDate":"2021-09-01"},{"lineNumber":223,"author":{"gitId":"Jacobnbh"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":224,"author":{"gitId":"Jacobnbh"},"content":"                output \u003d manageAddTask(instruction);","lastModifiedDate":"2021-09-08"},{"lineNumber":225,"author":{"gitId":"Jacobnbh"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"Jacobnbh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":227,"author":{"gitId":"Jacobnbh"},"content":"                System.out.println(e);","lastModifiedDate":"2021-09-08"},{"lineNumber":228,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"Jacobnbh"},"content":"        case \"addNote\":","lastModifiedDate":"2021-09-08"},{"lineNumber":230,"author":{"gitId":"Jacobnbh"},"content":"            output \u003d manageAddTaskNotes(instruction[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":231,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":232,"author":{"gitId":"Jacobnbh"},"content":"        case \"showNote\":","lastModifiedDate":"2021-09-08"},{"lineNumber":233,"author":{"gitId":"Jacobnbh"},"content":"            output \u003d this.taskList.showTaskNotes(instruction[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":234,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":235,"author":{"gitId":"Jacobnbh"},"content":"        case \"done\":","lastModifiedDate":"2021-09-01"},{"lineNumber":236,"author":{"gitId":"Jacobnbh"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-01"},{"lineNumber":237,"author":{"gitId":"Jacobnbh"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":238,"author":{"gitId":"Jacobnbh"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":239,"author":{"gitId":"Jacobnbh"},"content":"                output \u003d manageDoneAndDeleteTask(instruction);","lastModifiedDate":"2021-09-08"},{"lineNumber":240,"author":{"gitId":"Jacobnbh"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":241,"author":{"gitId":"Jacobnbh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":242,"author":{"gitId":"Jacobnbh"},"content":"                System.out.println(e);","lastModifiedDate":"2021-09-08"},{"lineNumber":243,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":244,"author":{"gitId":"Jacobnbh"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":245,"author":{"gitId":"Jacobnbh"},"content":"            output \u003d this.taskList.showList();","lastModifiedDate":"2021-09-01"},{"lineNumber":246,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":247,"author":{"gitId":"Jacobnbh"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":248,"author":{"gitId":"Jacobnbh"},"content":"            output \u003d this.taskList.searchList(instruction[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":249,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":250,"author":{"gitId":"Jacobnbh"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-01"},{"lineNumber":251,"author":{"gitId":"Jacobnbh"},"content":"            output \u003d this.ui.goodbyeMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":252,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":253,"author":{"gitId":"Jacobnbh"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":254,"author":{"gitId":"Jacobnbh"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":255,"author":{"gitId":"Jacobnbh"},"content":"                this.storage.rewrite(this.taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":256,"author":{"gitId":"Jacobnbh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":257,"author":{"gitId":"Jacobnbh"},"content":"                System.out.println(e);","lastModifiedDate":"2021-09-08"},{"lineNumber":258,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":259,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":260,"author":{"gitId":"Jacobnbh"},"content":"            output \u003d new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\").toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":261,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":262,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":263,"author":{"gitId":"Jacobnbh"},"content":"        return output;","lastModifiedDate":"2021-09-01"},{"lineNumber":264,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":265,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Jacobnbh":265}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":" * DukeException class encapsulates the exceptions being thrown by the Duke bot.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the error message of the exception","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"     * @return respective error message","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"        return \"\\uD83D\\uDE41\" + \" OOPS!!! \" + getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Jacobnbh":20}},{"path":"src/main/java/duke/io/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.io;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":" * Storage class encapsulates a I/O system that reads and writes to an","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":" * external storage. Currently, it writes to a text file.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"    private static final String HOME \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"    private static String dukeText;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"     * Constructor for a storage. It takes in a path to the directory of","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"     * a text file.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"     * @param filePath path to the directory of the text file","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"        assert filePath !\u003d null :\"file path should not be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"        dukeText \u003d filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"     * Reads the text from the text file, deciphers the message, adds them","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"     * to an ArrayList and returns it.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"     * @return an ArrayList of tasks read from the text file","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"     * @throws DukeException \"unable to retrieve file, creating a new list\" exception","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"        Scanner listScan;","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"            listScan \u003d new Scanner(new File(HOME + dukeText));","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"        } catch (FileNotFoundException f) {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"            throw new DukeException(\"Unable to retrieve file. Creating a new list!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"        while (listScan.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"            String listInput \u003d listScan.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"            String[] listInputArray \u003d listInput.split(\"\\\\|\", 6);","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"            for (int i \u003d 0; i \u003c listInputArray.length; i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"                listInputArray[i] \u003d listInputArray[i].trim();","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"            switch (listInputArray[0]) {","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"            case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"                ToDo todo \u003d new ToDo(listInputArray[3]);","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"                if (listInputArray[1].equals(\"1\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"                    todo.isDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"Jacobnbh"},"content":"                if (listInputArray[2].equals(\"N\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"                    todo.writeNotes(listInputArray[4]);","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"                    todo.hasNotes();","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"Jacobnbh"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"Jacobnbh"},"content":"                loadedList.add(todo);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"Jacobnbh"},"content":"            case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"Jacobnbh"},"content":"                String deadlineInput \u003d listInputArray[3].trim() + \"|\" + listInputArray[4].trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"Jacobnbh"},"content":"                Deadline deadline \u003d new Deadline(deadlineInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"Jacobnbh"},"content":"                if (listInputArray[1].equals(\"1\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"Jacobnbh"},"content":"                    deadline.isDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Jacobnbh"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"Jacobnbh"},"content":"                if (listInputArray[2].equals(\"N\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"Jacobnbh"},"content":"                    deadline.writeNotes(listInputArray[5]);","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"Jacobnbh"},"content":"                    deadline.hasNotes();","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"Jacobnbh"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"Jacobnbh"},"content":"                loadedList.add(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"Jacobnbh"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"Jacobnbh"},"content":"            case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"Jacobnbh"},"content":"                String eventInput \u003d listInputArray[3].trim() + \" | \" + listInputArray[4].trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"Jacobnbh"},"content":"                Event event \u003d new Event(eventInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"Jacobnbh"},"content":"                if (listInputArray[1].equals(\"1\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"Jacobnbh"},"content":"                    event.isDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"Jacobnbh"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"Jacobnbh"},"content":"                if (listInputArray[2].equals(\"N\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"Jacobnbh"},"content":"                    event.writeNotes(listInputArray[5]);","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"Jacobnbh"},"content":"                    event.hasNotes();","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"Jacobnbh"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"Jacobnbh"},"content":"                loadedList.add(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Jacobnbh"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"Jacobnbh"},"content":"            default:","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"Jacobnbh"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"Jacobnbh"},"content":"        listScan.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"Jacobnbh"},"content":"        return loadedList;","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"Jacobnbh"},"content":"     * Appends tasks to the text file.","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"Jacobnbh"},"content":"     * @param textToAppend tasks to write to the file","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"Jacobnbh"},"content":"     * @param appendStatus if true, text is appended to text file","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"Jacobnbh"},"content":"     * @throws DukeException \"file requested cannot be found\" exception","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"Jacobnbh"},"content":"    public void save(String textToAppend, boolean appendStatus) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"Jacobnbh"},"content":"            FileWriter writeToFile \u003d new FileWriter(HOME + dukeText, appendStatus);","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"Jacobnbh"},"content":"            writeToFile.write(textToAppend);","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"Jacobnbh"},"content":"            writeToFile.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"Jacobnbh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"Jacobnbh"},"content":"            throw new DukeException(\"The file that you requested cannot be found.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"Jacobnbh"},"content":"     * Overrides and re-writes a new taskList to the text file.","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"Jacobnbh"},"content":"     * @param taskList new taskList to re-write to the text file","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"Jacobnbh"},"content":"     * @throws DukeException \"file requested cannot be found\" exception","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"Jacobnbh"},"content":"    public void rewrite(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"Jacobnbh"},"content":"            FileWriter rewriteFile \u003d new FileWriter(HOME + dukeText);","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"Jacobnbh"},"content":"            rewriteFile.write(taskList.refreshList());","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"Jacobnbh"},"content":"            rewriteFile.close();","lastModifiedDate":"2021-09-01"},{"lineNumber":146,"author":{"gitId":"Jacobnbh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":147,"author":{"gitId":"Jacobnbh"},"content":"            throw new DukeException(\"The file that you requested cannot be found.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Jacobnbh":150}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":" * Represents the \"Deadline\" task type. It encapsulates the Deadline\u0027s name, type and deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"    private String taskDescription;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"    private String by;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"    private String type \u003d \"D\";","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"    private int time;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"    private int day;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    private int month;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"    private int year;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"     * Constructor for a Deadline task.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"     * @param taskDescription a short description of the task","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"    public Deadline(String taskDescription) {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"        assert taskDescription !\u003d null : \"task description should not be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"        String[] splitDescBy \u003d taskDescription.split(\"/\", 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"        if (taskDescription.contains(\"|\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"            splitDescBy \u003d taskDescription.split(\"\\\\|\", 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"        } else if (taskDescription.contains(\"/by\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"            splitDescBy \u003d taskDescription.split(\"/by\", 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"        this.taskDescription \u003d splitDescBy[0].trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"        this.by \u003d splitDescBy[1].trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"        String[] dateTimeSplit \u003d this.by.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"        this.time \u003d Integer.parseInt(dateTimeSplit[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"        if (dateTimeSplit[0].contains(\"/\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"            String[] dateSplit \u003d dateTimeSplit[0].split(\"/\", 3);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"            this.day \u003d Integer.parseInt(dateSplit[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"            this.month \u003d Integer.parseInt(dateSplit[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"            this.year \u003d Integer.parseInt(dateSplit[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"            this.date \u003d LocalDate.of(this.year, this.month, this.day);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"        } else if (dateTimeSplit[0].contains(\"-\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"            this.date \u003d LocalDate.parse(dateTimeSplit[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the full description (name + deadline) of the Deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"     * @return full description of the Deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"    public String showFullDescription() {","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"        return this.taskDescription + \" (by: \"","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"                + this.time + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"     * Returns only the name of the Deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"     * @return name of the Deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"    public String showTaskName() {","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"        return this.taskDescription;","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the deadline of the Deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Jacobnbh"},"content":"     * @return deadline of the Deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"    public String showWhen() {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"Jacobnbh"},"content":"        return this.by;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the type of the Deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Jacobnbh"},"content":"     * @return task type \"D\"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"Jacobnbh"},"content":"    public String showType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"Jacobnbh"},"content":"        return this.type;","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the date of the Deadline task in \"MMM d yyyy\" format","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"Jacobnbh"},"content":"     * @return date of the Deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"Jacobnbh"},"content":"    public LocalDate showDate() {","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"Jacobnbh"},"content":"        return this.date;","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"Jacobnbh"},"content":"     * Returns ths time of the Deadline task in 24-hour format","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Jacobnbh"},"content":"     * @return time of the Deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"Jacobnbh"},"content":"    public int showTime() {","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"Jacobnbh"},"content":"        return this.time;","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jacobnbh":107}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":" * Represents the \"Event\" task type. It encapsulates an Event\u0027s name, type and deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"    private String taskDescription;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"    private String at;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"    private String type \u003d \"E\";","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"    private int time;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"    private int day;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    private int month;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"    private int year;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"     * Constructor for an Event task","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"     * @param taskDescription a short description of the task","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"    public Event(String taskDescription) {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"        assert taskDescription !\u003d null : \"task description should not be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"        String[] splitDescAt \u003d taskDescription.split(\"/\", 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"        if (taskDescription.contains(\"|\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"            splitDescAt \u003d taskDescription.split(\"\\\\|\", 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"        } else if (taskDescription.contains(\"/at\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"            splitDescAt \u003d taskDescription.split(\"/at\", 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"        this.taskDescription \u003d splitDescAt[0].trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"        this.at \u003d splitDescAt[1].trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"        String[] dateTimeSplit \u003d this.at.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"        this.time \u003d Integer.parseInt(dateTimeSplit[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"        if (dateTimeSplit[0].contains(\"/\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"            String[] dateSplit \u003d dateTimeSplit[0].split(\"/\", 3);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"            this.day \u003d Integer.parseInt(dateSplit[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"            this.month \u003d Integer.parseInt(dateSplit[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"            this.year \u003d Integer.parseInt(dateSplit[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"            this.date \u003d LocalDate.of(this.year, this.month, this.day);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"        } else if (dateTimeSplit[0].contains(\"-\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"            this.date \u003d LocalDate.parse(dateTimeSplit[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the full description (name + deadline) of the Event task","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"     * @return full description of the Event task","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"    public String showFullDescription() {","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"        return this.taskDescription + \" (at: \"","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"                + this.time + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"     * Returns only the name of the Event task","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"     * @return name of the Event task","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"    public String showTaskName() {","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"        return this.taskDescription;","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the deadline of the Event task","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Jacobnbh"},"content":"     * @return deadline of the Event task","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"    public String showWhen() {","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"Jacobnbh"},"content":"        return this.at;","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the type of the Event task","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Jacobnbh"},"content":"     * @return task type \"E\"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"Jacobnbh"},"content":"    public String showType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"Jacobnbh"},"content":"        return this.type;","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the date of the Event task in \"MMM d yyyy\" format","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"Jacobnbh"},"content":"     * @return date of the Event task","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"Jacobnbh"},"content":"    public LocalDate showDate() {","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"Jacobnbh"},"content":"        return this.date;","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"Jacobnbh"},"content":"     * Returns ths time of the Event task in 24-hour format","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Jacobnbh"},"content":"     * @return time of the Event task","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"Jacobnbh"},"content":"    public int showTime() {","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"Jacobnbh"},"content":"        return this.time;","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jacobnbh":106}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":" * Represents a Task object. It is an abstract class.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"    private boolean hasNotes \u003d false;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"    private String notes \u003d \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"    public abstract String showFullDescription();","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"    public abstract String showTaskName();","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"    public abstract String showType();","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"    public abstract String showWhen();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"     * Returns an indication of whether the task is done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"     * @return \"[X]\" indicating the task is done and \"[ ]\" if not done","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"    public String checkDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"    public String checkNotes() {","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"        return hasNotes ? \"[N]\" : \"[ ]\";","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"    public void writeNotes(String notes) {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"    public String showNotes() {","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"        return this.notes;","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"     * Sets the done status of task to true","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"    public void isDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"    public void hasNotes() {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"        this.hasNotes \u003d true;","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jacobnbh":47}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":" * Represents a TaskList object. The TaskList is able to add tasks, delete tasks, mark tasks as done,","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":" * as well as print out all the tasks in its list.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"     * Adds a task to the TaskList object","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"     * @param task task to be added to the task list","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"        assert task !\u003d null : \"task cannot be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"     * Marks the task with the respective index as done in the TaskList object","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"     * @param index index of the task in the task list","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"    public String markDone(int index) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"        int trueIndex \u003d index - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"        list.get(trueIndex).isDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"        String taskDoneMessage \u003d \"     Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"                + \"       \" + \"[\" + list.get(trueIndex).showType() + \"]\"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"                + list.get(trueIndex).checkDone() + \" \"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"                + list.get(trueIndex).showFullDescription() + \"\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"        return taskDoneMessage;","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"     * Deletes the task with the respective index in the TaskList object","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"     * @param index index of the task in the task list","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"        int trueIndex \u003d index - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"        String listData \u003d \"[\" + list.get(trueIndex).showType() + \"]\"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"                + list.get(trueIndex).checkDone() + \" \"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"                + list.get(trueIndex).showFullDescription() + \"\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"        String deletedData \u003d \"     Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"                + \"       \" + listData","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"                + \"     Now you have \" + (list.size() - 1) + \" tasks in the list\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"        list.remove(trueIndex);","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"        return deletedData;","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the size of the TaskList object.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"Jacobnbh"},"content":"     * @return size/length of the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"Jacobnbh"},"content":"    public int length() {","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"Jacobnbh"},"content":"        return list.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Jacobnbh"},"content":"     * Prints out all the tasks in the entire TaskList object.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"Jacobnbh"},"content":"    public String showList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"Jacobnbh"},"content":"        String fullList \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"Jacobnbh"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"Jacobnbh"},"content":"            String taskItem \u003d \"\\n\" + (i + 1) + \".\" + \"[\"","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"Jacobnbh"},"content":"                    + list.get(i).showType() + \"]\"","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"Jacobnbh"},"content":"                    + list.get(i).checkDone() + \" \"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"Jacobnbh"},"content":"                    + list.get(i).checkNotes() + \" \"","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"Jacobnbh"},"content":"                    + list.get(i).showFullDescription();","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"Jacobnbh"},"content":"            fullList +\u003d taskItem;","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"Jacobnbh"},"content":"        return fullList;","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"Jacobnbh"},"content":"     * Stores all the task type, task\u0027s done status and task name and deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"Jacobnbh"},"content":"     * in a format readable by Duke\u0027s storage component.","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"Jacobnbh"},"content":"     * @return String containing the details of all the tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"Jacobnbh"},"content":"    public String refreshList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"Jacobnbh"},"content":"        String refreshList \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"Jacobnbh"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"Jacobnbh"},"content":"            if (task.showType().equals(\"D\") || task.showType().equals(\"E\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"Jacobnbh"},"content":"                refreshList +\u003d task.showType() + \" | \"","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"Jacobnbh"},"content":"                        + (task.checkDone().equals(\"[X]\") ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"Jacobnbh"},"content":"                        + (task.checkNotes().equals(\"[N]\") ? \"N\" : \"X\") + \" | \"","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"Jacobnbh"},"content":"                        + task.showTaskName() + \" | \"","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"Jacobnbh"},"content":"                        + task.showWhen() + \" | \"","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"Jacobnbh"},"content":"                        + (task.checkNotes().equals(\"[N]\") ? task.showNotes() : \" \") + \"\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"Jacobnbh"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"Jacobnbh"},"content":"                refreshList +\u003d task.showType() + \" | \"","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"Jacobnbh"},"content":"                        + (task.checkDone().equals(\"[X]\") ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"Jacobnbh"},"content":"                        + (task.checkNotes().equals(\"[N]\") ? \"N\" : \"X\") + \" | \"","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"Jacobnbh"},"content":"                        + task.showFullDescription() + \" | \"","lastModifiedDate":"2021-09-08"},{"lineNumber":123,"author":{"gitId":"Jacobnbh"},"content":"                        + (task.checkNotes().equals(\"[N]\") ? task.showNotes() : \" \") + \"\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"Jacobnbh"},"content":"        return refreshList;","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"Jacobnbh"},"content":"     * Searches the list for tasks containing the keyword and returns the respective tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"Jacobnbh"},"content":"     * @param keyword keyword of tasks to search in the taskList","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"Jacobnbh"},"content":"     * @return tasks that contain the respective keyword","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"Jacobnbh"},"content":"    public String searchList(String keyword) {","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"Jacobnbh"},"content":"        String searchList \u003d \"     \" + \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"Jacobnbh"},"content":"        for (int k \u003d 0; k \u003c list.size(); k++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"Jacobnbh"},"content":"            if (list.get(k).showTaskName().contains(keyword)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":141,"author":{"gitId":"Jacobnbh"},"content":"                String searchItem \u003d \"\\n\" + \"     \" + (k + 1) + \".\" + \"[\"","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"Jacobnbh"},"content":"                        + list.get(k).showType() + \"]\"","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"Jacobnbh"},"content":"                        + list.get(k).checkDone() + \" \"","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"Jacobnbh"},"content":"                        + list.get(k).checkNotes() + \" \"","lastModifiedDate":"2021-09-08"},{"lineNumber":145,"author":{"gitId":"Jacobnbh"},"content":"                        + list.get(k).showFullDescription();","lastModifiedDate":"2021-09-08"},{"lineNumber":146,"author":{"gitId":"Jacobnbh"},"content":"                searchList +\u003d searchItem;","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":150,"author":{"gitId":"Jacobnbh"},"content":"        return searchList;","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"Jacobnbh"},"content":"    public void writeTaskNotes(String taskName, String taskNotes) {","lastModifiedDate":"2021-09-08"},{"lineNumber":154,"author":{"gitId":"Jacobnbh"},"content":"        for (int l \u003d 0; l \u003c list.size(); l++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":155,"author":{"gitId":"Jacobnbh"},"content":"            if (list.get(l).showTaskName().contains(taskName)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":156,"author":{"gitId":"Jacobnbh"},"content":"                list.get(l).writeNotes(taskNotes);","lastModifiedDate":"2021-09-08"},{"lineNumber":157,"author":{"gitId":"Jacobnbh"},"content":"                list.get(l).hasNotes();","lastModifiedDate":"2021-09-08"},{"lineNumber":158,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":159,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":160,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":161,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":162,"author":{"gitId":"Jacobnbh"},"content":"    public String showTaskNotes(String taskName) {","lastModifiedDate":"2021-09-08"},{"lineNumber":163,"author":{"gitId":"Jacobnbh"},"content":"        String output \u003d \"It seems like like this task does not have any notes\";","lastModifiedDate":"2021-09-08"},{"lineNumber":164,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":165,"author":{"gitId":"Jacobnbh"},"content":"        for (int m \u003d 0; m \u003c list.size(); m++) {","lastModifiedDate":"2021-09-08"},{"lineNumber":166,"author":{"gitId":"Jacobnbh"},"content":"            if (list.get(m).showTaskName().contains(taskName)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":167,"author":{"gitId":"Jacobnbh"},"content":"                output \u003d list.get(m).showNotes();","lastModifiedDate":"2021-09-08"},{"lineNumber":168,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":169,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":170,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":171,"author":{"gitId":"Jacobnbh"},"content":"        return output;","lastModifiedDate":"2021-09-08"},{"lineNumber":172,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":173,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":174,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jacobnbh":174}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":" * Represents a \"ToDo\" task type. It stores details of a ToDo task, such as its name and type.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"    private String taskDescription;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"    private String type \u003d \"T\";","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"    public ToDo(String taskDescription) {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"        assert taskDescription !\u003d null : \"task description cannot be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the name of the ToDo task","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"     * @return name of the ToDo task","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"    public String showFullDescription() {","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"        return taskDescription;","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the type of the ToDo task","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"     * @return task type \"T\"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"    public String showType() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"        return type;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"    public String showWhen() {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"        return \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"    public String showTaskName() {","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"        return taskDescription;","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jacobnbh":42}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":" * DialogBox class encapsulates a dialog box in the GUI","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"     * Constructor of the DialogBox","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"     * @param text text to be shown on dialog box","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"     * @param img image shown on the dialog box","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"     * Flip the dialog box for Duke","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"     * Returns a DialogBox containing the user\u0027s message and image","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"     * @param text user\u0027s message","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"     * @param img user\u0027s image","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"     * @return dialog box containing the user\u0027s message and image","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"        DialogBox userBox \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"Jacobnbh"},"content":"        userBox.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE, new CornerRadii(10), Insets.EMPTY)));","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"        return userBox;","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"Jacobnbh"},"content":"     * Returns a DialogBox containing the user\u0027s message and image","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"Jacobnbh"},"content":"     * @param text Duke\u0027s message","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"Jacobnbh"},"content":"     * @param img Duke\u0027s image","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"Jacobnbh"},"content":"     * @return dialog box containing user\u0027s message and image","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"Jacobnbh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"Jacobnbh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"Jacobnbh"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"Jacobnbh"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LIGHTGREEN, new CornerRadii(10), Insets.EMPTY)));","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Jacobnbh"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Jacobnbh":87}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":" * MainWindow controller class that encapsulates the window of the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"     * Initializes the controller","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"        this.duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"                DialogBox.getDukeDialog(this.duke.welcomeMessage(), dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"     * Handles the user input and returns a response to the user on the GUI","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"            userInput.setEditable(false);","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"            delay.play();","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Jacobnbh":68}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":" * Represents a User Interface (Ui). The user will be greeted by Duke as they start and end their interactions with it.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"     * Returns a welcome message to the user","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"     * @return a welcome message","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"    public String welcomeMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"        return \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"     * Returns a goodbye message to the user","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"     * @return a goodbye message","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"    public String goodbyeMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"     * Returns a message letting the user know that their ToDo task has been successfully added.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"     * @param type type of the task: ToDo","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"     * @param doneStatus whether the task was done or not","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"     * @param taskDescription full description of the task","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"     * @param tList list of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"     * @return message saying the task has been successfully added","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"    public String todoAddedMessage(","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"            String type, String doneStatus, String taskDescription, TaskList tList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"        return \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"                + \"       \" + \"[\" + type + \"]\"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"                + doneStatus + \" \"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"                + taskDescription + \"\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"                + \"     Now you have \" + tList.length() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"     * Returns a message letting the user know that their Deadline/Event task has been","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"     * successfully added","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"     * @param type type of the task: Deadline/Event","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"     * @param doneStatus whether the task was done or not","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"     * @param taskName name of the task","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"     * @param date completion date of the task","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"     * @param time completion time of the task","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"     * @param tList list of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"     * @return message saying that the task has been successfully added","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"    public String deadlineOrEventAddedMessage(","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"            String type, String doneStatus, String taskName, String date, int time, TaskList tList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"        return \"     Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"                + \"       \" + \"[\" + type + \"]\"","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"                + doneStatus + \" \"","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"                + taskName + \" by \"","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"                + date + \", \"","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"                + time + \"\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"                + \"     Now you have \" + tList.length() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"    public String notesAddedMessage(String taskName, String notes) {","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"        return \"     Got it. I\u0027ve added notes to this task:\\n\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"Jacobnbh"},"content":"                + \"     \" + taskName + \"\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"                + \"     \" + notes;","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Jacobnbh":73}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"431.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Jacobnbh":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Jacobnbh":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"    public void showDeadlineTest1() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(\"wash the dishes (by: Feb 3 2021, 1800)\",","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"                new Deadline(\"wash the dishes /by 2021-02-03 1800\").showFullDescription());","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"    public void showDeadlineTest2() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(\"return book (by: Aug 27 2021, 2100)\",","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"                new Deadline(\"return book /by 27/8/2021 2100\").showFullDescription());","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Jacobnbh":19}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"public class EventTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"    public void showEventTest1() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(\"project meeting (at: Aug 26 2021, 1500)\",","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"                new Event(\"project meeting /at 26/8/2021 1500\").showFullDescription());","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"    public void showEventTest2() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(\"meet my friends (at: Sep 4 2021, 1900)\",","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"                new Event(\"meet my friends /at 2021-09-04 1900\").showFullDescription());","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Jacobnbh":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jacobnbh":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"javac  -cp C:\\Users\\jacob\\Desktop\\CS2103T\\iP\\src\\main\\java -Xlint:none -d C:\\Users\\jacob\\Desktop\\CS2103T\\iP\\bin C:\\Users\\jacob\\Desktop\\CS2103T\\iP\\src\\main\\java\\*.java","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"java -classpath C:\\Users\\jacob\\Desktop\\CS2103T\\iP\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"pause","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Jacobnbh":4,"-":19}}]
