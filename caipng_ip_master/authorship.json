[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"3. After that, locate the `src/main/java/Duke/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"caipng":1,"-":23}},{"path":"src/main/java/Duke/Commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.Task.*;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"class AddTaskCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"    // Use the names of the enum values as keywords","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    private static final Set\u003cString\u003e KEYWORDS \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"            Arrays.stream(TaskType.values())","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"                    .map(Enum::name)","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"                    .collect(Collectors.toList())","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    );","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    private static final String ADD_TASK_SUCCESS_MESSAGE \u003d \"I\u0027ve added this task:\\n\\t%s\\n\" + TASKS_COUNT_MESSAGE;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    private static final String DEADLINE_BY_REGEX \u003d \"(?i)\\\\s+/by\\\\s+\";","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"    private static final String EVENT_AT_REGEX \u003d \"(?i)\\\\s+/at\\\\s+\";","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"    private enum TaskType {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"        TODO,","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"        EVENT","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"    public void run(Duke duke, Duke.UserInput input) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"        Task newTask \u003d createTask(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"        TaskList taskList \u003d duke.getTaskList();","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"        duke.say(String.format(ADD_TASK_SUCCESS_MESSAGE, newTask, taskList.size()));","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"    private static Task createTask(Duke.UserInput input) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"        TaskType taskType \u003d TaskType.valueOf(input.getKeyword().toUpperCase());","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"            case TODO:","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"                return new Todo(input.getArgs());","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"            case DEADLINE: {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"caipng"},"content":"                String[] splitInput \u003d input.getArgs().split(DEADLINE_BY_REGEX, 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"caipng"},"content":"                return new Deadline(splitInput[0], splitInput.length \u003e 1 ? splitInput[1] : \"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"caipng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"caipng"},"content":"            case EVENT: {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"caipng"},"content":"                String[] splitInput \u003d input.getArgs().split(EVENT_AT_REGEX, 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"caipng"},"content":"                return new Event(splitInput[0], splitInput.length \u003e 1 ? splitInput[1] : \"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"caipng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"caipng"},"content":"        throw new InvalidTaskException(\"Invalid task type\");","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"caipng"},"content":"    protected Set\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"caipng"},"content":"        return KEYWORDS;","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":58}},{"path":"src/main/java/Duke/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.DukeException;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import Duke.Task.InvalidTaskException;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"    private static final Command[] COMMAND_LIST \u003d {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"            new ExitCommand(),","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"            new AddTaskCommand(),","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"            new ListTasksCommand(),","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"            new DoneTaskCommand(),","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"            new RemoveTaskCommand()","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    };","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    private static final String INVALID_TASK_NUMBER_FORMAT_MESSAGE \u003d \"\\\"%s\\\" is not a valid task number.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    protected static final String TASKS_COUNT_MESSAGE \u003d \"Now you have %d tasks in the list.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"     * Factory method","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"     * @param input input to match against each command in the command list","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"     * @return the respective command object if matched, the unknown command object otherwise","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"     * @exception UnknownCommandException if no command matching the keyword was found","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    public static Command matching(Duke.UserInput input) throws UnknownCommandException {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"        String keyword \u003d input.getKeyword();","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"        for (Command cmd : COMMAND_LIST) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"            // Case insensitive contains","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"            if (cmd.getKeywords().stream().anyMatch(keyword::equalsIgnoreCase))","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"                return cmd;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"        throw new UnknownCommandException(input.getRaw());","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"    abstract public void run(Duke duke, Duke.UserInput input) throws DukeException;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"    abstract protected Set\u003cString\u003e getKeywords();","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"caipng"},"content":"    protected static int parseTaskNumber(Duke.UserInput input) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"caipng"},"content":"        String args \u003d input.getArgs();","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"caipng"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"caipng"},"content":"            return Integer.parseInt(args);","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"caipng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"caipng"},"content":"            throw new InvalidTaskException(String.format(INVALID_TASK_NUMBER_FORMAT_MESSAGE, args));","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"caipng":50}},{"path":"src/main/java/Duke/Commands/DoneTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.Task.InvalidTaskException;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import Duke.Task.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"class DoneTaskCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"    private static final Set\u003cString\u003e KEYWORDS \u003d new HashSet\u003c\u003e(List.of(\"done\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    private static final String DONE_TASK_SUCCESS_MESSAGE \u003d \"Good job! I\u0027ve marked this task as done:\\n\\t%s\";","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    public void run(Duke duke, Duke.UserInput input) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"        int taskIndex \u003d parseTaskNumber(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"        Task task \u003d duke.getTaskList().get(taskIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"        duke.say(String.format(DONE_TASK_SUCCESS_MESSAGE, task));","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"    protected Set\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"        return KEYWORDS;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":27}},{"path":"src/main/java/Duke/Commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"class ExitCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"    private static final Set\u003cString\u003e KEYWORDS \u003d new HashSet\u003c\u003e(List.of(\"exit\", \"bye\", \"quit\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    public void run(Duke duke, Duke.UserInput input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"        duke.stop();","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    protected Set\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"        return KEYWORDS;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"caipng":21}},{"path":"src/main/java/Duke/Commands/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"class ListTasksCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"    private static final Set\u003cString\u003e KEYWORDS \u003d new HashSet\u003c\u003e(List.of(\"list\", \"ls\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    private static final String HELP_MESSAGE \u003d \"Here are the tasks in your list:\\n%s\";","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"    public void run(Duke duke, Duke.UserInput input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"        duke.say(String.format(HELP_MESSAGE, duke.getTaskList().toString()));","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    protected Set\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"        return KEYWORDS;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":22}},{"path":"src/main/java/Duke/Commands/RemoveTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.Task.InvalidTaskException;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import Duke.Task.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import Duke.Task.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"class RemoveTaskCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    private static final Set\u003cString\u003e KEYWORDS \u003d new HashSet\u003c\u003e(List.of(\"remove\", \"rm\", \"delete\", \"del\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"    private static final String REMOVE_TASK_SUCCESS_MESSAGE \u003d \"Ok, I\u0027ve removed this task:\\n\\t%s\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"            + TASKS_COUNT_MESSAGE;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    public void run(Duke duke, Duke.UserInput input) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"       int taskIndex \u003d parseTaskNumber(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"       TaskList taskList \u003d duke.getTaskList();","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"       Task task \u003d taskList.remove(taskIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"       duke.say(String.format(REMOVE_TASK_SUCCESS_MESSAGE, task, taskList.size()));","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"    protected Set\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"        return KEYWORDS;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":29}},{"path":"src/main/java/Duke/Commands/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.DukeException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"    private static final String UNKNOWN_COMMAND_MESSAGE \u003d \"Sorry I didn\u0027t understand what you meant by \\\"%s\\\".\";","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"    public UnknownCommandException(String command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"        super(String.format(UNKNOWN_COMMAND_MESSAGE, command));","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":11}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Commands.Command;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.Task.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"public class Duke {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello I\u0027m Duke!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye bye! Hope you have a productive day :)\";","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    private static final String ERROR_MESSAGE \u003d \"Oops! An error occurred: %s\";","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"    private static final String RULER \u003d \"\\n````````````````````````````````````````````````````````\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    private static final String INPUT_PROMPT \u003d \"\u003e \";","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    private boolean stopped \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    public void say(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"        message \u003d RULER + message + RULER;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"        String indentedMessage \u003d String.join(\"\\n\\t\", message.split(\"\\n\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"        System.out.println(indentedMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"    public void run() {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"        this.say(GREETING_MESSAGE);","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"        while (!this.stopped) {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"            UserInput input \u003d new UserInput();","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"            input.readAndParse();","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"                Command.matching(input).run(this, input);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"                this.say(String.format(ERROR_MESSAGE, e.getMessage()));","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"        this.say(EXIT_MESSAGE);","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"    public void stop() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"        this.stopped \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"caipng"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"caipng"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"caipng"},"content":"    public static class UserInput {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"caipng"},"content":"        private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"caipng"},"content":"        private String raw;","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"caipng"},"content":"        private String keyword;","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"caipng"},"content":"        private String args;","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"caipng"},"content":"        private void readAndParse() {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"caipng"},"content":"            System.out.print(INPUT_PROMPT);","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"caipng"},"content":"            this.raw \u003d UserInput.scanner.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"caipng"},"content":"            String[] splitInput \u003d this.raw.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"caipng"},"content":"            this.keyword \u003d splitInput[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"caipng"},"content":"            this.args \u003d splitInput.length \u003e 1 ? splitInput[1] : \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"caipng"},"content":"        public String getKeyword() {","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"caipng"},"content":"            return this.keyword;","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"caipng"},"content":"        public String getArgs() {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"caipng"},"content":"            return this.args;","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"caipng"},"content":"        public String getRaw() {","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"caipng"},"content":"            return this.raw;","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"caipng":73}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":7}},{"path":"src/main/java/Duke/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"    private static final String TASK_TYPE_ICON \u003d \"D\";","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"    private static final String END_DATE_EMPTY_MESSAGE \u003d \"Deadline end date cannot be empty.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"    private final String endDate;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"    public Deadline(String description, String endDate) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"        if (endDate.isEmpty()) throw new InvalidTaskException(END_DATE_EMPTY_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"        return super.toString() + String.format(\" (by: %s)\", this.endDate);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    protected String getTaskTypeIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"        return TASK_TYPE_ICON;","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":24}},{"path":"src/main/java/Duke/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"    private static final String TASK_TYPE_ICON \u003d \"E\";","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"    private static final String AT_DATE_EMPTY_MESSAGE \u003d \"Event at date cannot be empty.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"    private final String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"    public Event(String description, String at) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"        if (at.isEmpty()) throw new InvalidTaskException(AT_DATE_EMPTY_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"        return super.toString() + String.format(\" (at: %s)\", this.at);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    protected String getTaskTypeIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"        return TASK_TYPE_ICON;","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":24}},{"path":"src/main/java/Duke/Task/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.DukeException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"        super(\"Invalid task: \" + message);","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":9}},{"path":"src/main/java/Duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"    private static final String DONE_ICON \u003d \"X\";","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"    private static final String NOT_DONE_ICON \u003d \" \";","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"    private static final String DESCRIPTION_EMPTY_MESSAGE \u003d \"Description cannot be empty.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"    private final String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    Task(String description) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"        if (description.isEmpty()) throw new InvalidTaskException(DESCRIPTION_EMPTY_MESSAGE);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    protected abstract String getTaskTypeIcon();","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"        String taskStatusIcon \u003d this.isDone ? DONE_ICON : NOT_DONE_ICON;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"        return String.format(\"[%s] [%s] %s\", this.getTaskTypeIcon(), taskStatusIcon, this.description);","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":28}},{"path":"src/main/java/Duke/Task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"public class TaskList {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"Hooray! You have no tasks currently.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"    private static final String CANNOT_FIND_TASK_MESSAGE \u003d \"Cannot find task with number %d.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"    private final List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"        this.list.add(newTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    public Task get(int taskIndex) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"            return this.list.get(taskIndex - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"            throw new InvalidTaskException(String.format(CANNOT_FIND_TASK_MESSAGE, taskIndex));","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    public Task remove(int taskIndex) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"       Task task \u003d this.get(taskIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"       this.list.remove(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"       return task;","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"    public int size() {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"       return this.list.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"            return EMPTY_LIST_MESSAGE;","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"        for(int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"           builder.append(String.format(\"%d. %s\\n\", i + 1, this.list.get(i).toString()));","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"caipng"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":45}},{"path":"src/main/java/Duke/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"    private static final String TASK_TYPE_ICON \u003d \"T\";","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"    public Todo(String description) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    protected String getTaskTypeIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"        return TASK_TYPE_ICON;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":14}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"public class Main {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"        duke.run();","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"caipng":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"hello world","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"deadline do homework   /by   sometime :p","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"event 2103 finals  /at  november","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":" list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"todo  test whitespaces","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"exit","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"caipng":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"caipng":1,"-":37}}]
