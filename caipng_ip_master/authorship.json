[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Homepage","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---|:---:|:---:|:---:","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)","lastModifiedDate":"2019-08-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)","lastModifiedDate":"2019-08-06"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"# I would like to join this list. How can I help the project","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"caipng":1,"-":9}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"instructions on how to use it.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"   first)","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"3. After that, locate the `src/main/java/Duke/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"   editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"   below as the output:","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"caipng":9,"-":20}},{"path":"src/main/java/Duke/Commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.Task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import Duke.Task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import Duke.Task.InvalidTaskException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import Duke.Task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"import Duke.Task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"import Duke.Task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"import Duke.Ui.UserInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":" * A command that adds a specified task to the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":" * @author cai","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"class AddTaskCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"     * The list of keywords associated with adding a task.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"     * The names of the values in the enum `TaskType` is used as keywords.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"    private static final Set\u003cString\u003e KEYWORDS \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"            Arrays.stream(TaskType.values())","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"                    .map(Enum::name)","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"                    .collect(Collectors.toList())","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"    );","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"    private static final String ADD_TASK_SUCCESS_MESSAGE \u003d \"I\u0027ve added this task:\\n\\t%s\\n\" + TASKS_COUNT_MESSAGE;","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"    private static final String DEADLINE_BY_REGEX \u003d \"(?i)\\\\s+/by\\\\s+\";","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"    private static final String EVENT_AT_REGEX \u003d \"(?i)\\\\s+/at\\\\s+\";","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"    /** The possible types of task to add */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"    private enum TaskType {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"        TODO,","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"caipng"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"caipng"},"content":"        EVENT","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"caipng"},"content":"    public void run(Duke duke, UserInput input) throws InvalidTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"caipng"},"content":"        Task newTask \u003d createTask(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"caipng"},"content":"        TaskList taskList \u003d duke.getTaskList();","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"caipng"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"caipng"},"content":"        Ui.print(String.format(ADD_TASK_SUCCESS_MESSAGE, newTask, taskList.size()));","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"caipng"},"content":"     * Constructs a Task corresponding to the provided user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"caipng"},"content":"     * @param input The input containing the type and details of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"caipng"},"content":"     * @return The corresponding task with the specified type and details.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"caipng"},"content":"     * @throws InvalidTaskException If invalid task details were provided.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"caipng"},"content":"    private static Task createTask(UserInput input) throws InvalidTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"caipng"},"content":"        TaskType taskType \u003d TaskType.valueOf(input.getKeyword().toUpperCase());","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"caipng"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"caipng"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"caipng"},"content":"            case TODO:","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"caipng"},"content":"                return new Todo(input.getArgs());","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"caipng"},"content":"            case DEADLINE: {","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"caipng"},"content":"                String[] splitInput \u003d input.getArgs().split(DEADLINE_BY_REGEX, 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"caipng"},"content":"                String dateString \u003d splitInput.length \u003e 1 ? splitInput[1] : \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"caipng"},"content":"                return new Deadline(splitInput[0], LocalDate.parse(dateString));","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"caipng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"caipng"},"content":"            case EVENT: {","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"caipng"},"content":"                String[] splitInput \u003d input.getArgs().split(EVENT_AT_REGEX, 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"caipng"},"content":"                String dateString \u003d splitInput.length \u003e 1 ? splitInput[1] : \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"caipng"},"content":"                return new Event(splitInput[0], LocalDate.parse(dateString));","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"caipng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"caipng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"caipng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"caipng"},"content":"            throw new InvalidTaskException(\"Invalid date provided\", e);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"caipng"},"content":"        throw new InvalidTaskException(\"Invalid task type\");","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"caipng"},"content":"    protected Set\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"caipng"},"content":"        return KEYWORDS;","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":89}},{"path":"src/main/java/Duke/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.DukeException;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import Duke.Task.InvalidTaskException;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import Duke.Ui.UserInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":" * An instruction, possibly with arguments, to be executed.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":" * @author cai","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    /** List of possible commands to run */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    private static final Command[] COMMAND_LIST \u003d {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"            new ExitCommand(),","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"            new AddTaskCommand(),","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"            new ListTasksCommand(),","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"            new FindTaskCommand(),","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"            new DoneTaskCommand(),","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"            new RemoveTaskCommand()","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"    private static final String INVALID_TASK_NUMBER_FORMAT_MESSAGE \u003d \"\\\"%s\\\" is not a valid task number.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    protected static final String TASKS_COUNT_MESSAGE \u003d \"Now you have %d tasks in the list.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"     * Returns the command matching the specified user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"     * @param input Input to match against each command in the command list.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"     * @return The respective command object if matched.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"     * @throws UnknownCommandException If no command matching the keyword was found.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"    public static Command matching(UserInput input) throws UnknownCommandException {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"        String keyword \u003d input.getKeyword();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"        for (Command cmd : COMMAND_LIST) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"            // Case insensitive contains","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"            if (cmd.getKeywords().stream().anyMatch(keyword::equalsIgnoreCase)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"                return cmd;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"caipng"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"caipng"},"content":"        throw new UnknownCommandException(input.getRaw());","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"caipng"},"content":"     * Runs the command.","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"caipng"},"content":"     * @param duke The Duke instance to run the command on.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"caipng"},"content":"     * @param input The user input that triggered this command.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"caipng"},"content":"     * @throws DukeException If a DukeException was thrown when running the command.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"caipng"},"content":"    abstract public void run(Duke duke, UserInput input) throws DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"caipng"},"content":"     * Returns a list of keywords to match against.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"caipng"},"content":"     * The user input is matched against this list of keywords to determine which command to run.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"caipng"},"content":"     * @return The list of keywords corresponding to this command.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"caipng"},"content":"    abstract protected Set\u003cString\u003e getKeywords();","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"caipng"},"content":"     * Parses the task number in the user input as an integer.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"caipng"},"content":"     * @param input The input containing the task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"caipng"},"content":"     * @return The integer value of the task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"caipng"},"content":"     * @throws InvalidTaskException If an invalid task number was provided.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"caipng"},"content":"    protected static int parseTaskNumber(UserInput input) throws InvalidTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"caipng"},"content":"        String args \u003d input.getArgs();","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"caipng"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"caipng"},"content":"            return Integer.parseInt(args);","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"caipng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"caipng"},"content":"            throw new InvalidTaskException(String.format(INVALID_TASK_NUMBER_FORMAT_MESSAGE, args));","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"caipng":80}},{"path":"src/main/java/Duke/Commands/DoneTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.Task.InvalidTaskException;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import Duke.Task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import Duke.Ui.UserInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"class DoneTaskCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"    private static final Set\u003cString\u003e KEYWORDS \u003d new HashSet\u003c\u003e(List.of(\"done\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    private static final String DONE_TASK_SUCCESS_MESSAGE \u003d \"Good job! I\u0027ve marked this task as done:\\n\\t%s\";","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    public void run(Duke duke, UserInput input) throws InvalidTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"        int taskIndex \u003d parseTaskNumber(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"        TaskList taskList \u003d duke.getTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"        taskList.markAsDone(taskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"        Ui.print(String.format(DONE_TASK_SUCCESS_MESSAGE, taskList.get(taskIndex)));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"    protected Set\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"        return KEYWORDS;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":29}},{"path":"src/main/java/Duke/Commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.Ui.UserInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"class ExitCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    private static final Set\u003cString\u003e KEYWORDS \u003d new HashSet\u003c\u003e(List.of(\"exit\", \"bye\", \"quit\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"    public void run(Duke duke, UserInput input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"        duke.stop();","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    protected Set\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"        return KEYWORDS;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"caipng":22}},{"path":"src/main/java/Duke/Commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.Task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import Duke.Ui.UserInput;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"class FindTaskCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    private static final Set\u003cString\u003e KEYWORDS \u003d new HashSet\u003c\u003e(List.of(\"find\", \"search\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"    private static final String HELP_MESSAGE \u003d \"Here are the matching tasks in your list:\\n%s\";","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    private static final String NO_RESULTS_MESSAGE \u003d \"No tasks found matching \\\"%s\\\"!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    public void run(Duke duke, UserInput input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"        String keyword \u003d input.getArgs();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"        List\u003cTask\u003e results \u003d duke.getTaskList().findByKeyword(keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"        if (results.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"            Ui.print(String.format(NO_RESULTS_MESSAGE, keyword));","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"            return;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"        StringBuilder resultString \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"        for (int i \u003d 0; i \u003c results.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"            resultString.append(String.format(\"%d. %s\\n\", i + 1, results.get(i).toString()));","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"        Ui.print(String.format(HELP_MESSAGE, resultString));","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"    protected Set\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"        return KEYWORDS;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"caipng":38}},{"path":"src/main/java/Duke/Commands/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import Duke.Ui.UserInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"class ListTasksCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"    private static final Set\u003cString\u003e KEYWORDS \u003d new HashSet\u003c\u003e(List.of(\"list\", \"ls\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    private static final String HELP_MESSAGE \u003d \"Here are the tasks in your list:\\n%s\";","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    public void run(Duke duke, UserInput input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"        Ui.print(String.format(HELP_MESSAGE, duke.getTaskList().toString()));","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    protected Set\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"        return KEYWORDS;","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":24}},{"path":"src/main/java/Duke/Commands/RemoveTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.Task.InvalidTaskException;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import Duke.Task.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import Duke.Task.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"import Duke.Ui.UserInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"class RemoveTaskCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    private static final Set\u003cString\u003e KEYWORDS \u003d new HashSet\u003c\u003e(List.of(\"remove\", \"rm\", \"delete\", \"del\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    private static final String REMOVE_TASK_SUCCESS_MESSAGE \u003d \"Ok, I\u0027ve removed this task:\\n\\t%s\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"            + TASKS_COUNT_MESSAGE;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"    public void run(Duke duke, UserInput input) throws InvalidTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"        int taskIndex \u003d parseTaskNumber(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"        TaskList taskList \u003d duke.getTaskList();","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"        Task task \u003d taskList.remove(taskIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"        Ui.print(String.format(REMOVE_TASK_SUCCESS_MESSAGE, task, taskList.size()));","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"    protected Set\u003cString\u003e getKeywords() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"        return KEYWORDS;","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":31}},{"path":"src/main/java/Duke/Commands/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.DukeException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"    private static final String UNKNOWN_COMMAND_MESSAGE \u003d \"Sorry I didn\u0027t understand what you meant by \\\"%s\\\".\";","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"    public UnknownCommandException(String command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"        super(String.format(UNKNOWN_COMMAND_MESSAGE, command));","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":11}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Commands.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.Storage.FileFormatException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import Duke.Storage.TaskStorage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import Duke.Task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"import Duke.Task.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"import Duke.Ui.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"import Duke.Ui.UserInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":" * The Duke class encapsulates the main logic and data for running the chat-bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":" * @author cai","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"public class Duke {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    /** Default path for storing tasks */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"    private static final String DEFAULT_TASK_STORAGE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"    /** Boolean indicating whether the program has been stopped */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"    private boolean isStopped \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    /** List of tasks as added by the user */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"     * Constructs an instance of the Duke chat-bot with the specified task storage path.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"     * @param todoStoragePath Path for storing tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"     * @throws IOException If IOException is thrown when creating and/or loading the tasks from the path.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"    public Duke(String todoStoragePath) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"        Storage\u003cTask\u003e taskStorage \u003d new TaskStorage(todoStoragePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"            this.taskList \u003d new TaskList(taskStorage);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"        } catch (FileFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"            Ui.print(Ui.FILE_FORMAT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"caipng"},"content":"            throw e;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"caipng"},"content":"     * Constructs an instance of the Duke chat-bot with the default task storage path.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"caipng"},"content":"     * @throws IOException If IOException is thrown when creating and/or loading the tasks from the path.","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"caipng"},"content":"    public Duke() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"caipng"},"content":"        this(DEFAULT_TASK_STORAGE_PATH);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"caipng"},"content":"     * Runs the Duke chat-bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"caipng"},"content":"     * The program interacts with the user through a read-eval-print loop. The user is prompted for a command,","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"caipng"},"content":"     * which is parsed by the bot and executed. The program then loops back and asks for a prompt again.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"caipng"},"content":"    public void run() {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"caipng"},"content":"        Ui.print(Ui.GREETING_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"caipng"},"content":"        while (!this.isStopped) {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"caipng"},"content":"            UserInput input \u003d Parser.parse(Ui.read());","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"caipng"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"caipng"},"content":"                Command.matching(input).run(this, input);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"caipng"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"caipng"},"content":"                Ui.print(String.format(Ui.ERROR_MESSAGE, e.getMessage()));","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"caipng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"caipng"},"content":"        Ui.print(Ui.EXIT_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"caipng"},"content":"     * Stops the Duke chat-bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"caipng"},"content":"     * Exits the program gracefully with an exit message on the next iteration of the read-eval-print loop.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"caipng"},"content":"    public void stop() {","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"caipng"},"content":"        this.isStopped \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"caipng"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"caipng"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"caipng":84}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":" * The DukeException class encapsulates checked exceptions that occur specific to Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":" * @author cai","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"     * Constructs a new Duke exception with the specified detail message.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"     * @param message The detail message.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"     * Constructs a new Duke exception with the specified detail message and cause.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"     * @param message The detail message.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"     * @param cause The cause.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"        super(message, cause);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":26}},{"path":"src/main/java/Duke/Storage/FileFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":" * Signals that the file to be read is in an unknown format.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":" * @author cai","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"public class FileFormatException extends IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    private static final String UNKNOWN_FILE_FORMAT_MESSAGE \u003d \"Unknown file format: %s\";","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    FileFormatException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"        super(String.format(UNKNOWN_FILE_FORMAT_MESSAGE, message));","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    FileFormatException(String message, Throwable cause) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"        super(String.format(UNKNOWN_FILE_FORMAT_MESSAGE, message), cause);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"caipng":20}},{"path":"src/main/java/Duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":" * A store of a certain type of elements.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":" * @param \u003cT\u003e The type of elements in this storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":" * @author cai","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"public interface Storage\u003cT\u003e {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"     * Loads and returns a list of elements in this store.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"     * @return The list of elements in this store.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"     * @throws IOException If an IOException is thrown when loading the elements.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    List\u003cT\u003e load() throws IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"     * Saves the specified list of elements in this store.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"     * @param list The list of elements to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"     * @throws IOException If an IOException is thrown when saving the elements.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    void save(List\u003cT\u003e list) throws IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"caipng":28}},{"path":"src/main/java/Duke/Storage/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import Duke.Task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import Duke.Task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import Duke.Task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import Duke.Task.InvalidTaskException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":" * A storage of tasks on the hard disk.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":" * @author cai","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"public class TaskStorage implements Storage\u003cTask\u003e {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    /** The path to the file storing the tasks */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"    private final String path;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"     * Constructs a new TaskStorage with the specified path.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"     * Creates the directories and file if they don\u0027t already exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"     * @param path The path to the file storing the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"     * @throws IOException If an IOException is thrown when creating the directories or file.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"    public TaskStorage(String path) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"        Files.createDirectories(Paths.get(path).getParent());","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"        createFileIfNotExist(path);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"caipng"},"content":"     * Returns the list of tasks stored on the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"caipng"},"content":"     * @return The list of tasks stored.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"caipng"},"content":"     * @throws IOException If an IOException is thrown when creating or reading from the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"caipng"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"caipng"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"caipng"},"content":"        File file \u003d new File(this.path);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"caipng"},"content":"        Scanner scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"caipng"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"caipng"},"content":"            scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"caipng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"caipng"},"content":"            createFileIfNotExist(this.path);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"caipng"},"content":"            return list;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"caipng"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"caipng"},"content":"            String data \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"caipng"},"content":"            list.add(parseTask(data));","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"caipng"},"content":"        return list;","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"caipng"},"content":"     * Saves the specified list of tasks to the file, overwriting the previous contents on the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"caipng"},"content":"     * @param list The list of elements to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"caipng"},"content":"     * @throws IOException If an IOException is thrown when writing to the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"caipng"},"content":"    public void save(List\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"caipng"},"content":"        FileWriter writer \u003d new FileWriter(this.path);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"caipng"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"caipng"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"caipng"},"content":"            builder.append(encodeTask(task));","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"caipng"},"content":"            builder.append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"caipng"},"content":"        writer.write(builder.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"caipng"},"content":"        writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"caipng"},"content":"     * Creates the specified file if it does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"caipng"},"content":"     * @param path The file to create.","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"caipng"},"content":"     * @throws IOException If an IOException is thrown when creating the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"caipng"},"content":"    private static void createFileIfNotExist(String path) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"caipng"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"caipng"},"content":"        file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"caipng"},"content":"     * Parses the string argument as a Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"caipng"},"content":"     * The string is expected to be in the format \"[T|D|E],[0|1],\u003cdescription\u003e,\u003cdate\u003e\",","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"caipng"},"content":"     * where `[T|D|E]` represents the type of task and `[0|1]` represents the completion status.","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"caipng"},"content":"     * @param data The string to be parsed.","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"caipng"},"content":"     * @return The Task object.","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"caipng"},"content":"     * @throws FileFormatException If the string is not in the specified format.","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"caipng"},"content":"    private static Task parseTask(String data) throws FileFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"caipng"},"content":"        String[] splitData \u003d data.split(\",\", -1);","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"caipng"},"content":"        if (splitData.length !\u003d 4) {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"caipng"},"content":"            throw new FileFormatException(\"Expected 4 values, got \" + splitData.length);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"caipng"},"content":"        int completionStatus;","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"caipng"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"caipng"},"content":"            completionStatus \u003d Integer.parseInt(splitData[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"caipng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"caipng"},"content":"            throw new FileFormatException(String.format(\"Unable to parse \\\"%s\\\" as an integer\", splitData[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"caipng"},"content":"        if (!(completionStatus \u003d\u003d 0 || completionStatus \u003d\u003d 1)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"caipng"},"content":"            throw new FileFormatException(\"Expected 0 or 1 for completion status, got \" + completionStatus);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"caipng"},"content":"        String type \u003d splitData[0], description \u003d splitData[2], date \u003d splitData[3];","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"caipng"},"content":"        boolean isDone \u003d completionStatus \u003d\u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"caipng"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"caipng"},"content":"            switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"caipng"},"content":"                case Todo.TASK_TYPE_ICON:","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"caipng"},"content":"                    if (date.length() \u003e 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"caipng"},"content":"                        throw new FileFormatException(\"Unexpected date for task type todo\");","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"caipng"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"caipng"},"content":"                    return new Todo(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"caipng"},"content":"                case Deadline.TASK_TYPE_ICON:","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"caipng"},"content":"                    return new Deadline(description, LocalDate.parse(date), isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"caipng"},"content":"                case Event.TASK_TYPE_ICON:","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"caipng"},"content":"                    return new Event(description, LocalDate.parse(date), isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"caipng"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"caipng"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"caipng"},"content":"            throw new FileFormatException(\"\", e);","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"caipng"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"caipng"},"content":"            throw new FileFormatException(String.format(\"Unable to parse \\\"%s\\\" as a date\", date));","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"caipng"},"content":"        throw new FileFormatException(String.format(\"Unrecognized task type \\\"%s\\\"\", type));","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"caipng"},"content":"     * Returns the specified task as a string.","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"caipng"},"content":"     * The string is in the format \"[T|D|E],[0|1],\u003cdescription\u003e,\u003cdate\u003e\",","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"caipng"},"content":"     * where `[T|D|E]` represents the type of task and `[0|1]` represents the completion status.","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"caipng"},"content":"     * @param task The task to encode.","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"caipng"},"content":"     * @return The string representing the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"caipng"},"content":"    private static String encodeTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"caipng"},"content":"        String type \u003d task.getTaskTypeIcon(), completionStatus \u003d task.isDone() ? \"1\" : \"0\",","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"caipng"},"content":"                description \u003d task.getDescription(), date \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"caipng"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"caipng"},"content":"            date \u003d ((Deadline) task).getEndDate().toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"caipng"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"caipng"},"content":"            date \u003d ((Event) task).getAt().toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"caipng"},"content":"        return String.join(\",\", type, completionStatus, description, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"caipng":166}},{"path":"src/main/java/Duke/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"    public static final String TASK_TYPE_ICON \u003d \"D\";","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"    private static final String END_DATE_EMPTY_MESSAGE \u003d \"Deadline end date cannot be empty.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    public Deadline(String description, LocalDate endDate, boolean isDone) throws InvalidTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"            throw new InvalidTaskException(END_DATE_EMPTY_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    public Deadline(String description, LocalDate endDate) throws InvalidTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"        this(description, endDate, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"        return this.endDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"        String dateString \u003d this.endDate.format(DATE_DISPLAY_FORMAT);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"        return super.toString() + String.format(\" (by: %s)\", dateString);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"        return TASK_TYPE_ICON;","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":37}},{"path":"src/main/java/Duke/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"    public static final String TASK_TYPE_ICON \u003d \"E\";","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"    private static final String AT_DATE_EMPTY_MESSAGE \u003d \"Event at date cannot be empty.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"    private final LocalDate at;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    public Event(String description, LocalDate at, boolean isDone) throws InvalidTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"        if (at \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"            throw new InvalidTaskException(AT_DATE_EMPTY_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    public Event(String description, LocalDate at) throws InvalidTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"        this(description, at, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    public LocalDate getAt() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"        return this.at;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"        String dateString \u003d this.at.format(DATE_DISPLAY_FORMAT);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"        return super.toString() + String.format(\" (at: %s)\", dateString);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"        return TASK_TYPE_ICON;","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":37}},{"path":"src/main/java/Duke/Task/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.DukeException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"    private static final String INVALID_TASK_MESSAGE \u003d \"Invalid task: %s\";","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"        super(String.format(INVALID_TASK_MESSAGE, message));","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"    public InvalidTaskException(String message, Throwable cause) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"        super(String.format(INVALID_TASK_MESSAGE, message), cause);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":15}},{"path":"src/main/java/Duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"    private static final String DONE_ICON \u003d \"X\";","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"    private static final String NOT_DONE_ICON \u003d \" \";","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"    private static final String DESCRIPTION_EMPTY_MESSAGE \u003d \"Description cannot be empty.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"    protected static final DateTimeFormatter DATE_DISPLAY_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    private final String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"    Task(String description, boolean isDone) throws InvalidTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"            throw new InvalidTaskException(DESCRIPTION_EMPTY_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"    public abstract String getTaskTypeIcon();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"        String taskStatusIcon \u003d this.isDone ? DONE_ICON : NOT_DONE_ICON;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"        return String.format(\"[%s] [%s] %s\", this.getTaskTypeIcon(), taskStatusIcon, this.description);","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":41}},{"path":"src/main/java/Duke/Task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"public class TaskList {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"Hooray! You have no tasks currently.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    private static final String CANNOT_FIND_TASK_MESSAGE \u003d \"Cannot find task with number %d.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"    private final Storage\u003cTask\u003e storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    private final List\u003cTask\u003e list;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    public TaskList(Storage\u003cTask\u003e storage) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"        this.list \u003d this.storage.load();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"        this.list.add(newTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"        this.save();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"    public Task get(int taskIndex) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"            return this.list.get(taskIndex - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"            throw new InvalidTaskException(String.format(CANNOT_FIND_TASK_MESSAGE, taskIndex));","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"    public Task remove(int taskIndex) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"        Task task \u003d this.get(taskIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"        this.list.remove(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"        this.save();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"        return task;","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"    public void markAsDone(int taskIndex) throws InvalidTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"        this.get(taskIndex).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"caipng"},"content":"        this.save();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"caipng"},"content":"    public List\u003cTask\u003e findByKeyword(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"caipng"},"content":"       List\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"caipng"},"content":"       for (Task task : this.list) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"caipng"},"content":"           if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"caipng"},"content":"               results.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"caipng"},"content":"           }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"caipng"},"content":"       }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"caipng"},"content":"       return results;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"caipng"},"content":"    public int size() {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"caipng"},"content":"        return this.list.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"caipng"},"content":"    private void save() {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"caipng"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"caipng"},"content":"            this.storage.save(this.list);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"caipng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"caipng"},"content":"            throw new IllegalStateException(\"Error saving tasks to file\", e);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"caipng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"caipng"},"content":"        if (this.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"caipng"},"content":"            return EMPTY_LIST_MESSAGE;","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"caipng"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"caipng"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"caipng"},"content":"            builder.append(String.format(\"%d. %s\\n\", i + 1, this.list.get(i).toString()));","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"caipng"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":79}},{"path":"src/main/java/Duke/Task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    public void get_normal_success() throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"        TaskList taskList \u003d new TaskList(new TaskStorageStub());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"            assertEquals(TaskStorageStub.taskList.get(0), taskList.get(1));","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"            fail(\"Should not have thrown InvalidTaskException\");","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"    public void get_invalidIndex_throwsInvalidTaskException() throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"        TaskList taskList \u003d new TaskList(new TaskStorageStub());","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e taskList.get(100));","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e taskList.get(0));","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"        assertThrows(InvalidTaskException.class, () -\u003e taskList.get(-1));","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"    private static class TaskStorageStub implements Storage\u003cTask\u003e {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"        private static List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"        static {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"                taskList \u003d List.of(","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"                        new Todo(\"homework\")","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"                );","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"            } catch (InvalidTaskException ignored) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"caipng"},"content":"        public List\u003cTask\u003e load() {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"caipng"},"content":"            return taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"caipng"},"content":"        public void save(List\u003cTask\u003e list) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"caipng":51}},{"path":"src/main/java/Duke/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"    public static final String TASK_TYPE_ICON \u003d \"T\";","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"    public Todo(String description, boolean isDone) throws InvalidTaskException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"    public Todo(String description) throws InvalidTaskException {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"        this(description, false);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"    public String getTaskTypeIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"        return TASK_TYPE_ICON;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":18}},{"path":"src/main/java/Duke/Ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":" * The Parser class encapsulates the logic for parsing the input from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":" * @author cai","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"     * Parses the input from the user into a UserInput object.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"     * The input is split into keyword and arguments.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"     * @param raw The input as-is from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"     * @return UserInput object encapsulating the keyword and arguments of the input.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    public static UserInput parse(String raw) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"        String[] splitInput \u003d raw.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"        String keyword \u003d splitInput[0], args \u003d splitInput.length \u003e 1 ? splitInput[1] : \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"        return new UserInput(raw, keyword, args);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"caipng":21}},{"path":"src/main/java/Duke/Ui/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"    public void parse_normal_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"        String command \u003d \"todo homework\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"        assertEquals(new UserInput(command, \"todo\", \"homework\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"                Parser.parse(command));","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"        command \u003d \"event exam /at 2021-12-31\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"        assertEquals(new UserInput(command, \"event\", \"exam /at 2021-12-31\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"                Parser.parse(command));","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"    public void parse_withWhitespaces_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"        String command \u003d \"  todo homework  \";","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"        assertEquals(new UserInput(command, \"todo\", \"homework\"), Parser.parse(command));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"        command \u003d \"  event    exam /at 2021-12-31  \";","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"        assertEquals(new UserInput(command, \"event\", \"exam /at 2021-12-31\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"                Parser.parse(command));","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"caipng":28}},{"path":"src/main/java/Duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":" * The Ui class deals with how Duke interacts with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":" * @author cai","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    public static final String GREETING_MESSAGE \u003d \"Hello I\u0027m Duke!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"    public static final String EXIT_MESSAGE \u003d \"Bye bye! Hope you have a productive day :)\";","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    public static final String ERROR_MESSAGE \u003d \"Oops! An error occurred: %s\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"    public static final String FILE_FORMAT_ERROR_MESSAGE \u003d \"The file storing your tasks is in an unrecognized format. \"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"            + \"Please fix or remove it.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    private static final String RULER \u003d \"\\n````````````````````````````````````````````````````````\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    private static final String INPUT_PROMPT \u003d \"\u003e \";","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    /** System input scanner used for reading the input from the user */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"     * Prints the given message after formatting and indentation.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    public static void print(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"        message \u003d RULER + message + RULER;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"        String indentedMessage \u003d String.join(\"\\n\\t\", message.split(\"\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"        System.out.println(indentedMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"     * Reads the input from the user through the standard input stream.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"     * @return The input string.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"    public static String read() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"        System.out.print(INPUT_PROMPT);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"caipng":42}},{"path":"src/main/java/Duke/Ui/UserInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"package Duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":" * The UserInput class encapsulates the components of a user\u0027s input, namely the keyword and the arguments.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":" * @author cai","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"public class UserInput {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"    private final String raw, keyword, args;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"    UserInput(String raw, String keyword, String args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"        this.raw \u003d raw;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"        this.args \u003d args;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"caipng"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"caipng"},"content":"        return this.keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"    public String getArgs() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"caipng"},"content":"        return this.args;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"caipng"},"content":"    public String getRaw() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"caipng"},"content":"        return this.raw;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"caipng"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"caipng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"caipng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"caipng"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"caipng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"caipng"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"caipng"},"content":"        UserInput userInput \u003d (UserInput) o;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"caipng"},"content":"        return Objects.equals(raw, userInput.raw)","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"caipng"},"content":"                \u0026\u0026 Objects.equals(keyword, userInput.keyword)","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"caipng"},"content":"                \u0026\u0026 Objects.equals(args, userInput.args);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"caipng":44}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"public class Main {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"     * Main entrypoint to the Duke program.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"            Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"            duke.run();","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"caipng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"caipng":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"caipng"},"content":"hello world","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"caipng"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"caipng"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"caipng"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"caipng"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"caipng"},"content":"deadline do homework   /by   sometime :p","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"caipng"},"content":"event 2103 finals  /at  november","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"caipng"},"content":" list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"caipng"},"content":"todo  test whitespaces","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"caipng"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"caipng"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"caipng"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"caipng"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"caipng"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"caipng"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"caipng"},"content":"exit","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"caipng":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"caipng"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"caipng":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"caipng"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"caipng":1,"-":37}}]
