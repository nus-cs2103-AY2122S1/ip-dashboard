[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"# ArchDuke project template","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"3. After that, locate the `src/main/java/ArchDuke.java` file, right-click it, and choose `Run ArchDuke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rushilramesh":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rushilramesh":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"ArchDuke is a task-list application that allows users to organise and keep track","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"of their tasks through a graphical user Interface. Archduke is adapted from Java\u0027s Project Duke.","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"## Features ","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"### Manage your tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"Archduke enables you to plan and organise you upcoming tasks. Three types of tasks are supported - ToDos, ","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"impending deadlines and upcoming events. With Archduke, you can add, view, delete or complete tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"### Find a task","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"Search for a task using a keyword to find all tasks that contain the search phrase.","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"### See what\u0027s happening on a particular date","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"Find tasks that are scheduled for a specific date. If you\u0027re planning a date this friday night, better make ","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"sure you don\u0027t have anything due then!","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"### `todo` - Add a ToDo task to the list","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"Adds a task that does not contain a date or time.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"`todo A whole lotta stuff`","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"Archduke recognises your ToDo task and adds it to the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"Arguments:","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"* Description of task (required)","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"[T][ ] A whole lotta stuff","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"### `deadline` - Add a Deadline to the list","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"Adds a task that needs to be completed by a certain date (and time, if any). If","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"date of a Deadline is before current date, it will be automatically marked as completed.","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"Arguments","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"* Description of deadline (required)","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"* Seperator `by` to distinguish between description and date (required)","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"rushilramesh"},"content":"* Date of deadline in D/MM/YYYY fromat (required)","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"rushilramesh"},"content":"* Time of deadline in HHmm format (optional)","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"rushilramesh"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"rushilramesh"},"content":"`deadline Brexit /by 31/01/2021 (time)`","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"rushilramesh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"rushilramesh"},"content":"Archduke recognises your deadline task and adds it to the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"rushilramesh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"rushilramesh"},"content":"[D][X] Brexit (by: Jan 31 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"rushilramesh"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"rushilramesh"},"content":"### `event` - Add an Event to the list","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"rushilramesh"},"content":"Adds a task that begins at a certain date (and time, if any). If","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"rushilramesh"},"content":"date of an Event is before current date, it will be automatically marked as completed.","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"rushilramesh"},"content":"Arguments","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"rushilramesh"},"content":"* Description of event (required)","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"rushilramesh"},"content":"* Seperator `at` to distinguish between description and date (required)","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"rushilramesh"},"content":"* Date of event in D/MM/YYYY fromat (required)","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"rushilramesh"},"content":"* Time of event in HHmm format (optional)","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"rushilramesh"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"rushilramesh"},"content":"`event CS2103T finals /at 23/11/2021 (time)`","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"rushilramesh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"rushilramesh"},"content":"Archduke recognises your event task and adds it to the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"rushilramesh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"rushilramesh"},"content":"[E][ ] CS2103T finals (at: Nov 23 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"rushilramesh"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"rushilramesh"},"content":"### `list` - Displays all tasks in the list","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"rushilramesh"},"content":"Renders and displays all stored tasks with their key details.","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"rushilramesh"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"rushilramesh"},"content":"`list`","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"rushilramesh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"rushilramesh"},"content":"Archduke displays all tasks contained in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"rushilramesh"},"content":"Here are the tasks on your list:","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"rushilramesh"},"content":"1. [T][ ] A whole lotta stuff","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"rushilramesh"},"content":"2. [D][X] Brexit (by: Jan 31 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"rushilramesh"},"content":"3. [E][ ] CS2103T finals (at: Nov 23 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"rushilramesh"},"content":"### `done` - Marks a task as complete","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"rushilramesh"},"content":"Marks task at given index as complete","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"rushilramesh"},"content":"Arguments:","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"rushilramesh"},"content":"* Position of task in the list. Can be obtained by using the `list` command. Index starts from 1 instead","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"rushilramesh"},"content":"of 0. (required)","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"rushilramesh"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"rushilramesh"},"content":"`done 1`","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"rushilramesh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"rushilramesh"},"content":"Archduke marks task as completed and displays it with an \u0027X\u0027.","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"rushilramesh"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"rushilramesh"},"content":"[T][X] A whole lotta stuff","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"rushilramesh"},"content":"### `delete` - Deletes a task.","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"rushilramesh"},"content":"Removes tasks from task list and deletes them from Archduke.","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"rushilramesh"},"content":"Arguments:","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"rushilramesh"},"content":"* Position of task in the list can be obtained by using the `list` command. Index starts from 1 instead","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"rushilramesh"},"content":"  of 0. (required)","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"rushilramesh"},"content":"* If multiple tasks are to be delted, separate IDs with a space (optional)","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"rushilramesh"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"rushilramesh"},"content":"`delete 1 3`","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":146,"author":{"gitId":"rushilramesh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"rushilramesh"},"content":"Tasks in given ID\u0027s would be deleted from Archduke.","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":150,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"rushilramesh"},"content":"Noted. I\u0027ve removed these tasks:","lastModifiedDate":"2021-09-14"},{"lineNumber":152,"author":{"gitId":"rushilramesh"},"content":"[E][ ] CS2103T finals (at: Nov 23 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":153,"author":{"gitId":"rushilramesh"},"content":"[T][X] A whole lotta stuff","lastModifiedDate":"2021-09-14"},{"lineNumber":154,"author":{"gitId":"rushilramesh"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":157,"author":{"gitId":"rushilramesh"},"content":"### `find` - Finds tasks by keyword","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":159,"author":{"gitId":"rushilramesh"},"content":"Searches for tasks that contain the key word or phrase given and displays them.","lastModifiedDate":"2021-09-14"},{"lineNumber":160,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":161,"author":{"gitId":"rushilramesh"},"content":"Arguments:","lastModifiedDate":"2021-09-14"},{"lineNumber":162,"author":{"gitId":"rushilramesh"},"content":"* Keyword (required)","lastModifiedDate":"2021-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":166,"author":{"gitId":"rushilramesh"},"content":"`find exit`","lastModifiedDate":"2021-09-14"},{"lineNumber":167,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":168,"author":{"gitId":"rushilramesh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":169,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":170,"author":{"gitId":"rushilramesh"},"content":"Archduke displays tasks that contain keyword.","lastModifiedDate":"2021-09-14"},{"lineNumber":171,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":172,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":173,"author":{"gitId":"rushilramesh"},"content":"Here are the matching results:","lastModifiedDate":"2021-09-14"},{"lineNumber":174,"author":{"gitId":"rushilramesh"},"content":"[D][X] Brexit (by: Jan 31 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":175,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":176,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":177,"author":{"gitId":"rushilramesh"},"content":"### `date` - Finds tasks on given date","lastModifiedDate":"2021-09-14"},{"lineNumber":178,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":179,"author":{"gitId":"rushilramesh"},"content":"Searches for tasks that are scheduled for the given date.","lastModifiedDate":"2021-09-14"},{"lineNumber":180,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":181,"author":{"gitId":"rushilramesh"},"content":"Arguments:","lastModifiedDate":"2021-09-14"},{"lineNumber":182,"author":{"gitId":"rushilramesh"},"content":"* date (required)","lastModifiedDate":"2021-09-14"},{"lineNumber":183,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":184,"author":{"gitId":"rushilramesh"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":185,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":186,"author":{"gitId":"rushilramesh"},"content":"`date 31/01/2021`","lastModifiedDate":"2021-09-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":190,"author":{"gitId":"rushilramesh"},"content":"Archduke displays tasks scheduled for given date","lastModifiedDate":"2021-09-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":193,"author":{"gitId":"rushilramesh"},"content":"Here are the tasks on that date:","lastModifiedDate":"2021-09-14"},{"lineNumber":194,"author":{"gitId":"rushilramesh"},"content":"[D][X] Brexit (by: Jan 31 2021)","lastModifiedDate":"2021-09-14"},{"lineNumber":195,"author":{"gitId":"rushilramesh"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":196,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":197,"author":{"gitId":"rushilramesh"},"content":"### `bye` - Exits Archduke","lastModifiedDate":"2021-09-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"rushilramesh"},"content":"Displays the goodbye message before exiting the application.","lastModifiedDate":"2021-09-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":203,"author":{"gitId":"rushilramesh"},"content":"`bye`","lastModifiedDate":"2021-09-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":207,"author":{"gitId":"rushilramesh"},"content":"Archduke displays goodbye message before closing the session.","lastModifiedDate":"2021-09-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":210,"author":{"gitId":"rushilramesh"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"rushilramesh":183,"-":28}},{"path":"src/main/java/ArchDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"public class ArchDuke {","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"    private boolean isExit;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"     * Constructor for Duke. Initialises tasklist and storage","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"    public ArchDuke() {","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"        String response;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"            Command c \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"            response \u003d c.execute(tasks, storage);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"            isExit \u003d c.getExitStatus();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"        return response;","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rushilramesh":37}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"        dialog.setTextFill(Color.DARKGREEN);","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"        Circle circle \u003d new Circle(50, 50, 50);","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"    public void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"        dialog.setTextFill(Color.DARKBLUE);","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"rushilramesh"},"content":"    public void setErrorDialog() {","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"rushilramesh"},"content":"        dialog.setTextFill(Color.DARKRED);","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"rushilramesh"},"content":"     * Returns DialogBox containing the user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"rushilramesh"},"content":"     * @param text input string of user.","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"rushilramesh"},"content":"     * @param img user\u0027s profile picture.","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"rushilramesh"},"content":"     * @return DialogBox containing user\u0027s input","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"rushilramesh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"rushilramesh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"rushilramesh"},"content":"     * Returns DialogBox containing Duke\u0027s response to user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"rushilramesh"},"content":"     * @param text String containing Duke\u0027s response.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"rushilramesh"},"content":"     * @param img Duke\u0027s profile picture.","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"rushilramesh"},"content":"     * @return DialogBox containing Duke\u0027s response.","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"rushilramesh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"rushilramesh"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"rushilramesh"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"rushilramesh"},"content":"        db.setStyle(\"-fx-background-color: #98FB98; -fx-border-width: 5; -fx-border-color: white;\");","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"rushilramesh"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"rushilramesh"},"content":"     * Returns DialogBox containing Duke\u0027s error response to user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"rushilramesh"},"content":"     * @param text String containing Duke\u0027s error message.","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"rushilramesh"},"content":"     * @param img Duke\u0027s profile picture.","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"rushilramesh"},"content":"     * @return DialogBox containing Duke\u0027s error message.","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"rushilramesh"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"rushilramesh"},"content":"        DialogBox db \u003d getDukeDialog(text, img);","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"rushilramesh"},"content":"        db.setErrorDialog();","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"rushilramesh"},"content":"        return db;","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"rushilramesh":88}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"     * @param args input for main function","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"rushilramesh":13}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"    private ArchDuke duke \u003d new ArchDuke();","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"rushilramesh":25}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"    private ArchDuke duke;","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpeg\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"     * Initialises MainWindow page.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(showWelcome(), dukeImage));","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"    public void setDuke(ArchDuke d) {","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"        if (isExit) {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"rushilramesh"},"content":"            return;","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"rushilramesh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"rushilramesh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"rushilramesh"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"rushilramesh"},"content":"        // checks if error message thrown","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"rushilramesh"},"content":"        String[] dukeResponse \u003d response.split(\" \");","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"rushilramesh"},"content":"        DialogBox dukeDialog;","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"rushilramesh"},"content":"        if (dukeResponse[0].equals(\"☹\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"rushilramesh"},"content":"            dukeDialog \u003d DialogBox.getErrorDialog(response, dukeImage);","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"rushilramesh"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"rushilramesh"},"content":"            dukeDialog \u003d DialogBox.getDukeDialog(response, dukeImage);","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"rushilramesh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"rushilramesh"},"content":"            userDialog,","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"rushilramesh"},"content":"            dukeDialog","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"rushilramesh"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"rushilramesh"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"rushilramesh"},"content":"        // prints goodbye message and close app","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"rushilramesh"},"content":"        if (response.equals(\"Bye. Hope to see you again soon!\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"rushilramesh"},"content":"            isExit \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"rushilramesh"},"content":"            exit();","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"rushilramesh"},"content":"     * Exits application.","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"rushilramesh"},"content":"    private void exit() {","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"rushilramesh"},"content":"        Timer timer \u003d new Timer();","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"rushilramesh"},"content":"        timer.schedule(new TimerTask() {","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"rushilramesh"},"content":"            @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"rushilramesh"},"content":"            public void run() {","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"rushilramesh"},"content":"                Platform.exit();","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"rushilramesh"},"content":"                System.exit(0);","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"rushilramesh"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"rushilramesh"},"content":"        }, 2000);","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"rushilramesh"},"content":"     * generates welcome message when app is loaded.","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"rushilramesh"},"content":"     * @return Welcome message.","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"rushilramesh"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"rushilramesh"},"content":"        String name \u003d \"ARCHDUKE!\";","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"rushilramesh"},"content":"        return \"Hello! I\u0027m \" + name + \"\\nHow can I help?\";","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"rushilramesh":100}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"        super(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":6}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"    private TaskType type;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"    private String commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"     * Constructor for AddCommand object.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"     * @param type type of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"     * @param commands command input by user.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"    public AddCommand(TaskType type, String commands) {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"        this.commands \u003d commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"        switch (type) {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"        case TO_DO: {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"            return addToDo();","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"        case DEADLINE: {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"            return addDeadline();","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"        case EVENT: {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"            return addEvent();","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"        default: {","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"            return response;","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"rushilramesh"},"content":"    private String addToDo() throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"rushilramesh"},"content":"        if (commands.length() \u003e 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"rushilramesh"},"content":"            ToDo td \u003d new ToDo(commands);","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"rushilramesh"},"content":"            tasks.addToList(td);","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"rushilramesh"},"content":"            storage.updateFile(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"rushilramesh"},"content":"            return \"Got it. I\u0027ve added this task:\\n\" + td + \"\\nNow you have \" + tasks.getLength() + \" tasks in the list.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"rushilramesh"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"rushilramesh"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"rushilramesh"},"content":"    private String addDeadline() throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"rushilramesh"},"content":"        if (commands.length() \u003e 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"rushilramesh"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"rushilramesh"},"content":"                String[] details \u003d commands.split(\"/by \");","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"rushilramesh"},"content":"                if (details.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"rushilramesh"},"content":"                    throw new DukeException(\"☹ OOPS!!! Add a \u0027/by deadline\u0027\");","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"rushilramesh"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"rushilramesh"},"content":"                    Deadline deadline \u003d new Deadline(details[0], details[1]);","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"rushilramesh"},"content":"                    tasks.addToList(deadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"rushilramesh"},"content":"                    storage.updateFile(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"rushilramesh"},"content":"                    return \"Got it. I\u0027ve added this task:\\n\" + deadline + \"\\nNow you have \" + tasks.getLength() + \" tasks in the list.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"rushilramesh"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"rushilramesh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"rushilramesh"},"content":"                throw new DukeException(\"☹ OOPS!!! The date of the deadline is poorly formatted (d/MM/yyyy or d/MM/yyyy HHmm)\");","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"rushilramesh"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"rushilramesh"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"rushilramesh"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"rushilramesh"},"content":"    private String addEvent() throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"rushilramesh"},"content":"        if (commands.length() \u003e 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"rushilramesh"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"rushilramesh"},"content":"                String[] details \u003d commands.split(\"/at \");","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"rushilramesh"},"content":"                if (details.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"rushilramesh"},"content":"                    throw new DukeException(\"☹ OOPS!!! Add a \u0027/at time of event\u0027\");","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"rushilramesh"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"rushilramesh"},"content":"                    Event event \u003d new Event(details[0], details[1]);","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"rushilramesh"},"content":"                    tasks.addToList(event);","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"rushilramesh"},"content":"                    storage.updateFile(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"rushilramesh"},"content":"                    return \"Got it. I\u0027ve added this task:\\n\" + event + \"\\nNow you have \" + tasks.getLength() + \" tasks in the list.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"rushilramesh"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"rushilramesh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"rushilramesh"},"content":"                throw new DukeException(\"☹ OOPS!!! The date of the event is poorly formatted (d/MM/yyyy)\");","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"rushilramesh"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"rushilramesh"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"rushilramesh"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":102}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"     * Indicates if the command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"    public boolean getExitStatus() {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"        return this.isExit;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"    public void setExitStatus() {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"     * Executes the user\u0027s command.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"     * @param tasks Current TaskList.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"     * @param storage Storage object which updates the local file.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"     * @throws DukeException when user input is incorrect.","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":31}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"    private String commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"    public DeleteCommand(String commands) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"        this.commands \u003d commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"        String response \u003d \"Noted. I\u0027ve removed these tasks:\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"            int[] indexesOfTasks \u003d getIndexes();","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"            for (int i \u003d indexesOfTasks.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"                response +\u003d deleteTask(indexesOfTasks[i], tasks, storage);","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"        response +\u003d \"Now you have \" + tasks.getLength() + \" tasks in the list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"        return response;","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"     * Parses command inputted by user to return array of indexes to be","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"     * deleted in descending order.","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"     * @return Array of indexes in descending order.","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"     * @throws DukeException when there is invalid index.","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"    private int[] getIndexes() throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"        String[] indexes \u003d commands.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"        int[] indexesOfTasks \u003d new int[indexes.length];","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"        for (int i \u003d 0; i \u003c indexes.length; i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"            if (indexes[i].matches(\"\\\\d+\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"                indexesOfTasks[i] \u003d Integer.parseInt(indexes[i]);","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"                throw new DukeException(\"☹ OOPS!!! Input a valid index\");","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"        Arrays.sort(indexesOfTasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"        return indexesOfTasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"rushilramesh"},"content":"     * Deletes task from TaskList and storage and returns string","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"rushilramesh"},"content":"     * format of deleted task.","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"rushilramesh"},"content":"     * @param location index to be deleted.","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"rushilramesh"},"content":"     * @param tasks TaskList of tasks to be updated.","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"rushilramesh"},"content":"     * @param storage Storage object that updates the file in storage.","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"rushilramesh"},"content":"     * @return String format of task deleted","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"rushilramesh"},"content":"     * @throws DukeException when there is an invalid index.","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"rushilramesh"},"content":"    private String deleteTask(int location, TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"rushilramesh"},"content":"        String response;","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"rushilramesh"},"content":"        int index \u003d location - 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"rushilramesh"},"content":"        if (index \u003e\u003d 0 \u0026\u0026 index \u003c tasks.getLength()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"rushilramesh"},"content":"            Task task \u003d tasks.deleteTask(index);","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"rushilramesh"},"content":"            storage.updateFile(tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"rushilramesh"},"content":"            response \u003d task + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"rushilramesh"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"rushilramesh"},"content":"            throw new DukeException(\"☹ OOPS!!! Input a valid index\");","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"rushilramesh"},"content":"        return response;","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":73}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"        this.setExitStatus();","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":16}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"    private TaskType type;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"    private String commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"     * Constructor for FindCommand class","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"     * @param type type of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"     * @param commands command input by user.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"    public FindCommand(TaskType type, String commands) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"        this.commands \u003d commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"            switch (type) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"            case FIND_BY_DATE: {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"                return findByDate(tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"            case FIND: {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"                return findByKeyword(tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"            default: {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"                return \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"    private String findByDate(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"        String response \u003d \"Here are the tasks on that date:\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"            Task[] tasksOnDate \u003d tasks.tasksOnDate(commands);","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"            for (Task task : tasksOnDate) {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"                response +\u003d task + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"rushilramesh"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"rushilramesh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"rushilramesh"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"rushilramesh"},"content":"        return response;","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"rushilramesh"},"content":"    private String findByKeyword(TaskList tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"rushilramesh"},"content":"        String response \u003d \"Here are the matching results:\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"rushilramesh"},"content":"        Task[] searchResults \u003d tasks.findByKeyword(commands);","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"rushilramesh"},"content":"        for (Task task : searchResults) {","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"rushilramesh"},"content":"            response +\u003d task + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"rushilramesh"},"content":"        return response;","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":65}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"    public ListCommand() {}","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"        return tasks.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":15}},{"path":"src/main/java/duke/commands/NonsenseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"public class NonsenseCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"    // empty as the string input is invalid","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"    public NonsenseCommand() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":15}},{"path":"src/main/java/duke/commands/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"    TO_DO,","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"    EVENT,","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"    FIND,","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"    FIND_BY_DATE","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":9}},{"path":"src/main/java/duke/commands/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"    private String commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"    public UpdateCommand(String commands) {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"        this.commands \u003d commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"        String response;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"        if (commands.matches(\"\\\\d+\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"            Task item \u003d tasks.getItem(Integer.parseInt(commands) - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"            if (item !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"                response \u003d item.completeItem();","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"                storage.updateFile(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"                throw new DukeException(\"☹ OOPS!!! Input a valid index\");","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"            throw new DukeException(\"☹ OOPS!!! Input a valid index\");","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"        return response;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":32}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.parser;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"import duke.commands.NonsenseCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"import duke.commands.TaskType;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"import duke.commands.UpdateCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"     * Parses the user\u0027s command and returns a command object","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"     * @param fullCommand Command inputted by user.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"     * @return Command type object that will be used to execute the command inputted by the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"    public static Command parseCommand(String fullCommand) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"        String[] commands \u003d fullCommand.split(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"        String first \u003d commands[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"        String rest \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"        if (commands.length \u003e 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"            rest \u003d fullCommand.substring(first.length() + 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"        // return command based on user input","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"        switch (first) {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"        case \"list\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"            assert rest.length() \u003d\u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"        case \"done\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"            assert rest.length() \u003d\u003d 1 : \"Specify index to complete\";","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"            return new UpdateCommand(rest);","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"        case \"deadline\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"            assert rest.length() \u003d\u003d 1 : \"Add a deadline\";","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"            return new AddCommand(TaskType.DEADLINE, rest);","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"        case \"todo\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"            assert rest.length() \u003d\u003d 1 : \"Add a todo\";","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"            return new AddCommand(TaskType.TO_DO, rest);","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"        case \"event\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"            assert rest.length() \u003d\u003d 1 : \"Add an event\";","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"            return new AddCommand(TaskType.EVENT, rest);","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"rushilramesh"},"content":"        case \"date\" : {","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"rushilramesh"},"content":"            assert rest.length() \u003d\u003d 1 : \"Specify date to find\";","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"rushilramesh"},"content":"            return new FindCommand(TaskType.FIND_BY_DATE, rest);","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"rushilramesh"},"content":"        case \"find\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"rushilramesh"},"content":"            assert rest.length() \u003d\u003d 1 : \"Specify keyword to find\";","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"rushilramesh"},"content":"            return new FindCommand(TaskType.FIND, rest);","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"rushilramesh"},"content":"        case \"delete\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"rushilramesh"},"content":"            assert rest.length() \u003d\u003d 1 : \"Specify index to delete\";","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"rushilramesh"},"content":"            return new DeleteCommand(rest);","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"rushilramesh"},"content":"        case \"bye\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"rushilramesh"},"content":"            assert rest.length() \u003d\u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"rushilramesh"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"rushilramesh"},"content":"        default: {","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"rushilramesh"},"content":"            return new NonsenseCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":72}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"    private static final String DIR_NAME \u003d \"data\";","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"     * Constructor for Storage object.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"    public Storage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"     * Loads the TaskList stored in text format in the user\u0027s hard drive when Duke is run.","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"     * @return Arraylist of task objects loaded from the file stored on the hard drive.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"            File directory \u003d new File(DIR_NAME);","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"            // If directory not found, create directory","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"            File data \u003d new File(DIR_NAME, FILE_NAME);","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"            // If file not found, create file","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"            data.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"            Scanner reader \u003d new Scanner(data);","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"                String task \u003d reader.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"                String[] taskDetails \u003d task.split(\"\\\\|\");","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"                initialiseTask(taskDetails, listOfTasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"            reader.close();","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"rushilramesh"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"rushilramesh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"rushilramesh"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"rushilramesh"},"content":"        return listOfTasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"rushilramesh"},"content":"     * Initialises Task object and adds it to the arraylist.","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"rushilramesh"},"content":"     * @param taskDetails information on a particular task.","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"rushilramesh"},"content":"     * @param listOfTasks ArrayList of tasks to be returned by load().","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"rushilramesh"},"content":"    private void initialiseTask(String[] taskDetails, ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"rushilramesh"},"content":"        Task t;","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"rushilramesh"},"content":"        switch (taskDetails[0].trim()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"rushilramesh"},"content":"        case \"T\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"rushilramesh"},"content":"            t \u003d new ToDo(taskDetails[2].trim());","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"rushilramesh"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"rushilramesh"},"content":"        case \"D\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"rushilramesh"},"content":"            t \u003d new Deadline(taskDetails[2].trim(), taskDetails[3].trim());","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"rushilramesh"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"rushilramesh"},"content":"        case \"E\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"rushilramesh"},"content":"            t \u003d new Event(taskDetails[2].trim(), taskDetails[3].trim());","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"rushilramesh"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"rushilramesh"},"content":"        default: {","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"rushilramesh"},"content":"            t \u003d new ToDo(\"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"rushilramesh"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"rushilramesh"},"content":"        if (Integer.parseInt(taskDetails[1].trim()) \u003d\u003d 1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"rushilramesh"},"content":"            t.completeItem();","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"rushilramesh"},"content":"        listOfTasks.add(t);","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"rushilramesh"},"content":"     * Updates the txt file containing the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"rushilramesh"},"content":"     * @param l current TaskList that would be saved in the txt file.","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"rushilramesh"},"content":"    public static void updateFile(TaskList l) {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"rushilramesh"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"rushilramesh"},"content":"            String fullPathName \u003d DIR_NAME + \"/\" + FILE_NAME;","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"rushilramesh"},"content":"            FileWriter writer \u003d new FileWriter(fullPathName, false);","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"rushilramesh"},"content":"            writer.write(l.format());","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"rushilramesh"},"content":"            writer.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"rushilramesh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"rushilramesh"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":104}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"    private boolean isTimeIncluded;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"     * @param input deadline title.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"     * @param by date/time of deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"     * @throws DateTimeParseException if date format is incorrect.","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"    public Deadline(String input, String by) throws DateTimeParseException {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"        super(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"        int space \u003d by.indexOf(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"        String format;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"        if (space \u003e 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"            format \u003d \"d/MM/yyyy HHmm\";","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"            isTimeIncluded \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"            format \u003d \"d/MM/yyyy\";","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"            isTimeIncluded \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"        this.by \u003d LocalDate.parse(by.trim(), DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"        if (this.by.isBefore(LocalDate.now())) {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"            super.completeItem();","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"    public boolean compareDate(LocalDate compare) {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"        return this.by.equals(compare);","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"    public String formatTask() {","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"        return \"D\" + \" | \" + super.formatTask() + \" | \" + this.by.format(DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"        String format \u003d isTimeIncluded ? \"MMM dd yyyy HH:mm\" : \"MMM dd yyyy\";","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"        return \"[D] \" + super.toString() + \"(by: \" + this.by.format(DateTimeFormatter.ofPattern(format)) + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":49}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"    private LocalDate at;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"    private boolean isTimeIncluded;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"     * @param input event title.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"     * @param at date/time of event.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"     * @throws DateTimeParseException if date format is incorrect.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"    public Event(String input, String at) throws DateTimeParseException {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"        super(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"        int space \u003d at.indexOf(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"        String format;","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"        if (space \u003e 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"            format \u003d \"d/MM/yyyy HHmm\";","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"            isTimeIncluded \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"            format \u003d \"d/MM/yyyy\";","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"            isTimeIncluded \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"        this.at \u003d LocalDate.parse(at.trim(), DateTimeFormatter.ofPattern(format));","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"        if (this.at.isBefore(LocalDate.now())) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"            super.completeItem();","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"    public boolean compareDate(LocalDate compare) {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"        return this.at.equals(compare);","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"    public String formatTask() {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"        return \"E\" + \" | \" + super.formatTask() + \" | \" + this.at.format(DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"        String format \u003d isTimeIncluded ? \"MMM dd yyyy HH:mm\" : \"MMM dd yyyy\";","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"        return \"[E] \" + super.toString() + \"(at: \" + this.at.format(DateTimeFormatter.ofPattern(format)) + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"public class Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"     * title of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"    private String title;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"     * boolean showing whether the task has been completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"     * Constructor for Task object.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"     * @param input title of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"    public Task(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"        this.title \u003d input.trim();","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"     * Completes the task by setting completed to true","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"     * @return String that states that the task has been completed","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"    public String completeItem() {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + this.toString();","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"     * @return formatted string for uploading to the database","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"    public String formatTask() {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"        int complete \u003d isCompleted ? 1 : 0;","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"        return complete + \" | \" + this.title;","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"     * Checks if the input date is the same as this task\u0027s","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"     * @param compare Date to compare.","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"     * @return boolean value of whether the date is the same.","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"    public boolean compareDate(LocalDate compare) {","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"rushilramesh"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"rushilramesh"},"content":"    public boolean compareKeyword(String keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"rushilramesh"},"content":"        return this.title.contains(keyword);","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"rushilramesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"rushilramesh"},"content":"        String complete \u003d this.isCompleted ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"rushilramesh"},"content":"        return complete + \" \" + this.title + \" \";","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":62}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"public class TaskList {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"     * Constructor for a new list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"     * Constructor for TaskList when a list of tasks is loaded from a file.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"     * @param l input arraylist of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"    public TaskList(ArrayList\u003cTask\u003e l) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"        this.list \u003d l;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"     * Adds new task to TaskList.","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"     * @param input task to be added.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"    public void addToList(Task input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"        list.add(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"     * Returns a particular task at a particular index of the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"     * @param index index of a particular task.","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"     * @return task at the input index.","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"    public Task getItem(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"        if (this.list.size() \u003c\u003d index || index \u003c 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"            return null;","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"        return this.list.get(index);","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"rushilramesh"},"content":"    public int getLength() {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"rushilramesh"},"content":"        return this.list.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"rushilramesh"},"content":"     * Deletes a particular task from the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"rushilramesh"},"content":"     * @param index index of a particular task.","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"rushilramesh"},"content":"     * @return deleted task.","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"rushilramesh"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"rushilramesh"},"content":"        return this.list.remove(index);","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"rushilramesh"},"content":"     * Formats the tasks and the TaskList as a whole into a string form that will be stored on the users\u0027 hard drive","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"rushilramesh"},"content":"     * @return String representation of all the tasks in the TaskList.","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"rushilramesh"},"content":"    public String format() {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"rushilramesh"},"content":"        String x \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"rushilramesh"},"content":"        for (Task task : this.list) {","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"rushilramesh"},"content":"            x +\u003d task.formatTask() + \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"rushilramesh"},"content":"        return x;","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"rushilramesh"},"content":"     * Retrieves tasks form the TaskList that have the same date as the input.","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"rushilramesh"},"content":"     * @param date Date of tasks to be searched for","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"rushilramesh"},"content":"     * @return array of tasks that are on the same date as the inputted date.","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"rushilramesh"},"content":"    public Task[] tasksOnDate(String date) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"rushilramesh"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"rushilramesh"},"content":"            LocalDate search \u003d LocalDate.parse(date.trim(), DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"rushilramesh"},"content":"            // use stream filter function to find results based on inputted date","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"rushilramesh"},"content":"            return this.list.stream().filter(task -\u003e task.compareDate(search)).toArray(Task[]::new);","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"rushilramesh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"rushilramesh"},"content":"            throw new DukeException(\"☹ OOPS!!! Invalid date format\");","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"rushilramesh"},"content":"     * Finds and returns tasks by keyword.","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"rushilramesh"},"content":"     * @param search keyword input.","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"rushilramesh"},"content":"     * @return Array of tasks containing given keyword.","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"rushilramesh"},"content":"    public Task[] findByKeyword(String search) {","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"rushilramesh"},"content":"        // use stream filter function to find results based on keyword","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"rushilramesh"},"content":"        return this.list.stream().filter(task -\u003e task.compareKeyword(search)).toArray(Task[]::new);","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"rushilramesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"rushilramesh"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"rushilramesh"},"content":"            return \"No tasks added yet!\";","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"rushilramesh"},"content":"        String l \u003d \"Here are the tasks on your list:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"rushilramesh"},"content":"        for (Task s : list) {","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"rushilramesh"},"content":"            l +\u003d \"\\n\" + (list.indexOf(s) + 1) + \". \" + s;","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"rushilramesh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"rushilramesh"},"content":"        return l;","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":118}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"     * Constructor for ToDo class.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"     * @param input title of Task","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"    public ToDo(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"        super(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"    public String formatTask() {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"        return \"T\" + \" | \" + super.formatTask();","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":21}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"package duke.ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"     * Scanner that will be used for scannign user\u0027s input","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"    public Ui() {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"     * Prints welcome message when Duke is run.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"        System.out.println(\"Hello! I\u0027m\\n\" + logo + \"\\nHow can I help?\");","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"     * @return command inputted by user","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rushilramesh"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"rushilramesh"},"content":"     * Prints the output as a result of a command.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"rushilramesh"},"content":"     * @param output output string to be printed.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"rushilramesh"},"content":"    public void printOutput(String output) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rushilramesh"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"rushilramesh"},"content":"     * Prints error message","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"rushilramesh"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"rushilramesh"},"content":"     * @param error error message to be printed.","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"rushilramesh"},"content":"    public void showError(String error) {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"rushilramesh"},"content":"        System.out.println(error);","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"rushilramesh"},"content":"     * Prints a line to indicate the start and end of the output.","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"rushilramesh"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"rushilramesh"},"content":"        System.out.println(\"-------------------------------------------------------------------------------\");","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"rushilramesh"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"rushilramesh"},"content":"     * Prints error message if the filepath could not be found.","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"rushilramesh"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"rushilramesh"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"rushilramesh"},"content":"        System.out.println(\"☹ OOPS!!! File couldn\u0027t be loaded\");","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":65}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"300\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"1.0\" style\u003d\"-fx-background-color: lightblue; -fx-border-width: 5; -fx-border-color: white; -fx-spacing: 1;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" lineSpacing\u003d\"1.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"            \u003cFont name\u003d\"Times New Roman\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"rushilramesh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"rushilramesh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"rushilramesh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"rushilramesh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"rushilramesh":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" defaultButton\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" nodeOrientation\u003d\"RIGHT_TO_LEFT\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"rushilramesh":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"        assertEquals(\"[T] [ ] submit iP \", new ToDo(\"submit iP\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rushilramesh"},"content":"    public void toFileTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rushilramesh"},"content":"        assertEquals(\"T | 0 | submit iP\", new ToDo(\"submit iP\").formatTask());","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rushilramesh"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rushilramesh"},"content":"    public void eventDateTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rushilramesh"},"content":"        assertEquals(\"[E] [ ] submission (at: Dec 12 2021)\", new Event(\"submission\", \"12/12/2021\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rushilramesh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rushilramesh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rushilramesh":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rushilramesh"},"content":"todo Say good morning ArchDuke!","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"rushilramesh"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"rushilramesh"},"content":"deadline Say Good morning /by 1159am today","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"rushilramesh"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"rushilramesh"},"content":"event Good Afternoon ArchDuke /at 12pm tomorrow","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"rushilramesh"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"rushilramesh"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rushilramesh"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"rushilramesh"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"rushilramesh"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"rushilramesh"},"content":"delete 2","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"rushilramesh"},"content":"list","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"rushilramesh"},"content":"bye","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"rushilramesh":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"rushilramesh"},"content":"java -classpath ..\\bin ArchDuke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rushilramesh":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"rushilramesh"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rushilramesh":1,"-":38}}]
