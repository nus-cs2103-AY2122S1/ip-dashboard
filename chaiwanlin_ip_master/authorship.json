[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"    protected LocalDate dt;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"    public Deadline(String description, LocalDate dt) {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"        this.dt \u003d dt;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"    public static Deadline build(String desc_date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"        desc_date \u003d desc_date.replaceAll(\"\\\\(by: (.*)\\\\)\", \"/by $1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"        String[] input \u003d desc_date.split(\" /by \",2);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"            return new Deadline(input[0], LocalDate.parse(input[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"        catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"            LocalDate d \u003d LocalDate.parse(input[1], DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"            return new Deadline(input[0], d);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chaiwanlin":30}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"    /** Path string to data of tasks to load/save */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"    private final static String PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"    /** Stores a list of tasks */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    private static ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"    /** Enum type to differentiate and parse user inputs */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"    private enum Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"        BYE       (\"Usage: bye\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"        LIST      (\"Usage: list\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"        DONE      (\"Usage: done [task number]\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"        DELETE    (\"Usage: delete [task number]\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"        TODO      (\"Usage: todo [description]\"),","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"        DEADLINE  (\"Usage: deadline [description] /by [date in YYYY-MM-DD format]\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"        EVENT     (\"Usage: event [description] /at [date in YYYY-MM-DD format]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"        private static Command[] taskCommands \u003d {TODO, DEADLINE, EVENT};","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"        /** Help text for the command */","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"        private final String help_text;","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"        Command(String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"            this.help_text \u003d str;","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"        /**","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"         *","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"         * @param input String that is the user\u0027s input directly from scanner","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"         * @return Command that is activated by valid user input","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"         * @throws DukeException when user input is invalid","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"         */","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"        private static Command validate(String input) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"            // Separate user input to get command","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"            String[] input_split \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"            // Throw error when there user keys in nothing","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"            int key_phrases \u003d input_split.length;","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"chaiwanlin"},"content":"            if (key_phrases \u003c 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"chaiwanlin"},"content":"                throw new DukeException(\"You better type sumthin or else..\");","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"chaiwanlin"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"chaiwanlin"},"content":"            // Check for command to activate in user input\u0027s first word","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"chaiwanlin"},"content":"            switch (input_split[0]) {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"chaiwanlin"},"content":"                case \"bye\": {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"chaiwanlin"},"content":"                    // Check if there is a key phrase after, if true throw error to double check with user","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"chaiwanlin"},"content":"                    if (key_phrases \u003e 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Bye or nah?\\n\\t\" + Command.BYE.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"chaiwanlin"},"content":"                    return Command.BYE;","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"chaiwanlin"},"content":"                case \"list\": {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"chaiwanlin"},"content":"                    // Check if there is a key phrase after, if true throw error to double check with user","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"chaiwanlin"},"content":"                    if (key_phrases \u003e 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"You want your list or nah?\\n\\t\" + Command.LIST.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"chaiwanlin"},"content":"                    return Command.LIST;","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"chaiwanlin"},"content":"                case \"done\": {","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"chaiwanlin"},"content":"                    // Make sure there is key phrase after to determine task to mark as done","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"chaiwanlin"},"content":"                    if (key_phrases \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Done what brah??\\n\\t\" + Command.DONE.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"chaiwanlin"},"content":"                    // Makes sure that key phrase is a valid int and within range of task list","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"chaiwanlin"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"chaiwanlin"},"content":"                        int index \u003d Integer.parseInt(input_split[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"chaiwanlin"},"content":"                        lst.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"chaiwanlin"},"content":"                        return Command.DONE;","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"chaiwanlin"},"content":"                    catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Not a number!\\n\\t\" + Command.DONE.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"chaiwanlin"},"content":"                    catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Task number does not exist!\\n\\t\" + Command.DONE.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"chaiwanlin"},"content":"                case \"delete\": {","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"chaiwanlin"},"content":"                    // Make sure there is key phrase after to determine task to mark as done","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"chaiwanlin"},"content":"                    if (key_phrases \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Delete what brah??\\n\\t\" + Command.DELETE.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"chaiwanlin"},"content":"                    // Makes sure that key phrase is a valid int and within range of task list","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"chaiwanlin"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"chaiwanlin"},"content":"                        int index \u003d Integer.parseInt(input_split[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"chaiwanlin"},"content":"                        lst.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"chaiwanlin"},"content":"                        return Command.DELETE;","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"chaiwanlin"},"content":"                    catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Not a number!\\n\\t\" + Command.DELETE.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"chaiwanlin"},"content":"                    catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Task number does not exist!\\n\\t\" + Command.DELETE.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"chaiwanlin"},"content":"                case \"todo\": {","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"chaiwanlin"},"content":"                    // Make sure there is key phrase after to record as task","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"chaiwanlin"},"content":"                    if (key_phrases \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Todo what brah??\\n\\t\" + Command.TODO.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"chaiwanlin"},"content":"                    return Command.TODO;","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"chaiwanlin"},"content":"                case \"deadline\": {","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"chaiwanlin"},"content":"                    // Make sure there is key phrase after to record as task","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"chaiwanlin"},"content":"                    if (key_phrases \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Deadline for what brah??\\n\\t\" + Command.DEADLINE.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"chaiwanlin"},"content":"                    // Makes sure key phrase after contains /by descriptor to record datetime","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"chaiwanlin"},"content":"                    String[] desc_date \u003d input_split[1].split(\" /by \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"chaiwanlin"},"content":"                    if (desc_date.length !\u003d 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Deadline when brah??\\n\\t\" + Command.DEADLINE.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"chaiwanlin"},"content":"                    // Make sure date format is correct","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"chaiwanlin"},"content":"                    try {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"chaiwanlin"},"content":"                        LocalDate.parse(desc_date[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"chaiwanlin"},"content":"                    catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Follow the gahdam format!!\\n\\t\" + Command.DEADLINE.help_text);","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"chaiwanlin"},"content":"                    return Command.DEADLINE;","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"chaiwanlin"},"content":"                case \"event\": {","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"chaiwanlin"},"content":"                    // Make sure there is key phrase after to record as task","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"chaiwanlin"},"content":"                    if (key_phrases \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"What event brah??\\n\\t\" + Command.EVENT.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"chaiwanlin"},"content":"                    // Makes sure key phrase after contains /at descriptor to record datetime","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"chaiwanlin"},"content":"                    String[] desc_date \u003d input_split[1].split(\" /at \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"chaiwanlin"},"content":"                    if (desc_date.length !\u003d 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Event when brah??\\n\\t\" + Command.EVENT.help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"chaiwanlin"},"content":"                    // Make sure date format is correct","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"chaiwanlin"},"content":"                    try {","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"chaiwanlin"},"content":"                        LocalDate.parse(desc_date[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"chaiwanlin"},"content":"                    catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"chaiwanlin"},"content":"                        throw new DukeException(\"Follow the gahdam format!!\\n\\t\" + Command.EVENT.help_text);","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"chaiwanlin"},"content":"                    return Command.EVENT;","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"chaiwanlin"},"content":"                default: {","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"chaiwanlin"},"content":"                    // If invalid command, show all help text to user","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"chaiwanlin"},"content":"                    String all_help_text \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"chaiwanlin"},"content":"                    for (Command c : Command.values()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"chaiwanlin"},"content":"                        all_help_text \u003d all_help_text + \"\\t\" + c.help_text + \"\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"chaiwanlin"},"content":"                    throw new DukeException(\"What you sayin brah! You better start makin sense or else...\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"chaiwanlin"},"content":"                            \"*Speak in words Pepper Jack can understand*\\n\" + all_help_text);","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"chaiwanlin"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"chaiwanlin"},"content":"     * @param str","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"chaiwanlin"},"content":"     * @return String of reply with top and bottom borders","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"chaiwanlin"},"content":"    private static String reply(String str) {","lastModifiedDate":"2021-08-17"},{"lineNumber":171,"author":{"gitId":"chaiwanlin"},"content":"        String y_border \u003d \"------------------------------------------------------------\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"chaiwanlin"},"content":"        return y_border + \"[PEPPER JACK]\\n\" + str + \"\\n\" + y_border;","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":175,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"chaiwanlin"},"content":"     * @param t","lastModifiedDate":"2021-08-19"},{"lineNumber":178,"author":{"gitId":"chaiwanlin"},"content":"     * @return String of reply for adding task","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"chaiwanlin"},"content":"    private static String showTasksReply(Command c, String t) {","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"chaiwanlin"},"content":"        String show_task \u003d \"\\nYou have \" + lst.size() +\" task(s) now so get off that crack rock!\";","lastModifiedDate":"2021-08-19"},{"lineNumber":182,"author":{"gitId":"chaiwanlin"},"content":"        // If adding new task reply with add task message","lastModifiedDate":"2021-08-19"},{"lineNumber":183,"author":{"gitId":"chaiwanlin"},"content":"        for (Command taskCommand : Command.taskCommands) {","lastModifiedDate":"2021-08-19"},{"lineNumber":184,"author":{"gitId":"chaiwanlin"},"content":"            if (c \u003d\u003d taskCommand) {","lastModifiedDate":"2021-08-19"},{"lineNumber":185,"author":{"gitId":"chaiwanlin"},"content":"                return reply(\"Pepper Jack added this task:\\n\\t\" + t + show_task);","lastModifiedDate":"2021-08-19"},{"lineNumber":186,"author":{"gitId":"chaiwanlin"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":187,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":188,"author":{"gitId":"chaiwanlin"},"content":"        // Else reply with custom message","lastModifiedDate":"2021-08-19"},{"lineNumber":189,"author":{"gitId":"chaiwanlin"},"content":"        return reply( t + \"\\nYou have \" + lst.size() +","lastModifiedDate":"2021-08-19"},{"lineNumber":190,"author":{"gitId":"chaiwanlin"},"content":"                \" task(s) now so get off that crack rock!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":193,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":194,"author":{"gitId":"chaiwanlin"},"content":"     * Starts conversation with Pepper Jack","lastModifiedDate":"2021-08-19"},{"lineNumber":195,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":196,"author":{"gitId":"chaiwanlin"},"content":"    private static void startConvo() {","lastModifiedDate":"2021-08-19"},{"lineNumber":197,"author":{"gitId":"chaiwanlin"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":198,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":199,"author":{"gitId":"chaiwanlin"},"content":"        while(true) {","lastModifiedDate":"2021-08-17"},{"lineNumber":200,"author":{"gitId":"chaiwanlin"},"content":"            // Get user input","lastModifiedDate":"2021-08-17"},{"lineNumber":201,"author":{"gitId":"chaiwanlin"},"content":"            System.out.print(\"[YOU] \");","lastModifiedDate":"2021-08-17"},{"lineNumber":202,"author":{"gitId":"chaiwanlin"},"content":"            String user_input \u003d sc.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":203,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":204,"author":{"gitId":"chaiwanlin"},"content":"            // Check for valid while parsing user input","lastModifiedDate":"2021-08-19"},{"lineNumber":205,"author":{"gitId":"chaiwanlin"},"content":"            // Check for valid while parsing user input","lastModifiedDate":"2021-08-19"},{"lineNumber":206,"author":{"gitId":"chaiwanlin"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"chaiwanlin"},"content":"                // Validate user input","lastModifiedDate":"2021-08-19"},{"lineNumber":208,"author":{"gitId":"chaiwanlin"},"content":"                Command c \u003d Command.validate(user_input);","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":210,"author":{"gitId":"chaiwanlin"},"content":"                // If command is BYE, end convo","lastModifiedDate":"2021-08-19"},{"lineNumber":211,"author":{"gitId":"chaiwanlin"},"content":"                if (c \u003d\u003d Command.BYE) {","lastModifiedDate":"2021-08-19"},{"lineNumber":212,"author":{"gitId":"chaiwanlin"},"content":"                    System.out.print(reply(\"Pepper Jack love Fraggle Rock!\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":213,"author":{"gitId":"chaiwanlin"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":214,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":215,"author":{"gitId":"chaiwanlin"},"content":"                else {","lastModifiedDate":"2021-08-19"},{"lineNumber":216,"author":{"gitId":"chaiwanlin"},"content":"                    // Determine action according to command","lastModifiedDate":"2021-08-19"},{"lineNumber":217,"author":{"gitId":"chaiwanlin"},"content":"                    switch (c) {","lastModifiedDate":"2021-08-19"},{"lineNumber":218,"author":{"gitId":"chaiwanlin"},"content":"                        case LIST: {","lastModifiedDate":"2021-08-19"},{"lineNumber":219,"author":{"gitId":"chaiwanlin"},"content":"                            // Show list","lastModifiedDate":"2021-08-17"},{"lineNumber":220,"author":{"gitId":"chaiwanlin"},"content":"                            String lst_display \u003d \"\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":221,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":222,"author":{"gitId":"chaiwanlin"},"content":"                            for (int i \u003d 0; i \u003c lst.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":223,"author":{"gitId":"chaiwanlin"},"content":"                                lst_display \u003d lst_display + String.format(\"\\t%d. %s\\n\", i + 1, lst.get(i));","lastModifiedDate":"2021-08-17"},{"lineNumber":224,"author":{"gitId":"chaiwanlin"},"content":"                            }","lastModifiedDate":"2021-08-17"},{"lineNumber":225,"author":{"gitId":"chaiwanlin"},"content":"                            System.out.print(reply(lst_display));","lastModifiedDate":"2021-08-17"},{"lineNumber":226,"author":{"gitId":"chaiwanlin"},"content":"                            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":227,"author":{"gitId":"chaiwanlin"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":228,"author":{"gitId":"chaiwanlin"},"content":"                        case DONE: {","lastModifiedDate":"2021-08-19"},{"lineNumber":229,"author":{"gitId":"chaiwanlin"},"content":"                            // Mark task as done","lastModifiedDate":"2021-08-17"},{"lineNumber":230,"author":{"gitId":"chaiwanlin"},"content":"                            String desc \u003d user_input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":231,"author":{"gitId":"chaiwanlin"},"content":"                            int index \u003d Integer.parseInt(desc) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":232,"author":{"gitId":"chaiwanlin"},"content":"                            Task t \u003d lst.get(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":233,"author":{"gitId":"chaiwanlin"},"content":"                            t.setDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":234,"author":{"gitId":"chaiwanlin"},"content":"                            System.out.print(reply(\"Noice! Pepper Jack marked this task as done:\\n\\t\" + t));","lastModifiedDate":"2021-08-18"},{"lineNumber":235,"author":{"gitId":"chaiwanlin"},"content":"                            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":236,"author":{"gitId":"chaiwanlin"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":237,"author":{"gitId":"chaiwanlin"},"content":"                        case DELETE: {","lastModifiedDate":"2021-08-19"},{"lineNumber":238,"author":{"gitId":"chaiwanlin"},"content":"                            // Delete task","lastModifiedDate":"2021-08-19"},{"lineNumber":239,"author":{"gitId":"chaiwanlin"},"content":"                            String desc \u003d user_input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":240,"author":{"gitId":"chaiwanlin"},"content":"                            int index \u003d Integer.parseInt(desc) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":241,"author":{"gitId":"chaiwanlin"},"content":"                            Task t \u003d lst.remove(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":242,"author":{"gitId":"chaiwanlin"},"content":"                            System.out.print(showTasksReply(c, \"Aights! Pepper Jack deleted this task:\\n\\t\" + t));","lastModifiedDate":"2021-08-19"},{"lineNumber":243,"author":{"gitId":"chaiwanlin"},"content":"                            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":244,"author":{"gitId":"chaiwanlin"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":245,"author":{"gitId":"chaiwanlin"},"content":"                        case TODO: {","lastModifiedDate":"2021-08-19"},{"lineNumber":246,"author":{"gitId":"chaiwanlin"},"content":"                            // Add new to do","lastModifiedDate":"2021-08-19"},{"lineNumber":247,"author":{"gitId":"chaiwanlin"},"content":"                            String desc \u003d user_input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":248,"author":{"gitId":"chaiwanlin"},"content":"                            Task t \u003d new Todo(desc);","lastModifiedDate":"2021-08-19"},{"lineNumber":249,"author":{"gitId":"chaiwanlin"},"content":"                            lst.add(t);","lastModifiedDate":"2021-08-19"},{"lineNumber":250,"author":{"gitId":"chaiwanlin"},"content":"                            System.out.print(showTasksReply(c, t.toString()));","lastModifiedDate":"2021-08-19"},{"lineNumber":251,"author":{"gitId":"chaiwanlin"},"content":"                            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":252,"author":{"gitId":"chaiwanlin"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":253,"author":{"gitId":"chaiwanlin"},"content":"                        case DEADLINE: {","lastModifiedDate":"2021-08-19"},{"lineNumber":254,"author":{"gitId":"chaiwanlin"},"content":"                            // Add new deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":255,"author":{"gitId":"chaiwanlin"},"content":"                            String desc_date \u003d user_input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":256,"author":{"gitId":"chaiwanlin"},"content":"                            Task t \u003d Deadline.build(desc_date);","lastModifiedDate":"2021-08-24"},{"lineNumber":257,"author":{"gitId":"chaiwanlin"},"content":"                            lst.add(t);","lastModifiedDate":"2021-08-19"},{"lineNumber":258,"author":{"gitId":"chaiwanlin"},"content":"                            System.out.print(showTasksReply(c, t.toString()));","lastModifiedDate":"2021-08-19"},{"lineNumber":259,"author":{"gitId":"chaiwanlin"},"content":"                            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":260,"author":{"gitId":"chaiwanlin"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":261,"author":{"gitId":"chaiwanlin"},"content":"                        case EVENT: {","lastModifiedDate":"2021-08-19"},{"lineNumber":262,"author":{"gitId":"chaiwanlin"},"content":"                            // Add new event","lastModifiedDate":"2021-08-19"},{"lineNumber":263,"author":{"gitId":"chaiwanlin"},"content":"                            String desc_date \u003d user_input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":264,"author":{"gitId":"chaiwanlin"},"content":"                            Task t \u003d Event.build(desc_date);","lastModifiedDate":"2021-08-24"},{"lineNumber":265,"author":{"gitId":"chaiwanlin"},"content":"                            lst.add(t);","lastModifiedDate":"2021-08-18"},{"lineNumber":266,"author":{"gitId":"chaiwanlin"},"content":"                            System.out.print(showTasksReply(c, t.toString()));","lastModifiedDate":"2021-08-19"},{"lineNumber":267,"author":{"gitId":"chaiwanlin"},"content":"                            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":268,"author":{"gitId":"chaiwanlin"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":269,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":270,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":271,"author":{"gitId":"chaiwanlin"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":272,"author":{"gitId":"chaiwanlin"},"content":"            catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":273,"author":{"gitId":"chaiwanlin"},"content":"                // Invalid user input","lastModifiedDate":"2021-08-19"},{"lineNumber":274,"author":{"gitId":"chaiwanlin"},"content":"                System.out.print(reply(e.getMessage()));","lastModifiedDate":"2021-08-19"},{"lineNumber":275,"author":{"gitId":"chaiwanlin"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":278,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":279,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":280,"author":{"gitId":"chaiwanlin"},"content":"     * Loads tasks from task text file if exists, otherwise start new text file","lastModifiedDate":"2021-08-24"},{"lineNumber":281,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":282,"author":{"gitId":"chaiwanlin"},"content":"    private static void loadTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":283,"author":{"gitId":"chaiwanlin"},"content":"        File tasks \u003d new File(PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":284,"author":{"gitId":"chaiwanlin"},"content":"        if (tasks.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":285,"author":{"gitId":"chaiwanlin"},"content":"            // Read tasks from text file","lastModifiedDate":"2021-08-24"},{"lineNumber":286,"author":{"gitId":"chaiwanlin"},"content":"            Scanner s \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":287,"author":{"gitId":"chaiwanlin"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":288,"author":{"gitId":"chaiwanlin"},"content":"                s \u003d new Scanner(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":289,"author":{"gitId":"chaiwanlin"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":290,"author":{"gitId":"chaiwanlin"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":291,"author":{"gitId":"chaiwanlin"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":292,"author":{"gitId":"chaiwanlin"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":293,"author":{"gitId":"chaiwanlin"},"content":"                // Parse string to get task type, status, and description","lastModifiedDate":"2021-08-24"},{"lineNumber":294,"author":{"gitId":"chaiwanlin"},"content":"                String regex \u003d \"\\\\[(?\u003ctype\u003e[A-Z])\\\\]\\\\[(?\u003cstatus\u003e[X\\\\s])\\\\]\\\\s(?\u003cdesc\u003e.*)\";","lastModifiedDate":"2021-08-24"},{"lineNumber":295,"author":{"gitId":"chaiwanlin"},"content":"                Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2021-08-24"},{"lineNumber":296,"author":{"gitId":"chaiwanlin"},"content":"                Matcher matcher \u003d pattern.matcher(s.nextLine());","lastModifiedDate":"2021-08-24"},{"lineNumber":297,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":298,"author":{"gitId":"chaiwanlin"},"content":"                // Check task type, status, description","lastModifiedDate":"2021-08-24"},{"lineNumber":299,"author":{"gitId":"chaiwanlin"},"content":"                while (matcher.find()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":300,"author":{"gitId":"chaiwanlin"},"content":"                    String type \u003d matcher.group(\"type\");","lastModifiedDate":"2021-08-24"},{"lineNumber":301,"author":{"gitId":"chaiwanlin"},"content":"                    String desc \u003d matcher.group(\"desc\");","lastModifiedDate":"2021-08-24"},{"lineNumber":302,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":303,"author":{"gitId":"chaiwanlin"},"content":"                    Task toAdd;","lastModifiedDate":"2021-08-24"},{"lineNumber":304,"author":{"gitId":"chaiwanlin"},"content":"                    if (type.equals(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":305,"author":{"gitId":"chaiwanlin"},"content":"                        toAdd \u003d new Todo(desc);","lastModifiedDate":"2021-08-24"},{"lineNumber":306,"author":{"gitId":"chaiwanlin"},"content":"                    } else if (type.equals(\"D\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":307,"author":{"gitId":"chaiwanlin"},"content":"                        toAdd \u003d Deadline.build(desc);","lastModifiedDate":"2021-08-24"},{"lineNumber":308,"author":{"gitId":"chaiwanlin"},"content":"                    } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":309,"author":{"gitId":"chaiwanlin"},"content":"                        toAdd \u003d Event.build(desc);","lastModifiedDate":"2021-08-24"},{"lineNumber":310,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":311,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":312,"author":{"gitId":"chaiwanlin"},"content":"                    if (matcher.group(\"status\").equals(\"X\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":313,"author":{"gitId":"chaiwanlin"},"content":"                        toAdd.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":314,"author":{"gitId":"chaiwanlin"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":315,"author":{"gitId":"chaiwanlin"},"content":"                    lst.add(toAdd);","lastModifiedDate":"2021-08-24"},{"lineNumber":316,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":317,"author":{"gitId":"chaiwanlin"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":318,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":319,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":320,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":321,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":322,"author":{"gitId":"chaiwanlin"},"content":"     * Saves tasks into a text file","lastModifiedDate":"2021-08-24"},{"lineNumber":323,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":324,"author":{"gitId":"chaiwanlin"},"content":"    private static void saveTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":325,"author":{"gitId":"chaiwanlin"},"content":"        File file \u003d new File(PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":326,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":327,"author":{"gitId":"chaiwanlin"},"content":"            // Create file if not already existing","lastModifiedDate":"2021-08-24"},{"lineNumber":328,"author":{"gitId":"chaiwanlin"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":329,"author":{"gitId":"chaiwanlin"},"content":"            FileWriter fw \u003d new FileWriter(PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":330,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":331,"author":{"gitId":"chaiwanlin"},"content":"            // Write current task list into file","lastModifiedDate":"2021-08-24"},{"lineNumber":332,"author":{"gitId":"chaiwanlin"},"content":"            for (Task t : lst) {","lastModifiedDate":"2021-08-24"},{"lineNumber":333,"author":{"gitId":"chaiwanlin"},"content":"                fw.write(t.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":334,"author":{"gitId":"chaiwanlin"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":335,"author":{"gitId":"chaiwanlin"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":336,"author":{"gitId":"chaiwanlin"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":337,"author":{"gitId":"chaiwanlin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":338,"author":{"gitId":"chaiwanlin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":339,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":340,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":341,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":343,"author":{"gitId":"chaiwanlin"},"content":"        String logo \u003d","lastModifiedDate":"2021-08-19"},{"lineNumber":344,"author":{"gitId":"chaiwanlin"},"content":"                \"$$$$$$$\\\\                                                             $$$$$\\\\                     $$\\\\       \\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":345,"author":{"gitId":"chaiwanlin"},"content":"                \"$$  __$$\\\\                                                            \\\\__$$ |                    $$ |      \\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":346,"author":{"gitId":"chaiwanlin"},"content":"                \"$$ |  $$ | $$$$$$\\\\   $$$$$$\\\\   $$$$$$\\\\   $$$$$$\\\\   $$$$$$\\\\              $$ | $$$$$$\\\\   $$$$$$$\\\\ $$ |  $$\\\\ \\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":347,"author":{"gitId":"chaiwanlin"},"content":"                \"$$$$$$$  |$$  __$$\\\\ $$  __$$\\\\ $$  __$$\\\\ $$  __$$\\\\ $$  __$$\\\\             $$ | \\\\____$$\\\\ $$  _____|$$ | $$  |\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":348,"author":{"gitId":"chaiwanlin"},"content":"                \"$$  ____/ $$$$$$$$ |$$ /  $$ |$$ /  $$ |$$$$$$$$ |$$ |  \\\\__|      $$\\\\   $$ | $$$$$$$ |$$ /      $$$$$$  / \\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":349,"author":{"gitId":"chaiwanlin"},"content":"                \"$$ |      $$   ____|$$ |  $$ |$$ |  $$ |$$   ____|$$ |            $$ |  $$ |$$  __$$ |$$ |      $$  _$$\u003c  \\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":350,"author":{"gitId":"chaiwanlin"},"content":"                \"$$ |      \\\\$$$$$$$\\\\ $$$$$$$  |$$$$$$$  |\\\\$$$$$$$\\\\ $$ |            \\\\$$$$$$  |\\\\$$$$$$$ |\\\\$$$$$$$\\\\ $$ | \\\\$$\\\\ \\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":351,"author":{"gitId":"chaiwanlin"},"content":"                \"\\\\__|       \\\\_______|$$  ____/ $$  ____/  \\\\_______|\\\\__|             \\\\______/  \\\\_______| \\\\_______|\\\\__|  \\\\__|\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":352,"author":{"gitId":"chaiwanlin"},"content":"                \"                    $$ |      $$ |                                                                        \\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":353,"author":{"gitId":"chaiwanlin"},"content":"                \"                    $$ |      $$ |                                                                        \\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":354,"author":{"gitId":"chaiwanlin"},"content":"                \"                    \\\\__|      \\\\__|                                                                        \";","lastModifiedDate":"2021-08-19"},{"lineNumber":355,"author":{"gitId":"chaiwanlin"},"content":"        System.out.println(\"The name is\\n\" + logo);","lastModifiedDate":"2021-08-19"},{"lineNumber":356,"author":{"gitId":"chaiwanlin"},"content":"        System.out.print(reply(\"This Pepper Jack, wassup!\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":357,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":358,"author":{"gitId":"chaiwanlin"},"content":"        // Load tasks from text file if exists","lastModifiedDate":"2021-08-24"},{"lineNumber":359,"author":{"gitId":"chaiwanlin"},"content":"        loadTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":360,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":361,"author":{"gitId":"chaiwanlin"},"content":"        // Start conversation with Pepper Jack","lastModifiedDate":"2021-08-24"},{"lineNumber":362,"author":{"gitId":"chaiwanlin"},"content":"        startConvo();","lastModifiedDate":"2021-08-19"},{"lineNumber":363,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":364,"author":{"gitId":"chaiwanlin"},"content":"        // Save tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":365,"author":{"gitId":"chaiwanlin"},"content":"        saveTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chaiwanlin":361,"-":6}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"    public DukeException(String str){","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"        super(\"🤬 \" + str);","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chaiwanlin":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"    protected LocalDate dt;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"    public Event(String description, LocalDate dt) {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"        this.dt \u003d dt;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"    public static Event build(String desc_date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"        desc_date \u003d desc_date.replaceAll(\"\\\\(at: (.*)\\\\)\", \"/at $1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"        String[] input \u003d desc_date.split(\" /at \",2);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"            return new Event(input[0], LocalDate.parse(input[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"        catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"            LocalDate d \u003d LocalDate.parse(input[1], DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"            return new Event(input[0], d);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + dt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chaiwanlin":29}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chaiwanlin":27}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chaiwanlin":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"deadline return book","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"deadline return book /by tmr","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"deadline return book /by 2021-01-01","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"event project meeting","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"event project meeting /by tmr","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"event project meeting /at 2021-01-01","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"done ur momma","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"done 0","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"delete ur momma","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"delete 0","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"list asckajsdnc","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"bye ho","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chaiwanlin":22}}]
