[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chaiwanlin":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"Duke (Pepper Jack) is a **Personal Assistant Chatbot** that helps a person keep track of their tasks. ","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"The name and personality of Pepper Jack was chosen in honor of *[Pepper Jack the pimp](https://itsalwayssunny.fandom.com/wiki/Pimp)*, ","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"the best side character on the best show on television, *It\u0027s Always Sunny in Philadelphia*.","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"* [Quick start](#quickstart)","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"* [Features](#features)","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"    * [Viewing help: `help`](#viewing-help-help)","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"    * [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"    * [Adding a Todo task: `todo`](#adding-a-todo-task-todo)","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"    * [Adding a Deadline task: `deadline`](#adding-a-deadline-task-deadline)","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"    * [Adding a Event task: `event`](#adding-a-event-task-event)","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"    * [Marking a task as done: `done`](#marking-a-task-as-done-done)    ","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"    * [Deleting a task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"    * [Finding a task: `find`](#finding-a-task-find)","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"    * [Exiting the program: `bye`](#exiting-the-program-bye)","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    * [Saving the data](#saving-the-data)","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    * [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"* [Command summary](#command-summary)","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"## Quick start","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"   ","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"2. Download the latest duke.jar from [here](https://github.com/chaiwanlin/ip/releases).","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"3. Copy the file to the folder you want to use as the home folder for Duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"![Image of Ui](https://chaiwanlin.github.io/ip/Ui.png)","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"5. Type the command in the command box and press Enter to execute it. ","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"   e.g. typing help and pressing Enter will open the help window.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"Some example commands you can try:","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"    * `list` : Lists all tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"    * `todo buy groceries` : Adds a Todo task with description `buy groceries`.","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"    * `delete 1` : Deletes the 1st task in the current list","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"    * `bye` : Exits the app.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"chaiwanlin"},"content":"\u003e Notes about the command format:","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"chaiwanlin"},"content":"\u003e * Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"chaiwanlin"},"content":"    e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter that can be used as `todo buy groceries`.","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"chaiwanlin"},"content":"\u003e * Items in square brackets are optional.","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"chaiwanlin"},"content":"    e.g `find [KEYWORD]...` can be used as `find crack` or `find`.","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"chaiwanlin"},"content":"\u003e * Items with … after them can be used multiple times including zero times.","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"chaiwanlin"},"content":"    e.g. `find [KEYWORD]...` can be used as `find` (i.e. 0 times), `find crack`, `find buy crack`.","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"chaiwanlin"},"content":"\u003e * Extraneous parameters for commands that do not take in parameters (such as help, list and bye) will be ignored.","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"chaiwanlin"},"content":"    e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"chaiwanlin"},"content":"### Viewing help: `help`","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"chaiwanlin"},"content":"Shows a message with the full list of commands and their usages.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"chaiwanlin"},"content":"Format: `help`","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"chaiwanlin"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"chaiwanlin"},"content":"Shows a list of all the tasks saved.","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"chaiwanlin"},"content":"Format: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"chaiwanlin"},"content":"### Adding a Todo task: `todo`","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"chaiwanlin"},"content":"Adds a Todo task.","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"chaiwanlin"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"chaiwanlin"},"content":"### Adding a Deadline task: `deadline`","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"chaiwanlin"},"content":"Adds a Deadline task.","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"chaiwanlin"},"content":"Format: `dealine DESCRIPTION \\by YYYY-MM-DD`","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"chaiwanlin"},"content":"### Adding a Event task: `event`","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"chaiwanlin"},"content":"Adds a Event task.","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"chaiwanlin"},"content":"Format: `event DESCRIPTION \\at YYYY-MM-DD`","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"chaiwanlin"},"content":"### Marking a task as done: `done`","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"chaiwanlin"},"content":"Marks a task as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"chaiwanlin"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"chaiwanlin"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"chaiwanlin"},"content":"Deletes a task from your list.","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"chaiwanlin"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":105,"author":{"gitId":"chaiwanlin"},"content":"### Finding a task: `find`","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"chaiwanlin"},"content":"Finds an existing task.","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":108,"author":{"gitId":"chaiwanlin"},"content":"Format: `find [KEYWORD]...`","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"chaiwanlin"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"chaiwanlin"},"content":"Exits the program.","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"chaiwanlin"},"content":"Format: `bye`","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"chaiwanlin"},"content":"### Saving the data","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"chaiwanlin"},"content":"Duke data are saved in the hard disk after the program exits. ","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"chaiwanlin"},"content":"There is no need to save manually.","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":122,"author":{"gitId":"chaiwanlin"},"content":"### Editing the data file","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"chaiwanlin"},"content":"Duke data are saved as a JSON file [JAR file location]/data/tasks.txt.","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"chaiwanlin"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":126,"author":{"gitId":"chaiwanlin"},"content":"---","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"chaiwanlin"},"content":"## Command summary","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"chaiwanlin"},"content":"| Action | Format | Examples     |","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"chaiwanlin"},"content":"| :--- | :---- | :--- |","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"chaiwanlin"},"content":"| Add Todo task | `todo DESCRIPTION`       | `todo buy crack` |","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"chaiwanlin"},"content":"| Add Deadline task | `deadline DESCRIPTION /by YYYY-MM-DD` | `deadline smoke crack /by 2020-01-01` |","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"chaiwanlin"},"content":"| Add Event task | `event DESCRIPTION /at YYYY-MM-DD` | `event crack convention /at 2020-01-01` |","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"chaiwanlin"},"content":"| Mark task as done | `done INDEX` | `done 1` |","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"chaiwanlin"},"content":"| Delete task | `delete INDEX` | `delete 1` |","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"chaiwanlin"},"content":"| Find task | `find [KEYWORD]...` | `find crack` |","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"chaiwanlin"},"content":"| List tasks | `list` | `list` |","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"chaiwanlin"},"content":"| Help | `help` | `help` |","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"chaiwanlin"},"content":"| Exit | `bye` | `bye` |","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"chaiwanlin":111,"-":27}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":" * Represents a dialogue box with custom control using FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    private Circle displayPicture;","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"        ImagePattern imgPattern \u003d new ImagePattern(img);","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"        displayPicture.setFill(imgPattern);","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"    private void flip() {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"chaiwanlin"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"chaiwanlin"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"chaiwanlin"},"content":"        db.dialog.getStyleClass().add(\"user-bubble\");","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"chaiwanlin"},"content":"        return db;","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"chaiwanlin"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"chaiwanlin"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"chaiwanlin"},"content":"        db.flip();","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"chaiwanlin"},"content":"        db.dialog.getStyleClass().add(\"reply-bubble\");","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"chaiwanlin"},"content":"        return db;","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"chaiwanlin":65}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":" * Represents the chatbot that users can save tasks with","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"public class Duke {","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    public static final String FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"     * Duke constructor using file path to load/save tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"    public Duke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"            tasks \u003d TaskList.emptyTaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"     * Returns a response to user input.","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"     * @param input User input to respond to.","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"chaiwanlin"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"chaiwanlin"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"chaiwanlin"},"content":"            String response \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"chaiwanlin"},"content":"            // Ensure that there is a response to return","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"chaiwanlin"},"content":"            assert(response !\u003d null);","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"chaiwanlin"},"content":"            assert (!response.equals(\"\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"chaiwanlin"},"content":"            return response;","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"chaiwanlin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"chaiwanlin"},"content":"            return ui.showLoadingError(e.getMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"chaiwanlin"},"content":"    /** Saves the tasks in given TaskList to file path of duke. */","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"chaiwanlin"},"content":"    public void save() {","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"chaiwanlin"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"chaiwanlin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"chaiwanlin"},"content":"            Ui.showLoadingError(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chaiwanlin":74}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":" * Represents exceptions specific to Duke","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"    public DukeException(String str){","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"        super(\"🤬 \" + str);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chaiwanlin":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"chaiwanlin":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"            stage.setTitle(\"Pepper Jack\");","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"            Image icon \u003d new Image(Main.class.getResourceAsStream(\"/images/Icon.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"            scene.getStylesheets().add(Main.class.getResource(\"/view/stylesheet.css\").toExternalForm());","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"            stage.show();","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"    public void stop(){","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"        duke.save();","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chaiwanlin":44}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bird.jpeg\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/PepperJack.jpeg\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"        // Show welcome message","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"                DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage)","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"        );","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"chaiwanlin"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"chaiwanlin"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"chaiwanlin"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chaiwanlin":55}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":" * Represents parser to parse user input","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"    /** Regex of user input format */","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommand\u003e\\\\S+)(\\\\s*)(?\u003cargs\u003e.*)\");","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"     * Returns command invoked by user with parsed arguments to execute.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"     * If command word given by user is invalid, HelpCommand is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"     * @param userInput User input with command word and arguments to parse.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"     * @return Command to execute.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"     * @throws DukeException if user input does not match BASIC_COMMAND_FORMAT.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"    public static Command parse (String userInput) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput);","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"You better type sumthin or else..\");","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"        String command \u003d matcher.group(\"command\");","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"        String args \u003d matcher.group(\"args\");","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"        switch (command) {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"        case ByeCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"            return prepareDone(args);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"            return prepareDelete(args);","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"        case TodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"            return prepareTodo(args);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"        case DeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"            return prepareDeadline(args);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"        case EventCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"            return prepareEvent(args);","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"chaiwanlin"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"chaiwanlin"},"content":"            return new FindCommand(args);","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"chaiwanlin"},"content":"        case HelpCommand.COMMAND_WORD: // Fallthrough","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"chaiwanlin"},"content":"        default:","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"chaiwanlin"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"chaiwanlin"},"content":"     * Returns DoneCommand to execute.","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"chaiwanlin"},"content":"     * @param args User input argument to determine index of task to mark as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"chaiwanlin"},"content":"     * @return DoneCommand to execute.","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"chaiwanlin"},"content":"     * @throws DukeException If there are no arguments given or argument is not an integer.","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"chaiwanlin"},"content":"    public static Command prepareDone(String args) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"chaiwanlin"},"content":"        // Make sure there is argument to determine task to mark as done","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"chaiwanlin"},"content":"        assert (args !\u003d null);","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"chaiwanlin"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Done what brah??\\n\\t\" + DoneCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"chaiwanlin"},"content":"        // Makes sure that key phrase is a valid int","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"chaiwanlin"},"content":"            int index \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"chaiwanlin"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"chaiwanlin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Not a number!\\n\\t\" + DoneCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"chaiwanlin"},"content":"     * Returns DeleteCommand to execute.","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"chaiwanlin"},"content":"     * @param args User input argument to determine index of task to mark delete from tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"chaiwanlin"},"content":"     * @return DeleteCommand to execute.","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"chaiwanlin"},"content":"     * @throws DukeException If there are no arguments given or argument is not an integer.","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"chaiwanlin"},"content":"    public static Command prepareDelete(String args) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"chaiwanlin"},"content":"        // Make sure there is argument to determine task to mark as done","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"chaiwanlin"},"content":"        assert (args !\u003d null);","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"chaiwanlin"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Delete what brah??\\n\\t\" + DeleteCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"chaiwanlin"},"content":"        // Makes sure that key phrase is a valid int","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"chaiwanlin"},"content":"            int index \u003d Integer.parseInt(args) - 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"chaiwanlin"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"chaiwanlin"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Not a number!\\n\\t\" + DeleteCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"chaiwanlin"},"content":"     * Returns TodoCommand to execute.","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"chaiwanlin"},"content":"     * @param args User input argument of to do task description.","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"chaiwanlin"},"content":"     * @return TodoCommand to execute.","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"chaiwanlin"},"content":"     * @throws DukeException If there are no arguments given.","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"chaiwanlin"},"content":"    public static Command prepareTodo(String args) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"chaiwanlin"},"content":"        // Make sure there is argument to record as task","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"chaiwanlin"},"content":"        assert (args !\u003d null);","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"chaiwanlin"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Todo what brah??\\n\\t\" + TodoCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"chaiwanlin"},"content":"        return new TodoCommand(args);","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"chaiwanlin"},"content":"     * Returns DeadlineCommand to execute.","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"chaiwanlin"},"content":"     * @param args User input argument of deadline task description and date.","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"chaiwanlin"},"content":"     * @return DeadlineCommand to execute.","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"chaiwanlin"},"content":"     * @throws DukeException If there are no arguments given, or given in wrong format.","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"chaiwanlin"},"content":"    public static Command prepareDeadline(String args) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":129,"author":{"gitId":"chaiwanlin"},"content":"        // Make sure there is argument to record as task","lastModifiedDate":"2021-08-30"},{"lineNumber":130,"author":{"gitId":"chaiwanlin"},"content":"        assert (args !\u003d null);","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"chaiwanlin"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Deadline for what brah??\\n\\t\" + DeadlineCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"chaiwanlin"},"content":"        // Makes sure argument consists of task and datetime","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"chaiwanlin"},"content":"        String[] desc_date \u003d args.split(\" /by \", 2);","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"chaiwanlin"},"content":"        if (desc_date.length !\u003d 2) {","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Deadline by when brah??\\n\\t\" + DeadlineCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"chaiwanlin"},"content":"        // Make sure date format is correct","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":143,"author":{"gitId":"chaiwanlin"},"content":"            String desc \u003d desc_date[0];","lastModifiedDate":"2021-08-30"},{"lineNumber":144,"author":{"gitId":"chaiwanlin"},"content":"            LocalDate date \u003d LocalDate.parse(desc_date[1]);","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"chaiwanlin"},"content":"            return new DeadlineCommand(desc, date);","lastModifiedDate":"2021-08-30"},{"lineNumber":146,"author":{"gitId":"chaiwanlin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Follow the gahdam format!!\\n\\t\" + DeadlineCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":149,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":150,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"chaiwanlin"},"content":"     * Returns EventCommand to execute.","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"chaiwanlin"},"content":"     * @param args User input argument of event task description and date.","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"chaiwanlin"},"content":"     * @return EventCommand to execute.","lastModifiedDate":"2021-08-31"},{"lineNumber":156,"author":{"gitId":"chaiwanlin"},"content":"     * @throws DukeException If there are no arguments given, or given in wrong format.","lastModifiedDate":"2021-08-31"},{"lineNumber":157,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":158,"author":{"gitId":"chaiwanlin"},"content":"    public static Command prepareEvent(String args) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":159,"author":{"gitId":"chaiwanlin"},"content":"        // Make sure there is argument to record as task","lastModifiedDate":"2021-08-30"},{"lineNumber":160,"author":{"gitId":"chaiwanlin"},"content":"        assert (args !\u003d null);","lastModifiedDate":"2021-09-07"},{"lineNumber":161,"author":{"gitId":"chaiwanlin"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":162,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Event for what brah??\\n\\t\" + EventCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-30"},{"lineNumber":163,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":164,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":165,"author":{"gitId":"chaiwanlin"},"content":"        // Makes sure argument consists of task and datetime","lastModifiedDate":"2021-08-30"},{"lineNumber":166,"author":{"gitId":"chaiwanlin"},"content":"        String[] desc_date \u003d args.split(\" /at \", 2);","lastModifiedDate":"2021-08-30"},{"lineNumber":167,"author":{"gitId":"chaiwanlin"},"content":"        if (desc_date.length !\u003d 2) {","lastModifiedDate":"2021-08-30"},{"lineNumber":168,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Event when brah??\\n\\t\" + EventCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-30"},{"lineNumber":169,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":170,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":171,"author":{"gitId":"chaiwanlin"},"content":"        // Make sure date format is correct","lastModifiedDate":"2021-08-30"},{"lineNumber":172,"author":{"gitId":"chaiwanlin"},"content":"        String desc \u003d desc_date[0];","lastModifiedDate":"2021-08-30"},{"lineNumber":173,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":174,"author":{"gitId":"chaiwanlin"},"content":"            LocalDate date \u003d LocalDate.parse(desc_date[1]);","lastModifiedDate":"2021-08-30"},{"lineNumber":175,"author":{"gitId":"chaiwanlin"},"content":"            return new EventCommand(desc, date);","lastModifiedDate":"2021-08-30"},{"lineNumber":176,"author":{"gitId":"chaiwanlin"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":177,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Follow the gahdam format!!\\n\\t\" + EventCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-30"},{"lineNumber":178,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":179,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":180,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chaiwanlin":180}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"import java.io.File;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":" * Represents storage to store tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"    /** File path string to data of tasks to load/save */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"    private String filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    /** Regex of data file format */","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"    public static final Pattern TASK_FORMAT \u003d Pattern","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"            .compile(\"\\\\[(?\u003ctype\u003e[A-Z])\\\\]\\\\[(?\u003cstatus\u003e[X\\\\s])\\\\]\\\\s(?\u003cdesc\u003e.*)\");","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"     * Storage constructor using file path to load/save tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"     * @param filePath Path of file to save tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"     * Loads the tasks in file path to a TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"     * @return TaskList (list of tasks).","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"     * @throws DukeException If file is not found.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"     * Should not happen since existence of file is checked.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"        File tasks \u003d new File(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"        TaskList taskList \u003d TaskList.emptyTaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"        // If task file does not exist, return empty TaskList","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"chaiwanlin"},"content":"        if (!tasks.exists()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"chaiwanlin"},"content":"            return taskList;","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"chaiwanlin"},"content":"            Scanner sc \u003d new Scanner(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"chaiwanlin"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"chaiwanlin"},"content":"                // Parse string to get task type, status, and description","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"chaiwanlin"},"content":"                Matcher matcher \u003d TASK_FORMAT.matcher(sc.nextLine());","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"chaiwanlin"},"content":"                if (!matcher.matches()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"chaiwanlin"},"content":"                    throw new DukeException(\"There was a problem loading your saved tasks!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"chaiwanlin"},"content":"                String type \u003d matcher.group(\"type\");","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"chaiwanlin"},"content":"                String desc \u003d matcher.group(\"desc\");","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"chaiwanlin"},"content":"                Task toAdd;","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"chaiwanlin"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"chaiwanlin"},"content":"                    toAdd \u003d new Todo(desc);","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"chaiwanlin"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"chaiwanlin"},"content":"                    toAdd \u003d Deadline.build(desc);","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"chaiwanlin"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"chaiwanlin"},"content":"                    toAdd \u003d Event.build(desc);","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"chaiwanlin"},"content":"                } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"chaiwanlin"},"content":"                    throw new DukeException(String.format(\"[%s] is not a recognised task type!\", type));","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"chaiwanlin"},"content":"                if (matcher.group(\"status\").equals(Task.DONE_MARKER)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"chaiwanlin"},"content":"                    toAdd.setIsDone(true);","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"chaiwanlin"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"chaiwanlin"},"content":"                taskList.addTask(toAdd);","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"chaiwanlin"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"chaiwanlin"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"File not found!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"chaiwanlin"},"content":"        return taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"chaiwanlin"},"content":"     * Saves the tasks in given TaskList to file path.","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"chaiwanlin"},"content":"     * @param taskList List of tasks to save.","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"chaiwanlin"},"content":"     * @throws DukeException If IOException is caught.","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"chaiwanlin"},"content":"    public void save(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"chaiwanlin"},"content":"        //  Does not need to save anything if there are no tasks to be saved","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"chaiwanlin"},"content":"        if (taskList.size() \u003d\u003d 0) return;","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"chaiwanlin"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"chaiwanlin"},"content":"            // Create directory if not already existing","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"chaiwanlin"},"content":"            new File(file.getParent()).mkdirs();","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"chaiwanlin"},"content":"            // Create file if not already existing","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"chaiwanlin"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"chaiwanlin"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"chaiwanlin"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"chaiwanlin"},"content":"                fw.write(taskList.getTask(i).toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"chaiwanlin"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"chaiwanlin"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"chaiwanlin"},"content":"            fw.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"chaiwanlin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"There was an error saving your tasks!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"chaiwanlin":118}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":" * Represents the user interface of the chatbot","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    private static final String END_TEXT \u003d \"Pepper Jack love Fraggle Rock!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"    private static final String[] LIST_OF_COMMAND_USAGE_TEXT \u003d {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"            ByeCommand.USAGE_TEXT,","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"            ListCommand.USAGE_TEXT,","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"            DoneCommand.USAGE_TEXT,","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"            DeleteCommand.USAGE_TEXT,","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"            TodoCommand.USAGE_TEXT,","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"            DeadlineCommand.USAGE_TEXT,","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"            EventCommand.USAGE_TEXT,","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"    };","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"    /** Ui constructor */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"    public Ui() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"     * Reads user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"     * @return User input in string.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"     * Returns a formatted reply with given string.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"     * @param str String to format to reply.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"     * @return Formatted reply to display to user.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"chaiwanlin"},"content":"    public static String formatReply(String str) {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"chaiwanlin"},"content":"        return str + \"\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"chaiwanlin"},"content":"     * Prints reply to display.","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"chaiwanlin"},"content":"     * @param str Reply to display.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"chaiwanlin"},"content":"    public String reply(String str) {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"chaiwanlin"},"content":"        String reply \u003d formatReply(str);","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"chaiwanlin"},"content":"        return reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"chaiwanlin"},"content":"     * Prints reply showing tasks to display.","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"chaiwanlin"},"content":"     * @param isAdd If a task was added.","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"chaiwanlin"},"content":"     * @param task String representation of task.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"chaiwanlin"},"content":"     * @param numOfTasks Number of tasks left.","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"chaiwanlin"},"content":"    public String showTasksReply(boolean isAdd, String task, int numOfTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"chaiwanlin"},"content":"        String end \u003d \"\\nYou have \" + numOfTasks +\" task(s) now so get off that crack rock!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"chaiwanlin"},"content":"        if (isAdd) {","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"chaiwanlin"},"content":"            return formatReply(\"Pepper Jack added this task:\\n\\t\" + task + end);","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"chaiwanlin"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"chaiwanlin"},"content":"            return formatReply(task + end);","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"chaiwanlin"},"content":"    /** Display welcome message */","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"chaiwanlin"},"content":"    public static String showWelcome() {","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"chaiwanlin"},"content":"        return formatReply(\"This Pepper Jack, wassup!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"chaiwanlin"},"content":"    /** Display error message */","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"chaiwanlin"},"content":"    public static String showLoadingError(String errorMessage) {","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"chaiwanlin"},"content":"        return formatReply(errorMessage);","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"chaiwanlin"},"content":"    /** Display help text */","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"chaiwanlin"},"content":"    public String showHelp() {","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"chaiwanlin"},"content":"        String all_help_text \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"chaiwanlin"},"content":"        for (String help_text : LIST_OF_COMMAND_USAGE_TEXT) {","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"chaiwanlin"},"content":"            all_help_text \u003d all_help_text + \"\\t\" + help_text + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"chaiwanlin"},"content":"        return formatReply(\"What you sayin brah! You better start makin sense or else...\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"chaiwanlin"},"content":"                + \"*Speak in words Pepper Jack can understand*\\n\" + all_help_text);","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"chaiwanlin"},"content":"    /** Display final message */","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"chaiwanlin"},"content":"    public String showBye() {","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"chaiwanlin"},"content":"        return reply(END_TEXT);","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chaiwanlin":108}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":" * Represents an terminate command","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    private static final int TIME_FOR_MESSAGE \u003d 3000;","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"    public static final String USAGE_TEXT \u003d \"Usage: bye\";","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"     * Saves tasks in given TaskList and displays final message.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"     * @param ui User interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"     * @param storage Storage of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"     * @throws DukeException If error occurs while saving tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"            storage.save(taskList);","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"        // Schedule platform exit 3s in the future","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"        new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"            public void run () { System.exit(0); }","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"        }, TIME_FOR_MESSAGE);","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"        return ui.showBye();","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"chaiwanlin":44}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":" * Represents a command","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"public class Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"     * Returns true if given command is ByeCommand,","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"     * false otherwise.","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"     * @return true if given command is ByeCommand,","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"     * false otherwise.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"        return this instanceof ByeCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"     * Executes command with given TaskList, Ui and Storage.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"     * @param ui User interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"     * @param storage Storage of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"        throw new DukeException(\"Not supposed to happen!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"chaiwanlin":35}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":" * Represents a command to add a task with deadline","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    public static final String USAGE_TEXT \u003d \"Usage: deadline [description] /by [date in YYYY-MM-DD format]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"    /** Description of task with deadline */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"    private String description;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"    /** Deadline of task */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"     * DeadlineCommand constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"     * @param desc Description of task with deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"     * @param date Deadline of task.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"    public DeadlineCommand(String desc, LocalDate date) {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"        description \u003d desc;","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"     * Adds new Deadline task to given TaskList and displays the relevant message.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"     * @param ui User interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"     * @param storage Storage of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"        Task task \u003d new Deadline(description, date);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"        return ui.showTasksReply(true, task.toString(), taskList.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"chaiwanlin":50}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":" * Represents a command to delete a task","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"    public static final String USAGE_TEXT \u003d \"Usage: delete [task number]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    /** Index of task to be deleted */","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    private int index;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"     * DeleteCommand constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"     * @param index Index of task to be deleted.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"     * Deletes task at index from given TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"     * @param ui User interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"     * @param storage Storage of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"     * @throws DukeException If index is not valid.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"            Task task \u003d taskList.removeTask(index);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"            return ui.showTasksReply(false,","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"                    \"Aights! Pepper Jack deleted this task:\\n\\t\" + task, taskList.size());","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Task number does not exist!\\n\\t\" + DeleteCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"chaiwanlin":48}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":" * Represents a command to mark task as done","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"    public static final String USAGE_TEXT \u003d \"Usage: done [task number]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    /** Index of task to mark as done */","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    private int index;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"     * DoneCommand constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"     * @param index Index of task to mark as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"     * Marks task at index in given TaskList as done and","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"     * displays the relevant message.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"     * @param ui User interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"     * @param storage Storage of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"     * @throws DukeException If index is not valid.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"            Task task \u003d taskList.getTask(index);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"            task.setIsDone(true);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"            return ui.reply(\"Noice! Pepper Jack marked this task as done:\\n\\t\" + task);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Task number does not exist!\\n\\t\" + DoneCommand.USAGE_TEXT);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"chaiwanlin":49}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":" * Represents a command to add an event","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    public static final String USAGE_TEXT \u003d \"Usage: event [description] /at [date in YYYY-MM-DD format]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"    /** Description of event */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"    private String description;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"    /** Date of event */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"     * EventCommand constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"     * @param desc Description of event.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"     * @param date Date of event.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"    public EventCommand(String desc, LocalDate date) {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"        description \u003d desc;","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"     * Adds new Event task to given TaskList and displays the relevant message.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"     * @param ui User interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"     * @param storage Storage of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"        Task task \u003d new Event(description, date);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"        return ui.showTasksReply(true, task.toString(), taskList.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"chaiwanlin":50}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":" * Represents a command to find tasks with descriptions matching search string","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"    public static final String USAGE_TEXT \u003d \"Usage: find [key words]\";","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    /** String to search for in list of tasks */","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    private String searchString;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"     * FindCommand constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"     * @param arg String to search for in list of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    public FindCommand(String arg) {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"        searchString \u003d arg;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"     * Displays results of tasks matching search string.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"     * @param ui User interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"     * @param storage Storage of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"        TaskList results \u003d TaskList.emptyTaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"            if (task.getDescription().contains(searchString)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"                results.addTask(task);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"        return ui.reply(\"These the tasks yer lookin for:\\n\" + results.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"chaiwanlin":50}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":" * Represents a command to get help","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"     * Displays help text from given Ui.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"     * @param ui User interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"     * @param storage Storage of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"        return ui.showHelp();","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"chaiwanlin":26}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":" * Represents a command to list all tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"    public static final String USAGE_TEXT \u003d \"Usage: list\";","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"     * Displays all tasks in given TaskList to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"     * @param ui User interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"     * @param storage Storage of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"        // Display taskList","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"        return ui.reply(taskList.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"chaiwanlin":28}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":" * Represents a command to add a task to be done","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"    public static final String USAGE_TEXT \u003d \"Usage: todo [description]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    /** Description of task to be done */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"    private String description;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"     * TodoCommand constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"     * @param desc Description of task to be done.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"    public TodoCommand(String desc) {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"        description \u003d desc;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"     * Adds new Todo task to given TaskList and displays the relevant message.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"     * @param ui User interface.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"     * @param storage Storage of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"        return ui.showTasksReply(true, task.toString(), taskList.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"chaiwanlin":44}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.task;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":" * Represents a task with a deadline","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"     * Deadline constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"     * @param description Description of deadline task.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"     * @param date Date of deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"     * Returns a Deadline from string input with description and date.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"     * @param args String input with description and date in","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"     *                  \u0027[description] (by: [MMM d yyyy])\u0027 format.","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"     * @return Deadline from string input with description and date.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"    public static Deadline build(String args) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"        String[] desc_date \u003d new String[0];","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"            desc_date \u003d Task.splitDescriptionAndDate(args, \"by\");","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"            Ui.showLoadingError(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"        String desc \u003d desc_date[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"        String dateString \u003d desc_date[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"        LocalDate date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"        return new Deadline(desc, date);","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"chaiwanlin"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"chaiwanlin"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"chaiwanlin"},"content":"            return true;","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"chaiwanlin"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"chaiwanlin"},"content":"            return false;","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"chaiwanlin"},"content":"        Deadline c \u003d (Deadline) o;","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"chaiwanlin"},"content":"        return c.description.equals(description) \u0026\u0026 c.date.equals(date);","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chaiwanlin":67}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.task;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":" * Represents an event","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"     * Event constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"     * ","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"     * @param description Description of event.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"     * @param date Date of event.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"    public Event(String description, LocalDate date) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"     * Returns a Event from string input with description and date.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"     * @param args String input with description and date in","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"     *                  \u0027[description] (by: [MMM d yyyy])\u0027 format.","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"     * @return Event from string input with description and date.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"    public static Event build(String args) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"        String[] desc_date \u003d new String[0];","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"            desc_date \u003d Task.splitDescriptionAndDate(args, \"by\");","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"            Ui.showLoadingError(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"        String desc \u003d desc_date[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"        String dateString \u003d desc_date[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"        LocalDate date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"        return new Event(desc, date);","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"chaiwanlin"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"chaiwanlin"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"chaiwanlin"},"content":"            return true;","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"chaiwanlin"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"chaiwanlin"},"content":"            return false;","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"chaiwanlin"},"content":"        Event c \u003d (Event) o;","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"chaiwanlin"},"content":"        return c.description.equals(description) \u0026\u0026 c.date.equals(date);","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chaiwanlin":66}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.task;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":" * Represents a task","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"    public static final String DONE_MARKER \u003d \"X\";","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"    public static final String NOT_DONE_MARKER \u003d \" \";","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"     * Task constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"     * @param description Description of task.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"    public static String[] splitDescriptionAndDate(String args, String separator) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"        String regex \u003d String.format(\"(?\u003cdesc\u003e.*)\\\\s\\\\(%s: (?\u003cdate\u003e.*)\\\\)\", separator);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"        Matcher matcher \u003d pattern.matcher(args);","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"There was a problem loading your saved tasks!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"        String type \u003d matcher.group(\"desc\");","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"        String desc \u003d matcher.group(\"date\");","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"        String[] desc_date \u003d {type, desc};","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"        return desc_date;","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"     * Returns description of task.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"     * @return Description of task.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"chaiwanlin"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"chaiwanlin"},"content":"        return this.description;","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"chaiwanlin"},"content":"    /** Sets isDone to given boolean */","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"chaiwanlin"},"content":"    public void setIsDone(boolean b) {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"chaiwanlin"},"content":"        isDone \u003d b;","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"chaiwanlin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"chaiwanlin"},"content":"        String marker;","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"chaiwanlin"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"chaiwanlin"},"content":"            marker \u003d DONE_MARKER;","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"chaiwanlin"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"chaiwanlin"},"content":"            marker \u003d NOT_DONE_MARKER;","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"chaiwanlin"},"content":"        return String.format(\"[%s] %s\", marker, description);","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chaiwanlin":71}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.task;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":" * Represents a list of tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"    /** ArrayList of tasks */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"     * TaskList constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"     * @param taskList ArrayList of tasks to store in TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"        tasks \u003d taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"     * Returns an empty TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"     * @return Empty TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"    public static TaskList emptyTaskList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"        return new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"     * Adds given task to list of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"     * @param t Task to add.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"     * @return True if task is added, false otherwise.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"chaiwanlin"},"content":"    public boolean addTask(Task t) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"chaiwanlin"},"content":"        if (checkDuplicate(t)) {","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"chaiwanlin"},"content":"            throw new DukeException(\"Task already exists!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"chaiwanlin"},"content":"        return tasks.add(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"chaiwanlin"},"content":"     * Checks if there is a duplicate in list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"chaiwanlin"},"content":"     * @param t Task to check if already exists in taskList.","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"chaiwanlin"},"content":"     * @return True if task is duplicate, false otherwise.","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"chaiwanlin"},"content":"    public boolean checkDuplicate(Task t) {","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"chaiwanlin"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"chaiwanlin"},"content":"            if (task.equals(t)) {","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"chaiwanlin"},"content":"                return true;","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"chaiwanlin"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"chaiwanlin"},"content":"        return false;","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"chaiwanlin"},"content":"     * Returns task at given index in list of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"chaiwanlin"},"content":"     * @param index Index of task to get.","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"chaiwanlin"},"content":"     * @return Task at given index in list of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"chaiwanlin"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"chaiwanlin"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"chaiwanlin"},"content":"     * Returns task at given index in list of tasks and removes it.","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"chaiwanlin"},"content":"     * @param index Index of task to retrieve and remove.","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"chaiwanlin"},"content":"     * @return Task at given index in list of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"chaiwanlin"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"chaiwanlin"},"content":"        return tasks.remove(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"chaiwanlin"},"content":"    /** Returns number of tasks in list */","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"chaiwanlin"},"content":"    public int size() {","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"chaiwanlin"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"chaiwanlin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"chaiwanlin"},"content":"        String listOfTasks \u003d \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"chaiwanlin"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"chaiwanlin"},"content":"            listOfTasks \u003d listOfTasks + String.format(\"%d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"chaiwanlin"},"content":"        return listOfTasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chaiwanlin":95}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.task;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":" * Represents a task to be done","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"     * Todo constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"     * @param description Description of task to be done.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"            return true;","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"        if (!(o instanceof Todo)) {","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"            return false;","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"chaiwanlin"},"content":"        Todo c \u003d (Todo) o;","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"chaiwanlin"},"content":"        return c.description.equals(description);","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chaiwanlin":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-label-padding: 15;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"            \u003cFont name\u003d\"Helvetica\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"WHITE\" radius\u003d\"35.0\" stroke\u003d\"WHITE\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chaiwanlin":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #D0D0D0;\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Message\" style\u003d\"-fx-background-color: #FFFFFF; -fx-background-radius: 5;\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.leftAnchor\u003d\"5.0\" AnchorPane.rightAnchor\u003d\"76.0\" AnchorPane.topAnchor\u003d\"564.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"            \u003cFont name\u003d\"Helvetica\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #AF34FF;\" text\u003d\"Send\" textFill\u003d\"WHITE\" AnchorPane.bottomAnchor\u003d\"5.0\" AnchorPane.leftAnchor\u003d\"329.0\" AnchorPane.rightAnchor\u003d\"5.0\" AnchorPane.topAnchor\u003d\"564.0\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"            \u003cFont name\u003d\"Helvetica Neue\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-f: #FFFFFF;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"555.0\" prefWidth\u003d\"381.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chaiwanlin":26}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"    public void parse_emptyInput_exceptionThrown() {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"            Parser.parse(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"            fail();","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"            assertEquals(\"\\uD83E\\uDD2C You better type sumthin or else..\", e.getMessage());","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"    public void parse_invalidInput_returnHelpCommand() {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"chaiwanlin"},"content":"            Command c \u003d Parser.parse(\"nonsense\");","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"chaiwanlin"},"content":"            assertTrue(c instanceof HelpCommand);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"            fail();","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"chaiwanlin":31}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"package duke.task;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"    public void build_validDescriptionAndTime_returnDeadline() {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"        Deadline dl \u003d Deadline.build(\"test (by: Feb 02 2000)\");","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"        assertEquals(dl.description, \"test\");","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"        assertEquals(dl.date, LocalDate.parse(\"2000-02-02\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"chaiwanlin":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chaiwanlin"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"chaiwanlin"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"chaiwanlin"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"chaiwanlin"},"content":"deadline return book","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"chaiwanlin"},"content":"deadline return book /by tmr","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chaiwanlin"},"content":"deadline return book /by 2021-01-01","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chaiwanlin"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"chaiwanlin"},"content":"event project meeting","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"chaiwanlin"},"content":"event project meeting /by tmr","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chaiwanlin"},"content":"event project meeting /at 2021-01-01","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chaiwanlin"},"content":"find","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chaiwanlin"},"content":"find nonsense","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chaiwanlin"},"content":"find book","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chaiwanlin"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"chaiwanlin"},"content":"done ur momma","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"done 0","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"delete ur momma","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"chaiwanlin"},"content":"delete 0","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"chaiwanlin"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"chaiwanlin"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"chaiwanlin"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"chaiwanlin":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"chaiwanlin"},"content":"find ../src/main/java/*/*.java \u003e sources.txt","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"chaiwanlin"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"chaiwanlin"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin @sources.txt","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"chaiwanlin"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chaiwanlin"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chaiwanlin"},"content":"rm -rf ./data","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chaiwanlin":7,"-":36}}]
