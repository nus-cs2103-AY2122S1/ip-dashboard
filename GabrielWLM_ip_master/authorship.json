[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"import java.util.*;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"        String logo \u003d \" _           _        \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"                + \"| |    _   _| | _____ \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"                + \"| |   | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"                + \"| |___| |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"        String[] list \u003d new String[100];","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"        boolean[] done \u003d new boolean[100];","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"        // boolean[] td \u003d new boolean[100];","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"        // boolean[] deadline \u003d new boolean[100];","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"        // boolean[] event \u003d new boolean[100];","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"        int amount \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"        String lineBreak \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"        System.out.println(lineBreak","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"                + \"\\n\\t Hello! I\u0027m Luke, your slightly useful personal assistant!\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"                + \"\\t What can I do for you, my liege?\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"                + \"\\t Type \u0027list\u0027 to show previous inputs\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"                + \"\\t Type \u0027todo TASK\u0027 to indicate that TASK has to be done\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"                + \"\\t Type \u0027deadline TASK /by DATE/TIME\u0027 to indicate that TASK has to be done by DATE/TIME\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"                + \"\\t Type \u0027event TASK /at DATE/TIME PERIOD\u0027 to indicate that TASK occurs at DATE/TIME PERIOD\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"                + \"\\t Type \u0027done #\u0027 to indicate that task # has been done\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"                + \"\\t Type \u0027bye\u0027 to end\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"GabrielWLM"},"content":"                + lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"GabrielWLM"},"content":"        String response \u003d scanner.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"GabrielWLM"},"content":"        while (!response.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"GabrielWLM"},"content":"            if (response.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"GabrielWLM"},"content":"                for (int i \u003d 0; i \u003c amount; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"GabrielWLM"},"content":"                    String doneI \u003d \" \";","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"GabrielWLM"},"content":"                    if (done[i]) doneI \u003d \"X\";","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"GabrielWLM"},"content":"                    // String type \u003d \" \";","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"GabrielWLM"},"content":"                    // if (td[i]) type \u003d \"T\";","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"GabrielWLM"},"content":"                    // if (deadline[i]) type \u003d \"D\";","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"GabrielWLM"},"content":"                    // if (event[i]) type \u003d \"E\";","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"GabrielWLM"},"content":"                    System.out.println(\"\\t \" + (i + 1) + \".\" + list[i]);","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"GabrielWLM"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"GabrielWLM"},"content":"            } else if (response.matches(\"done ([0-9]|[1-9][0-9])\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"GabrielWLM"},"content":"                int taskNo \u003d Integer.parseInt(response.replaceAll(\"\\\\D\", \"\")) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"GabrielWLM"},"content":"                list[taskNo] \u003d list[taskNo].substring(0,4) + \u0027X\u0027 + list[taskNo].substring(5);","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t \" + list[taskNo]);","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"GabrielWLM"},"content":"                done[taskNo] \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"GabrielWLM"},"content":"            } else if (response.matches(\"delete ([0-9]|[1-9][0-9])\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"GabrielWLM"},"content":"                int taskNo \u003d Integer.parseInt(response.replaceAll(\"\\\\D\", \"\")) - 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t \" + list[taskNo]);","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t Now you have \" + (amount - 1) + \" tasks in the list.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"GabrielWLM"},"content":"                list[taskNo] \u003d \"deleted\";","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"GabrielWLM"},"content":"            } else if (response.matches(\"todo .+\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t   [T][ ] \" + response.substring(5));","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t Now you have \" + (amount + 1) + \" tasks in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"GabrielWLM"},"content":"                list[amount] \u003d \"[T][ ] \" + response.substring(5);","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"GabrielWLM"},"content":"                // td[amount] \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"GabrielWLM"},"content":"                amount++;","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"GabrielWLM"},"content":"            } else if (response.matches(\"deadline .+\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"GabrielWLM"},"content":"                int pos \u003d response.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"GabrielWLM"},"content":"                list[amount] \u003d \"[D][ ] \"","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"GabrielWLM"},"content":"                        + response.substring(9, pos - 1)","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"GabrielWLM"},"content":"                        + \" (by: \" + response.substring(response.indexOf(\u0027/\u0027) + 4) + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t   \" + list[amount]);","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t Now you have \" + (amount + 1) + \" tasks in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"GabrielWLM"},"content":"                // deadline[amount] \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"GabrielWLM"},"content":"                amount++;","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"GabrielWLM"},"content":"            } else if (response.matches(\"event .+\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"GabrielWLM"},"content":"                int pos \u003d response.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"GabrielWLM"},"content":"                list[amount] \u003d \"[E][ ] \"","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"GabrielWLM"},"content":"                        + response.substring(6, pos - 1)","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"GabrielWLM"},"content":"                        + \" (at: \" + response.substring(response.indexOf(\u0027/\u0027) + 4) + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t   \" + list[amount]);","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"\\t Now you have \" + (amount + 1) + \" tasks in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"GabrielWLM"},"content":"                // deadline[amount] \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"GabrielWLM"},"content":"                amount++;","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"GabrielWLM"},"content":"            } else if (response.equals(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"GabrielWLM"},"content":"            } else if (response.equals(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"GabrielWLM"},"content":"            } else if (response.equals(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"GabrielWLM"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"GabrielWLM"},"content":"                System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"GabrielWLM"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"GabrielWLM"},"content":"            response \u003d scanner.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"GabrielWLM"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"GabrielWLM"},"content":"        System.out.println(\"\\t Bye! Talk again sometime!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"GabrielWLM"},"content":"        System.out.println(lineBreak);","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"GabrielWLM"},"content":"        scanner.close();","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"GabrielWLM":118,"-":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GabrielWLM":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GabrielWLM":1,"-":20}}]
