[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"    id \"org.openjfx.javafxplugin\" version \"0.0.10\"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"GabrielWLM"},"content":"    mainClassName \u003d \"luke.Luke\"","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"GabrielWLM"},"content":"    archiveBaseName \u003d \"luke\"","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"GabrielWLM"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GabrielWLM":20,"-":44}},{"path":"data/luke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"T,0,Study CS","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"D,1,CS2100 Assignment 1,2021-10-21","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"GabrielWLM":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"### Add Tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"Add tasks that needs to be done in no set time.","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"### Add Deadlines","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"Add deadlines that need to be completed by a certain date.","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"### Add Events","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"Add events that will take place at a certain date.","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"### `help` - Get Help","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"Returns a list of command keywords.","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"### `list` - List Entries","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"Returns the list of entries.","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"### `todo` - Add Tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"Adds a task entry.","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"Example of usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"GabrielWLM"},"content":"`todo Service the car`","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"GabrielWLM"},"content":"`todo Take the snake for a walk`","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"GabrielWLM"},"content":"### `deadline` - Add Deadlines","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"GabrielWLM"},"content":"Adds a deadline entry.","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"GabrielWLM"},"content":"Example of usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"GabrielWLM"},"content":"`deadline Get an internship / 2022-02-21`","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"GabrielWLM"},"content":"`deadline Get a job / 2023-03-14`","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"GabrielWLM"},"content":"### `done` - Finish Tasks/Deadlines/Events","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"GabrielWLM"},"content":"Marks an entry as done.","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"GabrielWLM"},"content":"Example of usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"GabrielWLM"},"content":"`done 3`","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"GabrielWLM"},"content":"Marks the third entry as done.","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"GabrielWLM"},"content":"### `delete` - Delete Entry","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"GabrielWLM"},"content":"Deletes an entry.","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"GabrielWLM"},"content":"`done 2`","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"GabrielWLM"},"content":"Removes the second entry in the entry list.","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"GabrielWLM"},"content":"### `bye` - Say Bye to Luke","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"GabrielWLM"},"content":"Closes the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"GabrielWLM"},"content":"###Credits","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"GabrielWLM"},"content":"Photos by Generated Photos","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"GabrielWLM":56,"-":17}},{"path":"src/main/java/luke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":" * Class that inherits from Entry to encapsulate Deadlines.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"public class Deadline extends Entry {","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"    public Deadline() {","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"        super();","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"        this.deadline \u003d LocalDate.now();","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"     * @param task Entry to be saved.","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"     * @param deadline Deadline of entry.","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"     * @throws LukeException Error thrown if deadline is in wrong format.","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"    public Deadline(String task, String deadline) throws LukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"        super(task);","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"GabrielWLM"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"GabrielWLM"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"GabrielWLM"},"content":"            this.deadline \u003d LocalDate.now();","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"GabrielWLM"},"content":"            throw LukeException.INVALID_DATE_FORMAT_EXCEPTION;","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"GabrielWLM"},"content":"     * Overrides Entry\u0027s saveString method.","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"GabrielWLM"},"content":"     * Returns string to be saved representing the Deadline.","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"GabrielWLM"},"content":"     * @return String to be saved representing the Deadline.","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"GabrielWLM"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"GabrielWLM"},"content":"    public String saveString() {","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"GabrielWLM"},"content":"        return \"D\" + super.saveString() + \",\" + this.deadline;","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"GabrielWLM"},"content":"     * Overrides Entry\u0027s toString method.","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"GabrielWLM"},"content":"     * Returns String description of deadline.","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"GabrielWLM"},"content":"     * @return String representing Deadline.","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"GabrielWLM"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"GabrielWLM"},"content":"    public String toString() {","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"GabrielWLM"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"GabrielWLM"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.deadline.format(formatter) + \")\";","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"GabrielWLM"},"content":"     * Returns true if Deadline is Empty.","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"GabrielWLM"},"content":"     * @return Boolean corresponding to Deadline\u0027s length.","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"GabrielWLM"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"GabrielWLM"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"GabrielWLM"},"content":"        return super.isEmpty() \u0026\u0026 !deadline.isAfter(LocalDate.now());","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"GabrielWLM":71}},{"path":"src/main/java/luke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"    public void deadlineToStringTest() {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"            Deadline deadline \u003d new Deadline(\"testing-deadline\", \"2021-08-20\");","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"            assertEquals(\"[D][ ] testing-deadline(by: Aug 20 2021)\", deadline.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"            assertEquals(LukeException.INVALID_DATE_FORMAT_EXCEPTION.getMessage(), e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"    public void deadlineSaveStringTest() {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"            Deadline deadline \u003d new Deadline(\"testing-deadline\", \"2021-08-20\");","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"            assertEquals(\"D,0,testing-deadline,2021-08-20\", deadline.saveString());","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"            assertEquals(LukeException.INVALID_DATE_FORMAT_EXCEPTION.getMessage(), e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":27}},{"path":"src/main/java/luke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"    private Label text;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"    private final ImageView DISPLAY_PICTURE;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"        text \u003d l;","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"        DISPLAY_PICTURE \u003d iv;","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"        text.setWrapText(true);","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"        DISPLAY_PICTURE.setFitWidth(100.0);","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"        DISPLAY_PICTURE.setFitHeight(100.0);","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"        this.getChildren().addAll(text, DISPLAY_PICTURE);","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"    private void flip() {","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"GabrielWLM"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"GabrielWLM"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"GabrielWLM"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"GabrielWLM"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"GabrielWLM"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"GabrielWLM"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"GabrielWLM"},"content":"    public static DialogBox getLukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"GabrielWLM"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"GabrielWLM"},"content":"        db.flip();","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"GabrielWLM"},"content":"        return db;","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"GabrielWLM"},"content":"    public DialogBox padDialog(int padding) {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"GabrielWLM"},"content":"        text.setAlignment(Pos.BASELINE_RIGHT);","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"GabrielWLM"},"content":"        return this;","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"GabrielWLM":52}},{"path":"src/main/java/luke/Entry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":" * Abstract class that defines entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"public abstract class Entry {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"    private final String ENTRY;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for Entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"    Entry() {","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"        this.ENTRY \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for Entry with a value.","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"     * @param value Entry value.","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"    Entry(String value) {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"        this.ENTRY \u003d value;","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"     * Method to set the isDone status to true of an Entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"GabrielWLM"},"content":"     * @return Boolean if successful operation.","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"GabrielWLM"},"content":"    public boolean setDone() {","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"GabrielWLM"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"GabrielWLM"},"content":"            return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"GabrielWLM"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"GabrielWLM"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"GabrielWLM"},"content":"            return true;","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"GabrielWLM"},"content":"     * Returns true if Entry is Empty.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"GabrielWLM"},"content":"     * @return Boolean corresponding to Entry\u0027s length.","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"GabrielWLM"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"GabrielWLM"},"content":"        return this.ENTRY.isEmpty() || this.ENTRY.isBlank();","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"GabrielWLM"},"content":"     * Returns the string to be saved representing the Entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"GabrielWLM"},"content":"     * @return String to represent entry in memory.","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"GabrielWLM"},"content":"    public String saveString() {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"GabrielWLM"},"content":"        String isDoneString \u003d \"0\";","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"GabrielWLM"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"GabrielWLM"},"content":"            isDoneString \u003d \"1\";","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"GabrielWLM"},"content":"        return \",\" + isDoneString + \",\" + this.ENTRY;","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"GabrielWLM"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"GabrielWLM"},"content":"        return this.ENTRY.contains(keyword);","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"GabrielWLM"},"content":"     * Overrides Object\u0027s toString method to return a description of Entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"GabrielWLM"},"content":"     * @return String to represent Entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"GabrielWLM"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"GabrielWLM"},"content":"    public String toString() {","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"GabrielWLM"},"content":"        char isDoneDisplay \u003d this.isDone ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"GabrielWLM"},"content":"        return (\"[\" + isDoneDisplay + \"] \" + this.ENTRY);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":79}},{"path":"src/main/java/luke/EntryList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":" * Class that implements methods to store an Arraylist of Entries","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"public class EntryList extends ArrayList\u003cEntry\u003e {","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"    private int numberOfEntries;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for EntryList.","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"    EntryList() {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"        super();","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"        this.numberOfEntries \u003d super.size();","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"     * Prints all the Entries stored currently.","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"     * @throws LukeException Exception if no entries are to be displayed.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"    public String getEntries() throws LukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"        StringBuilder entryList \u003d new StringBuilder();","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"        if (numberOfEntries \u003e 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"            for (int i \u003d 0; i \u003c numberOfEntries; i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"                entryList.append(super.get(i)).append(\"\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"            return entryList.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"GabrielWLM"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"GabrielWLM"},"content":"            throw new LukeException(\"No entries to display!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"GabrielWLM"},"content":"     * Finds entries with given keyword.","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"GabrielWLM"},"content":"     * Searches for partial entries as well.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"GabrielWLM"},"content":"     * @param keyword to search for.","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"GabrielWLM"},"content":"     * @param ui Ui to return info string.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"GabrielWLM"},"content":"     * @return String of found entries.","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"GabrielWLM"},"content":"    public String getFindEntry(String keyword, Ui ui) {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"GabrielWLM"},"content":"        int len \u003d super.size();","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"GabrielWLM"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"GabrielWLM"},"content":"        StringBuilder output \u003d new StringBuilder(ui.getListMatches());","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"GabrielWLM"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"GabrielWLM"},"content":"            Entry currentEntry \u003d super.get(i);","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"GabrielWLM"},"content":"            if (currentEntry.contains(keyword)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"GabrielWLM"},"content":"                if (count \u003d\u003d 1) {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"GabrielWLM"},"content":"                    output.append(ui.getFoundMatches());","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"GabrielWLM"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"GabrielWLM"},"content":"                output.append(ui.getPrintEntry(currentEntry, count++));","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"GabrielWLM"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"GabrielWLM"},"content":"        return output.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"GabrielWLM"},"content":"     * Marks a given entry number as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"GabrielWLM"},"content":"     * @param entryNumber The number of the entry to be marked.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"GabrielWLM"},"content":"     * @return String for marked entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"GabrielWLM"},"content":"     * @throws LukeException Error thrown when no entry exists for the given entryNumber.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"GabrielWLM"},"content":"    public String getEntryAsDone(int entryNumber) throws LukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"GabrielWLM"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"GabrielWLM"},"content":"        if (entryNumber \u003e 0 \u0026\u0026 entryNumber \u003c\u003d numberOfEntries) {","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"GabrielWLM"},"content":"            if (super.get(entryNumber - 1).setDone()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"GabrielWLM"},"content":"                output.append(\"Nice! I\u0027ve marked this entry as done:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"GabrielWLM"},"content":"                output.append(\"\\t\").append(super.get(entryNumber - 1));","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"GabrielWLM"},"content":"            } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"GabrielWLM"},"content":"                output.append(\"Entry is already marked as done!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"GabrielWLM"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"GabrielWLM"},"content":"            return output.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"GabrielWLM"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"GabrielWLM"},"content":"            throw new LukeException(\"There\u0027s no Entry corresponding to that Number!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"GabrielWLM"},"content":"     * Adds given Entry to the List when adding from memory.","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"GabrielWLM"},"content":"     * @param entry Entry to be added.","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"GabrielWLM"},"content":"    public void addEntry(Entry entry) {","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"GabrielWLM"},"content":"        super.add(numberOfEntries++, entry);","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"GabrielWLM"},"content":"     * Adds given Entry to the List.","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"GabrielWLM"},"content":"     * Prints Success Message if Successful.","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"GabrielWLM"},"content":"     * @param entry The Entry to be added.","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"GabrielWLM"},"content":"     * @param command The command corresponding to the Entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"GabrielWLM"},"content":"     * @return String to show added Entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"GabrielWLM"},"content":"     * @throws LukeException Error thrown if Entry is empty.","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"GabrielWLM"},"content":"    public String getAddEntry(Entry entry, String command, Ui ui) throws LukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"GabrielWLM"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"GabrielWLM"},"content":"        if (!entry.isEmpty()){","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"GabrielWLM"},"content":"            super.add(numberOfEntries++, entry);","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"GabrielWLM"},"content":"            output.append(ui.getAddEntry(entry, numberOfEntries));","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"GabrielWLM"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"GabrielWLM"},"content":"            throw new LukeException(\"The \" + command + \" description can\u0027t be empty!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"GabrielWLM"},"content":"        return output.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"GabrielWLM"},"content":"     * Deletes entry by index.","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"GabrielWLM"},"content":"     * @param index Index of Entry to be deleted.","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"GabrielWLM"},"content":"     * @param ui UI Object to print deleted Entry message.","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"GabrielWLM"},"content":"     * @return String to show deleted entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"GabrielWLM"},"content":"     * @throws LukeException Error thrown if no Entry corresponds to the index.","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"GabrielWLM"},"content":"    public String getDeleteEntry(int index, Ui ui) throws LukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"GabrielWLM"},"content":"        if (super.isEmpty() || index \u003c 1 || index \u003e numberOfEntries) {","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"GabrielWLM"},"content":"            throw new LukeException(\"Duke can\u0027t find anything to delete!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"GabrielWLM"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"GabrielWLM"},"content":"            Entry deletedEntry \u003d super.remove(index - 1);","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"GabrielWLM"},"content":"            numberOfEntries--;","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"GabrielWLM"},"content":"            return ui.getDeletedEntry(deletedEntry);","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":129}},{"path":"src/main/java/luke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":" * Class that inherits from Entry to encapsulate Events.","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"public class Event extends Entry{","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"    private LocalDate event;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"    Event() {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"        super();","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"        this.event \u003d LocalDate.now();","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"     * @param task Entry Task to be saved.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"     * @param event Event details.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"     * @throws LukeException Error thrown if event format is incorrect.","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"    Event(String task, String event) throws LukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"        super(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"GabrielWLM"},"content":"            this.event \u003d LocalDate.parse(event);","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"GabrielWLM"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"GabrielWLM"},"content":"            this.event \u003d LocalDate.now();","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"GabrielWLM"},"content":"            throw LukeException.INVALID_DATE_FORMAT_EXCEPTION;","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"GabrielWLM"},"content":"     * Overrides Object\u0027s toString method.","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"GabrielWLM"},"content":"     * @return String representing Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"GabrielWLM"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"GabrielWLM"},"content":"    public String toString() {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"GabrielWLM"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"GabrielWLM"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.event.format(formatter) + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"GabrielWLM"},"content":"     * Overrides Entry\u0027s saveString method.","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"GabrielWLM"},"content":"     * Returns string to be saved representing the Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"GabrielWLM"},"content":"     * @return String to be saved representing the Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"GabrielWLM"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"GabrielWLM"},"content":"    public String saveString() {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"GabrielWLM"},"content":"        return \"E\" + super.saveString() + \",\" + this.event;","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"GabrielWLM"},"content":"     * Returns true if Event is Empty.","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"GabrielWLM"},"content":"     * @return Boolean corresponding to Event\u0027s length.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"GabrielWLM"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"GabrielWLM"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"GabrielWLM"},"content":"        return super.isEmpty() || !event.isAfter(LocalDate.now());","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":70}},{"path":"src/main/java/luke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"public class EventTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"    public void eventToStringTest() {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"            Event event \u003d new Event(\"testing-event\", \"2021-08-20\");","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"            assertEquals(\"[E][ ] testing-event(at: Aug 20 2021)\", event.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"            assertEquals(LukeException.INVALID_DATE_FORMAT_EXCEPTION.getMessage(), e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"    public void eventSaveStringTest() {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"            Event event \u003d new Event(\"testing-event\", \"2021-08-20\");","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"            assertEquals(\"E,0,testing-event,2021-08-20\", event.saveString());","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"            assertEquals(LukeException.INVALID_DATE_FORMAT_EXCEPTION.getMessage(), e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":27}},{"path":"src/main/java/luke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"public class Launcher {","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"        Application.launch(Luke.class, args);","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":9}},{"path":"src/main/java/luke/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":" * Class to encapsulate Luke Chatbot.","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"public class Luke extends Application {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"    private final Ui lukeUi;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"    private final Parser lukeParser;","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"    private final Storage lukeStorage;","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"    private EntryList entries;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"GabrielWLM"},"content":"    private final Image USER \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/UserImage.jpg\")));","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"GabrielWLM"},"content":"    private final Image LUKE \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/LukeImage.jpg\")));","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"GabrielWLM"},"content":"    public static final String TERMINATION_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"GabrielWLM"},"content":"    public static final String LIST_ENTRIES_COMMAND \u003d \"list\";","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"GabrielWLM"},"content":"    public static final String MARK_ENTRY_DONE_COMMAND \u003d \"done\";","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"GabrielWLM"},"content":"    public static final String DELETE_ENTRY_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"GabrielWLM"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"GabrielWLM"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"GabrielWLM"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"GabrielWLM"},"content":"    public static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"GabrielWLM"},"content":"    public static final String HELP_COMMAND \u003d \"help\";","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"GabrielWLM"},"content":"    public static final List\u003cString\u003e commands \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"GabrielWLM"},"content":"            List.of(TERMINATION_COMMAND, LIST_ENTRIES_COMMAND,","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"GabrielWLM"},"content":"                    MARK_ENTRY_DONE_COMMAND, DELETE_ENTRY_COMMAND,","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"GabrielWLM"},"content":"                    TODO_COMMAND, EVENT_COMMAND, DEADLINE_COMMAND,","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"GabrielWLM"},"content":"                    FIND_COMMAND, HELP_COMMAND);","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for Luke Chatbot.","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"GabrielWLM"},"content":"    public Luke() {","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"GabrielWLM"},"content":"        this.lukeUi \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"GabrielWLM"},"content":"        this.lukeParser \u003d new Parser();","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"GabrielWLM"},"content":"        this.lukeStorage \u003d new Storage();","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"GabrielWLM"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"GabrielWLM"},"content":"            this.entries \u003d this.lukeStorage.readData();","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"GabrielWLM"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"GabrielWLM"},"content":"            this.lukeUi.handleLoadingError(e);","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"GabrielWLM"},"content":"            this.entries \u003d new EntryList();","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"GabrielWLM"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"GabrielWLM"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"GabrielWLM"},"content":"        VBox lukeContainer \u003d new VBox();","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"GabrielWLM"},"content":"        TextField lukeInput \u003d new TextField();","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"GabrielWLM"},"content":"        ScrollPane scrollPane \u003d configureScrollPane(lukeContainer);","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"GabrielWLM"},"content":"        Button sendButton \u003d configureSendButton(lukeContainer, lukeInput, stage);","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"GabrielWLM"},"content":"        VBox sideLabel \u003d configureSideLabel();","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"GabrielWLM"},"content":"        HBox topRow \u003d configureTopRow(scrollPane, sideLabel);","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"GabrielWLM"},"content":"        AnchorPane container \u003d configureAnchorPane(scrollPane, sendButton, lukeInput, topRow);","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"GabrielWLM"},"content":"        Scene scene \u003d new Scene(container);","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"GabrielWLM"},"content":"        configureLukeContainerAndLukeInput(lukeContainer, lukeInput, scrollPane, stage);","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"GabrielWLM"},"content":"        configureStage(scene, stage);","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"GabrielWLM"},"content":"        stage.show();","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"GabrielWLM"},"content":"    private void configureStage(Scene scene, Stage stage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"GabrielWLM"},"content":"        stage.setTitle(\"Luke\");","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"GabrielWLM"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"GabrielWLM"},"content":"        stage.setMinHeight(500.0);","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"GabrielWLM"},"content":"        stage.setMinWidth(700.0);","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"GabrielWLM"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"GabrielWLM"},"content":"    private Button configureSendButton(VBox lukeContainer, TextField lukeInput, Stage stage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"GabrielWLM"},"content":"        Button sendButton \u003d new Button();","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"GabrielWLM"},"content":"        sendButton.setPrefWidth(200.0);","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"GabrielWLM"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"GabrielWLM"},"content":"            handleUserInput(lukeContainer, lukeInput, stage);","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"GabrielWLM"},"content":"        });","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"GabrielWLM"},"content":"        return sendButton;","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"GabrielWLM"},"content":"    private AnchorPane configureAnchorPane(ScrollPane scrollPane, Button sendButton, TextField lukeInput, HBox topRow) {","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"GabrielWLM"},"content":"        AnchorPane anchor \u003d new AnchorPane();","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"GabrielWLM"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"GabrielWLM"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"GabrielWLM"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"GabrielWLM"},"content":"        AnchorPane.setLeftAnchor(lukeInput , 1.0);","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"GabrielWLM"},"content":"        AnchorPane.setBottomAnchor(lukeInput, 1.0);","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"GabrielWLM"},"content":"        anchor.getChildren().addAll(topRow, lukeInput, sendButton);","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"GabrielWLM"},"content":"        anchor.setPrefSize(700.0, 500.0);","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"GabrielWLM"},"content":"        anchor.setStyle(\"-fx-background-color: #13223b\");","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"GabrielWLM"},"content":"        return anchor;","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"GabrielWLM"},"content":"    private void configureLukeContainerAndLukeInput(","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"GabrielWLM"},"content":"            VBox lukeContainer, TextField lukeInput, ScrollPane scrollPane, Stage stage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"GabrielWLM"},"content":"        lukeContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"GabrielWLM"},"content":"        lukeContainer.heightProperty().addListener((observable -\u003e scrollPane.setVvalue(1.0)));","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"GabrielWLM"},"content":"        lukeInput.setPrefWidth(496.0);","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"GabrielWLM"},"content":"        lukeInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"GabrielWLM"},"content":"            handleUserInput(lukeContainer, lukeInput, stage);","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"GabrielWLM"},"content":"        });","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"GabrielWLM"},"content":"     * Iteration 2:","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"GabrielWLM"},"content":"     * Creates two dialog boxes, one echoing USER input and the other containing Luke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"GabrielWLM"},"content":"     * the dialog container. Clears the USER input after processing.","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"GabrielWLM"},"content":"    private void handleUserInput(VBox dialogContainer, TextField userInput, Stage stage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"GabrielWLM"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"GabrielWLM"},"content":"        Label lukeText \u003d new Label(getResponse(userInput.getText(), stage));","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"GabrielWLM"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"GabrielWLM"},"content":"                DialogBox.getUserDialog(userText, new ImageView(USER)).padDialog(10),","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"GabrielWLM"},"content":"                DialogBox.getLukeDialog(lukeText, new ImageView(LUKE)).padDialog(10)","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"GabrielWLM"},"content":"        );","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"GabrielWLM"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"GabrielWLM"},"content":"     * Function to get response from Luke.","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"GabrielWLM"},"content":"    private String getResponse(String input, Stage stage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"GabrielWLM"},"content":"        if (input.equals(TERMINATION_COMMAND)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"GabrielWLM"},"content":"            stage.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"GabrielWLM"},"content":"            return \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"GabrielWLM"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"GabrielWLM"},"content":"            return run(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"GabrielWLM"},"content":"    private HBox configureTopRow(ScrollPane scrollPane, VBox sideLabel) {","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"GabrielWLM"},"content":"        HBox topRow \u003d new HBox();","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"GabrielWLM"},"content":"        topRow.getChildren().addAll(scrollPane, sideLabel);","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"GabrielWLM"},"content":"        return topRow;","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"GabrielWLM"},"content":"    private ScrollPane configureScrollPane(VBox lukeContainer) {","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"GabrielWLM"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"GabrielWLM"},"content":"        scrollPane.setContent(lukeContainer);","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"GabrielWLM"},"content":"        scrollPane.setPrefSize(500.0, 473.3);","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"GabrielWLM"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"GabrielWLM"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"GabrielWLM"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"GabrielWLM"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"GabrielWLM"},"content":"        return scrollPane;","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"GabrielWLM"},"content":"    private VBox configureSideLabel() {","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"GabrielWLM"},"content":"        Label title \u003d new Label(\" LUKE \");","lastModifiedDate":"2021-09-22"},{"lineNumber":169,"author":{"gitId":"GabrielWLM"},"content":"        title.setTextFill(Color.color(1,1,1));","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"GabrielWLM"},"content":"        title.setFont(new Font(\"Georgia\", 45));","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"GabrielWLM"},"content":"        title.setStyle(\"-fx-start-margin: 100\");","lastModifiedDate":"2021-09-22"},{"lineNumber":172,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"GabrielWLM"},"content":"        Label description \u003d new Label(this.toString());","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"GabrielWLM"},"content":"        description.setTextFill(Color.color(1,1,1));","lastModifiedDate":"2021-09-22"},{"lineNumber":175,"author":{"gitId":"GabrielWLM"},"content":"        description.setFont(new Font(\"Georgia\", 24));","lastModifiedDate":"2021-09-22"},{"lineNumber":176,"author":{"gitId":"GabrielWLM"},"content":"        description.setStyle(\"-fx-start-margin: 100\");","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"GabrielWLM"},"content":"        VBox sideLabel \u003d new VBox();","lastModifiedDate":"2021-09-22"},{"lineNumber":179,"author":{"gitId":"GabrielWLM"},"content":"        sideLabel.getChildren().addAll(title, description);","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"GabrielWLM"},"content":"        return sideLabel;","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"GabrielWLM"},"content":"     * Method containing Logic for processed Input.","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"GabrielWLM"},"content":"     * @param parsedTerms ArrayList containing the command, entry and timing (in that order).","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"GabrielWLM"},"content":"     * @throws LukeException If ProcessedInput is invalid/incoherent.","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"GabrielWLM"},"content":"    private String processInput(ArrayList\u003cString\u003e parsedTerms) throws LukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"GabrielWLM"},"content":"        if (parsedTerms.size() \u003c 3) {","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"GabrielWLM"},"content":"            throw new LukeException(\"Luke cannot understand your entry :/\\nType \u0027help\u0027 for assistance\");","lastModifiedDate":"2021-09-20"},{"lineNumber":192,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"GabrielWLM"},"content":"        String command \u003d parsedTerms.get(0);","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"GabrielWLM"},"content":"        String entry \u003d parsedTerms.get(1);","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"GabrielWLM"},"content":"        String timing \u003d parsedTerms.get(2);","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"GabrielWLM"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":197,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"GabrielWLM"},"content":"        //Process Command","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"GabrielWLM"},"content":"        switch(command) {","lastModifiedDate":"2021-09-17"},{"lineNumber":200,"author":{"gitId":"GabrielWLM"},"content":"            case LIST_ENTRIES_COMMAND:","lastModifiedDate":"2021-09-17"},{"lineNumber":201,"author":{"gitId":"GabrielWLM"},"content":"                output \u003d entries.getEntries();","lastModifiedDate":"2021-09-17"},{"lineNumber":202,"author":{"gitId":"GabrielWLM"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":203,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":204,"author":{"gitId":"GabrielWLM"},"content":"            case MARK_ENTRY_DONE_COMMAND:","lastModifiedDate":"2021-09-17"},{"lineNumber":205,"author":{"gitId":"GabrielWLM"},"content":"                output \u003d entries.getEntryAsDone(Integer.parseInt(entry));","lastModifiedDate":"2021-09-17"},{"lineNumber":206,"author":{"gitId":"GabrielWLM"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":207,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":208,"author":{"gitId":"GabrielWLM"},"content":"            case TODO_COMMAND:","lastModifiedDate":"2021-09-17"},{"lineNumber":209,"author":{"gitId":"GabrielWLM"},"content":"                output \u003d entries.getAddEntry(new Todo(entry), command, this.lukeUi);","lastModifiedDate":"2021-09-17"},{"lineNumber":210,"author":{"gitId":"GabrielWLM"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":211,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":212,"author":{"gitId":"GabrielWLM"},"content":"            case EVENT_COMMAND:","lastModifiedDate":"2021-09-17"},{"lineNumber":213,"author":{"gitId":"GabrielWLM"},"content":"                output \u003d entries.getAddEntry(new Event(entry, timing), command, this.lukeUi);","lastModifiedDate":"2021-09-17"},{"lineNumber":214,"author":{"gitId":"GabrielWLM"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":215,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":216,"author":{"gitId":"GabrielWLM"},"content":"            case DEADLINE_COMMAND:","lastModifiedDate":"2021-09-17"},{"lineNumber":217,"author":{"gitId":"GabrielWLM"},"content":"                output \u003d entries.getAddEntry(new Deadline(entry, timing), command, this.lukeUi);","lastModifiedDate":"2021-09-17"},{"lineNumber":218,"author":{"gitId":"GabrielWLM"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":219,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":220,"author":{"gitId":"GabrielWLM"},"content":"            case DELETE_ENTRY_COMMAND:","lastModifiedDate":"2021-09-17"},{"lineNumber":221,"author":{"gitId":"GabrielWLM"},"content":"                output \u003d entries.getDeleteEntry(Integer.parseInt(entry), this.lukeUi);","lastModifiedDate":"2021-09-17"},{"lineNumber":222,"author":{"gitId":"GabrielWLM"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":223,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":224,"author":{"gitId":"GabrielWLM"},"content":"            case FIND_COMMAND:","lastModifiedDate":"2021-09-17"},{"lineNumber":225,"author":{"gitId":"GabrielWLM"},"content":"                output \u003d entries.getFindEntry(entry, this.lukeUi);","lastModifiedDate":"2021-09-17"},{"lineNumber":226,"author":{"gitId":"GabrielWLM"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":227,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":228,"author":{"gitId":"GabrielWLM"},"content":"            case HELP_COMMAND:","lastModifiedDate":"2021-09-17"},{"lineNumber":229,"author":{"gitId":"GabrielWLM"},"content":"                output \u003d this.lukeUi.getCommands();","lastModifiedDate":"2021-09-17"},{"lineNumber":230,"author":{"gitId":"GabrielWLM"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":231,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":232,"author":{"gitId":"GabrielWLM"},"content":"            default:","lastModifiedDate":"2021-09-17"},{"lineNumber":233,"author":{"gitId":"GabrielWLM"},"content":"                throw new LukeException(\"Sorry! Luke can\u0027t understand that\\nType \u0027help\u0027 for assistance\");","lastModifiedDate":"2021-09-20"},{"lineNumber":234,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":235,"author":{"gitId":"GabrielWLM"},"content":"        return output;","lastModifiedDate":"2021-09-17"},{"lineNumber":236,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":237,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":238,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":239,"author":{"gitId":"GabrielWLM"},"content":"    public String run(String input) {","lastModifiedDate":"2021-09-17"},{"lineNumber":240,"author":{"gitId":"GabrielWLM"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":241,"author":{"gitId":"GabrielWLM"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":242,"author":{"gitId":"GabrielWLM"},"content":"            return this.lukeUi.getGoodByeUser();","lastModifiedDate":"2021-09-17"},{"lineNumber":243,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":244,"author":{"gitId":"GabrielWLM"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":245,"author":{"gitId":"GabrielWLM"},"content":"            ArrayList\u003cString\u003e parsedTerms \u003d this.lukeParser.parseInput(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":246,"author":{"gitId":"GabrielWLM"},"content":"            output \u003d this.processInput(parsedTerms);","lastModifiedDate":"2021-09-17"},{"lineNumber":247,"author":{"gitId":"GabrielWLM"},"content":"            this.lukeStorage.saveEntries(this.entries);","lastModifiedDate":"2021-09-17"},{"lineNumber":248,"author":{"gitId":"GabrielWLM"},"content":"        } catch (LukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":249,"author":{"gitId":"GabrielWLM"},"content":"            output \u003d this.lukeUi.getParsingError(e);","lastModifiedDate":"2021-09-17"},{"lineNumber":250,"author":{"gitId":"GabrielWLM"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":251,"author":{"gitId":"GabrielWLM"},"content":"            output \u003d this.lukeUi.getAssertingError(e);","lastModifiedDate":"2021-09-17"},{"lineNumber":252,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":253,"author":{"gitId":"GabrielWLM"},"content":"        return output;","lastModifiedDate":"2021-09-17"},{"lineNumber":254,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":255,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":256,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":257,"author":{"gitId":"GabrielWLM"},"content":"     * Overrides the Object\u0027s toString method.","lastModifiedDate":"2021-09-17"},{"lineNumber":258,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":259,"author":{"gitId":"GabrielWLM"},"content":"     * @return String description of Luke.","lastModifiedDate":"2021-09-17"},{"lineNumber":260,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":261,"author":{"gitId":"GabrielWLM"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":262,"author":{"gitId":"GabrielWLM"},"content":"    public String toString() {","lastModifiedDate":"2021-09-17"},{"lineNumber":263,"author":{"gitId":"GabrielWLM"},"content":"        return \" Hello! I\u0027m Luke, \\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":264,"author":{"gitId":"GabrielWLM"},"content":"                + \" your slightly useful \\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":265,"author":{"gitId":"GabrielWLM"},"content":"                + \" personal assistant! \\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":266,"author":{"gitId":"GabrielWLM"},"content":"                + \" I can help you remember \\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":267,"author":{"gitId":"GabrielWLM"},"content":"                + \" tasks and other things :D \";","lastModifiedDate":"2021-09-22"},{"lineNumber":268,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":269,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"},{"lineNumber":270,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":271,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":271}},{"path":"src/main/java/luke/LukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"public class LukeException extends Exception {","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"    public static final LukeException INVALID_DATE_FORMAT_EXCEPTION \u003d","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"            new LukeException(\"Sorry I can\u0027t read that! Enter dates in YYYY-MM-DD format\");","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for LukeException.","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"    LukeException() {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"        super();","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for LukeException.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"    LukeException(String argument) {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"        super(argument);","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"     * Overrides Object\u0027s toString method.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"     * @return String representing Exception.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"    public String toString() {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"        return super.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":31}},{"path":"src/main/java/luke/LukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"public class LukeTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"    public void lukeTest() {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"        Luke luke \u003d new Luke();","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"        assertEquals(\"Hello! I\u0027m Luke, your slightly useful personal assistant!\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"                + \"I can help you remember tasks and other things :D\", luke.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":14}},{"path":"src/main/java/luke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":" * Class that implements method to parse user inputs.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"public class Parser {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for Parser.","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"    Parser() {}","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"     * Returns parsed input in an Arraylist.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"     * @param input String input from user.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"     * @return ArrayList of command, entry, timing (if present).","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"     * @throws LukeException Error is thrown if Command is invalid.","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"    public ArrayList\u003cString\u003e parseInput(String input) throws LukeException, AssertionError {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"        ArrayList\u003cString\u003e terms \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"        this.parseString(input, terms);","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"        String command \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"        if (terms.isEmpty()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"            throw new LukeException(\"Luke can\u0027t find any commands :((\");","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"            command \u003d terms.remove(0);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"GabrielWLM"},"content":"        assert isValidCommand(command) : \"Invalid Command! Luke can\u0027t understand what you mean :((\";","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"GabrielWLM"},"content":"        this.parseEntry(terms);","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"GabrielWLM"},"content":"        String entry \u003d terms.isEmpty() ? \"\" : terms.remove(0);","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"GabrielWLM"},"content":"        String timing \u003d terms.isEmpty() ? \"\" : this.parseTiming(terms);","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"GabrielWLM"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(command, entry, timing));","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"GabrielWLM"},"content":"    private boolean isValidCommand(String command) {","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"GabrielWLM"},"content":"        boolean isValid \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"GabrielWLM"},"content":"        for (String knownCommand : Luke.commands) {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"GabrielWLM"},"content":"            if (knownCommand.equals(command)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"GabrielWLM"},"content":"                isValid \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"GabrielWLM"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"GabrielWLM"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"GabrielWLM"},"content":"        return isValid;","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"GabrielWLM"},"content":"    private void parseString(String input, ArrayList\u003cString\u003e terms) throws AssertionError {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"GabrielWLM"},"content":"        // Function to store all terms in input as separate Strings (separated by space in the input)","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"GabrielWLM"},"content":"        int length \u003d input.length();","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"GabrielWLM"},"content":"        assert length \u003e\u003d 1 : \"Invalid String Input\";","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"GabrielWLM"},"content":"        StringBuilder currentWord \u003d new StringBuilder();","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"GabrielWLM"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"GabrielWLM"},"content":"            char currentChar \u003d input.charAt(i);","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"GabrielWLM"},"content":"            if (currentChar \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"GabrielWLM"},"content":"                terms.add(currentWord.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"GabrielWLM"},"content":"                currentWord.setLength(0);","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"GabrielWLM"},"content":"            } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"GabrielWLM"},"content":"                currentWord.append(currentChar);","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"GabrielWLM"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"GabrielWLM"},"content":"        terms.add(currentWord.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"GabrielWLM"},"content":"    private String parseTiming(ArrayList\u003cString\u003e terms) {","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"GabrielWLM"},"content":"        if (terms.get(0).startsWith(\"/\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"GabrielWLM"},"content":"            terms.remove(0);","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"GabrielWLM"},"content":"            StringBuilder timing \u003d new StringBuilder();","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"GabrielWLM"},"content":"            int len \u003d terms.size();","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"GabrielWLM"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"GabrielWLM"},"content":"                if (i !\u003d len - 1){","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"GabrielWLM"},"content":"                    timing.append(terms.get(i)).append(\" \");","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"GabrielWLM"},"content":"                } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"GabrielWLM"},"content":"                    timing.append(terms.get(i));","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"GabrielWLM"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"GabrielWLM"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"GabrielWLM"},"content":"            return timing.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"GabrielWLM"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"GabrielWLM"},"content":"            return \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"GabrielWLM"},"content":"    private void parseEntry(ArrayList\u003cString\u003e terms) {","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"GabrielWLM"},"content":"        boolean isTermsNotEmpty \u003d !terms.isEmpty();","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"GabrielWLM"},"content":"        if (isTermsNotEmpty) {","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"GabrielWLM"},"content":"            StringBuilder entry \u003d new StringBuilder();","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"GabrielWLM"},"content":"            // Combine All Strings Until End of List or \u0027/\u0027 character is found","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"GabrielWLM"},"content":"            ArrayList\u003cString\u003e termsCopy \u003d new ArrayList\u003c\u003e(terms);","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"GabrielWLM"},"content":"            for (String term : termsCopy) {","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"GabrielWLM"},"content":"                if (term.startsWith(\"/\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"GabrielWLM"},"content":"                    String entryDesc \u003d entry.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"GabrielWLM"},"content":"                    terms.add(0, entryDesc.substring(0, entryDesc.length()-1));","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"GabrielWLM"},"content":"                    return;","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"GabrielWLM"},"content":"                } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"GabrielWLM"},"content":"                    entry.append(term).append(\u0027 \u0027);","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"GabrielWLM"},"content":"                    terms.remove(0);","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"GabrielWLM"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"GabrielWLM"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"GabrielWLM"},"content":"            String entryDesc \u003d entry.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"GabrielWLM"},"content":"            terms.add(0, entryDesc.substring(0, entryDesc.length()-1));","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":105}},{"path":"src/main/java/luke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"import java.io.File;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":" * Class that implements methods to store Entries.","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"public class Storage {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"    private final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"    private final Path DATA_DIRECTORY_PATH \u003d Paths.get(PROJECT_ROOT,\"data\");","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"    private Path dataPath;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"    private File lukeData;","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"    Storage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"        this.dataPath \u003d DATA_DIRECTORY_PATH.resolve(\"duke.txt\");","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"        this.lukeData \u003d new File(dataPath.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"GabrielWLM"},"content":"     * Saves all Entries from entries into memory.","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"GabrielWLM"},"content":"     * @param entries EntryList of all entries to be saved.","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"GabrielWLM"},"content":"     * @throws LukeException Error thrown if data file is corrupted/missing.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"GabrielWLM"},"content":"    public void saveEntries(EntryList entries) throws LukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"GabrielWLM"},"content":"        Path dataPath \u003d DATA_DIRECTORY_PATH.resolve(\"luke.txt\");","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"GabrielWLM"},"content":"        File lukeData \u003d new File(dataPath.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"GabrielWLM"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"GabrielWLM"},"content":"            FileWriter fw \u003d new FileWriter(lukeData);","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"GabrielWLM"},"content":"            BufferedWriter lukeWriter \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"GabrielWLM"},"content":"            for (Entry entry : entries){","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"GabrielWLM"},"content":"                String nextEntry \u003d entry.saveString();","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"GabrielWLM"},"content":"                lukeWriter.write(nextEntry);","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"GabrielWLM"},"content":"                lukeWriter.write(\"\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"GabrielWLM"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"GabrielWLM"},"content":"            lukeWriter.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"GabrielWLM"},"content":"            fw.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"GabrielWLM"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"GabrielWLM"},"content":"            throw new LukeException(\"Luke\u0027s data file is corrupted/missing! Can\u0027t be saved\");","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"GabrielWLM"},"content":"     * Returns EntryList with data from memory.","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"GabrielWLM"},"content":"     * @return EntryList containing all data from memory.","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"GabrielWLM"},"content":"     * @throws LukeException Error thrown if file is missing/corrupted.","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"GabrielWLM"},"content":"    public EntryList readData() throws LukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"GabrielWLM"},"content":"        EntryList entries \u003d new EntryList();","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"GabrielWLM"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"GabrielWLM"},"content":"            return addEntriesFromFile(entries);","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"GabrielWLM"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"GabrielWLM"},"content":"            try {","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"GabrielWLM"},"content":"                if (!(lukeData.createNewFile())) {","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"GabrielWLM"},"content":"                    throw new LukeException(\"Uh-Oh! Your data can\u0027t be stored :/\");","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"GabrielWLM"},"content":"                } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"GabrielWLM"},"content":"                    return new EntryList();","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"GabrielWLM"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"GabrielWLM"},"content":"            } catch (IOException err) {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"GabrielWLM"},"content":"                throw new LukeException(\"Uh-Oh! Your data can\u0027t be stored :/\");","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"GabrielWLM"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"GabrielWLM"},"content":"    private EntryList addEntriesFromFile(EntryList entries) throws LukeException, FileNotFoundException {","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"GabrielWLM"},"content":"        Scanner fileScanner \u003d new Scanner(lukeData).useDelimiter(\"[,\\n]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"GabrielWLM"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"GabrielWLM"},"content":"            String entryType \u003d fileScanner.next();","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"GabrielWLM"},"content":"            boolean isDone \u003d Integer.parseInt(fileScanner.next()) \u003d\u003d 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"GabrielWLM"},"content":"            String entryData \u003d fileScanner.next();","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"GabrielWLM"},"content":"            Entry nextEntry \u003d new Todo(\"\");","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"GabrielWLM"},"content":"            boolean hasNextEntry \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"GabrielWLM"},"content":"            switch (entryType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"GabrielWLM"},"content":"                case \"T\":","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"GabrielWLM"},"content":"                    nextEntry \u003d new Todo(entryData);","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"GabrielWLM"},"content":"                    break;","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"GabrielWLM"},"content":"                case \"D\":","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"GabrielWLM"},"content":"                    nextEntry \u003d new Deadline(entryData, fileScanner.next()); //fileScanner.next() will contain timing","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"GabrielWLM"},"content":"                    break;","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"GabrielWLM"},"content":"                case \"E\":","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"GabrielWLM"},"content":"                    nextEntry \u003d new Event(entryData, fileScanner.next()); //fileScanner.next() will contain timing","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"GabrielWLM"},"content":"                    break;","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"GabrielWLM"},"content":"                default:","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"GabrielWLM"},"content":"                    //Corrupted Entry Case","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"GabrielWLM"},"content":"                    hasNextEntry \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"GabrielWLM"},"content":"                    break;","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"GabrielWLM"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"GabrielWLM"},"content":"            if (hasNextEntry) {","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"GabrielWLM"},"content":"                if (isDone) {","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"GabrielWLM"},"content":"                    nextEntry.setDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"GabrielWLM"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"GabrielWLM"},"content":"                entries.addEntry(nextEntry);","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"GabrielWLM"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"GabrielWLM"},"content":"        return entries;","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":110}},{"path":"src/main/java/luke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":" * Class that inherits from Entry to encapsulate Todos.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"public class Todo extends Entry {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"    Todo() {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"        super();","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":"     * @param task The String that will be stored as a Todo.","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"    Todo(String task) {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"        super(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"     * Overrides Entry\u0027s toString method.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"     * @return String representation of Todo.","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"    public String toString() {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"GabrielWLM"},"content":"     * Overrides Entry\u0027s saveString method.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"GabrielWLM"},"content":"     * Returns string to be saved representing the Todo.","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"GabrielWLM"},"content":"     * @return String to be saved representing the Todo.","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"GabrielWLM"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"GabrielWLM"},"content":"    public String saveString() {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"GabrielWLM"},"content":"        return \"T\" + super.saveString();","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":44}},{"path":"src/main/java/luke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"package luke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"GabrielWLM"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"GabrielWLM"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"GabrielWLM"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"GabrielWLM"},"content":" * Class that implements methods to present Luke.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"GabrielWLM"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"GabrielWLM"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"GabrielWLM"},"content":"    private final Image USER \u003d","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"GabrielWLM"},"content":"            new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/UserImage.jpg\")));","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"GabrielWLM"},"content":"    private final Image LUKE \u003d","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"GabrielWLM"},"content":"            new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/LukeImage.jpg\")));","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"GabrielWLM"},"content":"     * Constructor to create a UI object.","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"GabrielWLM"},"content":"    Ui() {","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"GabrielWLM"},"content":"    private final static String LOGO \u003d \" _           _        \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"GabrielWLM"},"content":"                                     + \"| |    _   _| | _____ \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"GabrielWLM"},"content":"                                     + \"| |   | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"GabrielWLM"},"content":"                                     + \"| |___| |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"GabrielWLM"},"content":"                                     + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"GabrielWLM"},"content":"    private final static String HORIZONTAL_DIVIDE \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"GabrielWLM"},"content":"        \"___________________________________________________________________\";","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"GabrielWLM"},"content":"     * Prints out a welcome message.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"GabrielWLM"},"content":"    public void welcomeUser() {","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"GabrielWLM"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"GabrielWLM"},"content":"        System.out.println(\"I\u0027m Luke, your slightly useful personal assistant!\"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"GabrielWLM"},"content":"                        + \"What can Luke do for you today?\");","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"GabrielWLM"},"content":"        System.out.println(HORIZONTAL_DIVIDE);","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"GabrielWLM"},"content":"     * Prints out the added entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"GabrielWLM"},"content":"     * @param entry The newly-added entry.","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"GabrielWLM"},"content":"     * @param id The #id of the newly-added entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"GabrielWLM"},"content":"    public String getAddEntry(Entry entry, int id) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"GabrielWLM"},"content":"        return \"I\u0027ve added this entry to your list!\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"GabrielWLM"},"content":"        this.getPrintEntry(entry, id);","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"GabrielWLM"},"content":"    public String getListMatches() {","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"GabrielWLM"},"content":"        return \"Looking for matching tasks in your list...\";","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"GabrielWLM"},"content":"    public String getFoundMatches() {","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"GabrielWLM"},"content":"        return \"Here are the matching tasks in your list: \";","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"GabrielWLM"},"content":"     * Prints out given entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"GabrielWLM"},"content":"     * @param entry Entry to be printed.","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"GabrielWLM"},"content":"     * @param id ID of entry to be printed.","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"GabrielWLM"},"content":"    public void printEntry(Entry entry, int id) {","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"GabrielWLM"},"content":"        System.out.println(\"\\t\" + id + \".\" + entry);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"GabrielWLM"},"content":"     * Returns given entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"GabrielWLM"},"content":"     * @param entry Entry to be printed.","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"GabrielWLM"},"content":"     * @param id ID of entry to be printed.","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"GabrielWLM"},"content":"     * @return String for given entry.","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"GabrielWLM"},"content":"    public String getPrintEntry(Entry entry, int id) {","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"GabrielWLM"},"content":"        return \"\\t\" + id + \".\" + entry;","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"GabrielWLM"},"content":"     * Prints out farewell message.","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"GabrielWLM"},"content":"     * @return String to say farewell to USER.","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"GabrielWLM"},"content":"    public String getGoodByeUser() {","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"GabrielWLM"},"content":"        return \"Bye! Hope to see you again soon :D\";","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"GabrielWLM"},"content":"     * Prints out the Error Message received when Parsing.","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"GabrielWLM"},"content":"     * @param parsingError Error encountered while parsing input.","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"GabrielWLM"},"content":"    public String getParsingError(LukeException parsingError) {","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"GabrielWLM"},"content":"        return parsingError.getMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"GabrielWLM"},"content":"     * Prints out the Error Message received in Assertions when Parsing.","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"GabrielWLM"},"content":"     * @param assertError Error encountered while parsing input.","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"GabrielWLM"},"content":"    public String getAssertingError(AssertionError assertError) {","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"GabrielWLM"},"content":"        return assertError.getMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"GabrielWLM"},"content":"     * Returns all the commands in one large String.","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"GabrielWLM"},"content":"     * @return String containing all commands Duke uses.","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"GabrielWLM"},"content":"    public String getCommands() {","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"GabrielWLM"},"content":"        StringBuilder helpPage \u003d new StringBuilder(\"These are the available commands:\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"GabrielWLM"},"content":"        for (String command : Luke.commands) {","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"GabrielWLM"},"content":"            helpPage.append(command).append(\"\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"GabrielWLM"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"GabrielWLM"},"content":"        return helpPage.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"GabrielWLM"},"content":"     * Prints out the Error Message received when loading data from memory.","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"GabrielWLM"},"content":"     * @param loadingError Error encountered while loading data from memory.","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"GabrielWLM"},"content":"    public void handleLoadingError(LukeException loadingError) {","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"GabrielWLM"},"content":"        System.out.println(loadingError.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"GabrielWLM"},"content":"        System.out.println(HORIZONTAL_DIVIDE);","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"GabrielWLM"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"GabrielWLM"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"GabrielWLM"},"content":"     * Prints out entry just after deletion.","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"GabrielWLM"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"GabrielWLM"},"content":"     * @param deletedEntry Entry that has just been deleted.","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"GabrielWLM"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"GabrielWLM"},"content":"    public String getDeletedEntry(Entry deletedEntry) {","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"GabrielWLM"},"content":"        return \"Removed entry\\n\" + deletedEntry;","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"GabrielWLM"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"GabrielWLM"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"GabrielWLM":150}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GabrielWLM"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"GabrielWLM"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"GabrielWLM"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"GabrielWLM"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"GabrielWLM"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GabrielWLM"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GabrielWLM"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GabrielWLM"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GabrielWLM":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"GabrielWLM"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GabrielWLM":1,"-":20}}]
