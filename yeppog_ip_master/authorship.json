[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.command.DukeCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeConfig;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeDB;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeTaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":" * Class for Duke. Holds all the class variables and methods.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    /** Simple string array to store inputs **/","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"    private final DukeTaskList list;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"    private final DukeDB database;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"    private final DukeConfig config;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     * Basic constructor to initialise the list","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     **/","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"    public Duke(DukeDB database, DukeConfig config) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"        this.database \u003d database;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"        this.list \u003d new DukeTaskList(database.load()","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"                .orElse(new ArrayList\u003c\u003e()));","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"        this.config \u003d config;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"    public Duke(DukeDB database) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"        this.database \u003d database;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"        this.list \u003d new DukeTaskList(database.load()","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"                .orElse(new ArrayList\u003c\u003e()));","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"        this.config \u003d new DukeConfig();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"     * Formats print commands with borders.","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"     * @param text The text to be printed.","lastModifiedDate":"2021-08-13"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"    public static void printMsg(String text) {","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"yeppog"},"content":"        String bar \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-08-13"},{"lineNumber":53,"author":{"gitId":"yeppog"},"content":"        System.out.printf(\"%s\\n%s\\n%s\\n\",","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"yeppog"},"content":"                bar,","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"yeppog"},"content":"                text,","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"yeppog"},"content":"                bar);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":59,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":60,"author":{"gitId":"yeppog"},"content":"     * Method that listens and scans for user input.","lastModifiedDate":"2021-08-13"},{"lineNumber":61,"author":{"gitId":"yeppog"},"content":"     * Program will exit when the command \"bye\" is given to the scanner.","lastModifiedDate":"2021-08-13"},{"lineNumber":62,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":63,"author":{"gitId":"yeppog"},"content":"    public void listen() {","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"yeppog"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-13"},{"lineNumber":65,"author":{"gitId":"yeppog"},"content":"        this.ui.greet(this.list.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"yeppog"},"content":"        boolean shouldTerminate \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"yeppog"},"content":"        while (shouldTerminate \u0026\u0026 scanner.hasNextLine()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"yeppog"},"content":"            String scannedLine \u003d scanner.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"yeppog"},"content":"            Optional\u003cDukeCommand\u003e prefix \u003d DukeCommand.getCommand(scannedLine.split(\" \")[0]);","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"yeppog"},"content":"            DukeCommand command \u003d prefix.orElseGet(() -\u003e DukeCommand.INVALID);","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"yeppog"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"yeppog"},"content":"                shouldTerminate \u003d command.action.runAndCanContinue(Parser.parseCommand(scannedLine),","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"yeppog"},"content":"                        this.list,","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"yeppog"},"content":"                        this.database,","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"yeppog"},"content":"                        this.config,","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"yeppog"},"content":"                        this.ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"yeppog"},"content":"                this.database.save(this.list.getList());","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"yeppog"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"yeppog"},"content":"                this.ui.defaultPrint(e.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":82,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yeppog":82,"-":3}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeDB;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"public class Main {","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"        DukeDB db \u003d new DukeDB(\"./data/dukeStore.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"        // Start listening to user input through a duke instance","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"        Duke duke \u003d new Duke(db);","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"        duke.listen();","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"yeppog":12}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeDB;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeConfig;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeTaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":" * The ByeCommand class encapsulates the run method for the bye command.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"public class ByeCommand implements DukeActions {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     * Performs the actions for the ByeCommand when activated.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * @param map The parsed command","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     * @param list The tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     * @param database The database to write to","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"     * @param config The configuration settings","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     * @param ui The UI object to interact with","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     * @return boolean to indicate the end of the listen operation","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"     * @throws DukeException When erroneous inputs are given.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"    public boolean runAndCanContinue(Map\u003cString, String\u003e map, DukeTaskList list, DukeDB database, DukeConfig config, Ui ui)","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"            throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"        Duke.printMsg(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":36}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeConfig;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeDB;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeTaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":" * The DeadlineCommand class encapsulates the run method for the deadline command.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"public class DeadlineCommand implements DukeActions {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * Performs the actions for the Deadline Command when activated","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     * @param map      The parsed command","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"     * @param list     The tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     * @param database The database to write to","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     * @param config   The configuration settings","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"     * @param ui       The UI object to interact with","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"     * @return boolean to indicate the end of the listen operation","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"     * @throws DukeException When erroneous inputs are given.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"    public boolean runAndCanContinue(Map\u003cString, String\u003e map, DukeTaskList list, DukeDB database, DukeConfig config,","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"                                     Ui ui) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"        if (!map.containsKey(\"/by\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"            throw new DukeException(\"Missing positional argument \" + \"\u0027/by\u0027.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"        } else if (map.get(\"deadline\") \u003d\u003d null || map.get(\"/by\") \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"            throw new DukeException(\"Deadline body cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"            LocalDateTime by \u003d Parser.parseDateTime(map.get(\"/by\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"                    config)","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"                    .orElseThrow(() -\u003e new DukeException(\"Invalid\" + \" date time specified\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"            Task event \u003d new Deadline(map.get(\"deadline\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"                    by);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"            list.addTask(event)","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"                    .orElseThrow(() -\u003e new DukeException(\"Failed to add the task to the list\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"            ui.addTaskUpdate(event,","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"                    list.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":52}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeDB;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeConfig;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeTaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"public class DeleteCommand implements DukeActions {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"     * Performs the actions for the Delete Command when activated","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"     * @param map The parsed command","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"     * @param list The tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     * @param database The database to write to","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     * @param config The configuration settings","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * @param ui The UI oject to interact with","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     * @return boolean to indicate the end of the listen operation","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     * @throws DukeException When erroneous inputs are given.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"    public boolean runAndCanContinue(Map\u003cString, String\u003e map, DukeTaskList list, DukeDB database, DukeConfig config, Ui ui)","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"            throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"        list.toRemove(Parser.parseInt(map.get(\"delete\"))","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"                .orElseThrow(() -\u003e new DukeException(\"The delete command is either missing the positional argument \u0027index\u0027 or it \" + \"is invalid.\")) - 1)","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"                .map(x -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"                    ui.removeTaskUpdate(x, list.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"                    return x;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"                })","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"                .orElseThrow(() -\u003e new DukeException(\"Failed to remove task from the tasklist.\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":39}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeDB;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeConfig;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeTaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":" * The DoneCommand class encapsulates the run method for the done command.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"public class DoneCommand implements DukeActions {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     * Performs the actions for the DoneCommand when activated","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * @param map The parsed command","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     * @param list The tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     * @param database The database to write to","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"     * @param config The configuration settings","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     * @param ui The UI object to interact with","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     * @return boolean to indicate the end of the listen operation","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"     * @throws DukeException When erroneous inputs are given.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"    public boolean runAndCanContinue(Map\u003cString, String\u003e map, DukeTaskList list, DukeDB database, DukeConfig config, Ui ui)","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"            throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"        list.setDone(Parser.parseInt(map.get(\"done\"))","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"                .orElseThrow(() -\u003e new DukeException(\"Positional argument \u0027index\u0027 is not valid.\")) - 1)","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"                .map(x -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"                    ui.completeTaskUpdate(x,","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"                            list.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"                    return x;","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"                })","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"                .orElseThrow(() -\u003e new DukeException(\"The provided index is out of bounds.\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":44}},{"path":"src/main/java/duke/command/DukeActions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeConfig;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeDB;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeTaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":" * The DukeActions interfaces encapsulates the run method for the any command.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"public interface DukeActions {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"     * Performs the actions for a command when activated","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     * @param map      The parsed command","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * @param list     The tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     * @param database The database to write to","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     * @param config   The configuration settings","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"     * @param ui       The UI object to interact with","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     * @return boolean to indicate the end of the listen operation","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     * @throws DukeException When erroneous inputs are given.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"    public boolean runAndCanContinue(Map\u003cString, String\u003e map, DukeTaskList list, DukeDB database, DukeConfig config,","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"                                     Ui ui) throws DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":32}},{"path":"src/main/java/duke/command/DukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":" * The DukeCommand enum encapsulates the logic for commands.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"public enum DukeCommand {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"    BYE(\"bye\",new ByeCommand()),","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"    LIST(\"list\", new ListCommand()),","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"    DONE(\"done\", new DoneCommand()),","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"    EVENT(\"event\", new EventCommand()),","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"    DELETE(\"delete\", new DeleteCommand()),","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"    DEADLINE(\"deadline\", new DeadlineCommand()),","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"    TODO(\"todo\", new TodoCommand()),","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    FIND(\"find\", new FindCommand()),","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"    INVALID(\"invalid\", new InvalidCommand());","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"    final String command;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"    final public DukeActions action;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     * Simple constructor to initialise a duke.command.DukeCommand enum","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"     * @param command The command that this instance serves.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"     * @param action  The action that the command has.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"    DukeCommand(String command, DukeActions action) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"     * Takes in a raw string command and matches the first word of the","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"     * command to the available enums.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"     * @param command The raw user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"     * @return An optional of the enum. Returns an empty optional if not found.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"    public static Optional\u003cDukeCommand\u003e getCommand(String command) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"        return Arrays.stream(DukeCommand.values())","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"                .filter(x -\u003e command.toLowerCase()","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"                        .startsWith(x.command))","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"                .findFirst();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":51}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeConfig;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeDB;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeTaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":" * The EventCommand class encapsulates the run method for the event command.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"public class EventCommand implements DukeActions {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     * Performs the actions for the Event Command when activated","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     * @param map      The parsed command","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     * @param list     The tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"     * @param database The database to write to","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     * @param config   The configuration settings","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     * @param ui       The UI object to interact with","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"     * @return boolean to indicate the end of the listen operation","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"     * @throws DukeException When erroneous inputs are given.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"    public boolean runAndCanContinue(Map\u003cString, String\u003e map, DukeTaskList list, DukeDB database, DukeConfig config,","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"                                     Ui ui) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"        if (!map.containsKey(\"/at\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"            throw new DukeException(\"Missing positional argument \u0027/at\u0027.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"        } else if (map.get(\"event\") \u003d\u003d null || map.get(\"/at\") \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"            throw new DukeException(\"duke.task.Event body or /at body cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"            Task event \u003d new Event(map.get(\"event\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"                    map.get(\"/at\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"            list.addTask(event)","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"                    .orElseThrow(() -\u003e new DukeException(\"Failed to add the task to the list\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"            ui.addTaskUpdate(event,","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"                    list.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":48}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeConfig;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeDB;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeTaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":" * The FindCommand class encapsulates the run method for the find command.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"public class FindCommand implements DukeActions {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     * Performs the actions for the Find Command when activated","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * @param map      The parsed command","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     * @param list     The tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     * @param database The database to write to","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"     * @param config   The configuration settings","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     * @param ui       The UI object to interact with","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     * @return boolean to indicate the end of the listen operation","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"     * @throws DukeException When erroneous inputs are given.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"    public boolean runAndCanContinue(Map\u003cString, String\u003e map, DukeTaskList list, DukeDB database, DukeConfig config,","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"                                     Ui ui) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"        if (!map.containsKey(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"            throw new DukeException(\"Find is missing positional argument \u0027keyword\u0027.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"            String filter \u003d map.get(\"find\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"            List\u003cTask\u003e filteredList \u003d list.toFind(filter);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"            ui.findUpdate(filteredList);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":42}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeDB;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeConfig;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeTaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":" * The InvalidCommand class encapsulates the run method for an Invalid command.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"public class InvalidCommand implements DukeActions {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"     * Performs the actions for the Invalid Command when activated","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     * @param map The parsed command","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * @param list The tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     * @param database The database to write to","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     * @param config The configuration settings","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"     * @param ui The UI object to interact with","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     * @return boolean to indicate the end of the listen operation","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     * @throws DukeException When erroneous inputs are given.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"    public boolean runAndCanContinue(Map\u003cString, String\u003e map, DukeTaskList list, DukeDB database, DukeConfig config, Ui ui)","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"            throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"        throw new DukeException(\"Unrecognized command.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeDB;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeConfig;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeTaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":" * The ListCommand class encapsulates the run method for the list command.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"public class ListCommand implements DukeActions {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"     * Performs the actions for the List Command when activated","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     * @param map The parsed command","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * @param list The tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     * @param database The database to write to","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     * @param config The configuration settings","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"     * @param ui The UI object to interact with","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     * @return boolean to indicate the end of the listen operation","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     * @throws DukeException When erroneous inputs are given.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"    public boolean runAndCanContinue(Map\u003cString, String\u003e map, DukeTaskList list, DukeDB database, DukeConfig config, Ui ui)","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"            throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"        ui.printTaskList(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":35}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeConfig;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeDB;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"import duke.util.DukeTaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":" * The TodoCommand class encapsulates the run method for the todo command.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"public class TodoCommand implements DukeActions {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     * Performs the actions for the Todo Command when activated","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * @param map      The parsed command","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     * @param list     The tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     * @param database The database to write to","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"     * @param config   The configuration settings","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     * @param ui       The UI object to interact with","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     * @return boolean to indicate the end of the listen operation","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"     * @throws DukeException When erroneous inputs are given.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"    public boolean runAndCanContinue(Map\u003cString, String\u003e map, DukeTaskList list, DukeDB database, DukeConfig config,","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"                                     Ui ui) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"        if (map.get(\"todo\") \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"            throw new DukeException(\"duke.task.Todo body cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"            Task event \u003d new Todo(map.get(\"todo\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"            list.addTask(event)","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"                    .orElseThrow(() -\u003e new DukeException(\"Failed to add the task to the list\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"            ui.addTaskUpdate(event,","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"                    list.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":45}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":" * The deadline class is a task class that has an additional parameter deadlineDate.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"    protected LocalDateTime deadlineDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"     * Basic constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"     * @param deadlineDate The time the task should be completed deadlineDate","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"    public Deadline(String description, LocalDateTime deadlineDate) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     * Overloaded constructor where the isDone field can be set.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"     * @param deadlineDate          The time the task should be completed deadlineDate.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"     * @param isDone      Whether the task has been completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"    public Deadline(String description, LocalDateTime deadlineDate, boolean isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"     * Overridden toString method to print the object.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"     * @return String representation of the object.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"        return \"[D]\" + super.toString() + \" (deadlineDate: \" + this.formatDate() + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"     * Date formatter that formats it to dd/MM/yyyy.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"     * @return String of the formatted date.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"yeppog"},"content":"    public String formatDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"yeppog"},"content":"        if (deadlineDate.getHour() \u003d\u003d 0 \u0026\u0026 deadlineDate.getMinute() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"yeppog"},"content":"            return deadlineDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yeppog"},"content":"            return this.saveDate();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"yeppog"},"content":"     * Prints the object in a save-friendly format.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"yeppog"},"content":"     * @return String of the object in a save friendly format.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"yeppog"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"yeppog"},"content":"        return String.format(\"D|%s|%s|%s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"yeppog"},"content":"                super.description,","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"yeppog"},"content":"                saveDate(),","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"yeppog"},"content":"                super.isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"yeppog"},"content":"     * Prints the date in a save-friendly format.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"yeppog"},"content":"     * @return String of the data in a save friendly format.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"yeppog"},"content":"    public String saveDate() {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"yeppog"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"yeppog"},"content":"        return deadlineDate.format(formatter);","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yeppog":85}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":" * The event class is a task class that has an additional parameter at.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"    String at;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"     * Basic constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"     * @param at The location the task is at.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * Overridden constructor to include isDone.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"     * @param at The location the task is at.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     * @param isDone Whether the task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"    public Event(String description, String at, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"        super(description,","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"                isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"     * Overridden toString method for printing the object.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"     * @return String representation of the object.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"     * Returns the save-friendly version of the object.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"     * @return String of the save-friendly version of the object.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"        return String.format(\"E|%s|%s|%s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"yeppog"},"content":"                super.description,","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"yeppog"},"content":"                this.at,","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"yeppog"},"content":"                super.isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yeppog":57}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":" * This class encapsulates a Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":" * Contains the boolean logic to store if a task has been completed, as well as the task description.","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"public class Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"     * The description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"    protected String description;","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"     * The status of the task if it has been completed","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"     * Basic constructor to create a task.","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"     * Gets the string representation of the status.","lastModifiedDate":"2021-08-13"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"     * @return X or empty string depending on the state of isDone","lastModifiedDate":"2021-08-13"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-13"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"     * Setter for isDone to true.","lastModifiedDate":"2021-08-13"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-13"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-13"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":52,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":53,"author":{"gitId":"yeppog"},"content":"     * Overriding method to print a duke.task.Task object.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"yeppog"},"content":"     * @return String representation of the task instance.","lastModifiedDate":"2021-08-13"},{"lineNumber":56,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":57,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":58,"author":{"gitId":"yeppog"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":59,"author":{"gitId":"yeppog"},"content":"        return String.format(\"[%s] %s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"yeppog"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"yeppog"},"content":"                this.description);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"yeppog"},"content":"     * Gets the string of the save-friendly version of the object.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"yeppog"},"content":"     * @return The String of the save-friendly version of the object.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"yeppog"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"yeppog"},"content":"        return String.format(\"T|%s|%s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"yeppog"},"content":"                this.description,","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"yeppog"},"content":"                isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":75,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"yeppog"},"content":"     * Getter to get the description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"yeppog"},"content":"     * @return String of the description.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"yeppog"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"yeppog"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"yeppog":84}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":" * The todo task is type of Task","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"     * Basic constructor with a description","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     * Overridden constructor with isDOne.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * @param isDone Whether the task is completed or not","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"        super(description,","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"                isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"     * Overridden toString method to print the object","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"     * @return String representation of the Object","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"     * Method to get the save-friendly version of the object.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"     * @return String of the save-friendly version of the object.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"        return String.format(\"T|%s|%s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"                super.description,","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"                super.isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yeppog":51}},{"path":"src/main/java/duke/util/DukeConfig.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":" * DukeConfig class encapsulates the user configurations for duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"public class DukeConfig {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"    DukeDateConfig dateConfig;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"    public DukeConfig(DukeDateConfig dateConfig) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"        this.dateConfig \u003d dateConfig;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"    public DukeConfig() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"        this.dateConfig \u003d DukeDateConfig.DDMMYYYY;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     * A factory method to initialise a DukeConfig class.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * If the config is invalid, return a default config.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     * @param config The string config of the date","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"     * @return DukeConfig object","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"    public static DukeConfig of(String config) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"        return DukeDateConfig.matchDukeDateConfig(config)","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"                .map(DukeConfig::new)","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"                .orElseGet(DukeConfig::new);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"    public String getDateConfig() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"        return this.dateConfig.format;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"     * The enum DukeDateConfig encapsulates all the Date config formats there are.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"    enum DukeDateConfig {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"        DDMMYYYY(\"DDMMYYYY\"), MMDDYYYY(\"MMDDYYYY\");","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"        final String format;","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"        DukeDateConfig(String format) {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"            this.format \u003d format;","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"        public static Optional\u003cDukeDateConfig\u003e matchDukeDateConfig(String config) {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"            return Arrays.stream(DukeDateConfig.values())","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"                    .filter(x -\u003e x.format.equals(\"config\"))","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"yeppog"},"content":"                    .findFirst();","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":55}},{"path":"src/main/java/duke/util/DukeDB.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"public class DukeDB {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    String databasePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"    public DukeDB(String database) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"        File check \u003d new File(database);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"        if (!check.exists() || database \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"            this.create()","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"                    .map((x) -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"                        Duke.printMsg(\"DB cannot be found. New DB created successfully.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"                        this.databasePath \u003d database;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"                        return x;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"                    })","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"                    .orElseGet(() -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"                        Duke.printMsg(\"Unable to create the file.\" +","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"                                \" Check if the file already exists. Defaulting to \" + \"default database\");","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"                        this.databasePath \u003d \"./data/dukeStore.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"                        return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"                    });","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"            this.databasePath \u003d \"./data/dukeStore.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"    @Deprecated","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"    public static void drop() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"        File file \u003d new File(\"./data/dukeStore.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"        long size \u003d file.getTotalSpace();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"        boolean deleted \u003d file.delete();","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"        if (deleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"            Duke.printMsg(\"Successfully dropped database of \" + size + \"B.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"            Duke.printMsg(\"Error deleting file.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"yeppog"},"content":"    public void save(ArrayList\u003cTask\u003e arr) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"yeppog"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"yeppog"},"content":"            FileWriter writer \u003d new FileWriter(this.databasePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"yeppog"},"content":"            for (Task item : arr) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"yeppog"},"content":"                writer.write(item.saveString());","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"yeppog"},"content":"                writer.write(\"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"yeppog"},"content":"            writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"yeppog"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"yeppog"},"content":"            Duke.printMsg(e.toString() + \" Error saving task\");","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"yeppog"},"content":"    public Optional\u003cArrayList\u003cTask\u003e\u003e load() {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"yeppog"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"yeppog"},"content":"            ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"yeppog"},"content":"            File database \u003d new File(databasePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"yeppog"},"content":"            Scanner reader \u003d new Scanner(database);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"yeppog"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"yeppog"},"content":"                String strTask \u003d reader.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"yeppog"},"content":"                String[] splitTask \u003d strTask.split(\"\\\\|\");","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"yeppog"},"content":"                Optional\u003cTask\u003e task \u003d this.readTask(splitTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"yeppog"},"content":"                task.ifPresentOrElse(arr::add,","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"yeppog"},"content":"                        () -\u003e Duke.printMsg(\"Error loading task. Database is corrupt.\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"yeppog"},"content":"            return Optional.of(arr);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"yeppog"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"yeppog"},"content":"            Duke.printMsg(e.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"yeppog"},"content":"        } catch (Error error) {","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"yeppog"},"content":"            Duke.printMsg(\"Problem reading the database format. Was the database modified externally?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"yeppog"},"content":"        return Optional.empty();","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"yeppog"},"content":"    public Optional\u003cBoolean\u003e create() {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"yeppog"},"content":"        File file \u003d new File(\"./data/dukeStore.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"yeppog"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"yeppog"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"yeppog"},"content":"                file.getParentFile()","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"yeppog"},"content":"                        .mkdirs();","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"yeppog"},"content":"                return Optional.of(file.createNewFile());","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"yeppog"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"yeppog"},"content":"                return Optional.empty();","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"yeppog"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"yeppog"},"content":"            return Optional.empty();","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"yeppog"},"content":"    private Optional\u003cTask\u003e readTodo(String[] splitCommand) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"yeppog"},"content":"        if (splitCommand.length !\u003d 3) {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"yeppog"},"content":"            return Optional.empty();","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"yeppog"},"content":"            String description \u003d splitCommand[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"yeppog"},"content":"            boolean isDone \u003d splitCommand[2].equals(\"1\");","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"yeppog"},"content":"            return Optional.of(new Todo(description,","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"yeppog"},"content":"                    isDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"yeppog"},"content":"    private Optional\u003cTask\u003e readEvent(String[] splitCommand) {","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"yeppog"},"content":"        if (splitCommand.length !\u003d 4) {","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"yeppog"},"content":"            return Optional.empty();","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"yeppog"},"content":"            String description \u003d splitCommand[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"yeppog"},"content":"            String at \u003d splitCommand[2];","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"yeppog"},"content":"            boolean isDone \u003d splitCommand[3].equals(\"1\");","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"yeppog"},"content":"            return Optional.of(new Event(description,","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"yeppog"},"content":"                    at,","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"yeppog"},"content":"                    isDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"yeppog"},"content":"    private Optional\u003cTask\u003e readDeadline(String[] splitCommand) {","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"yeppog"},"content":"        if (splitCommand.length !\u003d 4) {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"yeppog"},"content":"            return Optional.empty();","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"yeppog"},"content":"            String description \u003d splitCommand[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"yeppog"},"content":"            String by \u003d splitCommand[2];","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"yeppog"},"content":"            boolean isDone \u003d splitCommand[3].equals(\"1\");","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"yeppog"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"yeppog"},"content":"                LocalDateTime dateBy \u003d Parser.parseDateTime(by)","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"yeppog"},"content":"                        .orElseThrow(() -\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"yeppog"},"content":"                                new DukeException(\"Unable to load \" +","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"yeppog"},"content":"                                        \"date for task\" + description + \". Removing the task.\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"yeppog"},"content":"                return Optional.of(new Deadline(description,","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"yeppog"},"content":"                        dateBy,","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"yeppog"},"content":"                        isDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"yeppog"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"yeppog"},"content":"                Duke.printMsg(e.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"yeppog"},"content":"            return Optional.empty();","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"yeppog"},"content":"    private Optional\u003cTask\u003e readTask(String[] splitCommand) {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"yeppog"},"content":"        if (!(splitCommand.length \u003e 2)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"yeppog"},"content":"            return Optional.empty();","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"yeppog"},"content":"            switch (splitCommand[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"yeppog"},"content":"            case \"T\": {","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"yeppog"},"content":"                return this.readTodo(splitCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"yeppog"},"content":"            case \"D\": {","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"yeppog"},"content":"                return this.readDeadline(splitCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"yeppog"},"content":"            case \"E\": {","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"yeppog"},"content":"                return this.readEvent(splitCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"yeppog"},"content":"            default: {","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"yeppog"},"content":"                return Optional.empty();","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"yeppog":171}},{"path":"src/main/java/duke/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yeppog":8}},{"path":"src/main/java/duke/util/DukeTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"public class DukeTaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"    private final ArrayList\u003cTask\u003e tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"    public DukeTaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"        this.tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"    public DukeTaskList(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"    public Optional\u003cTask\u003e addTask(Task toAdd) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"        this.tasklist.add(toAdd);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"        return Optional.of(toAdd);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"    public Optional\u003cTask\u003e setDone(int toComplete) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"        if (toComplete \u003e\u003d this.tasklist.size() || toComplete \u003c 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"            return Optional.empty();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"            Task completed \u003d tasklist.get(toComplete);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"            completed.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"            return Optional.of(completed);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"    public Optional\u003cTask\u003e toRemove(int indexToRemove) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"        if (indexToRemove \u003e\u003d this.tasklist.size() || indexToRemove \u003c 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"            return Optional.empty();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"            Task toRemove \u003d tasklist.get(indexToRemove);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"            tasklist.remove(indexToRemove);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"            return Optional.of(toRemove);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"    public List\u003cTask\u003e toFind(String query) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"        return this.tasklist.stream().filter(x -\u003e x.getDescription().matches(query)).collect(Collectors.toList());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"yeppog"},"content":"        return this.tasklist.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"yeppog"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"yeppog"},"content":"        return this.tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"yeppog"},"content":"    public String printList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"yeppog"},"content":"        StringBuilder output \u003d","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"yeppog"},"content":"                new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"yeppog"},"content":"        for (Task i : tasklist) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"yeppog"},"content":"            output.append(String.format(\"%d. %s\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"yeppog"},"content":"                    tasklist.indexOf(i) + 1,","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"yeppog"},"content":"                    i));","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"yeppog"},"content":"        output.deleteCharAt(output.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"yeppog"},"content":"        return output.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":72}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":" * duke.util.Parser class that contains static methods to parse raw text.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"public class Parser {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"     * Parses raw user input. Returns a Map of keywords to values, where the \u0027/\u0027 character is","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"     * parsed as a keyword.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     * @param text The user input to be parsed","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * @return Map of string to string, of keyword to value pairs.","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"    public static Map\u003cString, String\u003e parseCommand(String text) {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"        HashMap\u003cString, String\u003e inputMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"        String[] splitted \u003d text.split(\"\\\\s\");","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"        String key \u003d splitted[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"        StringBuilder arguments \u003d new StringBuilder();","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"        for (int i \u003d 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"             i \u003c splitted.length;","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"             i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"            if (splitted[i].startsWith(\"/\") \u0026\u0026 ValidParams.isValid(splitted[i])) {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"                if (arguments.length() \u003e 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"                    arguments.deleteCharAt(arguments.length() - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"                    inputMap.put(key,","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"                            arguments.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"                    arguments.setLength(0);","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"                    inputMap.put(key,","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"                            null);","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"                key \u003d splitted[i];","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"                arguments.append(String.format(\"%s \",","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"                        splitted[i]));","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"        if (arguments.length() \u003e 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"            arguments.deleteCharAt(arguments.length() - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"            inputMap.put(key,","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"yeppog"},"content":"                    arguments.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"yeppog"},"content":"            if (!inputMap.containsKey(key)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"yeppog"},"content":"                inputMap.put(key,","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"yeppog"},"content":"                        null);","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"yeppog"},"content":"        return inputMap;","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"yeppog"},"content":"     * Tries to parse an int.","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"yeppog"},"content":"     * @param text A supposed numeric string.","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"yeppog"},"content":"     * @return Optional of the parsed string. If the string is erroneous,","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"yeppog"},"content":"     * returns an empty optional.","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"yeppog"},"content":"    public static Optional\u003cInteger\u003e parseInt(String text) {","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"yeppog"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"yeppog"},"content":"            return Optional.of(Integer.parseInt(text));","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"yeppog"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"yeppog"},"content":"            return Optional.empty();","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"yeppog"},"content":"     * Ensures only the right commands are parsed with ValidParams enum.","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"yeppog"},"content":"    public enum ValidParams {","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"yeppog"},"content":"        AT(\"/at\"), BY(\"/by\");","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"yeppog"},"content":"        private final String value;","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"yeppog"},"content":"        ValidParams(String value) {","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"yeppog"},"content":"            this.value \u003d value;","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"yeppog"},"content":"        public static boolean isValid(String test) {","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"yeppog"},"content":"            return Arrays.stream(ValidParams.values())","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"yeppog"},"content":"                    .anyMatch(x -\u003e x.value.equals(test));","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"yeppog"},"content":"     * Parses the dateTime without config. Used exclusively for DukeDB.","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"yeppog"},"content":"     * @param dateTime the dateTime string to be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"yeppog"},"content":"     * @return Optional of LocalDateTime.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"yeppog"},"content":"     * @throws DukeException If the dateTime string is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"yeppog"},"content":"    public static Optional\u003cLocalDateTime\u003e parseDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"yeppog"},"content":"        return Parser.parseDateTime(dateTime, new DukeConfig());","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"yeppog"},"content":"     * Parses a given string dateTime to a java LocalDateTime object.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"yeppog"},"content":"     * @param dateTime The string to be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"yeppog"},"content":"     * @param config The date config object","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"yeppog"},"content":"     * @return An Optional of LocalDateTIme","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"yeppog"},"content":"     * @throws DukeException When the date specified is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"yeppog"},"content":"    public static Optional\u003cLocalDateTime\u003e parseDateTime(String dateTime, DukeConfig config) throws DukeException{","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"yeppog"},"content":"        String dateConfig \u003d config.getDateConfig();","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"yeppog"},"content":"        String[] timeSplit \u003d dateTime.split(\"\\\\s\");","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"yeppog"},"content":"        String[] dateSplit \u003d timeSplit[0].split(\"/\");","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"yeppog"},"content":"        if (dateSplit.length !\u003d 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"yeppog"},"content":"            throw new DukeException(\"Invalid date format. The current specified format is \" + dateConfig);","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"yeppog"},"content":"        int date, month, year, hour, minute;","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"yeppog"},"content":"        date \u003d parseInt(dateSplit[0]).filter(x -\u003e x \u003c 32).orElseThrow(() -\u003e new DukeException(\"Invalid day\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"yeppog"},"content":"        month \u003d parseInt(dateSplit[1]).filter(x -\u003e x \u003c 13).orElseThrow(() -\u003e new DukeException(\"Invalid month\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"yeppog"},"content":"        year \u003d parseInt(dateSplit[2]).orElseThrow(() -\u003e new DukeException(\"Invalid year\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"yeppog"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"yeppog"},"content":"        LocalDate time \u003d LocalDate.parse(String.format(\"%s/%s/%s\", year, month \u003c 10 ? \"0\" + month : month, date),","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"yeppog"},"content":"                formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"yeppog"},"content":"        if (time.getDayOfMonth() !\u003d date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"yeppog"},"content":"            throw new DukeException(\"The specified day of the month is not valid\");","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"yeppog"},"content":"        if (timeSplit.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"yeppog"},"content":"            if (timeSplit[1].length() !\u003d 4) {","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"yeppog"},"content":"                throw new DukeException(\"Invalid time\");","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"yeppog"},"content":"            hour \u003d parseInt(timeSplit[1].substring(0, 2)).filter(x -\u003e x \u003c 25).orElseThrow(() -\u003e new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"yeppog"},"content":"                    \"Invalid hour \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"yeppog"},"content":"                    \"specified\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"yeppog"},"content":"            minute \u003d parseInt(timeSplit[1].substring(2,4)).filter(x -\u003e x \u003c 60).orElseThrow(() -\u003e new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"yeppog"},"content":"                    \"Invalid \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"yeppog"},"content":"                    \"minute \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"yeppog"},"content":"                    \"specified\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"yeppog"},"content":"            return Optional.of(LocalDateTime.of(year,month,date,hour,minute));","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"yeppog"},"content":"            return Optional.of(LocalDateTime.of(year, month, date, 0, 0));","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yeppog":157}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"    /** Final value for the border */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"    final private static String LINES \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"     * Basic constructor","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"    public Ui (){}","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"     * Greeting print statement that runs on the launch of Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     * @param numberOfTasks The number of Tasks in the list","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"    public void greet(int numberOfTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"        String tasks \u003d numberOfTasks \u003d\u003d 1 ? \"1 task\" : numberOfTasks + \" tasks\";","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"        String greeting \u003d String.format(\"%s\\nHello! I\u0027m Duke\\nWhat can I do for you?\\nI have also loaded %s \" +","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"                        \"from the database!\\n%s\", LINES, tasks, LINES);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"        System.out.println(greeting);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"     * Overloaded greet call when no tasks are in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"    public void greet() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"        this.greet(0);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"     * Prints out all the tasks in the list","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"     * @param list The tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"    public void printTaskList(DukeTaskList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"        defaultPrint(list.printList());","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"     * Prints the string version of the message when a task is successfully","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"     * added.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"     * @param task The task that is added.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"     * @param numTasks The number of tasks that are now in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"yeppog"},"content":"    public void addTaskUpdate(Task task, int numTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"yeppog"},"content":"        String addTask \u003d String.format(\"I have added the following task:\\n\" + \"  %s\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"yeppog"},"content":"                        \"Now you have %s in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"yeppog"},"content":"                task.toString(),","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"yeppog"},"content":"                numTasks \u003d\u003d 1 ? String.format(\"%d task\",","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"yeppog"},"content":"                        1) : String.format(\"%d tasks\",","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"yeppog"},"content":"                        numTasks));","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"yeppog"},"content":"        this.defaultPrint(addTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"yeppog"},"content":"     * Prints an update to the console when a task has been marked as complete.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"yeppog"},"content":"     * @param task The completed task.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"yeppog"},"content":"     * @param numTasks The remaining tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"yeppog"},"content":"    public void completeTaskUpdate(Task task, int numTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"yeppog"},"content":"        String addTask \u003d String.format(\"I have added the following task:\\n\" + \"  %s\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"yeppog"},"content":"                        \"Now you have %s in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"yeppog"},"content":"                task.toString(),","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"yeppog"},"content":"                numTasks \u003d\u003d 1 ? String.format(\"%d task\",","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"yeppog"},"content":"                        1) : String.format(\"%d tasks\",","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"yeppog"},"content":"                        numTasks));","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"yeppog"},"content":"        this.defaultPrint(addTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"yeppog"},"content":"     * Prints the string version of the message when a task is successfully","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"yeppog"},"content":"     * removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"yeppog"},"content":"     * @param task The task that is removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"yeppog"},"content":"     * @param numTasks The number of tasks remaining in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"yeppog"},"content":"    public void removeTaskUpdate(Task task, int numTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"yeppog"},"content":"        String remove \u003d String.format(\"I have removed the following task:\\n\" + \"  %s\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"yeppog"},"content":"                        \"Now you have %s in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"yeppog"},"content":"                task.toString(),","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"yeppog"},"content":"                numTasks \u003d\u003d 1 ? String.format(\"%d task\",","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"yeppog"},"content":"                        1) : String.format(\"%d tasks\",","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"yeppog"},"content":"                        numTasks));","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"yeppog"},"content":"        this.defaultPrint(remove);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"yeppog"},"content":"     * Prints out the tasklist given a list for a given list.","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"yeppog"},"content":"     * @param tasklist List of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"yeppog"},"content":"    public void findUpdate(List\u003cTask\u003e tasklist) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"yeppog"},"content":"        StringBuilder output \u003d","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"yeppog"},"content":"                new StringBuilder(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"yeppog"},"content":"        for (Task i : tasklist) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"yeppog"},"content":"            output.append(String.format(\"%d. %s\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"yeppog"},"content":"                    tasklist.indexOf(i) + 1,","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"yeppog"},"content":"                    i));","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"yeppog"},"content":"        defaultPrint(output.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"yeppog"},"content":"     * Default printing method with \u003d signs as borders.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"yeppog"},"content":"     * @param string String to be printed to the console.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"yeppog"},"content":"    public void defaultPrint(String string) {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"yeppog"},"content":"        System.out.printf(\"%s\\n%s\\n%s\\n%n\", LINES, string, LINES);","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":118}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"    public void initTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"        Duke duke \u003d new Duke(new duke.util.DukeDB(\"./data/dukeStore.txt\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"        assertNotNull(duke);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":14}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"public class EventTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"    public void initTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"        assertEquals(new Event(\"event\",","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"                \"place\",","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"                false).at, \"place\");","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"yeppog":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"deadline test1 /by test2","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"todo test 3","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"event test 4 /at test 5","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"done 5","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"done 0","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"delete 5","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"list","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yeppog":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"java -classpath ..\\bin duke.Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yeppog":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yeppog":1,"-":37}}]
