[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"    protected String by;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yeppog":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"     * Simple string array to store inputs","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"     **/","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"     * Basic constructor to initialise the list","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"     **/","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"    public Duke() {","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"     * Simple formatting tool to be used when printing commands","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * @param text The text to be printed.","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"    public static void printMsg(String text) {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"        String bar \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"        System.out.printf(\"%s\\n%s\\n%s\\n\", bar, text, bar);","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"     * Method that listens and scans for user input.","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"     * Program will exit when the command \"bye\" is given to the scanner.","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"    public void listen(){","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"        Duke.printMsg(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"        boolean terminate \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"        while (terminate \u0026\u0026 scanner.hasNextLine()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"            String scannedLine \u003d scanner.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"            Optional\u003cDukeCommands\u003e prefix \u003d DukeCommands.getCommand(scannedLine.split(\" \")[0]);","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"            DukeCommands command \u003d prefix.orElseGet(() -\u003e DukeCommands.INVALID);","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"                terminate \u003d command.action.run(Parser.parseCommand(scannedLine), this.list);","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"            } catch(DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"                printMsg(e.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yeppog":46,"-":4}},{"path":"src/main/java/DukeActions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"public interface DukeActions {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"    public boolean run (Map\u003cString, String\u003e map, ArrayList\u003cTask\u003e list) throws DukeException;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yeppog":8}},{"path":"src/main/java/DukeCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"public enum DukeCommands {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"    BYE(\"bye\",","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"            (Map\u003cString, String\u003e map, ArrayList\u003cTask\u003e list) -\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"                Duke.printMsg(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"                return false;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"            }), LIST(\"list\",","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"            (Map\u003cString, String\u003e map, ArrayList\u003cTask\u003e list) -\u003e {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"                StringBuilder output \u003d","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"                        new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"                for (Task i : list) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"                    output.append(String.format(\"%d. %s\\n\",","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"                            list.indexOf(i) + 1,","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"                            i));","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"                output.deleteCharAt(output.length() - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"                Duke.printMsg(output.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"                return true;","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"            }),","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"    DONE(\"done\",","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"            (Map\u003cString, String\u003e map, ArrayList\u003cTask\u003e list) -\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"                Parser.parseInt(map.get(\"done\"))","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"                        .map(x -\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"                            if (x \u003c 1 || x \u003e list.size()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"                                Duke.printMsg(\"Invalid index provided.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"                            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"                                Task toBeCompleted \u003d list.get(x - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"                                toBeCompleted.markAsDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"                                Duke.printMsg(String.format(\"I have marked the following task \" + \"as completed:\\n\" + \"  %s\",","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"                                        toBeCompleted.toString()));","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"                            }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"                            return x;","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"                        })","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"                        .orElseThrow(() -\u003e new DukeException(\"Positional argument \u0027index\u0027 is not valid.\"));","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"                return true;","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"            }),","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"    EVENT(\"event\",","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"            (Map\u003cString, String\u003e map, ArrayList\u003cTask\u003e list) -\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"                if (!map.containsKey(\"/at\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"                    throw new DukeException(\"Missing positional argument \u0027/at\u0027.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"                } else if (map.get(\"event\") \u003d\u003d null || map.get(\"/at\") \u003d\u003d null) {","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"                    throw new DukeException(\"Event body or /at body cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"yeppog"},"content":"                    Task event \u003d new Event(map.get(\"event\"),","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"yeppog"},"content":"                            map.get(\"/at\"));","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"yeppog"},"content":"                    list.add(event);","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"yeppog"},"content":"                    Duke.printMsg(addTaskFormatter(event,","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"yeppog"},"content":"                            list.size()));","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"yeppog"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"yeppog"},"content":"                return true;","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"yeppog"},"content":"            }),","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"yeppog"},"content":"    DELETE(\"delete\",","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"yeppog"},"content":"            (Map\u003cString, String\u003e map, ArrayList\u003cTask\u003e list) -\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"yeppog"},"content":"                Parser.parseInt(map.get(\"delete\"))","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"yeppog"},"content":"                        .map(x -\u003e {","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"yeppog"},"content":"                            if (x \u003c 1 || x \u003e list.size()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"yeppog"},"content":"                                Duke.printMsg(\"Invalid index.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"yeppog"},"content":"                            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"yeppog"},"content":"                                Task toBeDeleted \u003d list.get(x - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"yeppog"},"content":"                                list.remove(x - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"yeppog"},"content":"                                Duke.printMsg(removeTaskFormatter(toBeDeleted,","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"yeppog"},"content":"                                        list.size()));","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"yeppog"},"content":"                            }","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"yeppog"},"content":"                            return x;","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"yeppog"},"content":"                        })","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"yeppog"},"content":"                        .orElseThrow(() -\u003e","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"yeppog"},"content":"                                new DukeException(","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"yeppog"},"content":"                                        \"The delete command is missing the positional argument \u0027index\u0027.\"","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"yeppog"},"content":"                                )","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"yeppog"},"content":"                        );","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"yeppog"},"content":"                return true;","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"yeppog"},"content":"            }),","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"yeppog"},"content":"    DEADLINE(\"deadline\",","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"yeppog"},"content":"            (Map\u003cString, String\u003e map, ArrayList\u003cTask\u003e list) -\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"yeppog"},"content":"                if (!map.containsKey(\"/by\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"yeppog"},"content":"                    throw new DukeException(\"Missing positional argument \" +","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"yeppog"},"content":"                            \"\u0027/by\u0027.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"yeppog"},"content":"                } else if (map.get(\"deadline\") \u003d\u003d null || map.get(\"/by\") \u003d\u003d null) {","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"yeppog"},"content":"                    throw new DukeException(\"Deadline body cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"yeppog"},"content":"                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"yeppog"},"content":"                    Task event \u003d new Deadline(map.get(\"deadline\"),","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"yeppog"},"content":"                            map.get(\"/by\"));","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"yeppog"},"content":"                    list.add(event);","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"yeppog"},"content":"                    Duke.printMsg(addTaskFormatter(event,","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"yeppog"},"content":"                            list.size()));","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"yeppog"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"yeppog"},"content":"                return true;","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"yeppog"},"content":"            }),","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"yeppog"},"content":"    TODO(\"todo\",","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"yeppog"},"content":"            (Map\u003cString, String\u003e map, ArrayList\u003cTask\u003e list) -\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"yeppog"},"content":"                if (map.get(\"todo\") \u003d\u003d null) {","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"yeppog"},"content":"                    throw new DukeException(\"Todo body cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"yeppog"},"content":"                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"yeppog"},"content":"                    Task event \u003d new Todo(map.get(\"todo\"));","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"yeppog"},"content":"                    list.add(event);","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"yeppog"},"content":"                    Duke.printMsg(addTaskFormatter(event,","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"yeppog"},"content":"                            list.size()));","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"yeppog"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"yeppog"},"content":"                return true;","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"yeppog"},"content":"            }),","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"yeppog"},"content":"    INVALID(\"invalid\",","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"yeppog"},"content":"            (Map\u003cString, String\u003e map, ArrayList\u003cTask\u003e list) -\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"yeppog"},"content":"                throw new DukeException(\"Unrecognized command.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"yeppog"},"content":"            });","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"yeppog"},"content":"    final String command;","lastModifiedDate":"2021-08-16"},{"lineNumber":117,"author":{"gitId":"yeppog"},"content":"    final DukeActions action;","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"yeppog"},"content":"     * Simple constructor to initialise a DukeCommands enum","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"yeppog"},"content":"     * @param command The command that this instance serves.","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"yeppog"},"content":"     * @param action The action that the command has.","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"yeppog"},"content":"    DukeCommands(String command, DukeActions action) {","lastModifiedDate":"2021-08-16"},{"lineNumber":125,"author":{"gitId":"yeppog"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-16"},{"lineNumber":126,"author":{"gitId":"yeppog"},"content":"        this.action \u003d action;","lastModifiedDate":"2021-08-16"},{"lineNumber":127,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":128,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":129,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"yeppog"},"content":"     * Takes in a raw string command and matches the first word of the","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"yeppog"},"content":"     * command to the available enums.","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"yeppog"},"content":"     * @param command The raw user input.","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"yeppog"},"content":"     * @return An optional of the enum. Returns an empty optional if not found.","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"yeppog"},"content":"    public static Optional\u003cDukeCommands\u003e getCommand(String command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":136,"author":{"gitId":"yeppog"},"content":"        return Arrays.stream(DukeCommands.values())","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"yeppog"},"content":"                .filter(x -\u003e command.toLowerCase()","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"yeppog"},"content":"                        .startsWith(x.command))","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"yeppog"},"content":"                .findFirst();","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":141,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"yeppog"},"content":"     * Returns the string version of the message when a task is successfully","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"yeppog"},"content":"     * added.","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"yeppog"},"content":"     * @param task The task that is added.","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"yeppog"},"content":"     * @param numTasks The number of tasks that are now in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"yeppog"},"content":"     * @return String of the message.","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"yeppog"},"content":"    private static String addTaskFormatter(Task task, int numTasks) {","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"yeppog"},"content":"        return String.format(\"I have added the following task:\\n\" + \"  %s\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"yeppog"},"content":"                        \"Now you have %s in the list.\",","lastModifiedDate":"2021-08-16"},{"lineNumber":153,"author":{"gitId":"yeppog"},"content":"                task.toString(),","lastModifiedDate":"2021-08-16"},{"lineNumber":154,"author":{"gitId":"yeppog"},"content":"                numTasks \u003d\u003d 1 ? String.format(\"%d task\",","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"yeppog"},"content":"                        1) : String.format(\"%d tasks\",","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"yeppog"},"content":"                        numTasks));","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":158,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":159,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"yeppog"},"content":"     * Returns the string version of the message when a task is successfully","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"yeppog"},"content":"     * removed.","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"yeppog"},"content":"     * @param task The task that is removed.","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"yeppog"},"content":"     * @param numTasks The number of tasks remaining in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"yeppog"},"content":"     * @return String of the message.","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"yeppog"},"content":"    private static String removeTaskFormatter(Task task, int numTasks) {","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"yeppog"},"content":"        return String.format(\"I have removed the following task:\\n\" + \"  %s\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"yeppog"},"content":"                        \"Now you have %s in the list.\",","lastModifiedDate":"2021-08-16"},{"lineNumber":170,"author":{"gitId":"yeppog"},"content":"                task.toString(),","lastModifiedDate":"2021-08-16"},{"lineNumber":171,"author":{"gitId":"yeppog"},"content":"                numTasks \u003d\u003d 1 ? String.format(\"%d task\",","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"yeppog"},"content":"                        1) : String.format(\"%d tasks\",","lastModifiedDate":"2021-08-17"},{"lineNumber":173,"author":{"gitId":"yeppog"},"content":"                        numTasks));","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":175,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":176,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yeppog":176}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yeppog":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"    String at;","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yeppog":13}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"public class Main {","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"        // Start listening to user input through a duke instance","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"        duke.listen();","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"yeppog":7}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":" * Parser class that contains static methods to parse raw text.","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"public class Parser {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"     * Parses raw user input. Returns a Map of keywords to values, where the \u0027/\u0027 character is","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"     * parsed as a keyword.","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"     * @param text The user input to be parsed","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"     * @return Map of string to string, of keyword to value pairs.","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    public static Map\u003cString, String\u003e parseCommand(String text) {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"        HashMap\u003cString, String\u003e inputMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"        String[] splitted \u003d text.split(\"\\\\s\");","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"        String key \u003d splitted[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"        StringBuilder arguments \u003d new StringBuilder();","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"        for (int i \u003d 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"             i \u003c splitted.length;","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"             i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"            if (splitted[i].startsWith(\"/\") \u0026\u0026 ValidParams.isValid(splitted[i])) {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"                if (arguments.length() \u003e 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"                    arguments.deleteCharAt(arguments.length() - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"                    inputMap.put(key,","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"                            arguments.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"                    arguments.setLength(0);","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"                } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"                    inputMap.put(key,","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"                            null);","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"                key \u003d splitted[i];","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"                arguments.append(String.format(\"%s \",","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"                        splitted[i]));","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"        if (arguments.length() \u003e 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"            arguments.deleteCharAt(arguments.length() - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"yeppog"},"content":"            inputMap.put(key,","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"yeppog"},"content":"                    arguments.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"yeppog"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"yeppog"},"content":"            if (!inputMap.containsKey(key)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"yeppog"},"content":"                inputMap.put(key,","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"yeppog"},"content":"                        null);","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"yeppog"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"yeppog"},"content":"        return inputMap;","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"yeppog"},"content":"     * Tries to parse an int.","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"yeppog"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"yeppog"},"content":"     * @param text A supposed numeric string.","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"yeppog"},"content":"     * @return Optional of the parsed string. If the string is erroneous,","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"yeppog"},"content":"     * returns an empty optional.","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"yeppog"},"content":"    public static Optional\u003cInteger\u003e parseInt(String text) {","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"yeppog"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"yeppog"},"content":"            return Optional.of(Integer.parseInt(text));","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"yeppog"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"yeppog"},"content":"            return Optional.empty();","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"yeppog"},"content":"     * Ensures only the right commands are parsed with ValidParams enum.","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"yeppog"},"content":"    public enum ValidParams {","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"yeppog"},"content":"        AT(\"/at\"), BY(\"/by\");","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"yeppog"},"content":"        private final String value;","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"yeppog"},"content":"        ValidParams(String value) {","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"yeppog"},"content":"            this.value \u003d value;","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"yeppog"},"content":"        public static boolean isValid(String test) {","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"yeppog"},"content":"            return Arrays.stream(ValidParams.values())","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"yeppog"},"content":"                    .anyMatch(x -\u003e x.value.equals(test));","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"yeppog"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yeppog":90}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"/**","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":" * This class encapsulates a Task.","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":" * Contains the boolean logic to store if a task has been completed, as well as the task description.","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":" */","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"public class Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"    /** The description of the task. */","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"    protected String description;","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"    /** The status of the task if it has been completed*/","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"     * Basic constructor to create a task.","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"yeppog"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"yeppog"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"yeppog"},"content":"     * Gets the string representation of the status.","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"     * @return X or empty string depending on the state of isDone","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"yeppog"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"yeppog"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"yeppog"},"content":"     * Setter for isDone to true.","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"yeppog"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"yeppog"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":37,"author":{"gitId":"yeppog"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":38,"author":{"gitId":"yeppog"},"content":"     * Overriding method to print a Task object.","lastModifiedDate":"2021-08-13"},{"lineNumber":39,"author":{"gitId":"yeppog"},"content":"     * @return String representation of the task instance.","lastModifiedDate":"2021-08-13"},{"lineNumber":40,"author":{"gitId":"yeppog"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":42,"author":{"gitId":"yeppog"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":43,"author":{"gitId":"yeppog"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-13"},{"lineNumber":44,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":45,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"yeppog":45}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yeppog":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yeppog"},"content":"deadline test1 /by test2","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"yeppog"},"content":"todo test 3","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"yeppog"},"content":"event test 4 /at test 5","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"yeppog"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"yeppog"},"content":"done 5","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"yeppog"},"content":"done 0","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"yeppog"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"yeppog"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"yeppog"},"content":"delete 5","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"yeppog"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"yeppog"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"yeppog"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"yeppog"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"yeppog"},"content":"delete 1","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"yeppog"},"content":"list","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"yeppog":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yeppog"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yeppog":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"yeppog"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yeppog":1,"-":37}}]
