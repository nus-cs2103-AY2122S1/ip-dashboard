[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"CraveToCode"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"CraveToCode"},"content":"    archiveVersion \u003d \"v0.2\"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CraveToCode":17,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":" * Creates and runs a Duke bot. Main file for the bot that is run to create a new Duke bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    private static final String FILE_PATH \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"     * Returns a Duke object with storage set to a specified filepath.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"     * @param filepath The filepath for the creation of the storage system.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"        this.storage \u003d new Storage(filepath);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"    public Duke() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"        this(FILE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"     * Returns a welcome message in String representation.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"    public String greet() {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"        return this.ui.welcomeMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"CraveToCode"},"content":"     * Returns a welcome message in String representation.","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"CraveToCode"},"content":"     * @param input The input entered by the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"CraveToCode"},"content":"     * @return The response to be output by the bot in String representation.","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"CraveToCode"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"CraveToCode"},"content":"        String response;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"CraveToCode"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"CraveToCode"},"content":"            Command c \u003d Parser.parseInput(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"CraveToCode"},"content":"            response \u003d c.execute(storage, ui);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"CraveToCode"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"CraveToCode"},"content":"            return Ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"CraveToCode"},"content":"        return response;","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"CraveToCode":53,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"CraveToCode":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"CraveToCode":32}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":" * Represents the command when the user wants to add a new task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    private String taskType;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"    private String taskName;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"    private String datetime;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"     * Returns a Command representing an addition of a new task.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"     * @param taskType The type of task to be added.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"     * @param taskName The name of the task to be added.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"     * @param datetime The date/time of the task to be added, if any.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"    public AddCommand(String taskType, String taskName, String datetime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"     * Executes the command, with execution method depending on the type of the task being added through this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"     * @param storage The storage system of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"     * @param ui The ui of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"    public String execute(Storage storage, Ui ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"        if (this.taskType.equals(Todo.taskTag())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"            int taskListLen \u003d storage.taskListLen();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"CraveToCode"},"content":"            if (taskListLen \u003c TaskList.MAX_TASKS) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"CraveToCode"},"content":"                Todo newTodo \u003d new Todo(this.taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"CraveToCode"},"content":"                storage.addTask(newTodo);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"CraveToCode"},"content":"                taskListLen +\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"CraveToCode"},"content":"                storage.saveToFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"CraveToCode"},"content":"                return ui.taskAddedMessage(newTodo, taskListLen);","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"CraveToCode"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"CraveToCode"},"content":"                return ui.maxTaskReachedMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"CraveToCode"},"content":"        } else if (this.taskType.equals(Deadline.taskTag())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"CraveToCode"},"content":"            int taskListLen \u003d storage.taskListLen();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"CraveToCode"},"content":"            if (taskListLen \u003c TaskList.MAX_TASKS) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"CraveToCode"},"content":"                Deadline newDeadline \u003d new Deadline(taskName, this.datetime);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"CraveToCode"},"content":"                storage.addTask(newDeadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"CraveToCode"},"content":"                taskListLen +\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"CraveToCode"},"content":"                storage.saveToFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"CraveToCode"},"content":"                return ui.taskAddedMessage(newDeadline, taskListLen);","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"CraveToCode"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"CraveToCode"},"content":"                return ui.maxTaskReachedMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"CraveToCode"},"content":"        } else if (this.taskType.equals(Event.taskTag())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"CraveToCode"},"content":"            int taskListLen \u003d storage.taskListLen();","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"CraveToCode"},"content":"            if (taskListLen \u003c TaskList.MAX_TASKS) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"CraveToCode"},"content":"                Event newEvent \u003d new Event(this.taskName, this.datetime);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"CraveToCode"},"content":"                storage.addTask(newEvent);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"CraveToCode"},"content":"                taskListLen +\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"CraveToCode"},"content":"                storage.saveToFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"CraveToCode"},"content":"                return ui.taskAddedMessage(newEvent, taskListLen);","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"CraveToCode"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"CraveToCode"},"content":"                return ui.maxTaskReachedMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"CraveToCode"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"CraveToCode"},"content":"            //Will never reach this state.","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"CraveToCode"},"content":"            return \"Impossible task.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"CraveToCode":76}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":" * Abstract class for all types of tasks that Duke can handle.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"    public abstract String execute(Storage storage, Ui ui);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"CraveToCode":11}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":" * Represents the command when the user wants to delete a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"    private int taskNum;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    public DeleteCommand (int taskNum) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"     * Executes the command and deletes the task from the list of saved tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"     * @param storage The storage system of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"     * @param ui The ui of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"    public String execute(Storage storage, Ui ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"            int taskListLen \u003d storage.taskListLen();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"            if (taskNum + 1 \u003c\u003d taskListLen) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"                Task removedTask \u003d storage.deleteTask(taskNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"                taskListLen -\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"                storage.saveToFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"                return ui.taskDeletedMessage(removedTask, taskListLen);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"                return ui.missingTaskMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"            return Ui.showErrorMessage(\"Please enter a valid index!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"CraveToCode":38}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":" * Represents the command when the user wants to mark a task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"    private int taskNum;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    public DoneCommand (int taskNum) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"     * Executes the command and marks the specified task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"     * @param storage The storage system of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"     * @param ui The ui of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"    public String execute(Storage storage, Ui ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"            Task taskToMark \u003d storage.getTask(taskNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"            taskToMark.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"            storage.saveToFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"            return ui.markedDoneMessage(taskToMark);","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"            return Ui.showErrorMessage(\"Please enter a valid index!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"CraveToCode":34}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":" * Represents the command when the user wants to end the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"    public ExitCommand() {}","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"     * Executes the command and stops the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"     * @param storage The storage system of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"     * @param ui The ui of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"    public String execute(Storage storage, Ui ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"        storage.saveToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"        return ui.goodbyeMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"CraveToCode":23}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import java.util.List;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":" * Represents the command when the user wants to find a task based on a keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"    private String keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"    public FindCommand (String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"     * Executes the command and finds saved tasks that match the keyword input by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"     * @param storage The storage system of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"     * @param ui The ui of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"    public String execute(Storage storage, Ui ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"        TaskList taskList \u003d storage.getTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"        List\u003cTask\u003e listOfMatches \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"        for (int i \u003d 0; i \u003c taskList.taskListLen(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"            Task curr \u003d taskList.getTask(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"            if (searchKeyword(keyword, curr)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"                listOfMatches.add(curr);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"        return ui.printMatchingTasksMessage(listOfMatches);","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"CraveToCode"},"content":"    private boolean searchKeyword(String keyword, Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"CraveToCode"},"content":"        return task.taskName().contains(keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"CraveToCode":43}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":" * Represents the command when the user wants to list all tasks currently saved in the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"    public ListCommand() {}","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"     * Executes the command to print out all currently saved tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"     * @param storage The storage system of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"     * @param ui The ui of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"    public String execute(Storage storage, Ui ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"        String printedTaskList \u003d storage.printTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"        return ui.printTaskListMessage(printedTaskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"CraveToCode":24}},{"path":"src/main/java/duke/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":" * Represents the command created when an unknown user command is encountered.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"    public UnknownCommand (){}","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"     * Executes the command and simply informs the user of the invalid command.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"     * @param storage The storage system of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"     * @param ui The ui of the bot involved with this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"    public String execute(Storage storage, Ui ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"        return ui.unknownCommandMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"CraveToCode":23}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":" * Represents exceptions created from Duke bot operations.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"    public static DukeException missingInput(String taskName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"        return new DukeException(String.format(\"☹ OOPS!!! The description of a %s cannot be empty.\", taskName));","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"CraveToCode":14}},{"path":"src/main/java/duke/functionality/Datetime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.functionality;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":" * Encapsulates date and time into one object.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"public class Datetime {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"    private LocalDate datetime;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"    private String datetimeString;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"     * Returns a Datetime wrapper object that encapsulates a specified date/time.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"     * @param datetimeString The string form of the date/time that is to be parsed.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"    public Datetime(String datetimeString) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"        this.datetimeString \u003d datetimeString;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"        this.datetime \u003d LocalDate.parse(datetimeString);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"    };","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"    public String getDatetimeString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"        return this.datetimeString;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"        return datetime.format(DATE_FORMATTER);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"CraveToCode":33}},{"path":"src/main/java/duke/functionality/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.functionality;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"import duke.commands.UnknownCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":" * Creates a parser that makes sense of user inputs.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"     * Returns the parsed Command input by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"     * @param userInput The unparsed input from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"     * @return Parsed Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"     * @throws DukeException If illegal/missing arguments are found.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"    public static Command parseInput(String userInput) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"        //TODO need to catch DukeException and IndexOutOfBoundsException somewhere","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"        String[] inputSplit \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"        String command \u003d inputSplit[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"CraveToCode"},"content":"        } else if (command.equals(Todo.taskTag())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"CraveToCode"},"content":"            if (checkInputLength(inputSplit)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"CraveToCode"},"content":"                throw DukeException.missingInput(\"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"CraveToCode"},"content":"            String taskName \u003d inputSplit[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"CraveToCode"},"content":"            return new AddCommand(Todo.taskTag(), taskName, null);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"CraveToCode"},"content":"        } else if (command.equals(Deadline.taskTag())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"CraveToCode"},"content":"            if (checkInputLength(inputSplit)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"CraveToCode"},"content":"                throw DukeException.missingInput(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"CraveToCode"},"content":"            String args \u003d inputSplit[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"CraveToCode"},"content":"            String[] argsSplit \u003d args.split(\" /by \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"CraveToCode"},"content":"            if (checkInputLength(argsSplit)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"CraveToCode"},"content":"                throw new DukeException(\"OOPS!!! Please indicate when the deadline for the task is.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"CraveToCode"},"content":"            timeFormatChecker(argsSplit[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"CraveToCode"},"content":"            return new AddCommand(Deadline.taskTag(), argsSplit[0], argsSplit[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"CraveToCode"},"content":"        } else if (command.equals(Event.taskTag())) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"CraveToCode"},"content":"            if (checkInputLength(inputSplit)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"CraveToCode"},"content":"                throw DukeException.missingInput(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"CraveToCode"},"content":"            String args \u003d inputSplit[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"CraveToCode"},"content":"            String[] argsSplit \u003d args.split(\" /at \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"CraveToCode"},"content":"            if (checkInputLength(argsSplit)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"CraveToCode"},"content":"                throw new DukeException(\"OOPS!!! Please indicate the start and end time of the event.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"CraveToCode"},"content":"            timeFormatChecker(argsSplit[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"CraveToCode"},"content":"            return new AddCommand(Event.taskTag(), argsSplit[0], argsSplit[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"CraveToCode"},"content":"        } else if (command.equals(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"CraveToCode"},"content":"            if (checkInputLength(inputSplit)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"CraveToCode"},"content":"                throw new DukeException(\"OOPS!!! Please indicate which task you want to delete.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"CraveToCode"},"content":"            String strTaskNum \u003d inputSplit[1].split(\" \")[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"CraveToCode"},"content":"            int taskNum \u003d Integer.parseInt(strTaskNum) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"CraveToCode"},"content":"            return new DoneCommand(taskNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"CraveToCode"},"content":"        } else if (command.equals(\"delete\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"CraveToCode"},"content":"            if (checkInputLength(inputSplit)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"CraveToCode"},"content":"                throw new DukeException(\"OOPS!!! Please indicate which task you want to delete.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"CraveToCode"},"content":"            String strTaskNum \u003d inputSplit[1].split(\" \")[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"CraveToCode"},"content":"            int taskNum \u003d Integer.parseInt(strTaskNum) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"CraveToCode"},"content":"            return new DeleteCommand(taskNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"CraveToCode"},"content":"        } else if (command.equals(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"CraveToCode"},"content":"            if (checkInputLength(inputSplit)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"CraveToCode"},"content":"                throw DukeException.missingInput(\"find\");","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"CraveToCode"},"content":"            String args \u003d inputSplit[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"CraveToCode"},"content":"            String keyword \u003d args.contains(\" \") ? args.split(\" \", 2)[0] : args;","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"CraveToCode"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"CraveToCode"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"CraveToCode"},"content":"            return new UnknownCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"CraveToCode"},"content":"    private static boolean checkInputLength(String[] inputSplit) {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"CraveToCode"},"content":"        return inputSplit.length \u003c 2;","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"CraveToCode"},"content":"    private static void timeFormatChecker(String inputString) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"CraveToCode"},"content":"        if (!inputString.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"CraveToCode"},"content":"            throw new DukeException(\"OOPS!!! Please enter a valid format for the date/time of your task.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"CraveToCode":105}},{"path":"src/main/java/duke/functionality/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.functionality;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":" * Represents a storage system that deals with loading tasks from and saving tasks to a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"    private static final String FILE_NAME \u003d \"dukestorage.txt\";","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"    private String filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"    private File f;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"     * Returns a storage system that is loaded with pre-saved tasks, if any, and allows for the storage of more tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"     * @param filePath The filepath in which to place the file containing saved tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"            this.filePath \u003d filePath + \"\\\\\" + FILE_NAME;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"            this.f \u003d new File(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"            if (f.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"                FileReader fr \u003d new FileReader(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"                BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"CraveToCode"},"content":"                String content;","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"CraveToCode"},"content":"                while ((content \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"CraveToCode"},"content":"                    taskAdder(content);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"CraveToCode"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"CraveToCode"},"content":"                f.delete();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"CraveToCode"},"content":"            f.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"CraveToCode"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"CraveToCode"},"content":"            System.err.println(\"Error in storage creation!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"CraveToCode"},"content":"    private void taskAdder(String content) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"CraveToCode"},"content":"        String[] contentArr \u003d content.split(\" \\\\| \");","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"CraveToCode"},"content":"        String taskType \u003d contentArr[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"CraveToCode"},"content":"        boolean isDone \u003d contentArr[1].equals(\"1\");","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"CraveToCode"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"CraveToCode"},"content":"        case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"CraveToCode"},"content":"            this.taskList.addTask(new Todo(contentArr[2], isDone));","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"CraveToCode"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"CraveToCode"},"content":"        case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"CraveToCode"},"content":"            this.taskList.addTask(new Deadline(contentArr[2], contentArr[3], isDone));","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"CraveToCode"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"CraveToCode"},"content":"        case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"CraveToCode"},"content":"            this.taskList.addTask((new Event(contentArr[2], contentArr[3], isDone)));","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"CraveToCode"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"CraveToCode"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"CraveToCode"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"CraveToCode"},"content":"     * Adds a task to the TaskList within the storage object.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"CraveToCode"},"content":"     * @param taskName Name of the task to be inserted.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"CraveToCode"},"content":"    public void addTask(Task taskName) {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"CraveToCode"},"content":"        this.taskList.addTask(taskName);","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"CraveToCode"},"content":"     * Deletes a task from the TaskList within the storage object.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"CraveToCode"},"content":"     * @param taskNum Index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"CraveToCode"},"content":"     * @return Deleted task.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"CraveToCode"},"content":"    public Task deleteTask(int taskNum) {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"CraveToCode"},"content":"        return this.taskList.deleteTask(taskNum);","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"CraveToCode"},"content":"     * Returns length of the TaskList within the storage object.","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"CraveToCode"},"content":"     * @return Length of TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"CraveToCode"},"content":"    public int taskListLen() {","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"CraveToCode"},"content":"        return this.taskList.taskListLen();","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"CraveToCode"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"CraveToCode"},"content":"        return this.taskList.getTask(taskIndex);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"CraveToCode"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"CraveToCode"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"CraveToCode"},"content":"     * Returns the string representation of the TaskList within the storage object.","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"CraveToCode"},"content":"     * @return String representation of TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"CraveToCode"},"content":"    public String printTaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"CraveToCode"},"content":"        return this.taskList.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"CraveToCode"},"content":"     * Saves all contents of the current TaskList into a file on the system.","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"CraveToCode"},"content":"    public void saveToFile() {","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"CraveToCode"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"CraveToCode"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"CraveToCode"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"CraveToCode"},"content":"            for (int i \u003d 0; i \u003c this.taskList.taskListLen(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"CraveToCode"},"content":"                bw.write(this.taskList.getTask(i).fileSaveFormat() + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"CraveToCode"},"content":"            bw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"CraveToCode"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"CraveToCode"},"content":"            Ui.showErrorMessage(\"Error in saving file!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"CraveToCode":132}},{"path":"src/main/java/duke/functionality/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.functionality;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":" * Creates an Ui system that is responsible for creation of responses to be output to user.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"    private static final String BORDER \u003d \"________________________________________________________\";","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"    private static final String NEW_LINE \u003d System.lineSeparator();","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    private static final String PLACEHOLDER \u003d \"%text%\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"    private static final String DONE_TASK \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"    private static final String MAX_TASK \u003d \"Sorry! You have max number of tasks stored already.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"    private static final String ADDED_TASK \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"    private static final String REMAINING_TASK_NUM \u003d String.format(\"Now you have %s tasks in the list.\", PLACEHOLDER);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"    private static final String DELETED_TASK \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"    private static final String MISSING_TASK \u003d \"There is no task at the specified index.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"    private static final String NO_MATCHING_TASKS \u003d \"There are no matching tasks found.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"    private static final String UNKNOWN_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\";","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"    private static final String GOODBYE_MSG \u003d \"It has been a pleasure, goodbye!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"     * Returns an Ui object that is responsible for the creation of responses to be output to the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"    private String prettyPrint(String msg) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"        String indentedMsg \u003d msg.replaceAll(\"(?m)^\", \"    \");","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"        return String.format(\"%s\\n%s\\n%s\\n\", BORDER, indentedMsg, BORDER);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"     * Sends a welcome message to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"    public String welcomeMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"CraveToCode"},"content":"        String welcome \u003d \"Helwoof, this is WoofBot.\\nHow can I help you?\";","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"CraveToCode"},"content":"        return String.format(\"%s\\n%s\\n%s%n\", BORDER, welcome, BORDER);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"CraveToCode"},"content":"     * Sends a goodbye message to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"CraveToCode"},"content":"    public String goodbyeMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"CraveToCode"},"content":"        return prettyPrint(GOODBYE_MSG);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"CraveToCode"},"content":"     * Sends a message to the user when a task is added.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"CraveToCode"},"content":"     * @param addedTask The task that has been added.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"CraveToCode"},"content":"     * @param taskLeftNum The number of tasks present in the current list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"CraveToCode"},"content":"    public String taskAddedMessage(Task addedTask, int taskLeftNum) {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"CraveToCode"},"content":"        String tasksLeft \u003d REMAINING_TASK_NUM.replace(PLACEHOLDER, String.valueOf(taskLeftNum));","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"CraveToCode"},"content":"        String msg \u003d String.format(\"%s\\n  %s\\n%s\", ADDED_TASK, addedTask.toString(), tasksLeft);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"CraveToCode"},"content":"        return prettyPrint(msg);","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"CraveToCode"},"content":"     * Sends a message to the user when a task is deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"CraveToCode"},"content":"     * @param removedTask The task that has been deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"CraveToCode"},"content":"     * @param taskLeftNum The number of remaining tasks present in the current list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"CraveToCode"},"content":"    public String taskDeletedMessage(Task removedTask, int taskLeftNum) {","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"CraveToCode"},"content":"        String tasksLeft \u003d REMAINING_TASK_NUM.replace(PLACEHOLDER, String.valueOf(taskLeftNum));","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"CraveToCode"},"content":"        String msg \u003d String.format(\"%s\\n  %s\\n%s\", DELETED_TASK, removedTask.toString(), tasksLeft);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"CraveToCode"},"content":"        return prettyPrint(msg);","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"CraveToCode"},"content":"     * Sends a message to the user when a task has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"CraveToCode"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"CraveToCode"},"content":"    public String markedDoneMessage(Task task) {","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"CraveToCode"},"content":"        String msg \u003d String.format(\"%s\\n  %s\", DONE_TASK, task.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"CraveToCode"},"content":"        return prettyPrint(msg);","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"CraveToCode"},"content":"     * Prints out the list of current tasks to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"CraveToCode"},"content":"     * @param stringifyTaskLast String representation of current list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"CraveToCode"},"content":"    public String printTaskListMessage(String stringifyTaskLast) {","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"CraveToCode"},"content":"        return prettyPrint(stringifyTaskLast);","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"CraveToCode"},"content":"     * Prints out the list of matching tasks to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"CraveToCode"},"content":"     * @param listOfMatches List of all tasks that match the user\u0027s keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"CraveToCode"},"content":"    public String printMatchingTasksMessage(List\u003cTask\u003e listOfMatches) {","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"CraveToCode"},"content":"        int len \u003d listOfMatches.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"CraveToCode"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"CraveToCode"},"content":"            return prettyPrint(NO_MATCHING_TASKS);","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"CraveToCode"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"CraveToCode"},"content":"            StringBuilder msg \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"CraveToCode"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"CraveToCode"},"content":"                int currTaskNum \u003d i + 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"CraveToCode"},"content":"                msg.append(\"\\n\").append(currTaskNum).append(\". \").append(listOfMatches.get(i).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"CraveToCode"},"content":"            return prettyPrint(msg.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"CraveToCode"},"content":"     * Sends a message to the user when an unknown command has been input by them.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"CraveToCode"},"content":"    public String unknownCommandMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"CraveToCode"},"content":"        return prettyPrint(UNKNOWN_COMMAND);","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"CraveToCode"},"content":"     * Sends a message to the user when an error/exception has been encountered.","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"CraveToCode"},"content":"     * @param errorMsg The error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"CraveToCode"},"content":"    public static String showErrorMessage(String errorMsg) {","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"CraveToCode"},"content":"        return errorMsg;","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"CraveToCode"},"content":"     * Checks if the given string is equivalent to the exit message.","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"CraveToCode"},"content":"     * @param inputString The string to be compared.","lastModifiedDate":"2021-09-02"},{"lineNumber":132,"author":{"gitId":"CraveToCode"},"content":"     * @return True if they are equivalent, false otherwise.","lastModifiedDate":"2021-09-02"},{"lineNumber":133,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":134,"author":{"gitId":"CraveToCode"},"content":"    public static Boolean checkExitMessage(String inputString) {","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"CraveToCode"},"content":"        Ui temp \u003d new Ui();","lastModifiedDate":"2021-09-02"},{"lineNumber":136,"author":{"gitId":"CraveToCode"},"content":"        return inputString.equals(temp.goodbyeMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"CraveToCode"},"content":"     * Sends a message to the user when the task indicated by them cannot be found.","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"CraveToCode"},"content":"    public String missingTaskMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"CraveToCode"},"content":"        return prettyPrint(MISSING_TASK);","lastModifiedDate":"2021-09-02"},{"lineNumber":144,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"CraveToCode"},"content":"     * Sends a message to the user when no more tasks can be added to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"CraveToCode"},"content":"    public String maxTaskReachedMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":150,"author":{"gitId":"CraveToCode"},"content":"        return prettyPrint(MAX_TASK);","lastModifiedDate":"2021-09-02"},{"lineNumber":151,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"CraveToCode":153}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"CraveToCode"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"CraveToCode"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"CraveToCode"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"CraveToCode"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"CraveToCode"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"CraveToCode"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"CraveToCode"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"CraveToCode"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"CraveToCode"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"CraveToCode"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"CraveToCode"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"CraveToCode"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"CraveToCode"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"CraveToCode":61}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"CraveToCode"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.greet(), dukeImage));","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"CraveToCode"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"CraveToCode"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"CraveToCode"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"CraveToCode"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"CraveToCode"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"CraveToCode"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"CraveToCode"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"CraveToCode"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"CraveToCode"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"CraveToCode"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"CraveToCode"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"CraveToCode"},"content":"        if (Ui.checkExitMessage(response)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"CraveToCode"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"CraveToCode"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"CraveToCode"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"CraveToCode"},"content":"            System.exit(0);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"CraveToCode":64}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Datetime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":" * Represents a deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"    private static final String TASK_TAG \u003d \"deadline\";","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"    private final Datetime dueDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"     * Returns a new Deadline task with specified name and due date.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"     * @param dueDate The date by which the task is due.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"    public Deadline(String taskName, String dueDate) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"        this.dueDate \u003d new Datetime(dueDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"     * Returns a new Deadline task with specified name, due date, and completion status.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"     * @param dueDate The date by which the task is due.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"    public Deadline(String taskName, String dueDate, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"        this.dueDate \u003d new Datetime(dueDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"     * Returns the string format in which this task is to be saved within a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"     * @return String representation of task for saving within a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"CraveToCode"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"CraveToCode"},"content":"        return String.format(\"D | %d | %s | %s\", this.isDone() ? 1 : 0, this.taskName(),","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"CraveToCode"},"content":"                this.dueDate.getDatetimeString());","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"CraveToCode"},"content":"    public static String taskTag() {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"CraveToCode"},"content":"        return TASK_TAG;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"CraveToCode"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"CraveToCode"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"CraveToCode"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dueDate.toString() + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"CraveToCode":53}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import duke.functionality.Datetime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":" * Represents an Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"    private static final String TASK_TAG \u003d \"event\";","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"    private final Datetime eventDatetime;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"     * Returns a new Event task with specified name and due date.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"     * @param eventDatetime The date on which the event is occuring.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"    public Event(String taskName, String eventDatetime) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"        this.eventDatetime \u003d new Datetime(eventDatetime);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"     * Returns a new Event task with specified name, due date, and completion status.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"     * @param eventDatetime The date on which the event is occurring.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"    public Event(String taskName, String eventDatetime, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"        this.eventDatetime \u003d new Datetime(eventDatetime);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"     * Returns the string format in which this task is to be saved within a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"     * @return String representation of task for saving within a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"CraveToCode"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"CraveToCode"},"content":"        return String.format(\"E | %d | %s | %s\", this.isDone() ? 1 : 0, this.taskName(),","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"CraveToCode"},"content":"                this.eventDatetime.getDatetimeString());","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"CraveToCode"},"content":"    public static String taskTag() {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"CraveToCode"},"content":"        return TASK_TAG;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"CraveToCode"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"CraveToCode"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"CraveToCode"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.eventDatetime.toString() + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"CraveToCode":53}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":" * Abstract class for all types of tasks that Duke can handle.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"    private final String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"     * Returns a new Task with specified name.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"     * Returns a new Task with specified name and completion status.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"    public Task (String taskName, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"     * Marks this task as completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"CraveToCode"},"content":"     * Checks if this task has been completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"CraveToCode"},"content":"     * @return True if the task has been completed, false otherwise.","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"CraveToCode"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"CraveToCode"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"CraveToCode"},"content":"     * Returns the name of this task.","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"CraveToCode"},"content":"     * @return Name of this task.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"CraveToCode"},"content":"    public String taskName() {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"CraveToCode"},"content":"        return this.taskName;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"CraveToCode"},"content":"    public abstract String fileSaveFormat();","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"CraveToCode"},"content":"     * Returns the tag used to identify the type of this task.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"CraveToCode"},"content":"     * @return String representation of the tag associated with this task.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"CraveToCode"},"content":"    public static String taskTag() {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"CraveToCode"},"content":"        //TODO change to exception","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"CraveToCode"},"content":"        return \"Invalid Task\";","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"CraveToCode"},"content":"    };","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"CraveToCode"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"CraveToCode"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"CraveToCode"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"CraveToCode":73}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":" * Represents a list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"    public static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"        return this.taskList.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"     * Adds a new task to the existing list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"     * @return True if task has been successfully added, false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"    public boolean addTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"        return this.taskList.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"     * Deletes a task from the existing list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"     * @param taskNum Index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"CraveToCode"},"content":"     * @return Deleted task.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"CraveToCode"},"content":"    public Task deleteTask(int taskNum) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"CraveToCode"},"content":"        return this.taskList.remove(taskNum);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"CraveToCode"},"content":"     * Returns the length of the taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"CraveToCode"},"content":"     * @return Length of taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"CraveToCode"},"content":"    public int taskListLen() {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"CraveToCode"},"content":"        return this.taskList.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"CraveToCode"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"CraveToCode"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"CraveToCode"},"content":"        int taskListLen \u003d this.taskList.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"CraveToCode"},"content":"        if (taskListLen \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"CraveToCode"},"content":"            return \"There are no tasks in your list.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"CraveToCode"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"CraveToCode"},"content":"            StringBuilder msg \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"CraveToCode"},"content":"            for (int i \u003d 0; i \u003c taskListLen; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"CraveToCode"},"content":"                int currTaskNum \u003d i + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"CraveToCode"},"content":"                msg.append(\"\\n\").append(currTaskNum).append(\". \").append(this.taskList.get(i).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"CraveToCode"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"CraveToCode"},"content":"            return msg.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"CraveToCode"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"CraveToCode":64}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":" * Represents a ToDo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"    private static final String TASK_TAG \u003d \"todo\";","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"     * Returns the string format in which this task is to be saved within a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"     * @return String representation of task for saving within a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"    public String fileSaveFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"        return String.format(\"T | %d | %s\", this.isDone() ? 1 : 0, this.taskName());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"    public static String taskTag() {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"        return TASK_TAG;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"CraveToCode"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"CraveToCode"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"CraveToCode"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"CraveToCode":34}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"CraveToCode":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"CraveToCode":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"    public void dukeTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"        //sample test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"        String filePath \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"        Duke duke \u003d new Duke(filePath);","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"CraveToCode":15}},{"path":"src/test/java/duke/functionality/DatetimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.functionality;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"public class DatetimeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"    public void getDatetimeStringTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"        Datetime datetime \u003d new Datetime(\"2021-09-19\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"        assertEquals(\"2021-09-19\", datetime.getDatetimeString());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"CraveToCode":13}},{"path":"src/test/java/duke/functionality/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.functionality;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"import duke.tasks.TodoStub;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    public void addTaskTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"        String filePath \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"        Task todo \u003d new TodoStub(\"test\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"        storage.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"        assertEquals(todo, storage.getTask(0));","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"CraveToCode"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"CraveToCode"},"content":"    public void deleteTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"CraveToCode"},"content":"        String filePath \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"CraveToCode"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"CraveToCode"},"content":"        Task todo \u003d new TodoStub(\"test\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"CraveToCode"},"content":"        storage.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"CraveToCode"},"content":"        assertEquals(todo, storage.deleteTask(0));","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"CraveToCode":29}},{"path":"src/test/java/duke/tasks/TodoStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"public class TodoStub extends Todo {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"    private static final String TASK_TAG \u003d \"todo\";","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"    private final String taskName;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"     * Returns a todo task stub.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"     * @param taskName The name of the task stub.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"    public TodoStub(String taskName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"        super(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"CraveToCode"},"content":"        this.taskName \u003d \"sleep\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"CraveToCode"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"CraveToCode"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"CraveToCode"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"CraveToCode":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CraveToCode"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"CraveToCode"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"CraveToCode"},"content":"deadline return book /by 2021-08-19","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"CraveToCode"},"content":"event project meeting /at 2020-09-09","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"CraveToCode"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"CraveToCode"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"CraveToCode"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"CraveToCode"},"content":"todo prep for holidays","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"CraveToCode"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"CraveToCode"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"CraveToCode"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"CraveToCode"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"CraveToCode"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"CraveToCode"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"CraveToCode":14}}]
