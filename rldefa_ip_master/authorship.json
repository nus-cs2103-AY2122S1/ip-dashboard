[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"    private String deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"        this.deadline \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rldefa":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"    private static int listSize \u003d 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"    private static Task[] list \u003d new Task[100]; // List to store all the tasks","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"     * Interprets and calls the necessary function for all user inputs.","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"     * @param input the user input","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"    public static void handleInput(String input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"                for (int i \u003d 0; i \u003c listSize; i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"                    System.out.println((i + 1) + \".\" + list[i]);","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"            } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"                completeTask(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"            } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"                deleteTask(input);","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"                addTask(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"            System.out.println(\"OOPS!! \" + e.getMessage());","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"     * Attempts to create a new task based on user input.","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"     * @param desc the user input","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"    public static void addTask(String desc) throws IllegalArgumentException {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"        Task newTask;","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"        if (desc.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"            newTask \u003d new Todo(desc.substring(5));","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"        } else if (desc.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"            int location \u003d findEscape(desc);","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"            newTask \u003d new Deadline(desc.substring(9, location - 1), desc.substring(location + 4));","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"        } else if (desc.startsWith(\"event \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"            int location \u003d findEscape(desc);","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"            newTask \u003d new Event(desc.substring(6, location - 1), desc.substring(location + 4));","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"            throw new IllegalArgumentException(\"Please specify a type of task!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"        list[listSize] \u003d newTask;","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"        listSize++;","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"added: \" + newTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"rldefa"},"content":"     * Takes in a string that is supposed to contain slash, which is when the user is creating a deadline or event.","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"rldefa"},"content":"     * Finds the position of the slash character.","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"     * @param desc","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"rldefa"},"content":"     * @return the integer position of the slash character","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"rldefa"},"content":"    public static int findEscape(String desc) {","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"rldefa"},"content":"        int escapePos \u003d desc.indexOf(\"/\");","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"rldefa"},"content":"        if (escapePos \u003c 0) throw new IllegalArgumentException(\"Please provide a duration or deadline.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"rldefa"},"content":"        return escapePos;","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"rldefa"},"content":"     * Interprets and executes a command to complete a specific task.","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"rldefa"},"content":"     * @param input the user input that starts with \u0027done\u0027","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"rldefa"},"content":"    public static void completeTask(String input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"rldefa"},"content":"        int completedTaskNumber;","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"rldefa"},"content":"            completedTaskNumber \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"rldefa"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"rldefa"},"content":"            throw new IllegalArgumentException(\"Invalid task number provided.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"rldefa"},"content":"        if (completedTaskNumber \u003c 0 || completedTaskNumber \u003e\u003d listSize) {","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"rldefa"},"content":"            throw new IllegalArgumentException(\"Task with that task number does not exist.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":82,"author":{"gitId":"rldefa"},"content":"        list[completedTaskNumber].complete();","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"rldefa"},"content":"        System.out.println(list[completedTaskNumber]);","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":88,"author":{"gitId":"rldefa"},"content":"     * Interprets and executes a command to delete a specific task.","lastModifiedDate":"2021-08-20"},{"lineNumber":89,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"rldefa"},"content":"     * @param input the user input that starts with \u0027delete\u0027","lastModifiedDate":"2021-08-20"},{"lineNumber":91,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"rldefa"},"content":"    public static void deleteTask(String input) {","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"rldefa"},"content":"        int deletedTaskNumber;","lastModifiedDate":"2021-08-20"},{"lineNumber":94,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":95,"author":{"gitId":"rldefa"},"content":"            deletedTaskNumber \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"rldefa"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"rldefa"},"content":"            throw new IllegalArgumentException(\"Invalid task number provided.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":98,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"rldefa"},"content":"        if (deletedTaskNumber \u003c 0 || deletedTaskNumber \u003e\u003d listSize) {","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"rldefa"},"content":"            throw new IllegalArgumentException(\"Task with that task number does not exist.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"rldefa"},"content":"        Task deletedTask \u003d list[deletedTaskNumber];","lastModifiedDate":"2021-08-20"},{"lineNumber":104,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":105,"author":{"gitId":"rldefa"},"content":"        // Shift all the tasks 1 unit up","lastModifiedDate":"2021-08-20"},{"lineNumber":106,"author":{"gitId":"rldefa"},"content":"        for (int i \u003d deletedTaskNumber; i \u003c listSize; i++) {","lastModifiedDate":"2021-08-20"},{"lineNumber":107,"author":{"gitId":"rldefa"},"content":"            list[i] \u003d list[i+1];","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":109,"author":{"gitId":"rldefa"},"content":"        listSize--;","lastModifiedDate":"2021-08-20"},{"lineNumber":110,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-20"},{"lineNumber":112,"author":{"gitId":"rldefa"},"content":"        System.out.println(deletedTask);","lastModifiedDate":"2021-08-20"},{"lineNumber":113,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Now you have \" + listSize + \" tasks in the list.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":114,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":115,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"rldefa"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"rldefa"},"content":"        while (true) {","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"rldefa"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"rldefa"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"rldefa"},"content":"                // Exit loop and thus program when input is bye","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"rldefa"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"rldefa"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"rldefa"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"rldefa"},"content":"            handleInput(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"rldefa":126}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"    private String time;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.time + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rldefa":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    public void complete() {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rldefa":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rldefa":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"list","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"rldefa":8}}]
