[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"    private static int listSize \u003d 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"    private static Task[] list \u003d new Task[100]; // List to store all the tasks","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    public static class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"        protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"        protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"        public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"        public void complete() {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"        @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"        public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"            return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"    public static void handleInput(String input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"            for (int i \u003d 0; i \u003c listSize; i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"                System.out.println((i + 1) + \".\" + list[i]);","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"        } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"                completeTask(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"                addTask(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"            addTask(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"    public static void addTask(String desc) {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"        list[listSize] \u003d new Task(desc);","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"        listSize++;","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"added: \" + desc);","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"    public static void completeTask(String input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"rldefa"},"content":"        int completedTaskNumber \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"rldefa"},"content":"        list[completedTaskNumber].complete();","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"rldefa"},"content":"        System.out.println(list[completedTaskNumber]);","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"rldefa"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"rldefa"},"content":"        while (true) {","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"rldefa"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"rldefa"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"rldefa"},"content":"                // Exit loop and thus program when input is bye","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"rldefa"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"rldefa"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"rldefa"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"rldefa"},"content":"            handleInput(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"rldefa":71}}]
