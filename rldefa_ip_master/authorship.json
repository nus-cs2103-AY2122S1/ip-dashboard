[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"dependencies {","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":46,"rldefa":17}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":74,"author":{"gitId":"rldefa"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":85,"rldefa":4}},{"path":"src/main/java/duke/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":" * Encapsulates a command to add a task to list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    private Task pendingTask;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"     * Creates a new command to add a task to list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"     * @param newTask the new task to be added.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    public AddCommand(Task newTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"        this.pendingTask \u003d newTask;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"     * Adds the task to list of tasks, then display it on the user interface.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"     * Afterwards, save the list of tasks to the save file.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"     * @param tasks the list of tasks to save the new task into.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"     * @param ui user interface that will announce the addition of new task.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"     * @param storage object that writes the new list of tasks to save file.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"        tasks.add(pendingTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"        return \"added: \" + pendingTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"     * Identifies if this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"     * @return false as this is not an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"rldefa":42}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":" * Encapsulates an action that the user wants to make.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"public interface Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"     * Carries out the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"     * @param tasks the current list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"     * @param ui user interface interacts with the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"     * @param storage custodian of reading and writing save files.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"     * Identifies if this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"     * @return whether this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"    public boolean isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"rldefa":23}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":" * Encapsulates a deadline in the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"     * Creates the deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"     * @param description the description of this task.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"     * @param by the time that this deadline task is due by.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"            this.deadline \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"            throw new DukeException(\"Bad date format. Please input as yyyy-mm-dd.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(FORMATTER) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"     * Formats the task into a string that is compliant with the save file format.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"     * @return a string representing the task to be saved in save file","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"    public String saveData() {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"        return \"D | \" + this.getStatusIcon() + \" | \" + description + \" | \" + deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rldefa":43}},{"path":"src/main/java/duke/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":" * Encapsulates a command to delete a task from list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    private int deleteIndex;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"     * Creates a new command to delete a task from list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"     * @param deleteIndex the index of the task to be deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    public DeleteCommand(int deleteIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"        this.deleteIndex \u003d deleteIndex;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"     * Deletes the task corresponding to the deleteIndex in the task list provided.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"     * @param tasks the current list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"     * @param ui user interface interacts with the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"     * @param storage custodian of reading and writing save files.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"        if (deleteIndex \u003c 0 || deleteIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"            throw new DukeException(\"Task with that task number does not exist.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"        Task deletedTask \u003d tasks.delete(deleteIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                + deletedTask","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"     * Identifies if this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"     * @return whether this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"-":3,"rldefa":43}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"    private void flip() {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"rldefa"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"rldefa"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"        db.flip();","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"rldefa"},"content":"        return db;","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"rldefa":61}},{"path":"src/main/java/duke/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":" * Encapsulates a command to complete a task from a list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    private int doneIndex;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"     * Creates a command to complete a task from a list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"     * @param doneIndex the index of the task to be completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    public DoneCommand(int doneIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"        this.doneIndex \u003d doneIndex;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"     * Completes the task corresponding to the doneIndex in the task list provided.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"     * @param tasks the current list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"     * @param ui user interface interacts with the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"     * @param storage custodian of reading and writing save files.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"        if (doneIndex \u003c 0 || doneIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"            throw new DukeException(\"Task with that task number does not exist.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"        Task completedTask \u003d tasks.completeTask(doneIndex);","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"        return \"Nice! I\u0027ve marked this task as done:\" + completedTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"     * Identifies if this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"     * @return whether this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"rldefa":44}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":" * Encapsulates the entire application.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"     * Creates the Duke application","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"     * @param filePath the path to the save file.","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"     * Runs the duke program.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"        ui.displayWelcome();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"            try {","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"            } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"        ui.closeScanner();","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"rldefa"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"rldefa"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"rldefa"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"rldefa"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"rldefa"},"content":"     * Creates a new instance of duke with a hardcoded filepath then runs it.","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"rldefa"},"content":"     * @param args not relevant to Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"rldefa"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"-":3,"rldefa":66}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"rldefa":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":" * Encapsulates an event in the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    private String time;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"     * Creates the event.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"     * @param description the description of this task.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"     * @param time the time that the event will take place.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.time + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"     * Formats the event into a string that is compliant with the save file format.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"     * @return a string representing the event to be saved in save file","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"    public String saveData() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"        return \"E | \" + this.getStatusIcon() + \" | \" + description + \" | \" + time;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rldefa":33}},{"path":"src/main/java/duke/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":" * Encapsulates a command to exit the program.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"     * Displays a goodbye message.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"     * @param tasks the current list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"     * @param ui user interface interacts with the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"     * @param storage custodian of reading and writing save files.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"     * Identifies if this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"     * @return whether this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"rldefa":29}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":" * Encapsulates a command to find tasks that match a given string.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"    private String queryString;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"     * Creates the command to find matching tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"     * @param query the string to be matched with.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    public FindCommand(String query) {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"        this.queryString \u003d query;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"     * Carries out the action that this command represents.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"     * @param tasks the current list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"     * @param ui user interface interacts with the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"     * @param storage custodian of reading and writing save files.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d tasks.findMatches(queryString);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"        String response \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"            response +\u003d (i + 1) + \".\" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"     * Identifies if this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"     * @return whether this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rldefa":47}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"public class Launcher {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"rldefa":12}},{"path":"src/main/java/duke/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":" * Encapsulates a command to list out all tasks in a list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"     * Lists out all tasks from task list provided together with its index.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"     * @param tasks the current list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"     * @param ui user interface interacts with the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"     * @param storage custodian of reading and writing save files.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"            response +\u003d (i + 1) + \".\" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"        return response;","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"     * Identifies if this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"     * @return whether this command is an exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"rldefa":33}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    private Duke duke \u003d new Duke(\"./data/tasks.txt\");","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027Courier New\u0027\");","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"            stage.show();","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"-":1,"rldefa":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpeg\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpeg\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"        );","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"rldefa":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":" * Translates the user input string into a command object.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"     * Takes in the user input and converts it into a command.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"     * @param input the user input string.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"     * @return the command object that represents the action that the user intends to make.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"        if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"            return parseDone(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"        if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"            return parseDelete(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"        if (input.startsWith(\"find \")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"            return parseFind(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"        return comprehendTask(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"    private static DeleteCommand parseDelete(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"        int deletedTaskNumber;","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"            deletedTaskNumber \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"            throw new DukeException(\"Invalid task number provided.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"        return new DeleteCommand(deletedTaskNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"    private static DoneCommand parseDone(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"        int completedTaskNumber;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"            completedTaskNumber \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"            throw new DukeException(\"Invalid task number provided.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"        return new DoneCommand(completedTaskNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"rldefa"},"content":"    private static AddCommand comprehendTask(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"rldefa"},"content":"        Task newTask;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"        if (input.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"            newTask \u003d new Todo(input.substring(5));","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"rldefa"},"content":"        } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"rldefa"},"content":"            int location \u003d input.indexOf(\"/by \");","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"rldefa"},"content":"            if (location \u003c 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"rldefa"},"content":"                throw new DukeException(\"Please provide a deadline.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"rldefa"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"rldefa"},"content":"            newTask \u003d new Deadline(input.substring(9, location - 1), input.substring(location + 4));","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"rldefa"},"content":"        } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"rldefa"},"content":"            int location \u003d input.indexOf(\"/at \");","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"rldefa"},"content":"            if (location \u003c 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"rldefa"},"content":"                throw new DukeException(\"Please provide an event time.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"rldefa"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"rldefa"},"content":"            newTask \u003d new Event(input.substring(6, location - 1), input.substring(location + 4));","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"rldefa"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"rldefa"},"content":"            throw new DukeException(\"Please specify a type of task!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"rldefa"},"content":"        return new AddCommand(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"rldefa"},"content":"    private static FindCommand parseFind(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"rldefa"},"content":"        return new FindCommand(input.substring(5));","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"rldefa":81}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import java.io.File; // Import the File class","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import java.io.FileNotFoundException; // Import this class to handle errors","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"import java.util.Scanner; // Import the Scanner class to read text files","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":" * Reads and writes to a specified file path.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    private String filePath;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"     * Create an instance to handle and writing to a specific file.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"     * @param filePath the path to the file to be read from and written to.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"     * Loads saved tasks from save file into an ArrayList.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"     * @return an ArrayList of tasks that are saved in the file.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"            ArrayList\u003cTask\u003e savedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"                return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"            Scanner myReader \u003d new Scanner(file);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"                String taskString \u003d data.substring(8);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"                String completed \u003d data.substring(4, 5);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"                Task newTask;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"                if (data.startsWith(\"T |\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"                    newTask \u003d new Todo(taskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"                } else if (data.startsWith(\"D |\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"                    int dividerPosition \u003d taskString.indexOf(\"|\");","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"                    newTask \u003d new Deadline(taskString.substring(0, dividerPosition - 2),","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"                            taskString.substring(dividerPosition + 2));","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"rldefa"},"content":"                } else if (data.startsWith(\"E |\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"rldefa"},"content":"                    int dividerPosition \u003d taskString.indexOf(\"|\");","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"rldefa"},"content":"                    newTask \u003d new Event(taskString.substring(0, dividerPosition - 2),","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"rldefa"},"content":"                            taskString.substring(dividerPosition + 2));","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"                    throw new DukeException(\"Save file corrupted.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"rldefa"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"rldefa"},"content":"                if (completed.equals(\"X\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"rldefa"},"content":"                    newTask.complete();","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"rldefa"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"rldefa"},"content":"                savedTasks.add(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"rldefa"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"rldefa"},"content":"            myReader.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"rldefa"},"content":"            return savedTasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"rldefa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"rldefa"},"content":"            throw new DukeException(\"Access file error\");","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"rldefa"},"content":"     * Saves the list of tasks into the save file.","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"rldefa"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"rldefa"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"rldefa"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath, false);","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"rldefa"},"content":"            tasks.forEach(task -\u003e {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"rldefa"},"content":"                try {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"rldefa"},"content":"                    writer.write(task.saveData() + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"rldefa"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"rldefa"},"content":"                    throw new DukeException(\"Boohoo something went wrong :(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"rldefa"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"rldefa"},"content":"            });","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"rldefa"},"content":"            writer.flush();","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"rldefa"},"content":"            writer.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"rldefa"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"rldefa"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"rldefa"},"content":"            throw new DukeException(\"File not found.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"rldefa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"rldefa"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"rldefa"},"content":"            throw new DukeException(\"Unable to write\");","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"rldefa":98}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":" * Encapsulates a general task.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"abstract class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"     * Creates a new task.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"     * @param description the description of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"     * Identifies whether the task is completed or not.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"     * @return \"X\" if it is done, otherwise \" \".","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"    public void complete() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"     * Formats the task into a string that is compliant with the save file format.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"     * @return a string representing the task to be saved in save file","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"    public abstract String saveData();","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rldefa":44}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import java.util.List;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":" * Encapsulates a list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"     * Creates the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"     * @param prevTasks the list of saved tasks from save file if any.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"    public TaskList(ArrayList\u003cTask\u003e prevTasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"        this.list \u003d prevTasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"        list.add(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"    public Task delete(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"        return list.remove(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"    public void forEach(Consumer\u003c? super Task\u003e action) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"        list.forEach(action);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"     * Marks the task at a specific index as complete.","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"     * @param index the position of the task to be marked as complete.","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"     * @return the completed task.","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"    public Task completeTask(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"        list.get(index).complete();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"        return list.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"     * Provides the number of tasks on this list.","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"     * @return size of the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"    public int size() {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"        return list.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"rldefa"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"rldefa"},"content":"        return list.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"rldefa"},"content":"     * Get all tasks that contains the given string.","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"rldefa"},"content":"     * @param query the string to be matched.","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"rldefa"},"content":"     * @return ArrayList of tasks that matches the query.","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"rldefa"},"content":"    public ArrayList\u003cTask\u003e findMatches(String query) {","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"rldefa"},"content":"        List\u003cTask\u003e tasks \u003d this.list.stream()","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"rldefa"},"content":"                .filter(task -\u003e task.description.contains(query))","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"rldefa"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"rldefa"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"rldefa":72}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":" * Encapsulates a to-do in the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"     * Creates the to-do.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"     * @param description the description of this task..","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"     * Formats the task into a string that is compliant with the save file format.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"     * @return a string representing the task to be saved in save file","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"    public String saveData() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"        return \"T | \" + this.getStatusIcon() + \" | \" + description;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rldefa":30}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    public void displayWelcome() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    public void displayFarewell() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"     * Prints the list of tasks provided.","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"     * @param taskList the list of tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"    public void printList(TaskList taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"        IntStream.range(0, taskList.size()).forEach(i -\u003e {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"            System.out.println((i + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"        });","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Unable to load file!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"--------------------------------------------------\");","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"    public void showError(String errorMsg) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"OOPS!! \" + errorMsg);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"    public void announceNewTask(Task newTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"added: \" + newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"rldefa"},"content":"     * Announces that a task has been completed.","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"rldefa"},"content":"     * @param completedTask the task that was complete.","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"    public void announceTaskCompletion(Task completedTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"rldefa"},"content":"        System.out.println(completedTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"rldefa"},"content":"     * Announces that a task has been deleted.","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"rldefa"},"content":"     * @param deletedTask","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"rldefa"},"content":"     * @param numTasksLeft","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"rldefa"},"content":"    public void announceTaskDeletion(Task deletedTask, int numTasksLeft) {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"rldefa"},"content":"        System.out.println(deletedTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Now you have \" + numTasksLeft + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"rldefa"},"content":"    public void closeScanner() {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"rldefa"},"content":"        this.scanner.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"rldefa"},"content":"     * Prints out a list of tasks that matches a search.","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"rldefa"},"content":"     * @param taskList the list of tasks that is already filtered.","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"rldefa"},"content":"    public void displayMatches(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"rldefa"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"rldefa"},"content":"        IntStream.range(0, taskList.size()).forEach(i -\u003e {","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"rldefa"},"content":"            System.out.println((i + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"rldefa"},"content":"        });","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"rldefa":90}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"rldefa":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"-":1,"rldefa":18}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"    public void initialTaskStatusTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"        Todo item \u003d new Todo(\"Mop floor\");","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"        assertEquals(\" \", item.getStatusIcon());","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"    public void completeTaskTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"        Todo item \u003d new Todo(\"Mop floor\");","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"        item.complete();","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"        assertEquals(\"X\", item.getStatusIcon());","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"    public void saveDeadlineTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"        Deadline task \u003d new Deadline(\"Eat cake\", \"2020-04-03\");","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"        assertEquals(\"D |   | Eat cake | 2020-04-03\", task.saveData());","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"    public void deadlineToStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"        Deadline task \u003d new Deadline(\"Birthday\", \"2020-01-15\");","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"        task.complete();","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"        assertEquals(\"[D][X] Birthday (by: Jan 15 2020)\", task.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rldefa":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"list","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"rldefa":8}}]
