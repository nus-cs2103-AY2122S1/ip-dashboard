[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CheahYan":18,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"todo run","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"deadline return book /by 11/04/2020 2000","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"done 2","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"deadline return book /by 04/11/2020 2000","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"todo run","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"event project meeting /at 25/09/2021 2200","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"todo tell Tom to wash the dishes","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"event meet Tommy at his house /at 02/11/2021 1000","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"done 2","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"CheahYan":9}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"# User Guide for Duke","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"### Adding task to be done: `todo`","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"Adds a task to be done to Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"Format: `todo TASK_TO_BE_DONE`","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"- `todo running`","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"- `todo wash the dishes`","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"### Adding event to attend: `event`","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"Adds an event to be attended to Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"Format: `event EVENT_TO_ATTEND /at DATE_TIME`","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"- DATE_TIME is to be in the format of dd/mm/yyyy HHmm, time will follow the 24hour clock format.","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"- `event project meeting /at 25/09/2021 2200`","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"- `event concert /at 25/12/2022 1500`","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"### Adding deadline to be completed: `deadline`","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"Adds a task with a deadline to be completed by to Duke. It will also be added as a reminder.","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"Format: `deadline TASK_TO_COMPLETED_BY_DEADLINE /at DATE_TIME`","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"- DATE_TIME is to be in the format of dd/mm/yyyy HHmm, time will follow the 24hour clock format.","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"- `deadline project /by 25/09/2021 2200`","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"- `deadline buy presents /by 25/12/2022 1200`","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"### Listing all tasks and reminders for deadlines to be completed: `list`","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"Shows a list of all tasks in Duke and also shows a list of all deadlines to be completed as a reminder.","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"Format: `list`","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"Examples: `list`","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"![Example](ExampleList.png)","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"### Marking task as done: `done`","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"Marks a task in Duke as done. If the task has a deadline, it will be removed from the reminder list in Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"CheahYan"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"- Deletes the task at the specified `INDEX`.","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"CheahYan"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"CheahYan"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"CheahYan"},"content":"Example:","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"- `done 2` marks the second task in the task list as done.","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"CheahYan"},"content":"  ![Example](ExampleDone.png)","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"### Deleting task from Duke: `delete`","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"CheahYan"},"content":"Deletes a task from the task list in Duke. If the task has a deadline, it will be removed from the reminder ","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"CheahYan"},"content":"list in Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"CheahYan"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"CheahYan"},"content":"- Deletes the task at the specified `INDEX`.","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"CheahYan"},"content":"- The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"CheahYan"},"content":"- The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"CheahYan"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"CheahYan"},"content":"- `delete 2` removes the second task in the task list. If it","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"CheahYan"},"content":"has a deadline, remove it from the reminder list too.","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"CheahYan"},"content":"![Example](ExampleDelete.png)","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"CheahYan"},"content":"### Finding tasks from Duke: `find`","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"CheahYan"},"content":"Finds tasks which descriptions contain the given String.","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"CheahYan"},"content":"Format: `find ANY_STRING`","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"CheahYan"},"content":"- Description of the tasks does not include the date and time of the task.","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"CheahYan"},"content":"Examples:","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"CheahYan"},"content":"- `find Tom` returns a list of tasks that contains the string Tom.","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"CheahYan"},"content":"![Example](ExampleFind.png)","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"CheahYan":69,"-":14}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":" * Represents a deadline that consists of a task to be completed by a specified date and time.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"     * Class constructor that constructs a Deadline Object.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"     * @param dateTime Date and time for the task to be completed by.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"    public Deadline(String description, String dateTime) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"            this.dateTime \u003d LocalDateTime.parse(dateTime, dateFormat);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"            throw new DukeException(\"you have to input the date and time like this! (eg. 11/03/1999 2000)\");","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"     * Returns a String representation of Deadline.","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"     * @return String representation of Deadline.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mma\");","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dateTime.format(dateFormat) + \")\";","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"CheahYan":41}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"    private void flip() {","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"CheahYan"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"CheahYan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"CheahYan"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"CheahYan"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"        db.flip();","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"CheahYan"},"content":"        return db;","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"CheahYan":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":" * Represents a Duke chatbot. It helps to collate tasks for the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"public class Duke {","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"    private static final int DESCRIPTION \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"    private static final int DATE_TIME \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"     * Class constructor that constructs a Duke object.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"     * @param filePath File Path for Storage to obtain saved data. If data does not exist, a new file will be created","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"     *                 with that filePath.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"            this.tasks \u003d storage.load();","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"            ui.showError(e);","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"     * Generates a response to the user input given.","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"     * @param input Input given by user.","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"     * @return Response to the input given.","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"        assert (this.tasks.getNoOfTasks() \u003e\u003d 0) : \"Number of tasks cannot be negative\";","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"            if (parser.isList()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"                return respondToList(parser);","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"            } else if (parser.isDone()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"                return respondToDone(parser);","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"            } else if (parser.isToDo()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"                return respondToToDo(parser);","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"            } else if (parser.isDeadline()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"                return respondToDeadline(parser);","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"            } else if (parser.isEvent()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"CheahYan"},"content":"                return respondToEvent(parser);","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"            } else if (parser.isDelete()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"CheahYan"},"content":"                return respondToDelete(parser);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"CheahYan"},"content":"            } else if (parser.isFind()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"                return respondToFind(parser);","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"CheahYan"},"content":"            } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"                throw new DukeException(\"I do not know what you want to do!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"CheahYan"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"            return ui.showError(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"CheahYan"},"content":"    private String respondToList(Parser parser) {","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"CheahYan"},"content":"        return this.ui.listAll(this.tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"CheahYan"},"content":"    private String respondToDone(Parser parser) {","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"CheahYan"},"content":"            this.tasks.done(parser.getSecondPartInInt());","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"CheahYan"},"content":"            this.storage.save(parser.getCommand());","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"CheahYan"},"content":"            this.storage.assertFile();","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"CheahYan"},"content":"            return this.ui.doneTask(this.tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"CheahYan"},"content":"            return this.ui.showError(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"CheahYan"},"content":"    private String respondToToDo(Parser parser) {","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"CheahYan"},"content":"            ToDo task \u003d new ToDo(parser.getSecondPart());","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"CheahYan"},"content":"            this.tasks.add(task);","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"CheahYan"},"content":"            this.storage.save(parser.getCommand());","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"CheahYan"},"content":"            this.storage.assertFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"CheahYan"},"content":"            return this.ui.addTask(this.tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"CheahYan"},"content":"            return this.ui.showError(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"CheahYan"},"content":"    private String respondToDeadline(Parser parser) {","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"CheahYan"},"content":"            Deadline task \u003d new Deadline(parser.splitSecondPartForDeadline()[DESCRIPTION],","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"CheahYan"},"content":"                    parser.splitSecondPartForDeadline()[DATE_TIME]);","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"CheahYan"},"content":"            this.tasks.add(task);","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"CheahYan"},"content":"            this.storage.save(parser.getCommand());","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"CheahYan"},"content":"            this.storage.assertFile();","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"CheahYan"},"content":"            return this.ui.addTask(this.tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"CheahYan"},"content":"            return this.ui.showError(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"CheahYan"},"content":"    private String respondToEvent(Parser parser) {","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"CheahYan"},"content":"            Event task \u003d new Event(parser.splitSecondPartForEvent()[DESCRIPTION],","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"CheahYan"},"content":"                    parser.splitSecondPartForEvent()[DATE_TIME]);","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"CheahYan"},"content":"            this.tasks.add(task);","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"CheahYan"},"content":"            this.storage.save(parser.getCommand());","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"CheahYan"},"content":"            this.storage.assertFile();","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"CheahYan"},"content":"            return this.ui.addTask(this.tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"CheahYan"},"content":"            return this.ui.showError(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"CheahYan"},"content":"    private String respondToDelete(Parser parser) {","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"CheahYan"},"content":"            this.tasks.delete(parser.getSecondPartInInt());","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"CheahYan"},"content":"            return this.ui.deleteTask(this.tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"CheahYan"},"content":"            return this.ui.showError(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"CheahYan"},"content":"    private String respondToFind(Parser parser) {","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"CheahYan"},"content":"            TaskList taskList \u003d this.tasks.find(parser.getSecondPart());","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"CheahYan"},"content":"            return this.ui.findTask(taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"CheahYan"},"content":"            return this.ui.showError(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":135,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"CheahYan":135,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":" * Represents exceptions that will be thrown when Duke runs.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"    protected String errorMessage;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"     * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"     * @param errorMessage Error message that describes the error that occurred.","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"     * Returns String representation of DukeException.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"     * @return String representation of DukeException.","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"        return \":(( sorry bud but \" + this.errorMessage;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"CheahYan":28}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":" * Represents an event that consists of a task to be done on a specified date and time.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"     * Class constructor that constructs a Event object.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"     * @param dateTime Date and time for the task to be done at.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"    public Event(String description, String dateTime) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"            DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"            this.dateTime \u003d LocalDateTime.parse(dateTime, dateFormat);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"            throw new DukeException(\"you have to input the date and time like this! (eg. 11/03/1999 2000)\");","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"     * Returns a String representation of Event.","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"     * @return String representation of Event.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mma\");","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.dateTime.format(dateFormat) + \")\";","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"CheahYan":41}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"public class Launcher {","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"CheahYan":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027serif\u0027\");","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(this.duke);","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"            stage.show();","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"CheahYan":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Girl.jpeg\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tentacle.jpeg\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"        this.duke \u003d d;","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"        );","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"CheahYan"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"CheahYan":53}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":" * Represents the user command given to Duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"public class Parser {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"    private String command;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"    private String[] twoPart;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"    private static final int SIZE_OF_TWO_PART \u003d 2;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"    private static final int FIRST_WORD \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"    private static final int REST_OF_COMMAND \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"    private static final String DEADLINE_COMMAND \u003d \" /by \";","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"    private static final String EVENT_COMMAND \u003d \" /at \";","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"     * Class constructor that constructs a Parser object. It also stores a String[] that splits the command into 2 parts","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"     * based on the first space (eg. \" \").","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"     * @param command The user command given.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"    public Parser(String command) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"        this.twoPart \u003d this.command.split(\" \", SIZE_OF_TWO_PART);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"     * Returns the user command given.","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"     * @return User command.","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"    public String getCommand() {","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"        return this.command;","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"     * Returns the second part of the user command as an int.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"     * @return Second part of user command as an int.","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"     * @throws DukeException If there is no second part or if the second part of the user command cannot be converted","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"     * into an int.","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"    public int getSecondPartInInt() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"            return Integer.valueOf(this.twoPart[REST_OF_COMMAND]);","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"            throw new DukeException(\"which specific task from the list? Give a number!\");","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"CheahYan"},"content":"            throw new DukeException(\"which specific task from the list? Give a number!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"CheahYan"},"content":"     * Returns the second part of the user command.","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"CheahYan"},"content":"     * @return Second part of user command","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"CheahYan"},"content":"     * @throws DukeException If there is no second part of user command.","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"CheahYan"},"content":"    public String getSecondPart() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"CheahYan"},"content":"            return this.twoPart[REST_OF_COMMAND];","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"CheahYan"},"content":"        } catch (ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"CheahYan"},"content":"            throw new DukeException(\"do remember to add your description!\");","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"CheahYan"},"content":"     * Returns a String array which consists of 2 components for Deadline, split from the second part of the user command.","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"CheahYan"},"content":"     * @return String array which contains components for a Deadline object.","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"CheahYan"},"content":"    public String[] splitSecondPartForDeadline() {","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"CheahYan"},"content":"        return this.twoPart[REST_OF_COMMAND].split(DEADLINE_COMMAND, SIZE_OF_TWO_PART);","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"CheahYan"},"content":"     * Returns a String array which consists of 2 components for Event, split from the second part of the user command.","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"CheahYan"},"content":"     * @return String array which contains components for a Event object.","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"CheahYan"},"content":"    public String[] splitSecondPartForEvent() {","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"CheahYan"},"content":"        return this.twoPart[REST_OF_COMMAND].split(EVENT_COMMAND, SIZE_OF_TWO_PART);","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"CheahYan"},"content":"     * Checks if the user command is list.","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"CheahYan"},"content":"     * @return True if user command is list.","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"CheahYan"},"content":"    public boolean isList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"CheahYan"},"content":"        return this.command.equals(\"list\");","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"CheahYan"},"content":"     * Checks if the user command is done.","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"CheahYan"},"content":"     * @return True if user command is done.","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"CheahYan"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"CheahYan"},"content":"        return this.twoPart[FIRST_WORD].equals(\"done\");","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"CheahYan"},"content":"     * Checks if the user command is todo.","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"CheahYan"},"content":"     * @return True if user command is todo.","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"CheahYan"},"content":"    public boolean isToDo() {","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"CheahYan"},"content":"        return this.twoPart[FIRST_WORD].equals(\"todo\");","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"CheahYan"},"content":"     * Checks if the user command is deadline.","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"CheahYan"},"content":"     * @return True if user command is deadline.","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"CheahYan"},"content":"    public boolean isDeadline() {","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"CheahYan"},"content":"        return this.twoPart[FIRST_WORD].equals(\"deadline\");","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":123,"author":{"gitId":"CheahYan"},"content":"     * Checks if the user command is event.","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":125,"author":{"gitId":"CheahYan"},"content":"     * @return True if user command is event.","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"CheahYan"},"content":"    public boolean isEvent() {","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"CheahYan"},"content":"        return this.twoPart[FIRST_WORD].equals(\"event\");","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"CheahYan"},"content":"     * Checks if the user command is delete.","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"CheahYan"},"content":"     * @return True if user command is delete.","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"CheahYan"},"content":"    public boolean isDelete() {","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"CheahYan"},"content":"        return this.twoPart[FIRST_WORD].equals(\"delete\");","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"CheahYan"},"content":"     * Checks if the user command is find.","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"CheahYan"},"content":"     * @return True if user command is find.","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"CheahYan"},"content":"    public boolean isFind() {","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"CheahYan"},"content":"        return this.twoPart[FIRST_WORD].equals(\"find\");","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":148,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"CheahYan":148}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import java.io.File;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":" * Represents saved data for Duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"public class Storage {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"    private File storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"    private String fileName;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"    private static final int DESCRIPTION \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"    private static final int DATE_TIME \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"     * Class constructor that constructs a Storage object.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"     * @param fileName File name to access file in directory.","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"        this.storage \u003d new File(fileName);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"    private void obtainFile() throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"            this.storage.getParentFile().mkdirs();","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"            this.storage.createNewFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"        } catch (IOException error) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"            throw new DukeException(\"there was a error creating a file!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"     * Loads a TaskList object based on the data saved within Storage. If data does not exist, create a new file","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"     * within Storage to store future data and return an empty TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"     * @return The list of tasks the user saved in Storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"     * @throws DukeException If the user did not create a folder named \"data\" within the main project directory.","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"        obtainFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"            // Initialisation of required objects","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"            Scanner fileScanner \u003d new Scanner(this.storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"CheahYan"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"CheahYan"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"CheahYan"},"content":"                String fileData \u003d fileScanner.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"                Parser parser \u003d new Parser(fileData);","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"                //Compute and generate TaskList based on scanned data","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"CheahYan"},"content":"                if (parser.isDone()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"CheahYan"},"content":"                    loadForDone(parser, taskList);","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"                } else if (parser.isToDo()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"CheahYan"},"content":"                    loadForToDo(parser, taskList);","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"CheahYan"},"content":"                } else if (parser.isDeadline()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"CheahYan"},"content":"                    loadForDeadline(parser, taskList);","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"CheahYan"},"content":"                } else if (parser.isEvent()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"CheahYan"},"content":"                    loadForEvent(parser, taskList);","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"CheahYan"},"content":"                } else if (parser.isDelete()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"CheahYan"},"content":"                    loadForDelete(parser, taskList);","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"CheahYan"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"CheahYan"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"CheahYan"},"content":"            return taskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"CheahYan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"CheahYan"},"content":"            throw new DukeException(\"we could not find your file.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"CheahYan"},"content":"    private void loadForDone(Parser parser, TaskList taskList) {","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"CheahYan"},"content":"            taskList.done(parser.getSecondPartInInt());","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"CheahYan"},"content":"            //Should not have an exception as it works fine previously when the code is run on Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"CheahYan"},"content":"    private void loadForToDo(Parser parser, TaskList taskList) {","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"CheahYan"},"content":"        ToDo task \u003d null;","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"CheahYan"},"content":"            task \u003d new ToDo(parser.getSecondPart());","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"CheahYan"},"content":"            //Should not have an exception as it works fine previously when the code is run on Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"CheahYan"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"CheahYan"},"content":"    private void loadForDeadline(Parser parser, TaskList taskList) {","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"CheahYan"},"content":"        Deadline task \u003d null;","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"CheahYan"},"content":"            task \u003d new Deadline(parser.splitSecondPartForDeadline()[DESCRIPTION],","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"CheahYan"},"content":"                    parser.splitSecondPartForDeadline()[DATE_TIME]);","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"CheahYan"},"content":"            //Should not have an exception as it works fine previously when the code is run on Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"CheahYan"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"CheahYan"},"content":"    private void loadForEvent(Parser parser, TaskList taskList) {","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"CheahYan"},"content":"        Event task \u003d null;","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"CheahYan"},"content":"            task \u003d new Event(parser.splitSecondPartForEvent()[DESCRIPTION],","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"CheahYan"},"content":"                    parser.splitSecondPartForEvent()[DATE_TIME]);","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"CheahYan"},"content":"            //Should not have an exception as it works fine previously when the code is run on Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"CheahYan"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"CheahYan"},"content":"    private void loadForDelete(Parser parser, TaskList taskList) {","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"CheahYan"},"content":"            taskList.delete(parser.getSecondPartInInt());","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"CheahYan"},"content":"            //Should not have an exception as it works fine previously when the code is run on Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"CheahYan"},"content":"    private void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"CheahYan"},"content":"        FileWriter fw \u003d new FileWriter(this.fileName, true); // create a FileWriter in append mode","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"CheahYan"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"CheahYan"},"content":"        fw.close();","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"CheahYan"},"content":"     * Saves user command into Storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"CheahYan"},"content":"     * @param history The text command given by the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"CheahYan"},"content":"     * @throws DukeException If the IO operation fails.","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"CheahYan"},"content":"    public void save(String history) throws DukeException{","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"CheahYan"},"content":"            appendToFile(history + System.lineSeparator());","lastModifiedDate":"2021-09-01"},{"lineNumber":139,"author":{"gitId":"CheahYan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"CheahYan"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-09-03"},{"lineNumber":141,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"CheahYan"},"content":"    public void assertFile() {","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"CheahYan"},"content":"        assert this.storage.exists() : \"File should exist when there is data to be saved\";","lastModifiedDate":"2021-09-20"},{"lineNumber":146,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"CheahYan":147}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":" * Represents a task. A Task always has a description.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"    protected String description;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"     * Class constructor that constructs a Task object.","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"        return (isDone) ? \"X\" : \" \";","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"        ","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"    public boolean isKeyword(String keyword) {","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"        if (this.description.contains(keyword)) {","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"            return true;","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"            return false;","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"     * Updates that the task is done.","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"     * Returns a String representation of Task.","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"     * @return String representation of Task.","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"CheahYan":48}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":" * Represents a list of tasks processed by Duke.","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"public class TaskList {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"    private Task mostRecent;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"    private ArrayList\u003cTask\u003e reminders;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"     * Class constructor that constructs a TaskList object.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"        this.reminders \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"     * Returns number of tasks in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"    public int getNoOfTasks() {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"     * Returns a String representation of the tasks in TaskList.","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"     * @return String representation of the tasks in TaskList.","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"        // Precompute information required","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"        int length \u003d this.tasks.size();","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"        String list \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"        // Iterate through all the tasks in the list","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"            list \u003d list + (i + 1) + \". \" + this.tasks.get(i) +\"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"        return list;","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"CheahYan"},"content":"     * Returns number of reminders in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"CheahYan"},"content":"     * @return Number of reminders in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"    public int getNoOfReminders() {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"CheahYan"},"content":"        return this.reminders.size();","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"     * Returns a String representation of the reminders in TaskList.","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"CheahYan"},"content":"     * @return String representation of the reminders in TaskList.","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"CheahYan"},"content":"    public String reminderToString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"CheahYan"},"content":"        int length \u003d this.reminders.size();","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"CheahYan"},"content":"        String list \u003d \"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"CheahYan"},"content":"        // Iterate through all the tasks in the list","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"CheahYan"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"CheahYan"},"content":"            list \u003d list + (i + 1) + \". \" + this.reminders.get(i) +\"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"CheahYan"},"content":"        return list;","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"CheahYan"},"content":"     * Returns task that is most recently added or deleted.","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"CheahYan"},"content":"     * @return Task.","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"CheahYan"},"content":"    public Task getMostRecent() {","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"CheahYan"},"content":"        return this.mostRecent;","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"CheahYan"},"content":"     * Adds task to the taskList. Assigns this task to be mostRecent.","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"CheahYan"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"CheahYan"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"CheahYan"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"CheahYan"},"content":"        this.mostRecent \u003d task;","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"CheahYan"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"CheahYan"},"content":"            this.reminders.add(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"CheahYan"},"content":"    private boolean isZeroOrNegative(int number) {","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"CheahYan"},"content":"        return number \u003c\u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"CheahYan"},"content":"     * Deletes task from the taskList. Assigns this task to be mostRecent. If the task is present in reminders list,","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"CheahYan"},"content":"     * delete it too.","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"CheahYan"},"content":"     * @param taskIndex Index number of the task to be removed.","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"CheahYan"},"content":"     * @throws DukeException If the user puts in an integer that is less than or equals to 0,","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"CheahYan"},"content":"     * or an integer larger than the number of task in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"CheahYan"},"content":"    public void delete(int taskIndex) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"CheahYan"},"content":"        int length_tasks \u003d this.tasks.size();","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"CheahYan"},"content":"        if (taskIndex \u003e length_tasks || isZeroOrNegative(taskIndex)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"CheahYan"},"content":"            throw new DukeException(\"you have to choose a number based on the list!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"CheahYan"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"CheahYan"},"content":"            Task removed \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"CheahYan"},"content":"            this.mostRecent \u003d removed;","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"CheahYan"},"content":"            this.tasks.remove(taskIndex - 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"CheahYan"},"content":"            int length_reminders \u003d this.reminders.size();","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"CheahYan"},"content":"            for (int i \u003d 0; i \u003c length_reminders; i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"CheahYan"},"content":"                Task reminder \u003d this.reminders.get(i);","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"CheahYan"},"content":"                if (removed.equals(reminder)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"CheahYan"},"content":"                    this.reminders.remove(i);","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"CheahYan"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"CheahYan"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"CheahYan"},"content":"     * Marks the task in the taskList as done. The task is selected based on the index number given.","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"CheahYan"},"content":"     * @param taskIndex Integer given to obtain task from taskList.","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"CheahYan"},"content":"     * @throws DukeException If the user puts in an integer that is less than or equals to 0,","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"CheahYan"},"content":"     * or an integer larger than the number of task in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"CheahYan"},"content":"    public void done(int taskIndex) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"CheahYan"},"content":"        int length \u003d this.tasks.size();","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"CheahYan"},"content":"        if (taskIndex \u003e length || isZeroOrNegative(taskIndex)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"CheahYan"},"content":"            throw new DukeException(\"you have to choose a number based on the list!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"CheahYan"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"CheahYan"},"content":"            Task task \u003d this.tasks.get(taskIndex - 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"CheahYan"},"content":"            task.setDone();","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"CheahYan"},"content":"            this.mostRecent \u003d task;","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"CheahYan"},"content":"            int length_reminders \u003d this.reminders.size();","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"CheahYan"},"content":"            for (int i \u003d 0; i \u003c length_reminders; i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"CheahYan"},"content":"                Task reminder \u003d this.reminders.get(i);","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"CheahYan"},"content":"                if (task.equals(reminder)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"CheahYan"},"content":"                    this.reminders.remove(i);","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"CheahYan"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"CheahYan"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":153,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":154,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":155,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"CheahYan"},"content":"     * Finds all the tasks in the TaskList that contains the keyword.","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"CheahYan"},"content":"     * @param keyword String to be identified within each task.","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"CheahYan"},"content":"     * @return TaskList containing tasks that contains the keyword.","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"CheahYan"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"CheahYan"},"content":"        int length \u003d this.tasks.size();","lastModifiedDate":"2021-09-09"},{"lineNumber":163,"author":{"gitId":"CheahYan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-09"},{"lineNumber":164,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":165,"author":{"gitId":"CheahYan"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2021-09-09"},{"lineNumber":166,"author":{"gitId":"CheahYan"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2021-09-09"},{"lineNumber":167,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":168,"author":{"gitId":"CheahYan"},"content":"            if (task.isKeyword(keyword)) {","lastModifiedDate":"2021-09-09"},{"lineNumber":169,"author":{"gitId":"CheahYan"},"content":"                taskList.add(task);","lastModifiedDate":"2021-09-09"},{"lineNumber":170,"author":{"gitId":"CheahYan"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":171,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":172,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":173,"author":{"gitId":"CheahYan"},"content":"        return taskList;","lastModifiedDate":"2021-09-09"},{"lineNumber":174,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":175,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"CheahYan":175}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":" * Represents a task to be done.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"     * Class constuctor that constructs a ToDo object.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"     * Returns a String representation of ToDo.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"     * @return String representation of ToDo.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"CheahYan":26}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":" * Represents the user interface that will be seen by the user when using Duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"public class Ui {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"     * Class constructor that constructs an Ui object.","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"    public Ui() {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"     * Displays error message.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"     * @param error DukeException that was caught.","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"    public String showError(DukeException error) {","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"        return error.toString();","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"    private String showReminder(TaskList taskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"        if (taskList.getNoOfReminders() \u003d\u003d 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"            return \"\\n\\nYou did not set any reminders for yourself thus far!!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"            return \"\\n\\nAlso, please be reminded to do these tasks by the deadline!!\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"                    + taskList.reminderToString()","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"                    + \"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"     * Displays the tasks in the TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"     * @param taskList TaskList to be displayed.","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"    public String listAll(TaskList taskList) {","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"        return \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"                + taskList","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"                + showReminder(taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"     * Displays done message with the associated task.","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"     * @param taskList The taskList that is being processed, task will be obtained from the most recent.","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"    public String doneTask(TaskList taskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"CheahYan"},"content":"        return \"Nice! I have marked this task as done!\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"                + taskList.getMostRecent()","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"CheahYan"},"content":"                + showReminder(taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"     * Displays message that a task is added and also informs how many tasks are in the list after.","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"CheahYan"},"content":"     * @param taskList TaskList that the task is added to.","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"CheahYan"},"content":"    public String addTask(TaskList taskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"CheahYan"},"content":"        int length \u003d taskList.getNoOfTasks();","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"CheahYan"},"content":"        return \"Added task:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"CheahYan"},"content":"                + taskList.getMostRecent() + \"\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"CheahYan"},"content":"                + \"You have \" + length + \" tasks in the list\"","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"CheahYan"},"content":"                + showReminder(taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"CheahYan"},"content":"     * Displays message that a task is deleted and also informs how many tasks are in the list after.","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"CheahYan"},"content":"     * @param taskList TaskList that the task is deleted from.","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"CheahYan"},"content":"    public String deleteTask(TaskList taskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"CheahYan"},"content":"        int length \u003d taskList.getNoOfTasks();","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"CheahYan"},"content":"        return \"Ok! I have removed this task:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"CheahYan"},"content":"                + taskList.getMostRecent() + \"\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"CheahYan"},"content":"                + \"Now you have \" + length + \" tasks in the list.\"","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"CheahYan"},"content":"                + showReminder(taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"CheahYan"},"content":"    public String findTask(TaskList taskList) {","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"CheahYan"},"content":"        int length \u003d taskList.getNoOfTasks();","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"CheahYan"},"content":"        if (length !\u003d 0) {","lastModifiedDate":"2021-09-09"},{"lineNumber":87,"author":{"gitId":"CheahYan"},"content":"            return \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"CheahYan"},"content":"                    + taskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"CheahYan"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":90,"author":{"gitId":"CheahYan"},"content":"            return \"Oh no there are no matching tasks in your list :((\";","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"CheahYan":94}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: black;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" contentDisplay\u003d\"CENTER\" ellipsisString\u003d\"\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"#fdfdfd\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"CheahYan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" onMouseClicked\u003d\"#handleUserInput\" onTouchPressed\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"CheahYan":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"    void testStringConversion() {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"        Deadline deadline \u003d null;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"            deadline \u003d new Deadline(\"return book\", \"02/02/2022 1800\");","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"            fail();","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"        assertEquals(\"[D][ ] return book (by: 02 Feb 2022 06:00PM)\", deadline.toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"CheahYan":20}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"public class DukeTest {","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"CheahYan":12}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"public class TaskListTest {","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"    void testStringConversion() {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"        duke.TaskList tasklist \u003d new duke.TaskList();","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"            duke.Deadline deadline \u003d new duke.Deadline(\"return book\", \"02/02/2022 1800\");","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"            duke.Event event \u003d new duke.Event(\"date with Mary Jane\", \"05/11/2024 2000\");","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"            duke.ToDo todo1 \u003d new duke.ToDo(\"go for a run\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"            duke.ToDo todo2 \u003d new duke.ToDo(\"eat dinner\");","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"            tasklist.add(deadline);","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"            tasklist.add(event);","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"            tasklist.add(todo1);","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"            tasklist.add(todo2);","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"            fail();","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"            tasklist.done(3);","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"            fail();","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"        String expected \u003d \"1. [D][ ] return book (by: 02 Feb 2022 06:00PM)\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"                \"2. [E][ ] date with Mary Jane (at: 05 Nov 2024 08:00PM)\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"                \"3. [T][X] go for a run\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"                \"4. [T][ ] eat dinner\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"        assertEquals(expected, tasklist.toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"    void testNumberOfTasks() {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"        duke.TaskList tasklist1 \u003d new duke.TaskList();","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"            duke.Deadline deadline \u003d new duke.Deadline(\"return book\", \"02/02/2022 1800\");","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"            duke.Event event \u003d new duke.Event(\"date with Mary Jane\", \"05/11/2024 2000\");","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"            duke.ToDo todo1 \u003d new duke.ToDo(\"go for a run\");","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"            duke.ToDo todo2 \u003d new duke.ToDo(\"eat dinner\");","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"            tasklist1.add(deadline);","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"            tasklist1.add(event);","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"            tasklist1.add(todo1);","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"            tasklist1.add(todo2);","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"CheahYan"},"content":"            fail();","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"CheahYan"},"content":"            tasklist1.done(3);","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"CheahYan"},"content":"            fail();","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"CheahYan"},"content":"        duke.TaskList tasklist2 \u003d new duke.TaskList();","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"CheahYan"},"content":"        assertEquals(4, tasklist1.getNoOfTasks());","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"        assertEquals(0, tasklist2.getNoOfTasks());","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"CheahYan":62}}]
