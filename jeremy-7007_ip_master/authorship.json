[{"path":"Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"T|0|Test todo","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"D|1|Test deadline|2021-12-21 12:21","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"E|0|Test event|2021-08-24 12:35","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"T|1|Test second todo","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jeremy-7007":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"        return (\"[D]\" + super.toString() + \" (by: \" + this.by.format(formatter) + \")\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"        return (\"D|\" + super.getStatusNumber() + \"|\" + super.getDescription()","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"                + \"|\" + this.by.format(formatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jeremy-7007":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"        System.out.println(\"Hello! I\u0027m Nukem\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"                + \"What can I do for you?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"        ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"            File myObj \u003d new File(\"./Duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"                String item \u003d myReader.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"                String[] splitItem \u003d item.split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"                String taskType \u003d splitItem[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"                String completed \u003d splitItem[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"                String desc \u003d splitItem[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"                String date \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"                if (splitItem.length \u003e 3) date \u003d splitItem[3];","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"                Task nextTask \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"T\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"                        nextTask \u003d new Todo(desc);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"D\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"                        nextTask \u003d new Deadline(desc, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"E\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"                        nextTask \u003d new Event(desc, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"                if (completed.equals(\"1\") \u0026\u0026 nextTask !\u003d null) nextTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"                storage.add(nextTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"            myReader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"                File myObj \u003d new File(\"./Duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"                if (myObj.createNewFile()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"                    System.out.println(\"File created: \" + myObj.getName());","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"                    System.out.println(\"File already exists.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"                System.out.println(\"Error occurred while creating the file\");","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"        String tempString;","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"jeremy-7007"},"content":"        // Keep asking for input as long as \"bye\" is not typed","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"jeremy-7007"},"content":"        while (!(tempString \u003d input.nextLine()).equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"jeremy-7007"},"content":"            // Split the input into an array of words separated by spaces","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"            String[] wordArray \u003d tempString.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"jeremy-7007"},"content":"                // Check the first word in the input for specific commands","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"jeremy-7007"},"content":"                switch (wordArray[0]) {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"\"):  // Nothing is typed","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"                        throw new DukeException(\"Please enter a command!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"list\"):  // \"list\" is typed as the first word","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"                        // list all the tasks only if \"list\" is the only word in the input","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"                        if (wordArray.length \u003e 1) { // if \"list\" is followed by any word, show a warning","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"                            throw new DukeException(\"Command \u0027list\u0027 should not take any input!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"                        } else {    // list all the tasks","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"                            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"jeremy-7007"},"content":"                            for (int i \u003d 0; i \u003c storage.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"jeremy-7007"},"content":"                                Task nextTask \u003d storage.get(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"jeremy-7007"},"content":"                                System.out.println((i + 1)","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"jeremy-7007"},"content":"                                        + \".\"","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"jeremy-7007"},"content":"                                        + nextTask.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"jeremy-7007"},"content":"                            }","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"jeremy-7007"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"jeremy-7007"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"done\"):  // \"done\" is the first word in the input","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"jeremy-7007"},"content":"                        if (wordArray.length !\u003d 2) {    // if there are not exactly 2 words in the input, show a warning","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"jeremy-7007"},"content":"                            throw new DukeException(\"Please follow command \u0027done\u0027 with an integer!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"jeremy-7007"},"content":"                        } else {    // if there are exactly 2 words in the input...","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"jeremy-7007"},"content":"                            try {   // if the second word is an integer, mark the corresponding task as done","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"jeremy-7007"},"content":"                                int tempIndex \u003d Integer.parseInt(wordArray[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"jeremy-7007"},"content":"                                Task tempTask \u003d storage.get(tempIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"jeremy-7007"},"content":"                                tempTask.markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"jeremy-7007"},"content":"                                rewriteFile(storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"jeremy-7007"},"content":"                                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"jeremy-7007"},"content":"                                        + \"  \"","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"jeremy-7007"},"content":"                                        + tempTask.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"jeremy-7007"},"content":"                            } catch (NumberFormatException nfe) {   // if 2nd word is not integer, show a warning","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"jeremy-7007"},"content":"                                throw new DukeException(\"Please follow command \u0027done\u0027 with an integer!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"jeremy-7007"},"content":"                            } catch (IndexOutOfBoundsException oob) {   // If the task number is out of bound, warn","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"jeremy-7007"},"content":"                                throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"jeremy-7007"},"content":"                            }","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"jeremy-7007"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"jeremy-7007"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"todo\"):  // \"todo\" is typed as the first word","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"jeremy-7007"},"content":"                        if (wordArray.length \u003c 2) { // if nothing is typed after the command, warn","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"jeremy-7007"},"content":"                            throw new DukeException(\"Please enter a task name!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"jeremy-7007"},"content":"                        } else {    // else, add the new task with everything behind the command as description","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"jeremy-7007"},"content":"                            String newDesc \u003d tempString.substring(5);","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"jeremy-7007"},"content":"                            Task newTodo \u003d new Todo(newDesc);","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"jeremy-7007"},"content":"                            storage.add(newTodo);","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"jeremy-7007"},"content":"                            writeTask(newTodo);","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"jeremy-7007"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"jeremy-7007"},"content":"                                    + \"  \" + newTodo.toString() + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"jeremy-7007"},"content":"                                    + \"Now you have \" + storage.size()","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"jeremy-7007"},"content":"                                    + \" task\" + (storage.size() \u003e 1 ? \"s\" : \"\") + \" in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"jeremy-7007"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"jeremy-7007"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"deadline\"):  // \"deadline\" is typed as the first word","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"jeremy-7007"},"content":"                        if (wordArray.length \u003c 4) { // if less than 4 words are typed, warn","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"jeremy-7007"},"content":"                            throw new DukeException(","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"jeremy-7007"},"content":"                                    \"Please follow format: \u0027deadline [task name] /by [yyyy-MM-dd HH:mm]\u0027\");","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"jeremy-7007"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"jeremy-7007"},"content":"                        // Scan through the input to extract the description before \"/by\"","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"jeremy-7007"},"content":"                        // and the date after \"/by\"","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"jeremy-7007"},"content":"                        String newDeadlineDesc \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"jeremy-7007"},"content":"                        String newBy \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"jeremy-7007"},"content":"                        int deadlinePointer \u003d 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"jeremy-7007"},"content":"                        while (deadlinePointer \u003c wordArray.length \u0026\u0026 !wordArray[deadlinePointer].equals(\"/by\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"jeremy-7007"},"content":"                            newDeadlineDesc +\u003d wordArray[deadlinePointer] + \" \";","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"jeremy-7007"},"content":"                            deadlinePointer++;","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"jeremy-7007"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"jeremy-7007"},"content":"                        deadlinePointer++;","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"jeremy-7007"},"content":"                        newDeadlineDesc \u003d newDeadlineDesc.trim();   // delete the last space","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"jeremy-7007"},"content":"                        while (deadlinePointer \u003c wordArray.length) {","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"jeremy-7007"},"content":"                            newBy +\u003d wordArray[deadlinePointer] + \" \";","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"jeremy-7007"},"content":"                            deadlinePointer++;","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"jeremy-7007"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"jeremy-7007"},"content":"                        newBy \u003d newBy.trim();   // delete the last space","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"jeremy-7007"},"content":"                        if (newDeadlineDesc.equals(\"\") || newBy.equals(\"\")) {   // if either the description or date is empty","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"jeremy-7007"},"content":"                            throw new DukeException(","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"jeremy-7007"},"content":"                                    \"Please follow format: \u0027deadline [task name] /by [yyyy-MM-dd HH:mm]\u0027\");","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"jeremy-7007"},"content":"                        } else {    // else add a new Deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"jeremy-7007"},"content":"                            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"jeremy-7007"},"content":"                                Task newDeadline \u003d new Deadline(newDeadlineDesc, newBy);","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"jeremy-7007"},"content":"                                storage.add(newDeadline);","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"jeremy-7007"},"content":"                                writeTask(newDeadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"jeremy-7007"},"content":"                                System.out.println(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"jeremy-7007"},"content":"                                        + \"  \" + newDeadline.toString() + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"jeremy-7007"},"content":"                                        + \"Now you have \" + storage.size()","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"jeremy-7007"},"content":"                                        + \" task\" + (storage.size() \u003e 1 ? \"s\" : \"\") + \" in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"jeremy-7007"},"content":"                            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"jeremy-7007"},"content":"                                throw new DukeException(","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"jeremy-7007"},"content":"                                        \"Please follow format: \u0027deadline [task name] /by [yyyy-MM-dd HH:mm]\u0027\");","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"jeremy-7007"},"content":"                            }","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"jeremy-7007"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"jeremy-7007"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"event\"): // \"event\" is typed as the first word","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"jeremy-7007"},"content":"                        if (wordArray.length \u003c 4) { // if less than 4 words are typed, warn","lastModifiedDate":"2021-08-19"},{"lineNumber":167,"author":{"gitId":"jeremy-7007"},"content":"                            throw new DukeException(","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"jeremy-7007"},"content":"                                    \"Please follow format: \u0027event [task name] /at [yyyy-MM-dd HH:mm]\u0027\");","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"jeremy-7007"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"jeremy-7007"},"content":"                        // Scan through the input to extract the description before \"/at\"","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"jeremy-7007"},"content":"                        // and the date after \"/at\"","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"jeremy-7007"},"content":"                        String newEventDesc \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"jeremy-7007"},"content":"                        String newAt \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"jeremy-7007"},"content":"                        int eventPointer \u003d 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"jeremy-7007"},"content":"                        while (eventPointer \u003c wordArray.length \u0026\u0026 !wordArray[eventPointer].equals(\"/at\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"jeremy-7007"},"content":"                            newEventDesc +\u003d wordArray[eventPointer] + \" \";","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"jeremy-7007"},"content":"                            eventPointer++;","lastModifiedDate":"2021-08-19"},{"lineNumber":178,"author":{"gitId":"jeremy-7007"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"jeremy-7007"},"content":"                        eventPointer++;","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"jeremy-7007"},"content":"                        newEventDesc \u003d newEventDesc.trim(); // delete the last space","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"jeremy-7007"},"content":"                        while (eventPointer \u003c wordArray.length) {","lastModifiedDate":"2021-08-19"},{"lineNumber":183,"author":{"gitId":"jeremy-7007"},"content":"                            newAt +\u003d wordArray[eventPointer] + \" \";","lastModifiedDate":"2021-08-19"},{"lineNumber":184,"author":{"gitId":"jeremy-7007"},"content":"                            eventPointer++;","lastModifiedDate":"2021-08-19"},{"lineNumber":185,"author":{"gitId":"jeremy-7007"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":186,"author":{"gitId":"jeremy-7007"},"content":"                        newAt \u003d newAt.trim();   // delete the last space","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"jeremy-7007"},"content":"                        if (newEventDesc.equals(\"\") || newAt.equals(\"\")) {  // if either the description or date is empty","lastModifiedDate":"2021-08-19"},{"lineNumber":188,"author":{"gitId":"jeremy-7007"},"content":"                            throw new DukeException(","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"jeremy-7007"},"content":"                                    \"Please follow format: \u0027event [task name] /at [yyyy-MM-dd HH:mm]\u0027\");","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"jeremy-7007"},"content":"                        } else {    // else add a new Event","lastModifiedDate":"2021-08-19"},{"lineNumber":191,"author":{"gitId":"jeremy-7007"},"content":"                            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"jeremy-7007"},"content":"                                Task newEvent \u003d new Event(newEventDesc, newAt);","lastModifiedDate":"2021-08-19"},{"lineNumber":193,"author":{"gitId":"jeremy-7007"},"content":"                                storage.add(newEvent);","lastModifiedDate":"2021-08-19"},{"lineNumber":194,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"jeremy-7007"},"content":"                                writeTask(newEvent);","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"jeremy-7007"},"content":"                                System.out.println(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":198,"author":{"gitId":"jeremy-7007"},"content":"                                        + \"  \" + newEvent.toString() + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":199,"author":{"gitId":"jeremy-7007"},"content":"                                        + \"Now you have \" + storage.size()","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"jeremy-7007"},"content":"                                        + \" task\" + (storage.size() \u003e 1 ? \"s\" : \"\") + \" in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":201,"author":{"gitId":"jeremy-7007"},"content":"                            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"jeremy-7007"},"content":"                                throw new DukeException(","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"jeremy-7007"},"content":"                                        \"Please follow format: \u0027event [task name] /at [yyyy-MM-dd HH:mm]\u0027\");","lastModifiedDate":"2021-08-25"},{"lineNumber":204,"author":{"gitId":"jeremy-7007"},"content":"                            }","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"jeremy-7007"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":206,"author":{"gitId":"jeremy-7007"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"delete\"):    // \"delete\" is typed as the first word","lastModifiedDate":"2021-08-19"},{"lineNumber":208,"author":{"gitId":"jeremy-7007"},"content":"                        if (wordArray.length !\u003d 2) {    // if there are not exactly 2 words in the input, show a warning","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"jeremy-7007"},"content":"                            throw new DukeException(\"Please follow command \u0027delete\u0027 with an integer!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":210,"author":{"gitId":"jeremy-7007"},"content":"                        } else {    // if there are exactly 2 words in the input...","lastModifiedDate":"2021-08-19"},{"lineNumber":211,"author":{"gitId":"jeremy-7007"},"content":"                            try {   // if the second word is an integer, delete the corresponding task","lastModifiedDate":"2021-08-19"},{"lineNumber":212,"author":{"gitId":"jeremy-7007"},"content":"                                int tempIndex \u003d Integer.parseInt(wordArray[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":213,"author":{"gitId":"jeremy-7007"},"content":"                                String taskString \u003d storage.get(tempIndex).toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":214,"author":{"gitId":"jeremy-7007"},"content":"                                storage.remove(tempIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":215,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"jeremy-7007"},"content":"                                rewriteFile(storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"jeremy-7007"},"content":"                                System.out.println(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":219,"author":{"gitId":"jeremy-7007"},"content":"                                        + \"  \"","lastModifiedDate":"2021-08-19"},{"lineNumber":220,"author":{"gitId":"jeremy-7007"},"content":"                                        + taskString + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":221,"author":{"gitId":"jeremy-7007"},"content":"                                        + \"Now you have \" + storage.size()","lastModifiedDate":"2021-08-19"},{"lineNumber":222,"author":{"gitId":"jeremy-7007"},"content":"                                        + \" task\" + (storage.size() \u003e 1 ? \"s\" : \"\") + \" in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":223,"author":{"gitId":"jeremy-7007"},"content":"                            } catch (NumberFormatException nfe) {   // if 2nd word is not integer, show a warning","lastModifiedDate":"2021-08-19"},{"lineNumber":224,"author":{"gitId":"jeremy-7007"},"content":"                                throw new DukeException(\"Please follow command \u0027delete\u0027 with an integer!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":225,"author":{"gitId":"jeremy-7007"},"content":"                            } catch (IndexOutOfBoundsException oob) {   // If the task number is out of bound, warn","lastModifiedDate":"2021-08-19"},{"lineNumber":226,"author":{"gitId":"jeremy-7007"},"content":"                                throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":227,"author":{"gitId":"jeremy-7007"},"content":"                            }","lastModifiedDate":"2021-08-19"},{"lineNumber":228,"author":{"gitId":"jeremy-7007"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":229,"author":{"gitId":"jeremy-7007"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":230,"author":{"gitId":"jeremy-7007"},"content":"                    default:    // No command word is recognised","lastModifiedDate":"2021-08-19"},{"lineNumber":231,"author":{"gitId":"jeremy-7007"},"content":"                        throw new DukeException(\"Command not recognised!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":232,"author":{"gitId":"jeremy-7007"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":233,"author":{"gitId":"jeremy-7007"},"content":"            } catch (DukeException dE) {","lastModifiedDate":"2021-08-19"},{"lineNumber":234,"author":{"gitId":"jeremy-7007"},"content":"                System.out.println(dE.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":235,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":236,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":237,"author":{"gitId":"jeremy-7007"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":239,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"jeremy-7007"},"content":"    public static void writeTask(Task task) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":241,"author":{"gitId":"jeremy-7007"},"content":"        String newString \u003d \"\\n\" + task.toStorageString();","lastModifiedDate":"2021-08-24"},{"lineNumber":242,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":243,"author":{"gitId":"jeremy-7007"},"content":"            FileWriter writer \u003d new FileWriter(\"./Duke.txt\", true);","lastModifiedDate":"2021-08-24"},{"lineNumber":244,"author":{"gitId":"jeremy-7007"},"content":"            writer.append(newString);","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"jeremy-7007"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":246,"author":{"gitId":"jeremy-7007"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":247,"author":{"gitId":"jeremy-7007"},"content":"            throw new DukeException(\"Error saving new task\");","lastModifiedDate":"2021-08-24"},{"lineNumber":248,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":249,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":250,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":251,"author":{"gitId":"jeremy-7007"},"content":"    public static String readList(ArrayList\u003cTask\u003e al) {","lastModifiedDate":"2021-08-24"},{"lineNumber":252,"author":{"gitId":"jeremy-7007"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":253,"author":{"gitId":"jeremy-7007"},"content":"        for (int i \u003d 0; i \u003c al.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":254,"author":{"gitId":"jeremy-7007"},"content":"            Task nextTask \u003d al.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":255,"author":{"gitId":"jeremy-7007"},"content":"            String nextString \u003d nextTask.toStorageString() + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":256,"author":{"gitId":"jeremy-7007"},"content":"            result +\u003d nextString;","lastModifiedDate":"2021-08-24"},{"lineNumber":257,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":258,"author":{"gitId":"jeremy-7007"},"content":"        return result.trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":259,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":260,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":261,"author":{"gitId":"jeremy-7007"},"content":"    public static void rewriteFile(ArrayList\u003cTask\u003e al) {","lastModifiedDate":"2021-08-24"},{"lineNumber":262,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":263,"author":{"gitId":"jeremy-7007"},"content":"            FileWriter writer \u003d new FileWriter(\"./Duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":264,"author":{"gitId":"jeremy-7007"},"content":"            writer.write(readList(al));","lastModifiedDate":"2021-08-24"},{"lineNumber":265,"author":{"gitId":"jeremy-7007"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":266,"author":{"gitId":"jeremy-7007"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":267,"author":{"gitId":"jeremy-7007"},"content":"            throw new DukeException(\"Error deleting or marking task as done\");","lastModifiedDate":"2021-08-24"},{"lineNumber":268,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jeremy-7007":259,"-":11}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jeremy-7007":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"    private LocalDateTime at;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"        this.at \u003d LocalDateTime.parse(at, formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"        return (\"[E]\" + super.toString() + \" (at: \" + this.at.format(formatter) + \")\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"        return (\"E|\" + super.getStatusNumber() + \"|\" + super.getDescription()","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"                + \"|\" + this.at.format(formatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jeremy-7007":27}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"    final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"    private String input;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"    private String[] wordArray;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"    private String command;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"    private LocalDateTime time;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"    public Parser(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"        this.wordArray \u003d input.split(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"        if (wordArray.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"            return;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"            this.command \u003d wordArray[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"        String newDescription \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"        String newTime \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"        int pointer \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"        while (pointer \u003c wordArray.length","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"                \u0026\u0026 !wordArray[pointer].equals(\"/by\")","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"                \u0026\u0026 !wordArray[pointer].equals(\"/at\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"            newDescription +\u003d wordArray[pointer] + \" \";","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"            pointer++;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"        pointer++;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"        newDescription \u003d newDescription.trim();   // delete the last space","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"        while (pointer \u003c wordArray.length) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"            newTime +\u003d wordArray[pointer] + \" \";","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"            pointer++;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"        newTime \u003d newTime.trim();   // delete the last space","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"        this.time \u003d LocalDateTime.parse(newTime, FORMATTER);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"    public String getCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"        return this.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"        return this.description;","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"        return this.time;","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"        return this.input;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"jeremy-7007":60}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    private String filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"        taskList.clear();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"            File myObj \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"                String item \u003d myReader.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"                String[] splitItem \u003d item.split(\"\\\\|\");","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"                String taskType \u003d splitItem[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"                String completed \u003d splitItem[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"                String desc \u003d splitItem[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"                String date \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"                if (splitItem.length \u003e 3) date \u003d splitItem[3];","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"                Task nextTask \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"T\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"                        nextTask \u003d new Todo(desc);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"                        break;","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"D\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"                        nextTask \u003d new Deadline(desc, date);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"                        break;","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"                    case (\"E\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"                        nextTask \u003d new Event(desc, date);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"                if (completed.equals(\"1\") \u0026\u0026 nextTask !\u003d null) nextTask.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"                taskList.add(nextTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"            myReader.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"            System.out.println(\"File not found. Creating new file with given path.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"                File myObj \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"                if (myObj.createNewFile()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"                    System.out.println(\"File created: \" + myObj.getName());","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"                    System.out.println(\"File already exists.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"                throw new DukeException(\"Error occurred while creating the file\");","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"    public void add(Task task) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"jeremy-7007"},"content":"        String newString \u003d \"\\n\" + task.toStorageString();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"jeremy-7007"},"content":"            FileWriter writer \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"            writer.append(newString);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"            writer.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"jeremy-7007"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"jeremy-7007"},"content":"            throw new DukeException(\"Error saving new task\");","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"    public void rewrite(TaskList tl) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"            writer.write(tl.toStorageString());","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"            writer.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"jeremy-7007"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"jeremy-7007"},"content":"            throw new DukeException(\"Error deleting or marking task as done\");","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"jeremy-7007"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"jeremy-7007"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"jeremy-7007"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"jeremy-7007"},"content":"            Task nextTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"jeremy-7007"},"content":"            result +\u003d \"\\n\" + nextTask.toStorageString();","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"jeremy-7007"},"content":"        result \u003d result.trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"jeremy-7007"},"content":"        return result;","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"jeremy-7007":95}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"    private String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\"; // Done task marked with X","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    public String getStatusNumber() { return this.isDone ? \"1\" : \"0\"; }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"        return this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"    public void changeDescription(String newDesc) {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"        this.description \u003d newDesc;","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"        return (this.getStatusIcon() + \" \" + this.getDescription());","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jeremy-7007":37}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"        String taskString \u003d taskList.get(index).toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"                + \"  \"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"                + taskString + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"                + \"Now you have \" + taskList.size()","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"                + \" task\" + (taskList.size() \u003e 1 ? \"s\" : \"\") + \" in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"                + \"  \" + task.toString() + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"                + \"Now you have \" + taskList.size()","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"                + \" task\" + (taskList.size() \u003e 1 ? \"s\" : \"\") + \" in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"                + \"  \"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"                + task.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"            Task nextTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"            String nextString \u003d nextTask.toStorageString() + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"            result +\u003d nextString;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"        return result.trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"            Task nextTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"            String nextTaskString \u003d (i + 1) + \".\" + nextTask.toString() + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"            result +\u003d nextTaskString;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"        result \u003d result.trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"        return result;","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"jeremy-7007":62}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"        return (\"T|\" + super.getStatusNumber() + \"|\" + super.getDescription());","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jeremy-7007":14}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"    public Ui(TaskList taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    public void readInput() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"        String nextLine;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"        while (!(nextLine \u003d input.nextLine()).equals(\"bye\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"            Parser parser \u003d new Parser(nextLine);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"            String command \u003d parser.getCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"            String description \u003d parser.getDescription();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"            LocalDateTime time \u003d parser.getTime();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"            switch (command) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"                case (\"\"):  // Nothing is typed","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"                    throw new DukeException(\"Please enter a command!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"                case (\"list\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"                    System.out.println(taskList.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"                case (\"done\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"                    try {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"                        int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"                        taskList.markAsDone(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"                    } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"                        throw new DukeException(\"Please follow command \u0027done\u0027 with an integer!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"                    } catch (IndexOutOfBoundsException oob) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"                        throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"                default:","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"                    throw new DukeException(\"Command not recognised!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"jeremy-7007":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"todo New todo task","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"deadline New deadline /by deadline time","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"deadline /by deadline time","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"deadline New deadline /by","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"deadline New deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"event New event /at event time","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"event /at event time","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"event New event /at","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"event New event","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"list everything","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"done 5","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"delete 10","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"delete nonsense","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"bye bye","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jeremy-7007":24}}]
