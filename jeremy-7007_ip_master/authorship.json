[{"path":"Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"T|0|Test todo","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"D|1|Test deadline|2021-12-21 12:21","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"E|0|Test event|2021-12-21 12:35","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"T|1|Test second todo","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"E|0|Another event|2021-12-21 12:21","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"jeremy-7007":5}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jeremy-7007":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jeremy-7007":15,"-":45}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"    private void flip() {","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"        db.flip();","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"        return db;","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"jeremy-7007":59}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"public class Launcher {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"jeremy-7007":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"            stage.show();","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"jeremy-7007":26}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"        String welcomeMessage \u003d \"Hello from\\n\" + logo + \"\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"                + \"Hello! I\u0027m Nukem\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"    @FXML","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"        );","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"jeremy-7007":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"public class Duke {","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"    public Duke() {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"        storage \u003d new Storage(\"./Duke.txt\");","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"            assert c !\u003d null;","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"            return c.execute(taskList, storage, ui);","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"            return ui.getError(e.getMessage());","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jeremy-7007":29,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jeremy-7007":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"     * Reads the input given and returns the appropriate Command to execute.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"     * @param input User input string to parse.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"     * @return Command object.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"     * @throws DukeException If input is not recognised or does not follow format.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"        String[] wordArray \u003d input.split(\" \");","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"        String type \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"        String timeString \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"        LocalDateTime time \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"        if (wordArray.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"            throw new DukeException(\"Please enter a command!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"            type \u003d wordArray[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"        assert wordArray.length \u003e 0;","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"        int pointer \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"        while (pointer \u003c wordArray.length","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"                \u0026\u0026 !wordArray[pointer].equals(\"/by\")","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"                \u0026\u0026 !wordArray[pointer].equals(\"/at\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"            description +\u003d wordArray[pointer] + \" \";","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"            pointer++;","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"        pointer++;","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"        description \u003d description.trim(); // delete the last space","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"        assert pointer \u003e\u003d 2;","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"        while (pointer \u003c wordArray.length) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"            timeString +\u003d wordArray[pointer] + \" \";","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"            pointer++;","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"        timeString \u003d timeString.trim(); // delete the last space","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"            time \u003d LocalDateTime.parse(timeString, FORMATTER);","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"jeremy-7007"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"jeremy-7007"},"content":"            // Does nothing and continue with time \u003d null","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"        switch (type) {","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"jeremy-7007"},"content":"        case (\"list\"):","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"jeremy-7007"},"content":"            description +\u003d timeString;","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"jeremy-7007"},"content":"            if (description.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"                return new ListCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"                throw new DukeException(\"Command \u0027list\u0027 does not need additional arguments\");","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"        case (\"done\"):","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"                int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"jeremy-7007"},"content":"                return new DoneCommand(index);","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"jeremy-7007"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"jeremy-7007"},"content":"                throw new DukeException(\"Please follow command \u0027done\u0027 with an integer!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"jeremy-7007"},"content":"        case (\"todo\"):","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"jeremy-7007"},"content":"            if (!description.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"jeremy-7007"},"content":"                Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"jeremy-7007"},"content":"                return new AddCommand(newTodo);","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"jeremy-7007"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"jeremy-7007"},"content":"                throw new DukeException(\"Please follow format: \u0027todo [description]\u0027\");","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"jeremy-7007"},"content":"        case (\"deadline\"):","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"jeremy-7007"},"content":"            if (!description.equals(\"\") \u0026\u0026 time !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"jeremy-7007"},"content":"                Deadline newDeadline \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"jeremy-7007"},"content":"                return new AddCommand(newDeadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"jeremy-7007"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"jeremy-7007"},"content":"                throw new DukeException(\"Please follow format: \u0027deadline [description] /by [yyyy-MM-dd HH:mm]\u0027\");","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"jeremy-7007"},"content":"        case (\"event\"):","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"jeremy-7007"},"content":"            if (!description.equals(\"\") \u0026\u0026 time !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"jeremy-7007"},"content":"                Event newEvent \u003d new Event(description, time);","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"jeremy-7007"},"content":"                return new AddCommand(newEvent);","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"jeremy-7007"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"jeremy-7007"},"content":"                throw new DukeException(\"Please follow format: \u0027event [description] /at [yyyy-MM-dd HH:mm]\u0027\");","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"jeremy-7007"},"content":"        case (\"delete\"):","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"jeremy-7007"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"jeremy-7007"},"content":"                int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"jeremy-7007"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"jeremy-7007"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"jeremy-7007"},"content":"                throw new DukeException(\"Please follow command \u0027delete\u0027 with an integer!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"jeremy-7007"},"content":"        case (\"find\"):","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"jeremy-7007"},"content":"            if (!description.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"jeremy-7007"},"content":"                return new FindCommand(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"jeremy-7007"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"jeremy-7007"},"content":"                throw new DukeException(\"Please indicate your search words after \u0027find\u0027\");","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"jeremy-7007"},"content":"        case (\"bye\"):","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"jeremy-7007"},"content":"            description +\u003d timeString;","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"jeremy-7007"},"content":"            if (description.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"jeremy-7007"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"jeremy-7007"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"jeremy-7007"},"content":"                throw new DukeException(\"Type \u0027bye\u0027 only to exit\");","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"jeremy-7007"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"jeremy-7007"},"content":"            throw new DukeException(\"Command not recognised!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"jeremy-7007":127}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    private String filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"     * Reads from the storage file and return an ArrayList of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"     * @return An ArrayList of Task objects from the storage file.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"     * @throws DukeException If there is an error in creating the storage file.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"        taskList.clear();","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"            File myObj \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"                String item \u003d myReader.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"                parseStorageLine(item);","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"            myReader.close();","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"            System.out.println(\"File not found. Creating new file with given path.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"            try {","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"                File myObj \u003d new File(filePath);","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"                if (myObj.createNewFile()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"                    System.out.println(\"File created: \" + myObj.getName());","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"                } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"                    System.out.println(\"File already exists.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"                }","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"                throw new DukeException(\"Error occurred while creating the file\");","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"        return this.taskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"     * Reads a line as stored in the storage and adds the corresponding task","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"     * to the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"     * @throws DukeException If there is an error in recognising the type of task","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"jeremy-7007"},"content":"    private void parseStorageLine(String item) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"jeremy-7007"},"content":"        String[] splitItem \u003d item.split(\"\\\\|\");","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"jeremy-7007"},"content":"        if (splitItem.length \u003c 2) {","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"            return;","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"jeremy-7007"},"content":"        String taskType \u003d splitItem[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"jeremy-7007"},"content":"        String completed \u003d splitItem[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"jeremy-7007"},"content":"        String desc \u003d splitItem[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"        String date \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"        if (splitItem.length \u003e 3) {","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"            date \u003d splitItem[3];","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"        Task nextTask \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"        case (\"T\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"jeremy-7007"},"content":"            nextTask \u003d new Todo(desc);","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"jeremy-7007"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"jeremy-7007"},"content":"        case (\"D\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"jeremy-7007"},"content":"            nextTask \u003d new Deadline(desc, date);","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"jeremy-7007"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"jeremy-7007"},"content":"        case (\"E\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"jeremy-7007"},"content":"            nextTask \u003d new Event(desc, date);","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"jeremy-7007"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"jeremy-7007"},"content":"        default:","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"jeremy-7007"},"content":"            throw new DukeException(\"Unrecognised task type\");","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"jeremy-7007"},"content":"        if (completed.equals(\"1\") \u0026\u0026 nextTask !\u003d null) {","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"jeremy-7007"},"content":"            nextTask.markAsDone();","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"jeremy-7007"},"content":"        taskList.add(nextTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"jeremy-7007"},"content":"     * Writes a task to the storage file.","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"jeremy-7007"},"content":"     * @param task Task object to add to the storage file.","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"jeremy-7007"},"content":"     * @throws DukeException If the file path is invalid.","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"jeremy-7007"},"content":"    public void add(Task task) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"jeremy-7007"},"content":"        String newString \u003d \"\\n\" + task.toStorageString();","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"jeremy-7007"},"content":"            FileWriter writer \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"jeremy-7007"},"content":"            writer.append(newString);","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"jeremy-7007"},"content":"            writer.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"jeremy-7007"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"jeremy-7007"},"content":"            throw new DukeException(\"Error saving new task\");","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"jeremy-7007"},"content":"     * Rewrite the storage file to match the content of the given TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"jeremy-7007"},"content":"     * @param tl TaskList object to read from.","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"jeremy-7007"},"content":"     * @throws DukeException If the file path is invalid.","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"jeremy-7007"},"content":"    public void rewrite(TaskList tl) {","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"jeremy-7007"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"jeremy-7007"},"content":"            writer.write(tl.toStorageString());","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"jeremy-7007"},"content":"            writer.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"jeremy-7007"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"jeremy-7007"},"content":"            throw new DukeException(\"Error deleting or marking task as done\");","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"jeremy-7007":127}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Locale;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"     * @param index ArrayList index of the task to be deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representation of the deleted task.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"        String taskString \u003d taskList.get(index).toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"        return taskString;","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"     * @param task Task to add to the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"     * Marks a task in the list as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"     * @param index ArrayList index of the task to mark as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representation of the task marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"    public String markAsDone(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"        return task.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"     * Returns the list represented in the format used in the storage file.","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representation of the list, given in the storage format.","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"            Task nextTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"            String nextString \u003d nextTask.toStorageString() + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"            result +\u003d nextString;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"jeremy-7007"},"content":"        return result.trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"jeremy-7007"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"jeremy-7007"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"        return this.taskList.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"    public String searchTask(String searchWord) {","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"jeremy-7007"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"jeremy-7007"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"jeremy-7007"},"content":"            Task nextTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"jeremy-7007"},"content":"            String nextDescriptionLower \u003d nextTask.getDescription().toLowerCase();","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"jeremy-7007"},"content":"            String searchWordLower \u003d searchWord.toLowerCase();","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"jeremy-7007"},"content":"            if (nextDescriptionLower.contains(searchWordLower)) {","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"jeremy-7007"},"content":"                result +\u003d counter + \".\" + nextTask.toString() + \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"jeremy-7007"},"content":"                counter++;","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"jeremy-7007"},"content":"        result \u003d result.trim();","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"jeremy-7007"},"content":"        return result;","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"jeremy-7007"},"content":"     * Returns the list represented in the format shown to the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representation of the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"jeremy-7007"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"jeremy-7007"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"jeremy-7007"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"jeremy-7007"},"content":"            Task nextTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"jeremy-7007"},"content":"            String nextTaskString \u003d (i + 1) + \".\" + nextTask.toString() + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"jeremy-7007"},"content":"            result +\u003d nextTaskString;","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"jeremy-7007"},"content":"        result \u003d result.trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"jeremy-7007"},"content":"        return result;","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"jeremy-7007":110}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"    private Scanner in;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"    public Ui() {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"     * Reads the next line of the input, or prompt the user to input a command.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"     * @return The next line of input as a String.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    public String readNextLine() {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"        String fullCommand \u003d in.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"        return fullCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"     * Shows a message informing the user of an added task.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskString String representation of the added task.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskList TaskList the new task was added to.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"    public String getAddMessage(String taskString, TaskList taskList) {","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"                + \"  \" + taskString + \"\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"                + \"Now you have \" + taskList.getSize()","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"                + \" task\" + (taskList.getSize() \u003e 1 ? \"s\" : \"\") + \" in the list.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"     * Shows a message informing the user of a deleted task.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskString String representation of the deleted task.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskList TaskList the task was deleted from.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"    public String getDeleteMessage(String taskString, TaskList taskList) {","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"                + \"  \"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"                + taskString + \"\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"                + \"Now you have \" + taskList.getSize()","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"                + \" task\" + (taskList.getSize() \u003e 1 ? \"s\" : \"\") + \" in the list.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"     * Shows a message informing the user of a task marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskString String representation of the task marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"    public String getDoneMessage(String taskString) {","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"                + \"  \"","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"                + taskString;","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"     * Shows all the tasks in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskList TaskList containing the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"jeremy-7007"},"content":"    public String getListMessage(TaskList taskList) {","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"        return \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"                + taskList.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"jeremy-7007"},"content":"    public String getFindMessage(String foundTasks) {","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"        if (foundTasks.equals(\"\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"            return \"No task found with the given keyword\";","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"        } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"            return \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"                    + foundTasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"jeremy-7007"},"content":"     * Shows an error message.","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"jeremy-7007"},"content":"     * @param errorMessage Error message to show to the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"jeremy-7007"},"content":"    public String getError(String errorMessage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"jeremy-7007"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"jeremy-7007"},"content":"     * Shows the welcome message when the user starts the program.","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"jeremy-7007"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"jeremy-7007"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"jeremy-7007"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"jeremy-7007"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"jeremy-7007"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"jeremy-7007"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"jeremy-7007"},"content":"        return \"Hello from\\n\" + logo + \"\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"jeremy-7007"},"content":"                + \"Hello! I\u0027m Nukem\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"jeremy-7007"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"jeremy-7007"},"content":"     * Shows the end message when the user closes the program.","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"jeremy-7007"},"content":"    public void showEndMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"jeremy-7007"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"jeremy-7007":108}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    private Task task;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskList the TaskList used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"     * @param storage the Storage used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"     * @param ui the Ui used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"        storage.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"        return ui.getAddMessage(task.toString(), taskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"     * Checks whether the command is the exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"     * @return Whether the command is the exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jeremy-7007":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskList the TaskList used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"     * @param storage the Storage used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"     * @param ui the Ui used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    public abstract String execute(TaskList taskList, Storage storage, Ui ui);","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"     * Checks whether the command is the exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"     * @return Whether the command is the exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jeremy-7007":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    private int index;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskList the TaskList used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"     * @param storage the Storage used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"     * @param ui the Ui used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"            String taskString \u003d taskList.deleteTask(index);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"            storage.rewrite(taskList);","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"            return ui.getDeleteMessage(taskString, taskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"            throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"     * Checks whether the command is the exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"     * @return Whether the command is the exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jeremy-7007":42}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    private int index;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskList the TaskList used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"     * @param storage the Storage used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"     * @param ui the Ui used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"            String doneString \u003d taskList.markAsDone(index);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"            storage.rewrite(taskList);","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"            return ui.getDoneMessage(doneString);","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"            throw new DukeException(\"Invalid task number!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"     * Checks whether the command is the exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"     * @return Whether the command is the exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jeremy-7007":42}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskList the TaskList used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"     * @param storage the Storage used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"     * @param ui the Ui used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"        return null;","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    };","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"     * Checks whether the command is the exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"     * @return Whether the command is the exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"        return true;","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"    };","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jeremy-7007":30}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"    private String searchWord;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"    public FindCommand(String searchWord) {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"        this.searchWord \u003d searchWord;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"        String foundTasks \u003d taskList.searchTask(searchWord);","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"        return ui.getFindMessage(foundTasks);","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jeremy-7007":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskList the TaskList used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"     * @param storage the Storage used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"     * @param ui the Ui used during execution.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    public String execute(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"        return ui.getListMessage(taskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"     * Checks whether the command is the exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"     * @return Whether the command is the exit command.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jeremy-7007":29}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy - HH:mm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"     * Returns the String representation of the Deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representation of the Deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"        return (\"[D]\" + super.toString() + \" (by: \" + this.by.format(displayFormatter) + \")\");","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"     * Returns the String representation of the Deadline as used in the storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representation of the Deadline in the storage format.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"        return (\"D|\" + super.getStatusNumber() + \"|\" + super.getDescription()","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"                + \"|\" + this.by.format(formatter));","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jeremy-7007":40}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    private LocalDateTime at;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy - HH:mm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"        this.at \u003d LocalDateTime.parse(at, formatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"     * Returns the String representation of the Event.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representation of the Event.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"        return (\"[E]\" + super.toString() + \" (at: \" + this.at.format(displayFormatter) + \")\");","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"     * Returns the String representation of the Event as used in the storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representation of the Event in the storage format.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"        return (\"E|\" + super.getStatusNumber() + \"|\" + super.getDescription()","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"                + \"|\" + this.at.format(formatter));","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jeremy-7007":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"    private String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"     * Returns a String representing whether the task is done.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"     * Used in the String representation of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representing whether the task is done.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\"; // Done task marked with X","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"     * Returns a String representing whether the task in done.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"     * Used in the representation of the task in the storage file.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representing whether the task in done in the storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"    public String getStatusNumber() {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"        return this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"     * Returns the description of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"        return this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"     * Marks the task as not done.","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"     * Changes the description of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"     * @param newDesc New description to give to the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"    public void changeDescription(String newDesc) {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"jeremy-7007"},"content":"        this.description \u003d newDesc;","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"        return (this.getStatusIcon() + \" \" + this.getDescription());","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"     * Abstract method to return the String representation of the task as used in the storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representation of the task in the storage format.","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"jeremy-7007"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jeremy-7007":82}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"     * Returns the String representation of the Todo task.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representation of the Todo task.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"     * Returns the String representation of the Todo task as used in the storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"     * @return String representation of the Todo task in the storage format.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"        return (\"T|\" + super.getStatusNumber() + \"|\" + super.getDescription());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jeremy-7007":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"\u003c!--xmlns\u003d\"http://javafx.com/javafx/8.0.171\"--\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"jeremy-7007":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"jeremy-7007":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"    public void listTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"        assertTrue(Parser.parse(\"list\") instanceof ListCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    public void exitTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jeremy-7007":18}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    private ArrayList\u003cTask\u003e al \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    private final Todo NEW_TODO \u003d new Todo(\"todo description\");","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    private final Deadline NEW_DEADLINE \u003d new Deadline(\"deadline description\", \"2021-12-21 12:21\");","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    private final Event NEW_EVENT \u003d new Event(\"event description\", \"2021-12-21 12:21\");","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"    public void addTaskTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"        taskList \u003d new TaskList(al);","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"        taskList.addTask(NEW_DEADLINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"        assertEquals(\"1.[D][ ] deadline description (by: 21 Dec 2021 - 12:21)\",","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"                taskList.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"    public void doneTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"        al.clear();","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"        al.add(NEW_TODO);","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"        al.add(NEW_DEADLINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"        al.add(NEW_EVENT);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"        taskList \u003d new TaskList(al);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"        assertEquals(\"[D][X] deadline description (by: 21 Dec 2021 - 12:21)\",","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"                taskList.markAsDone(1));","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"        assertEquals(\"1.[T][ ] todo description\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"                + \"2.[D][X] deadline description (by: 21 Dec 2021 - 12:21)\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"                + \"3.[E][ ] event description (at: 21 Dec 2021 - 12:21)\",","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"                taskList.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"    public void getSizeTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"        al.clear();","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"        al.add(NEW_TODO);","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"        al.add(NEW_DEADLINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"        al.add(NEW_EVENT);","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"        taskList \u003d new TaskList(al);","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"        assertEquals(3, taskList.getSize());","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"    };","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"jeremy-7007":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"todo New todo task","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"deadline New deadline /by deadline time","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"deadline /by deadline time","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"deadline New deadline /by","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"deadline New deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"event New event /at event time","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"event /at event time","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"event New event /at","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"event New event","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"list everything","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"done 5","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"delete 10","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"delete nonsense","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"bye bye","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"jeremy-7007":24}}]
