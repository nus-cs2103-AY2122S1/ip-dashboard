[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junwei26":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"junwei26"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junwei26":15,"-":45}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"T,true,test1","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"D,2021-01-01,false,idk","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"junwei26":2}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"junwei26"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"junwei26"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"junwei26"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"junwei26"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"junwei26"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"junwei26"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"junwei26":55}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"public class Duke {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"    private static final String FILE_PATH \u003d \"data/data.txt\";","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"     * Constructs a duke chat bot.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"            this.taskList \u003d new TaskList(storage.loadData());","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"            ui.getDukeError(e);","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"            Command c \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"            if (c.isExit()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"                Platform.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"            response \u003d c.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"            response \u003d ui.getDukeError(e);","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"        return response;","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"junwei26":45}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"    private String dukeError;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"     * Constructor for a DukeException","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"     * @param errorCommand String representing failed operation","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"    public DukeException(String errorCommand) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"        if (errorCommand.equals(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"            this.dukeError \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"        if (errorCommand.equals(\"unknown duke command\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"            this.dukeError \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"        if (errorCommand.equals(\"invalid data\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"            this.dukeError \u003d \"Database contains invalid entries!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"        if (errorCommand.equals(\"failed database creation\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"            this.dukeError \u003d \"Database cannot be created! Please check that duke.Duke has write and read permissions\";","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"        if (errorCommand.equals(\"failed data save\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"            this.dukeError \u003d \"Failed to save data. Please check that duke.Duke has write permissions\";","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"        if (errorCommand.equals(\"invalid tasktype\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"            this.dukeError \u003d \"Invalid task type. Task type should be either deadline, event or todo\";","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"        return this.dukeError;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"junwei26":42}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"junwei26":10}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"junwei26":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello from Duke!\";","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"     * Initializes the properties of gui elements and displays welcome message.","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"        this.message();","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"junwei26"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"junwei26"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"junwei26"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"junwei26"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"junwei26"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"junwei26"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"junwei26"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"junwei26"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"junwei26"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"junwei26"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"junwei26"},"content":"    private void message() {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"junwei26"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(GREETING_MESSAGE, dukeImage));","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"junwei26":63}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import duke.command.DoneTaskCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"import duke.command.PrintListCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"     * Returns corresponding Command after parsing user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"     * @param userInput String that user enters into chat bot","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"     * @return Command Command object depending on the user input","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"     * @throws DukeException when user enters an unknown command","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    public static Command parseCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"            return new ExitCommand(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"            return new PrintListCommand(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"        if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"            return new DoneTaskCommand(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"        if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"            return new AddCommand(userInput, \"deadline\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"        if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"            return new AddCommand(userInput, \"event\");","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"        if (userInput.startsWith((\"todo\"))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"            return new AddCommand(userInput, \"todo\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"        if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"            return new DeleteCommand(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"        if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"            return new FindCommand(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"junwei26"},"content":"        throw new DukeException(\"unknown duke command\");","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"junwei26":56}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"     * @param filePath String of the file path leading to the data storage file","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"     * Parses a line of input from the data storage, creates the corresponding task","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"     * and adds it to the taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"     * @param input String input from data storage","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"     * @param taskList ArrayList of Tasks that contains the tasks","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"     * @throws DukeException when invalid data exists in the data storage","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"    private static void parseAndCreateTask(String input, ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"        String[] inputArr \u003d input.split(\",\");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"        Task currentTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"        switch (inputArr[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"        case \"T\" :","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"            currentTask \u003d new Todo(inputArr[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"            if (inputArr[1].equals(\"true\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"junwei26"},"content":"            taskList.add(currentTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"junwei26"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"        case \"E\" :","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"junwei26"},"content":"            currentTask \u003d new Event(inputArr[3], inputArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"junwei26"},"content":"            if (inputArr[2].equals(\"true\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"junwei26"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"junwei26"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"junwei26"},"content":"            taskList.add(currentTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"junwei26"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"junwei26"},"content":"        case \"D\" :","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"junwei26"},"content":"            currentTask \u003d new Deadline(inputArr[3], inputArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"junwei26"},"content":"            if (inputArr[2].equals(\"true\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"junwei26"},"content":"                currentTask.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"junwei26"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"junwei26"},"content":"            taskList.add(currentTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"junwei26"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"junwei26"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"junwei26"},"content":"            throw new DukeException(\"invalid data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"junwei26"},"content":"     * Returns an ArrayList containing the Tasks retrieved from","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"junwei26"},"content":"     * the data file.","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"junwei26"},"content":"     * @return ArrayList containing Tasks retrieved from data file","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"junwei26"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"junwei26"},"content":"    public ArrayList\u003cTask\u003e loadData() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"junwei26"},"content":"        File dataFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"junwei26"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"junwei26"},"content":"        try (Scanner fileScanner \u003d new Scanner(dataFile);) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"junwei26"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"junwei26"},"content":"                parseAndCreateTask(fileScanner.nextLine(), taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"junwei26"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"junwei26"},"content":"        } catch (FileNotFoundException fileException) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"junwei26"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"junwei26"},"content":"                File parentDir \u003d new File(dataFile.getParent());","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"junwei26"},"content":"                if (!parentDir.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"junwei26"},"content":"                    parentDir.mkdir();","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"junwei26"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"junwei26"},"content":"                dataFile.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"junwei26"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"junwei26"},"content":"                throw new DukeException(\"failed database creation\");","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"junwei26"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"junwei26"},"content":"        return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"junwei26"},"content":"     * Saves the tasks in the given TaskList into data file.","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"junwei26"},"content":"     * @param taskList containing tasks to be saved","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"junwei26"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"junwei26"},"content":"    public void saveData(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"junwei26"},"content":"        try (FileWriter fw \u003d new FileWriter(this.filePath)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"junwei26"},"content":"            StringBuilder dataString \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"junwei26"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"junwei26"},"content":"                Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"junwei26"},"content":"                dataString.append(currentTask.getData() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"junwei26"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"junwei26"},"content":"            fw.write(dataString.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"junwei26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"junwei26"},"content":"            throw new DukeException(\"failed data save\");","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"junwei26":122}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"        return userInput;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"    public String getDukeMessage(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"        return String.format(\"Duke says:\\n%s\", message);","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"    public String sayBye() {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"        return getDukeMessage(EXIT_MESSAGE);","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"    public String getDukeError(DukeException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"        return getDukeMessage(e.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"junwei26":27}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":" * This class encapsulates the command to add tasks. The supported","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":" * Task types are Deadline, Event and Todo.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"    private String taskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"     * @param userInput String containing the user input","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"     * @param taskType String identifying type of task to be added","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"    public AddCommand(String userInput, String taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"        super(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"        assert taskType.equals(\"deadline\") || taskType.equals(\"event\") || taskType.equals((\"todo\"))","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"                : \"Task type should be either deadline, event or todo\";","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"     * Adds corresponding task based on taskType that is provided to AddCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"     * @param taskList TaskList that contains the list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"     * @param ui User interface for the chat bot","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"     * @param storage Storage object that handles saving and loading of data","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"     * @throws DukeException when an error occurs during saving data","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"     * @returns Outputs string describing command executed","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"junwei26"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"junwei26"},"content":"        if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"            return addDeadline(this.getUserInput(), taskList, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"junwei26"},"content":"        if (taskType.equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"junwei26"},"content":"            return addEvent(this.getUserInput(), taskList, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"junwei26"},"content":"        if (taskType.equals((\"todo\"))) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"junwei26"},"content":"            return addTodo(this.getUserInput(), taskList, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"junwei26"},"content":"        throw new DukeException(\"invalid tasktype\");","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"junwei26"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"junwei26"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"junwei26"},"content":"    private String getAddedTaskMessage(Task currentTask, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"junwei26"},"content":"        String displayTask \u003d String","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"junwei26"},"content":"                .format(\"Got it. I\u0027ve added this duke.task: \\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"junwei26"},"content":"                        currentTask, taskList.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"junwei26"},"content":"        return ui.getDukeMessage(displayTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"junwei26"},"content":"    private String addDeadline(String userInput, TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"junwei26"},"content":"        String description \u003d retrieveDeadlineDescription(userInput);","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"junwei26"},"content":"        String by \u003d retrieveDeadlineDueDate(userInput);","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"junwei26"},"content":"        Deadline newDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"junwei26"},"content":"        taskList.addTask(newDeadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"junwei26"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"junwei26"},"content":"        return getAddedTaskMessage(newDeadline, taskList, ui);","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"junwei26"},"content":"    private String addEvent(String userInput, TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"junwei26"},"content":"        String description \u003d retrieveEventDescription(userInput);","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"junwei26"},"content":"        String timeFrame \u003d retrieveEventTimeFrame(userInput);","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"junwei26"},"content":"        Event newEvent \u003d new Event(description, timeFrame);","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"junwei26"},"content":"        taskList.addTask(newEvent);","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"junwei26"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"junwei26"},"content":"        return getAddedTaskMessage(newEvent, taskList, ui);","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"junwei26"},"content":"    private String addTodo(String userInput, TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"junwei26"},"content":"        String description \u003d retrieveTodoDescription(userInput);","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"junwei26"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"junwei26"},"content":"        taskList.addTask(newTodo);","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"junwei26"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"junwei26"},"content":"        return getAddedTaskMessage(newTodo, taskList, ui);","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"junwei26"},"content":"    private String retrieveDeadlineDescription(String userInput) {","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"junwei26"},"content":"        assert userInput.contains(\"deadline\") \u0026\u0026 userInput.contains(\"/by\") : \"User input should contain deadline /by\";","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"junwei26"},"content":"        List\u003cString\u003e inputArray \u003d Arrays.asList(userInput.split(\" /by \"));","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"junwei26"},"content":"        ArrayList\u003cString\u003e descriptionArray \u003d new ArrayList\u003cString\u003e(Arrays.asList(inputArray.get(0).split(\" \")));","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"junwei26"},"content":"        descriptionArray.remove(0);","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"junwei26"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"junwei26"},"content":"        return description;","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"junwei26"},"content":"    private String retrieveDeadlineDueDate(String userInput) {","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"junwei26"},"content":"        List\u003cString\u003e inputArray \u003d Arrays.asList(userInput.split(\" /by \"));","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"junwei26"},"content":"        String by \u003d inputArray.get(1);","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"junwei26"},"content":"        return by;","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"junwei26"},"content":"    private String retrieveEventDescription(String userInput) {","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"junwei26"},"content":"        assert userInput.contains(\"event\") \u0026\u0026 userInput.contains(\"/at\") : \"User input should contain event /at\";","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"junwei26"},"content":"        List\u003cString\u003e inputArray \u003d Arrays.asList(userInput.split(\" /at \"));","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"junwei26"},"content":"        String timeFrame \u003d inputArray.get(1);","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"junwei26"},"content":"        ArrayList\u003cString\u003e descriptionArray \u003d new ArrayList\u003cString\u003e(Arrays.asList(inputArray.get(0).split(\" \")));","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"junwei26"},"content":"        descriptionArray.remove(0);","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"junwei26"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"junwei26"},"content":"        return description;","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"junwei26"},"content":"    private String retrieveEventTimeFrame(String userInput) {","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"junwei26"},"content":"        List\u003cString\u003e inputArray \u003d Arrays.asList(userInput.split(\" /at \"));","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"junwei26"},"content":"        String timeFrame \u003d inputArray.get(1);","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"junwei26"},"content":"        return timeFrame;","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"junwei26"},"content":"    private String retrieveTodoDescription(String userInput) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"junwei26"},"content":"        assert userInput.contains(\"todo\") : \"User input should contain todo\";","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"junwei26"},"content":"        List\u003cString\u003e inputArray \u003d Arrays.asList(userInput.split(\" \"));","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"junwei26"},"content":"        if (inputArray.size() \u003c\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"junwei26"},"content":"            throw new DukeException(\"todo\");","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"junwei26"},"content":"        ArrayList\u003cString\u003e descriptionArray \u003d new ArrayList\u003cString\u003e(inputArray);","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"junwei26"},"content":"        descriptionArray.remove(0);","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"junwei26"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"junwei26"},"content":"        return description;","lastModifiedDate":"2021-09-08"},{"lineNumber":147,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"junwei26":148}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"    private String userInput;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"    public Command(String userInput) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"        return this.userInput;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"junwei26":26}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"        super(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"        return deleteTask(this.getUserInput(), taskList, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"    private String deleteTask(String userInput, TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"        String[] inputArray \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"        assert inputArray.length \u003e\u003d 2 : \"Delete command should be in the form delete (index)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"        Task removedTask \u003d taskList.deleteTask(Integer.parseInt(inputArray[1]) - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"        String deleteMessage \u003d String","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"                .format(\"Noted. I\u0027ve removed this duke.task: \\n%s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"                        removedTask, taskList.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"        return ui.getDukeMessage(deleteMessage);","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"junwei26":36}},{"path":"src/main/java/duke/command/DoneTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"public class DoneTaskCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"    public DoneTaskCommand (String userInput) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"        super(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"        return doneTask(this.getUserInput(), taskList, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"    private String doneTask(String userInput, TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"        String[] inputArray \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"        assert inputArray.length \u003e\u003d 2 : \"Done command should be in the form done (index)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"        Task completedTask \u003d taskList.get(Integer.parseInt(inputArray[1]) - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"        completedTask.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"        String doneMessage \u003d String.format(\"Nice! I\u0027ve marked this duke.task as done:\\n%s\", completedTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"        return ui.getDukeMessage(doneMessage);","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"junwei26":36}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"    public ExitCommand(String userInput) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"        super(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"        return ui.sayBye();","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"junwei26":23}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"    private String query;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"     * Constructor for FindCommand","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"     * @param userInput String containing the user input","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"    public FindCommand(String userInput) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"        super(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"        assert userInput.split(\" \", 2).length \u003d\u003d 2","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"                : \"User input should be in the format find (query)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"        this.query \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"        StringBuilder outputList \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"        outputList.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"            Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"            if (currentTask.doesDescriptionContain(this.query)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"                outputList.append(String.format(\"%d.%s\\n\", counter, currentTask));","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"                counter++;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"        return ui.getDukeMessage(outputList.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"junwei26":44}},{"path":"src/main/java/duke/command/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"public class PrintListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"    public PrintListCommand(String userInput) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"        super(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"        return printList(taskList, ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"    private String printList(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"        StringBuilder outputList \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"            Task currentTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"            outputList.append(String.format(\"%d.%s\\n\", i + 1, currentTask));","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"        return ui.getDukeMessage(outputList.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"junwei26":36}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"     * Constructor for a Deadline","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"     * @param description of Deadline","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"     * @param by Due Date of deadline in YYYY-MM-DD format","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"     * Returns a comma separated string representation of the DeadLine\u0027s data","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"     * for data storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"     * @return String that represents the DeadLine\u0027s data","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    public String getData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"        return String.format(\"D,%s,%s\", this.by, super.getData());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"     * Returns the string representation of a Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"     * @return String representing a Deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"        return String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"                super.toString(), by.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"junwei26":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"    private String timeFrame;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"     * Constructor for an Event","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"     * @param description of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"     * @param timeFrame where Event occurs","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"    public Event (String description, String timeFrame) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"        this.timeFrame \u003d timeFrame;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"     * Returns a comma separated string representation of the Event\u0027s data","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"     * for data storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"     * @return String that represents the Event\u0027s data","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"    public String getData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"        return String.format(\"E,%s,%s\", this.timeFrame, super.getData());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"     * Returns the string representation of an Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"     * @return String representing an Event","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.timeFrame);","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"junwei26":38}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"     * Constructor for Task","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"     * @param description String containing description of Task","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"        return (isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"        this.isDone \u003d true; }","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"    public boolean doesDescriptionContain(String query) {","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"        return this.description.contains(query);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"    public String getData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"        return String.format(\"%b,%s\", this.isDone, this.description);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"     * Returns the string representation of a Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"     * @return String representing a task","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"junwei26":43}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"    public TaskList (ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"     * Retrieves Task at the given index.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"     * @param index","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"     * @return Task at the given index","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"     * Adds a given Task to the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"     * @param task to add to the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"     * Deletes Task at the given index.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"     * @param index","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"     * @return the deleted Task","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"junwei26"},"content":"        return this.taskList.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"junwei26"},"content":"     * Returns the current number of tasks in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"junwei26"},"content":"     * @return number of tasks in the TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"junwei26"},"content":"    public int size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"junwei26"},"content":"        return this.taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"junwei26":51}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"     * Returns a comma separated string representation of the Todo\u0027s data","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"     * for data storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"     * @return String that represents the Todo\u0027s data","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"    public String getData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"        return String.format(\"T,%s\", super.getData());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"     * Returns the string representation of a Todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"     * @return String representing a todo","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"junwei26":31}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"junwei26":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"junwei26":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"junwei26"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"junwei26"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"junwei26"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"junwei26"},"content":"    public void todo_stringRepresentation() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"junwei26"},"content":"        Todo testTodo \u003d new Todo(\"test\");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"junwei26"},"content":"        testTodo.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"junwei26"},"content":"        String actual \u003d testTodo.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"junwei26"},"content":"        String expected \u003d \"[T][X] test\";","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"junwei26"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"junwei26"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"junwei26"},"content":"    public void deadline_stringRepresentation() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"junwei26"},"content":"        Deadline testDeadline \u003d new Deadline(\"test\", \"2021-01-01\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"junwei26"},"content":"        testDeadline.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"junwei26"},"content":"        String actual \u003d testDeadline.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"junwei26"},"content":"        String expected \u003d \"[D][X] test (by: 01 January 2021)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"junwei26"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"junwei26"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"junwei26"},"content":"    public void event_stringRepresentation() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"junwei26"},"content":"        Event testEvent \u003d new Event(\"test\", \"Mon 2-4pm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"junwei26"},"content":"        testEvent.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"junwei26"},"content":"        String actual \u003d testEvent.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"junwei26"},"content":"        String expected \u003d \"[E][X] test (at: Mon 2-4pm)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"junwei26"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"junwei26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"junwei26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"junwei26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"junwei26":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"junwei26"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"junwei26"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"junwei26"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"junwei26"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"junwei26"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"junwei26"},"content":"list","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"junwei26":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"junwei26"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"junwei26":1,"-":20}}]
