[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"## Acknowldgements","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"* [Azeem](https://github.com/DrWala/) for his repo to help me install Gradle and get my JavaFX GUI working since it was not working on my end even after following the steps provided","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"-":24,"darrenhoon":3}},{"path":"SwitchJava.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"@ECHO OFF","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"SET JAVA_HOME\u003dC:\\Program Files\\Java\\liberica-11.0.9.1","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"SET Path\u003d%JAVA_HOME%\\bin;%Path%","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"echo Java home set to: %JAVA_HOME%","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"echo Java 11 activated","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"java -version","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"darrenhoon":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"plugins {","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"repositories {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"dependencies {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"    implementation \u0027com.fasterxml.jackson.core:jackson-core:2.12.1\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"    implementation \u0027com.fasterxml.jackson.core:jackson-annotations:2.12.1\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"    implementation \u0027com.fasterxml.jackson.core:jackson-databind:2.12.1\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"    implementation \u0027com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.1\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"test {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"    testLogging {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"        showExceptions true","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"        showCauses true","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"        showStackTraces true","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"application {","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"    mainClassName \u003d \"main/Launcher\"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"shadowJar {","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"    archiveBaseName \u003d \"ip\"","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"checkstyle {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"run{","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darrenhoon":64}},{"path":"database/database.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"deadline true 1999-05-07 aGF2ZSBnaXJsZnJpZW5k","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darrenhoon":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"![Duke Screenshot](./Ui.png)","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"Duke is a personal task manager in the form of a chatbot. He can help you track your To-dos, events, and deadlines. He has a GUI and a CLI interface.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"## Quick Start","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"1. Ensure you have Java 11 or above installed on your Computer.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"2. Download the latest `ip.jar` [here](https://github.com/DrWala/ip/releases).","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"3. Double-click the file to start the app. If you do not see anything after a few seconds, navigate to the folder with the `.jar` file in your CLI and type `java -jar ip.jar`.  ","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"4. Type a command into the text box and press \u003ckbd\u003eEnter\u003c/kbd\u003e to execute it.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"## Guide format and input restrictions","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"- User input for commands are surrounded with angular brackets as such `\u003cdeadline_name\u003e`. The brackets themselves are not part of the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"- All time input should be formatted as `d/M/yyyy HHm`. For example, you would insert 21st March 2103 9:03pm as `21/03/2103 2103`.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"- Anything not surrounded by angular brackets is necessary for that command to work","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"## Features","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"Duke supports 3 main types of tasks: Todos, Deadlines and Events. You can perform Create, Read and Delete operations on these tasks, or mark them as done. Duke also helps you search for tasks if the list gets too long.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"## Usages","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"#### `list` \u0026mdash; List Tasks","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"Lists all the tasks you have inserted into Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"#### `sort` \u0026mdash; Sort Tasks","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"Lists all the tasks you have inserted into Duke in alphabetical order.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"sort","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"#### `find` \u0026mdash; Find Tasks","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"Search for tasks that match a given search string","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"find \u003csearch_string\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"#### `done` \u0026mdash; Mark a Task as done","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"Marks a task as done. The task index is its position as shown in `list`.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"done \u003ctask_index\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"#### `delete` \u0026mdash; Remove a Task","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"Remove a task from Duke. The task index is its position as shown in `list`.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"delete \u003ctask_index\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"#### `todo` \u0026mdash; Add a Todo","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"Add a todo. Todos do not have any time specified.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"todo \u003ctodo_name\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"#### `deadline` \u0026mdash; Add a Deadline","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"Add a deadline. The `time` parameter should follow the format specified at `Guide format and input restrictions`.","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"deadline \u003cdeadline_name\u003e /by \u003ctime\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"#### `event` \u0026mdash; Add an Event","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"Add an event. The `time` parameter should follow the format specified at `Guide format and input restrictions`.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"event \u003cevent_name\u003e /at \u003ctime\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"```","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"#### `bye` \u0026mdash; Exit app","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"Exits the app. Duke will save your tasks so you do not need to re-enter them when you next launch Duke","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"bye","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"## Acknowledgements","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"- JSON formatting library from [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"- GUI from [JavaFX](https://openjfx.io)","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"- Unit Testing from [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"-":16,"darrenhoon":62}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"echo.","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"echo.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"goto fail","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"echo.","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"echo.","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"goto fail","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":":init","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":":win9xME_args","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"set _SKIP\u003d2","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":":win9xME_args_slurp","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":":execute","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":":end","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":":fail","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"darrenhoon"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"darrenhoon"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"darrenhoon"},"content":"exit /b 1","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"darrenhoon"},"content":":mainEnd","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"darrenhoon"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"darrenhoon"},"content":":omega","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darrenhoon":103}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import ui.MainWindow;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":" * The Duke program implements an application that helps to track tasks that the user requires to be tracked.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"public class Duke {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    TaskList engineGui \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"     * Initialises app.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"     * @param args empty args.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"        Ui messages \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"        TaskList engine \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"        messages.welcomeMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"        engine.runProgram();","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"        messages.goodbyeMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"        return engineGui.readGuiInput(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darrenhoon":42}},{"path":"src/main/java/exception/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package exception;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":" * The CommandException Exception is thrown when a command after \"/\" is invalid.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":" * Thrown by Event and Deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"public class CommandException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"     * Constructor to create a new CommandException.","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"     * @param task task to be added.","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"     * @param command command required.","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"    public CommandException(String task, String command) {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"        super(String.format(\"Your task of %s requires the command %s\", task, command));","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"darrenhoon":20}},{"path":"src/main/java/exception/DescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package exception;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":" * The DescriptionException Exception is thrown when a Task is to be added but is missing description.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":" * Thrown by Task and its child classes.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"public class DescriptionException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"     * Constructor to create a new DescriptionException.","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"     * @param task task which does not have a description.","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"    public DescriptionException(String task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"        super(String.format(\"The description of a %s cannot be empty.\", task));","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"darrenhoon":19}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package exception;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":" * The DukeException Exception is the superclass of all exceptions to be thrown that are specific to the features","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":" * of the Duke Application.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"    private String error;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"     * Superclass of all exceptions that could be thrown by the Duke app.","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"     * @param message error message to be shown.","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"        this.error \u003d message;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"        return this.error;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"darrenhoon":26}},{"path":"src/main/java/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package exception;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":" * The InvalidCommandException Exception is thrown when an input is not part of the feature set.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"     * Exception when the command is invalid.","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"darrenhoon":16}},{"path":"src/main/java/exception/TaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package exception;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":" * The TaskNumberException Exception is thrown when a task number referenced is not in the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"public class TaskNumberException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"     * Exception when a done or delete command is followed by a number out of the list\u0027s range.","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"    public TaskNumberException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"        super(\"The number is either not in the list or your input after the done or delete command is not an Integer! (pls do that)\");","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"darrenhoon":17}},{"path":"src/main/java/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darrenhoon":12}},{"path":"src/main/java/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import ui.MainWindow;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"            stage.setTitle(\"Duke App CS2103T\");","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"    public void stop() throws Exception {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"        super.stop();","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darrenhoon":40}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package parser;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import task.Todo;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import java.util.Base64;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":" * The Parser middleware provides dependency injection for classes that require common methods.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"     * Method to split a string into an array, removing spaces.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"     * @param input string to be segmented.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"     * @return String array with no spaces.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    public static String[] sanitizeInput(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"        return inputArr;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"     * Encodes an event description into base64 for storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"     * @param eventTask event to be stored in storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"     * @return encoded description of event.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    public static String encodeEvent(Event eventTask) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"        String encodedDescription \u003d Base64.getEncoder().encodeToString(eventTask.getDescription().getBytes());","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"        String encodedAt \u003d Base64.getEncoder().encodeToString(eventTask.getAt().getBytes());","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"        String dbEntry \u003d \"event \" + eventTask.getIsDone() + \" \" + encodedAt + \" \" + encodedDescription;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"        return dbEntry;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"     * Encodes a deadline description into base64 for storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"     * @param deadlineTask event to be stored in storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"     * @return encoded description of deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"    public static String encodeDeadline(Deadline deadlineTask) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"        String encodedString \u003d Base64.getEncoder().encodeToString(deadlineTask.getDescription().getBytes());","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"        String dbEntry \u003d \"deadline \" + deadlineTask.getIsDone() + \" \" + deadlineTask.getBy() + \" \" + encodedString;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"        return dbEntry;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"     * Encodes a Todo description into base64 for storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"     * @param todoTask event to be stored in storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"     * @return encoded description of Todo.","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"    public static String encodeTodo(Todo todoTask) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"        String encodedString \u003d Base64.getEncoder().encodeToString(todoTask.getDescription().getBytes());","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"        String dbEntry \u003d \"todo \" + todoTask.getIsDone() + \" \" + encodedString;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"        return dbEntry;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"darrenhoon":60}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import parser.Parser;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import task.Todo;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"import java.util.Base64;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":" * The Storage class provides dependency injection for classes that require access to the device\u0027s local storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":" * Data is stored locally in the form of a text (.txt) file.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"    private Path dir;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"    private Path fileDir;","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    private Ui messages \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"     * Constructor of DatabaseEngine.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"    public Storage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"        this.dir \u003d Paths.get(System.getProperty(\"user.dir\"), \"database\");","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"        this.fileDir \u003d Paths.get(System.getProperty(\"user.dir\"), \"database\", \"database.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"     * Writes current list to local storage\u0027s text file.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"     * @param taskList list to be saved.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"    public void writeToDatabase(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"        this.deleteDatabase();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"        this.createDatabase();","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"            FileWriter fw \u003d new FileWriter(String.valueOf(this.fileDir), true);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"            List\u003cString\u003e mappedList \u003d taskList.stream().map(task -\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"                String line \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"                    Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"                    /*","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"                    String encodedString \u003d Base64.getEncoder().encodeToString(deadlineTask.getDescription().getBytes());","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"                    line +\u003d \"deadline \" + deadlineTask.getIsDone() + \" \" + deadlineTask.getBy() + \" \" + encodedString;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"                     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"                    line +\u003d Parser.encodeDeadline(deadlineTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"                    Event eventTask \u003d (Event) task;","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"                    /*","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"                    String encodedDescription \u003d Base64.getEncoder().encodeToString(eventTask.getDescription().getBytes());","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"                    String encodedAt \u003d Base64.getEncoder().encodeToString(eventTask.getAt().getBytes());","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"                    line +\u003d \"event \" + eventTask.getIsDone() + \" \" + encodedAt + \" \" + encodedDescription;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"                    */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"                    line +\u003d Parser.encodeEvent(eventTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"                    //task instance of Todo","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"                    Todo todoTask \u003d (Todo) task;","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"                    /*","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"                    String encodedString \u003d Base64.getEncoder().encodeToString(task.getDescription().getBytes());","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"                    line +\u003d \"todo \" + task.getIsDone() + \" \" + encodedString;","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"                     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"                    line +\u003d Parser.encodeTodo(todoTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"                line +\u003d \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"                return line;","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"            }).collect(Collectors.toList());","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"            for (String task: mappedList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"                fw.write(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"darrenhoon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"darrenhoon"},"content":"            messages.displayText(\"Error writing to database.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"darrenhoon"},"content":"     * Reads from local storage\u0027s text file.","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"darrenhoon"},"content":"     * @return list containing Tasks stored in local storage.","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"darrenhoon"},"content":"    public List\u003cTask\u003e readFromDatabase() {","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"darrenhoon"},"content":"            List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"darrenhoon"},"content":"            File file \u003d new File(String.valueOf(this.fileDir));","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"darrenhoon"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"darrenhoon"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"darrenhoon"},"content":"                String task \u003d scanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"darrenhoon"},"content":"                String[] dataArr \u003d task.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"darrenhoon"},"content":"                if (dataArr[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"darrenhoon"},"content":"                    Boolean isDone \u003d Boolean.valueOf(dataArr[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"darrenhoon"},"content":"                    LocalDate by \u003d LocalDate.parse(dataArr[2]);","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"darrenhoon"},"content":"                    String description \u003d new String(Base64.getDecoder().decode(dataArr[3]));","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"darrenhoon"},"content":"                    Deadline deadlineTask \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"darrenhoon"},"content":"                    if (isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"darrenhoon"},"content":"                        deadlineTask.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"darrenhoon"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"darrenhoon"},"content":"                    taskList.add(deadlineTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"darrenhoon"},"content":"                else if (dataArr[0].equals(\"event\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"darrenhoon"},"content":"                    Boolean isDone \u003d Boolean.valueOf(dataArr[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"darrenhoon"},"content":"                    String at \u003d new String(Base64.getDecoder().decode(dataArr[2]));","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"darrenhoon"},"content":"                    String description \u003d new String(Base64.getDecoder().decode(dataArr[3]));","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"darrenhoon"},"content":"                    Event eventTask \u003d new Event(description, at);","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"darrenhoon"},"content":"                    if (isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"darrenhoon"},"content":"                        eventTask.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"darrenhoon"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"darrenhoon"},"content":"                    taskList.add(eventTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"darrenhoon"},"content":"                else {","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"darrenhoon"},"content":"                    Boolean isDone \u003d Boolean.valueOf(dataArr[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"darrenhoon"},"content":"                    String description \u003d new String(Base64.getDecoder().decode(dataArr[2]));","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"darrenhoon"},"content":"                    Todo todoTask \u003d new Todo(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"darrenhoon"},"content":"                    if (isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"darrenhoon"},"content":"                        todoTask.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"darrenhoon"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"darrenhoon"},"content":"                    taskList.add(todoTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"darrenhoon"},"content":"            scanner.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"darrenhoon"},"content":"            return taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"darrenhoon"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"darrenhoon"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"darrenhoon"},"content":"            System.out.println(\"Error: File path was provided as null.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"darrenhoon"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"darrenhoon"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"darrenhoon"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-21"},{"lineNumber":163,"author":{"gitId":"darrenhoon"},"content":"            System.out.println(\"Error: File was not found in database.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"darrenhoon"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":165,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":166,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":167,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":168,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":169,"author":{"gitId":"darrenhoon"},"content":"     * Creates a text file if not present in local storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":171,"author":{"gitId":"darrenhoon"},"content":"    public void createDatabase() {","lastModifiedDate":"2021-08-21"},{"lineNumber":172,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":173,"author":{"gitId":"darrenhoon"},"content":"            File file \u003d new File(String.valueOf(this.fileDir));","lastModifiedDate":"2021-08-21"},{"lineNumber":174,"author":{"gitId":"darrenhoon"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":175,"author":{"gitId":"darrenhoon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":176,"author":{"gitId":"darrenhoon"},"content":"            //should not occur since we are writing to local memory as opposed to network file","lastModifiedDate":"2021-08-21"},{"lineNumber":177,"author":{"gitId":"darrenhoon"},"content":"            messages.displayText(\"Error: Unable to create txt file.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":180,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":181,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"darrenhoon"},"content":"     * Deletes the text file from storage\u0027s directory.","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"darrenhoon"},"content":"    public void deleteDatabase() {","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"darrenhoon"},"content":"        File fileDelete \u003d new File(String.valueOf(this.fileDir));","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"darrenhoon"},"content":"        fileDelete.delete();","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":188,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":189,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":190,"author":{"gitId":"darrenhoon"},"content":"     * Creates a directory if not present in local storage.","lastModifiedDate":"2021-08-21"},{"lineNumber":191,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":192,"author":{"gitId":"darrenhoon"},"content":"    public void createDirectory() {","lastModifiedDate":"2021-08-21"},{"lineNumber":193,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":194,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":195,"author":{"gitId":"darrenhoon"},"content":"            if(!Files.exists(this.dir)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":196,"author":{"gitId":"darrenhoon"},"content":"                messages.displayText(\"You currently do not have a directory to save the database. \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":197,"author":{"gitId":"darrenhoon"},"content":"                        \"Creating one now at: \" + this.dir);","lastModifiedDate":"2021-08-21"},{"lineNumber":198,"author":{"gitId":"darrenhoon"},"content":"                Files.createDirectory(this.dir);","lastModifiedDate":"2021-08-21"},{"lineNumber":199,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":200,"author":{"gitId":"darrenhoon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":201,"author":{"gitId":"darrenhoon"},"content":"            messages.displayText(\"Error: Unable to create the directory.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":202,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":203,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":204,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":205,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"darrenhoon":205}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package task;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":" * The Deadline class is a child class of Task.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":" * Contains additional \"by\" parameter that strictly requires input to be of LocalDate type.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"     * Constructor to create a new Deadline object.","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"     * @param description the description of the Deadline Task.","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"     * @param by due date of Deadline Task.","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"     * Retrieves the parameter by as a string.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"     * @return by property as a String.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"        return this.by.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"darrenhoon":38}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package task;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":" * The Event class is a child class of Task.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":" * Contains additional \"at\" string parameter.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"    protected String at;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"     * Constructor for new Event object.","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"     * @param description description of the event.","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"     * @param at date in which the event is to be held at.","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"     * Retrieves this event\u0027s at.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"     * @return at.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"        return this.at;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"darrenhoon":36}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package task;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":" * Task is the superclass of classes to be stored in the database.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":" * All subclasses require a description field and have an isDone field that indicates completion status.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"     * Constructor of superclass Task.","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"     * @param description description of the task.","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"     * Gets the status of the current task object","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"     * @return the string status where X means done and blank is not done","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"     * Marks this task as done by changing the isDone boolean to true","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"     * Retrieves the description of this task.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"     * @return the string description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"        return this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"darrenhoon":54}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package task;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":" * The Todo class is a child class of Task.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"     * Constructor for a new Todo object.","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"     * @param description description of the Todo Task.","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"darrenhoon":23}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package tasklist;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import exception.DescriptionException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import exception.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import exception.CommandException;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import exception.TaskNumberException;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import parser.Parser;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"import task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"import task.Todo;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"import ui.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":" * The TaskList class provides dependency injection for the classes that require access to the functionality of","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":" * editing the tasks list.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    private final Ui messages \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    private final Storage databaseEngine \u003d new Storage();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"     * Main engine to run the program.","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"    public void runProgram() {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"        this.loadData();","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"        //initialises the scanner","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"        String input;","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"        while (true) {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"            //saves the latest copy of the task list","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"            this.saveData();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"            //removes additional space from the input","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"            input \u003d sc.nextLine().trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"            //removes space in the command input and stores the strings in an array","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"            String[] inputArr \u003d Parser.sanitizeInput(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"                messages.displayListTasks(this.taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"            } else if (inputArr[0].equals(\"done\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"                ","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"                //obtains the task number which we want to mark as done","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"                Integer index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"                    this.markAsDone(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"                    messages.displayText(e.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"                ","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"            } else if (inputArr[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"                //obtains the task number which we want to delete","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"                Integer index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"                    this.deleteTask(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"                    messages.displayText(e.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"            } else if (inputArr[0].equals(\"find\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"                this.findTasks(inputArr);","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"                //adds item input by the user into the inputList","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"                    this.addTask(inputArr);","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"                    messages.displayText(e.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"darrenhoon"},"content":"        //terminates scanner","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"darrenhoon"},"content":"        sc.close();","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"darrenhoon"},"content":"     * Main engine to run the GUI program.","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"darrenhoon"},"content":"    public String readGuiInput(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"darrenhoon"},"content":"        this.loadData();","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"darrenhoon"},"content":"        String responseMessage \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"darrenhoon"},"content":"        //removes additional space from the input","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"darrenhoon"},"content":"        input \u003d input.trim();","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"darrenhoon"},"content":"        //removes space in the command input and stores the strings in an array","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"darrenhoon"},"content":"        String[] inputArr \u003d Parser.sanitizeInput(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"darrenhoon"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"darrenhoon"},"content":"            responseMessage \u003d messages.goodbyeMessageGui();","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"darrenhoon"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"darrenhoon"},"content":"            responseMessage \u003d messages.displayListTasksGui(this.taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"darrenhoon"},"content":"        } else if (inputArr[0].equals(\"done\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"darrenhoon"},"content":"            //obtains the task number which we want to mark as done","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"darrenhoon"},"content":"            Integer index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"darrenhoon"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"darrenhoon"},"content":"                responseMessage \u003d this.markAsDoneGui(index);","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"darrenhoon"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"darrenhoon"},"content":"                responseMessage \u003d messages.displayTextGui(e.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":129,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"darrenhoon"},"content":"        } else if (inputArr[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"darrenhoon"},"content":"            //obtains the task number which we want to delete","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"darrenhoon"},"content":"            Integer index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"darrenhoon"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"darrenhoon"},"content":"                responseMessage \u003d this.deleteTaskGui(index);","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"darrenhoon"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"darrenhoon"},"content":"                responseMessage \u003d messages.displayTextGui(e.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"darrenhoon"},"content":"        } else if (inputArr[0].equals(\"find\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"darrenhoon"},"content":"            responseMessage \u003d this.findTasksGui(inputArr);","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"darrenhoon"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"darrenhoon"},"content":"            //adds item input by the user into the inputList","lastModifiedDate":"2021-08-31"},{"lineNumber":143,"author":{"gitId":"darrenhoon"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"darrenhoon"},"content":"                responseMessage \u003d this.addTaskGui(inputArr);","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"darrenhoon"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"darrenhoon"},"content":"                responseMessage \u003d messages.displayTextGui(e.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"darrenhoon"},"content":"        //saves the latest copy of the task list","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"darrenhoon"},"content":"        this.saveData();","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"darrenhoon"},"content":"        return responseMessage;","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"darrenhoon"},"content":"     * Loads data from local storage.","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"darrenhoon"},"content":"    public void loadData() {","lastModifiedDate":"2021-08-21"},{"lineNumber":159,"author":{"gitId":"darrenhoon"},"content":"        databaseEngine.createDirectory();","lastModifiedDate":"2021-08-21"},{"lineNumber":160,"author":{"gitId":"darrenhoon"},"content":"        databaseEngine.createDatabase();","lastModifiedDate":"2021-08-21"},{"lineNumber":161,"author":{"gitId":"darrenhoon"},"content":"        this.taskList \u003d databaseEngine.readFromDatabase();","lastModifiedDate":"2021-08-21"},{"lineNumber":162,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":163,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":164,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"darrenhoon"},"content":"     * Adds a TooDo Task into the List containing Tasks.","lastModifiedDate":"2021-08-20"},{"lineNumber":167,"author":{"gitId":"darrenhoon"},"content":"     * @param inputArr String array containing input by the user.","lastModifiedDate":"2021-08-20"},{"lineNumber":168,"author":{"gitId":"darrenhoon"},"content":"     * @throws InvalidCommandException if inputArr length \u003c 2.","lastModifiedDate":"2021-08-20"},{"lineNumber":169,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"darrenhoon"},"content":"    public void addTask(String[] inputArr) throws InvalidCommandException {","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"darrenhoon"},"content":"            if (inputArr[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"darrenhoon"},"content":"                this.addTodo(inputArr);","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"darrenhoon"},"content":"            } else if (inputArr[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"darrenhoon"},"content":"                this.addDeadline(inputArr);","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":178,"author":{"gitId":"darrenhoon"},"content":"            } else if (inputArr[0].equals(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"darrenhoon"},"content":"                this.addEvent(inputArr);","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"darrenhoon"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":182,"author":{"gitId":"darrenhoon"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-19"},{"lineNumber":183,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":184,"author":{"gitId":"darrenhoon"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":185,"author":{"gitId":"darrenhoon"},"content":"            messages.displayText(e.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":186,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":187,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":188,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":189,"author":{"gitId":"darrenhoon"},"content":"    public String addTaskGui(String[] inputArr) throws InvalidCommandException {","lastModifiedDate":"2021-08-31"},{"lineNumber":190,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":191,"author":{"gitId":"darrenhoon"},"content":"            if (inputArr[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":192,"author":{"gitId":"darrenhoon"},"content":"                return this.addTodoGui(inputArr);","lastModifiedDate":"2021-08-31"},{"lineNumber":193,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":194,"author":{"gitId":"darrenhoon"},"content":"            } else if (inputArr[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":195,"author":{"gitId":"darrenhoon"},"content":"                return this.addDeadlineGui(inputArr);","lastModifiedDate":"2021-08-31"},{"lineNumber":196,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":197,"author":{"gitId":"darrenhoon"},"content":"            } else if (inputArr[0].equals(\"event\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":198,"author":{"gitId":"darrenhoon"},"content":"                return this.addEventGui(inputArr);","lastModifiedDate":"2021-08-31"},{"lineNumber":199,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":200,"author":{"gitId":"darrenhoon"},"content":"            } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":201,"author":{"gitId":"darrenhoon"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-31"},{"lineNumber":202,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":203,"author":{"gitId":"darrenhoon"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":204,"author":{"gitId":"darrenhoon"},"content":"            return messages.displayTextGui(e.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":205,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":206,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":208,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"darrenhoon"},"content":"     * Adds a Todo Task into the List containing Tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":210,"author":{"gitId":"darrenhoon"},"content":"     * @param inputArr String array containing input by the user.","lastModifiedDate":"2021-08-20"},{"lineNumber":211,"author":{"gitId":"darrenhoon"},"content":"     * @throws DescriptionException if inputArr length \u003c 2.","lastModifiedDate":"2021-08-20"},{"lineNumber":212,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":213,"author":{"gitId":"darrenhoon"},"content":"    public void addTodo(String[] inputArr) throws DescriptionException {","lastModifiedDate":"2021-08-19"},{"lineNumber":214,"author":{"gitId":"darrenhoon"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":215,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"todo\");","lastModifiedDate":"2021-08-19"},{"lineNumber":216,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":217,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":218,"author":{"gitId":"darrenhoon"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(inputArr, 1, inputArr.length);","lastModifiedDate":"2021-08-19"},{"lineNumber":219,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":220,"author":{"gitId":"darrenhoon"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2021-08-19"},{"lineNumber":221,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":222,"author":{"gitId":"darrenhoon"},"content":"        Todo todoTask \u003d new Todo(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":223,"author":{"gitId":"darrenhoon"},"content":"        this.taskList.add(todoTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":224,"author":{"gitId":"darrenhoon"},"content":"        messages.taskAddMessage(todoTask.toString(), this.taskList.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":225,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":226,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":227,"author":{"gitId":"darrenhoon"},"content":"    public String addTodoGui(String[] inputArr) throws DescriptionException {","lastModifiedDate":"2021-08-31"},{"lineNumber":228,"author":{"gitId":"darrenhoon"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":229,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"todo\");","lastModifiedDate":"2021-08-31"},{"lineNumber":230,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":231,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":232,"author":{"gitId":"darrenhoon"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(inputArr, 1, inputArr.length);","lastModifiedDate":"2021-08-31"},{"lineNumber":233,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":234,"author":{"gitId":"darrenhoon"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2021-08-31"},{"lineNumber":235,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":236,"author":{"gitId":"darrenhoon"},"content":"        Todo todoTask \u003d new Todo(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":237,"author":{"gitId":"darrenhoon"},"content":"        this.taskList.add(todoTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":238,"author":{"gitId":"darrenhoon"},"content":"        return messages.taskAddMessageGui(todoTask.toString(), this.taskList.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":239,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":240,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":241,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":242,"author":{"gitId":"darrenhoon"},"content":"     * Adds a Deadline Task into the List containing Tasks.","lastModifiedDate":"2021-08-20"},{"lineNumber":243,"author":{"gitId":"darrenhoon"},"content":"     * @param inputArr String array containing input by the user.","lastModifiedDate":"2021-08-20"},{"lineNumber":244,"author":{"gitId":"darrenhoon"},"content":"     * @throws DescriptionException if inputArr length \u003c 2.","lastModifiedDate":"2021-08-20"},{"lineNumber":245,"author":{"gitId":"darrenhoon"},"content":"     * @throws CommandException if \"/by\" is absent from input.","lastModifiedDate":"2021-08-20"},{"lineNumber":246,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":247,"author":{"gitId":"darrenhoon"},"content":"    public void addDeadline(String[] inputArr) throws DescriptionException, CommandException {","lastModifiedDate":"2021-08-19"},{"lineNumber":248,"author":{"gitId":"darrenhoon"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":249,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"deadline\");","lastModifiedDate":"2021-08-19"},{"lineNumber":250,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":251,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":252,"author":{"gitId":"darrenhoon"},"content":"        boolean commandAbsent \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":253,"author":{"gitId":"darrenhoon"},"content":"        int commandIndex \u003d 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":254,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c inputArr.length; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":255,"author":{"gitId":"darrenhoon"},"content":"            String currentStr \u003d inputArr[i];","lastModifiedDate":"2021-08-19"},{"lineNumber":256,"author":{"gitId":"darrenhoon"},"content":"            if (currentStr.equals(\"/by\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":257,"author":{"gitId":"darrenhoon"},"content":"                commandAbsent \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":258,"author":{"gitId":"darrenhoon"},"content":"                commandIndex \u003d i;","lastModifiedDate":"2021-08-19"},{"lineNumber":259,"author":{"gitId":"darrenhoon"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":260,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":261,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":262,"author":{"gitId":"darrenhoon"},"content":"        if (commandAbsent) {","lastModifiedDate":"2021-08-19"},{"lineNumber":263,"author":{"gitId":"darrenhoon"},"content":"            throw new CommandException(\"deadline\", \"/by\");","lastModifiedDate":"2021-08-19"},{"lineNumber":264,"author":{"gitId":"darrenhoon"},"content":"        } else if (commandIndex \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":265,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"deadline\");","lastModifiedDate":"2021-08-22"},{"lineNumber":266,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":267,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":268,"author":{"gitId":"darrenhoon"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(inputArr, 1, commandIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":269,"author":{"gitId":"darrenhoon"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2021-08-19"},{"lineNumber":270,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":271,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":272,"author":{"gitId":"darrenhoon"},"content":"            if (commandIndex + 1 \u003c\u003d inputArr.length - 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":273,"author":{"gitId":"darrenhoon"},"content":"                String[] byArray \u003d Arrays.copyOfRange(inputArr, commandIndex + 1, inputArr.length);","lastModifiedDate":"2021-08-19"},{"lineNumber":274,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":275,"author":{"gitId":"darrenhoon"},"content":"                if (byArray.length \u003e\u003d 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":276,"author":{"gitId":"darrenhoon"},"content":"                    throw new DukeException(\"Command after /by should at most only have 2 parts for date and time!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":277,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":278,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":279,"author":{"gitId":"darrenhoon"},"content":"                if (byArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":280,"author":{"gitId":"darrenhoon"},"content":"                    LocalDate by \u003d LocalDate.parse(byArray[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":281,"author":{"gitId":"darrenhoon"},"content":"                    Deadline deadlineTask \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-19"},{"lineNumber":282,"author":{"gitId":"darrenhoon"},"content":"                    this.taskList.add(deadlineTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":283,"author":{"gitId":"darrenhoon"},"content":"                    messages.taskAddMessage(deadlineTask.toString(), this.taskList.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":284,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":285,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":286,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":287,"author":{"gitId":"darrenhoon"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":288,"author":{"gitId":"darrenhoon"},"content":"                throw new DukeException(\"Command after /by cannot be empty!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":289,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":290,"author":{"gitId":"darrenhoon"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":291,"author":{"gitId":"darrenhoon"},"content":"            messages.wrongDateInputMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":292,"author":{"gitId":"darrenhoon"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":293,"author":{"gitId":"darrenhoon"},"content":"            messages.displayText(e.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":294,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":295,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":296,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":297,"author":{"gitId":"darrenhoon"},"content":"    public String addDeadlineGui(String[] inputArr) throws DescriptionException, CommandException {","lastModifiedDate":"2021-08-31"},{"lineNumber":298,"author":{"gitId":"darrenhoon"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":299,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"deadline\");","lastModifiedDate":"2021-08-31"},{"lineNumber":300,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":301,"author":{"gitId":"darrenhoon"},"content":"        boolean commandAbsent \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":302,"author":{"gitId":"darrenhoon"},"content":"        int commandIndex \u003d 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":303,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c inputArr.length; i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":304,"author":{"gitId":"darrenhoon"},"content":"            String currentStr \u003d inputArr[i];","lastModifiedDate":"2021-08-31"},{"lineNumber":305,"author":{"gitId":"darrenhoon"},"content":"            if (currentStr.equals(\"/by\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":306,"author":{"gitId":"darrenhoon"},"content":"                commandAbsent \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":307,"author":{"gitId":"darrenhoon"},"content":"                commandIndex \u003d i;","lastModifiedDate":"2021-08-31"},{"lineNumber":308,"author":{"gitId":"darrenhoon"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":309,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":310,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":311,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":312,"author":{"gitId":"darrenhoon"},"content":"        if (commandAbsent) {","lastModifiedDate":"2021-08-31"},{"lineNumber":313,"author":{"gitId":"darrenhoon"},"content":"            throw new CommandException(\"deadline\", \"/by\");","lastModifiedDate":"2021-08-31"},{"lineNumber":314,"author":{"gitId":"darrenhoon"},"content":"        } else if (commandIndex \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":315,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"deadline\");","lastModifiedDate":"2021-08-31"},{"lineNumber":316,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":317,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":318,"author":{"gitId":"darrenhoon"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(inputArr, 1, commandIndex);","lastModifiedDate":"2021-08-31"},{"lineNumber":319,"author":{"gitId":"darrenhoon"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2021-08-31"},{"lineNumber":320,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":321,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":322,"author":{"gitId":"darrenhoon"},"content":"            if (commandIndex + 1 \u003c\u003d inputArr.length - 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":323,"author":{"gitId":"darrenhoon"},"content":"                String[] byArray \u003d Arrays.copyOfRange(inputArr, commandIndex + 1, inputArr.length);","lastModifiedDate":"2021-08-31"},{"lineNumber":324,"author":{"gitId":"darrenhoon"},"content":"                if (byArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":325,"author":{"gitId":"darrenhoon"},"content":"                    LocalDate by \u003d LocalDate.parse(byArray[0]);","lastModifiedDate":"2021-08-31"},{"lineNumber":326,"author":{"gitId":"darrenhoon"},"content":"                    Deadline deadlineTask \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-31"},{"lineNumber":327,"author":{"gitId":"darrenhoon"},"content":"                    this.taskList.add(deadlineTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":328,"author":{"gitId":"darrenhoon"},"content":"                    return messages.taskAddMessageGui(deadlineTask.toString(), this.taskList.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":329,"author":{"gitId":"darrenhoon"},"content":"                } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":330,"author":{"gitId":"darrenhoon"},"content":"                    throw new DukeException(\"Command after /by should at most only have date!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":331,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":332,"author":{"gitId":"darrenhoon"},"content":"            } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":333,"author":{"gitId":"darrenhoon"},"content":"                throw new DukeException(\"Command after /by cannot be empty!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":334,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":335,"author":{"gitId":"darrenhoon"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":336,"author":{"gitId":"darrenhoon"},"content":"            return messages.wrongDateInputMessageGui();","lastModifiedDate":"2021-08-31"},{"lineNumber":337,"author":{"gitId":"darrenhoon"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":338,"author":{"gitId":"darrenhoon"},"content":"            return messages.displayTextGui(e.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":339,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":340,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":341,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":342,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":343,"author":{"gitId":"darrenhoon"},"content":"     * Adds an Event Task into the List containing Tasks.","lastModifiedDate":"2021-08-20"},{"lineNumber":344,"author":{"gitId":"darrenhoon"},"content":"     * @param inputArr String array containing input by the user.","lastModifiedDate":"2021-08-20"},{"lineNumber":345,"author":{"gitId":"darrenhoon"},"content":"     * @throws DescriptionException if inputArr length \u003c 2.","lastModifiedDate":"2021-08-20"},{"lineNumber":346,"author":{"gitId":"darrenhoon"},"content":"     * @throws CommandException if \"/at\" is absent from input.","lastModifiedDate":"2021-08-20"},{"lineNumber":347,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":348,"author":{"gitId":"darrenhoon"},"content":"    public void addEvent(String[] inputArr) throws DescriptionException, CommandException {","lastModifiedDate":"2021-08-19"},{"lineNumber":349,"author":{"gitId":"darrenhoon"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":350,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"event\");","lastModifiedDate":"2021-08-19"},{"lineNumber":351,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":352,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":353,"author":{"gitId":"darrenhoon"},"content":"        boolean commandAbsent \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":354,"author":{"gitId":"darrenhoon"},"content":"        int commandIndex \u003d 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":355,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c inputArr.length; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":356,"author":{"gitId":"darrenhoon"},"content":"            String currentStr \u003d inputArr[i];","lastModifiedDate":"2021-08-19"},{"lineNumber":357,"author":{"gitId":"darrenhoon"},"content":"            if (currentStr.equals(\"/at\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":358,"author":{"gitId":"darrenhoon"},"content":"                commandAbsent \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":359,"author":{"gitId":"darrenhoon"},"content":"                commandIndex \u003d i;","lastModifiedDate":"2021-08-19"},{"lineNumber":360,"author":{"gitId":"darrenhoon"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":361,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":362,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":363,"author":{"gitId":"darrenhoon"},"content":"        if (commandAbsent) {","lastModifiedDate":"2021-08-19"},{"lineNumber":364,"author":{"gitId":"darrenhoon"},"content":"            throw new CommandException(\"event\", \"/at\");","lastModifiedDate":"2021-08-19"},{"lineNumber":365,"author":{"gitId":"darrenhoon"},"content":"        } else if (commandIndex \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":366,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"event\");","lastModifiedDate":"2021-08-22"},{"lineNumber":367,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":368,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":369,"author":{"gitId":"darrenhoon"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(inputArr, 1, commandIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":370,"author":{"gitId":"darrenhoon"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2021-08-19"},{"lineNumber":371,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":372,"author":{"gitId":"darrenhoon"},"content":"        String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":373,"author":{"gitId":"darrenhoon"},"content":"        if (commandIndex + 1 \u003c\u003d inputArr.length - 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":374,"author":{"gitId":"darrenhoon"},"content":"            String[] atArray \u003d Arrays.copyOfRange(inputArr, commandIndex + 1, inputArr.length);","lastModifiedDate":"2021-08-19"},{"lineNumber":375,"author":{"gitId":"darrenhoon"},"content":"            at \u003d String.join(\" \", atArray);","lastModifiedDate":"2021-08-19"},{"lineNumber":376,"author":{"gitId":"darrenhoon"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":377,"author":{"gitId":"darrenhoon"},"content":"            //TODO: might need to throw error here because this case is /by and nothing behind?","lastModifiedDate":"2021-08-19"},{"lineNumber":378,"author":{"gitId":"darrenhoon"},"content":"            at \u003d \"No data was inputted\";","lastModifiedDate":"2021-08-19"},{"lineNumber":379,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":380,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":381,"author":{"gitId":"darrenhoon"},"content":"        Event eventTask \u003d new Event(description, at);","lastModifiedDate":"2021-08-19"},{"lineNumber":382,"author":{"gitId":"darrenhoon"},"content":"        this.taskList.add(eventTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":383,"author":{"gitId":"darrenhoon"},"content":"        messages.taskAddMessage(eventTask.toString(), this.taskList.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":384,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":385,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":386,"author":{"gitId":"darrenhoon"},"content":"    public String addEventGui(String[] inputArr) throws DescriptionException, CommandException {","lastModifiedDate":"2021-08-31"},{"lineNumber":387,"author":{"gitId":"darrenhoon"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-31"},{"lineNumber":388,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"event\");","lastModifiedDate":"2021-08-31"},{"lineNumber":389,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":390,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":391,"author":{"gitId":"darrenhoon"},"content":"        boolean commandAbsent \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":392,"author":{"gitId":"darrenhoon"},"content":"        int commandIndex \u003d 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":393,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c inputArr.length; i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":394,"author":{"gitId":"darrenhoon"},"content":"            String currentStr \u003d inputArr[i];","lastModifiedDate":"2021-08-31"},{"lineNumber":395,"author":{"gitId":"darrenhoon"},"content":"            if (currentStr.equals(\"/at\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":396,"author":{"gitId":"darrenhoon"},"content":"                commandAbsent \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":397,"author":{"gitId":"darrenhoon"},"content":"                commandIndex \u003d i;","lastModifiedDate":"2021-08-31"},{"lineNumber":398,"author":{"gitId":"darrenhoon"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":399,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":400,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":401,"author":{"gitId":"darrenhoon"},"content":"        if (commandAbsent) {","lastModifiedDate":"2021-08-31"},{"lineNumber":402,"author":{"gitId":"darrenhoon"},"content":"            throw new CommandException(\"event\", \"/at\");","lastModifiedDate":"2021-08-31"},{"lineNumber":403,"author":{"gitId":"darrenhoon"},"content":"        } else if (commandIndex \u003d\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":404,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"event\");","lastModifiedDate":"2021-08-31"},{"lineNumber":405,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":406,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":407,"author":{"gitId":"darrenhoon"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(inputArr, 1, commandIndex);","lastModifiedDate":"2021-08-31"},{"lineNumber":408,"author":{"gitId":"darrenhoon"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2021-08-31"},{"lineNumber":409,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":410,"author":{"gitId":"darrenhoon"},"content":"        String at;","lastModifiedDate":"2021-08-31"},{"lineNumber":411,"author":{"gitId":"darrenhoon"},"content":"        if (commandIndex + 1 \u003c\u003d inputArr.length - 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":412,"author":{"gitId":"darrenhoon"},"content":"            String[] atArray \u003d Arrays.copyOfRange(inputArr, commandIndex + 1, inputArr.length);","lastModifiedDate":"2021-08-31"},{"lineNumber":413,"author":{"gitId":"darrenhoon"},"content":"            at \u003d String.join(\" \", atArray);","lastModifiedDate":"2021-08-31"},{"lineNumber":414,"author":{"gitId":"darrenhoon"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":415,"author":{"gitId":"darrenhoon"},"content":"            //TODO: might need to throw error here because this case is /by and nothing behind?","lastModifiedDate":"2021-08-31"},{"lineNumber":416,"author":{"gitId":"darrenhoon"},"content":"            at \u003d \"No data was inputted\";","lastModifiedDate":"2021-08-31"},{"lineNumber":417,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":418,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":419,"author":{"gitId":"darrenhoon"},"content":"        Event eventTask \u003d new Event(description, at);","lastModifiedDate":"2021-08-31"},{"lineNumber":420,"author":{"gitId":"darrenhoon"},"content":"        this.taskList.add(eventTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":421,"author":{"gitId":"darrenhoon"},"content":"        return messages.taskAddMessageGui(eventTask.toString(), this.taskList.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":422,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":423,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":424,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":425,"author":{"gitId":"darrenhoon"},"content":"     * Marks a task in the taskList as done.","lastModifiedDate":"2021-08-20"},{"lineNumber":426,"author":{"gitId":"darrenhoon"},"content":"     * @param taskNumber task number to be marked as done.","lastModifiedDate":"2021-08-20"},{"lineNumber":427,"author":{"gitId":"darrenhoon"},"content":"     * @throws TaskNumberException if the number is \u003c 0 or \u003e taskList size.","lastModifiedDate":"2021-08-20"},{"lineNumber":428,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":429,"author":{"gitId":"darrenhoon"},"content":"    public void markAsDone(Integer taskNumber) throws TaskNumberException {","lastModifiedDate":"2021-08-20"},{"lineNumber":430,"author":{"gitId":"darrenhoon"},"content":"        if (taskNumber \u003e this.taskList.size() || taskNumber \u003c 0) {","lastModifiedDate":"2021-08-20"},{"lineNumber":431,"author":{"gitId":"darrenhoon"},"content":"            throw new TaskNumberException();","lastModifiedDate":"2021-08-19"},{"lineNumber":432,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":433,"author":{"gitId":"darrenhoon"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":434,"author":{"gitId":"darrenhoon"},"content":"            //because our list starts from index 0 instead of index 1","lastModifiedDate":"2021-08-19"},{"lineNumber":435,"author":{"gitId":"darrenhoon"},"content":"            int realIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":436,"author":{"gitId":"darrenhoon"},"content":"            this.taskList.get(realIndex).markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":437,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":438,"author":{"gitId":"darrenhoon"},"content":"            messages.markDoneMessage(this.taskList.get(realIndex).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":439,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":440,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":441,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":442,"author":{"gitId":"darrenhoon"},"content":"    public String markAsDoneGui(Integer taskNumber) throws TaskNumberException {","lastModifiedDate":"2021-08-31"},{"lineNumber":443,"author":{"gitId":"darrenhoon"},"content":"        if (taskNumber \u003e this.taskList.size() || taskNumber \u003c 0) {","lastModifiedDate":"2021-08-31"},{"lineNumber":444,"author":{"gitId":"darrenhoon"},"content":"            throw new TaskNumberException();","lastModifiedDate":"2021-08-31"},{"lineNumber":445,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":446,"author":{"gitId":"darrenhoon"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":447,"author":{"gitId":"darrenhoon"},"content":"            //because our list starts from index 0 instead of index 1","lastModifiedDate":"2021-08-31"},{"lineNumber":448,"author":{"gitId":"darrenhoon"},"content":"            int realIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":449,"author":{"gitId":"darrenhoon"},"content":"            this.taskList.get(realIndex).markDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":450,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":451,"author":{"gitId":"darrenhoon"},"content":"            return messages.markDoneMessageGui(this.taskList.get(realIndex).toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":452,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":453,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":454,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":455,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":456,"author":{"gitId":"darrenhoon"},"content":"     * Deletes a task from the taskList.","lastModifiedDate":"2021-08-20"},{"lineNumber":457,"author":{"gitId":"darrenhoon"},"content":"     * @param taskNumber task number to be deleted.","lastModifiedDate":"2021-08-20"},{"lineNumber":458,"author":{"gitId":"darrenhoon"},"content":"     * @throws TaskNumberException if the number is \u003c 0 or \u003e taskList size.","lastModifiedDate":"2021-08-20"},{"lineNumber":459,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":460,"author":{"gitId":"darrenhoon"},"content":"    public void deleteTask(Integer taskNumber) throws TaskNumberException {","lastModifiedDate":"2021-08-20"},{"lineNumber":461,"author":{"gitId":"darrenhoon"},"content":"        if (taskNumber \u003e this.taskList.size() || taskNumber \u003c 0) {","lastModifiedDate":"2021-08-20"},{"lineNumber":462,"author":{"gitId":"darrenhoon"},"content":"            throw new TaskNumberException();","lastModifiedDate":"2021-08-19"},{"lineNumber":463,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":464,"author":{"gitId":"darrenhoon"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":465,"author":{"gitId":"darrenhoon"},"content":"            //because our list starts from index 0 instead of index 1","lastModifiedDate":"2021-08-19"},{"lineNumber":466,"author":{"gitId":"darrenhoon"},"content":"            int realIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":467,"author":{"gitId":"darrenhoon"},"content":"            String removedTask \u003d this.taskList.get(realIndex).toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":468,"author":{"gitId":"darrenhoon"},"content":"            this.taskList.remove(realIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":469,"author":{"gitId":"darrenhoon"},"content":"            messages.taskDeleteMessage(removedTask, this.taskList.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":470,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":471,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":472,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":473,"author":{"gitId":"darrenhoon"},"content":"    public String deleteTaskGui(Integer taskNumber) throws TaskNumberException {","lastModifiedDate":"2021-08-31"},{"lineNumber":474,"author":{"gitId":"darrenhoon"},"content":"        if (taskNumber \u003e this.taskList.size() || taskNumber \u003c 0) {","lastModifiedDate":"2021-08-31"},{"lineNumber":475,"author":{"gitId":"darrenhoon"},"content":"            throw new TaskNumberException();","lastModifiedDate":"2021-08-31"},{"lineNumber":476,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":477,"author":{"gitId":"darrenhoon"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":478,"author":{"gitId":"darrenhoon"},"content":"            //because our list starts from index 0 instead of index 1","lastModifiedDate":"2021-08-31"},{"lineNumber":479,"author":{"gitId":"darrenhoon"},"content":"            int realIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":480,"author":{"gitId":"darrenhoon"},"content":"            String removedTask \u003d this.taskList.get(realIndex).toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":481,"author":{"gitId":"darrenhoon"},"content":"            this.taskList.remove(realIndex);","lastModifiedDate":"2021-08-31"},{"lineNumber":482,"author":{"gitId":"darrenhoon"},"content":"            return messages.taskDeleteMessageGui(removedTask, this.taskList.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":483,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":484,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":485,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":486,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":487,"author":{"gitId":"darrenhoon"},"content":"     * Saves the current task list to local memory\u0027s json.","lastModifiedDate":"2021-08-21"},{"lineNumber":488,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":489,"author":{"gitId":"darrenhoon"},"content":"    public void saveData() {","lastModifiedDate":"2021-08-21"},{"lineNumber":490,"author":{"gitId":"darrenhoon"},"content":"        databaseEngine.writeToDatabase(this.taskList);","lastModifiedDate":"2021-08-21"},{"lineNumber":491,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":492,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":493,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":494,"author":{"gitId":"darrenhoon"},"content":"     * Displays the tasks that have the keywords inputted.","lastModifiedDate":"2021-08-22"},{"lineNumber":495,"author":{"gitId":"darrenhoon"},"content":"     * @param inputArr the array containing the keywords.","lastModifiedDate":"2021-08-22"},{"lineNumber":496,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":497,"author":{"gitId":"darrenhoon"},"content":"    public void findTasks(String[] inputArr) {","lastModifiedDate":"2021-08-22"},{"lineNumber":498,"author":{"gitId":"darrenhoon"},"content":"        List\u003cTask\u003e filteredList \u003d this.taskList","lastModifiedDate":"2021-08-22"},{"lineNumber":499,"author":{"gitId":"darrenhoon"},"content":"                .stream()","lastModifiedDate":"2021-08-22"},{"lineNumber":500,"author":{"gitId":"darrenhoon"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":501,"author":{"gitId":"darrenhoon"},"content":"                    String description \u003d task.getDescription();","lastModifiedDate":"2021-08-22"},{"lineNumber":502,"author":{"gitId":"darrenhoon"},"content":"                    for (String s: inputArr) {","lastModifiedDate":"2021-08-22"},{"lineNumber":503,"author":{"gitId":"darrenhoon"},"content":"                        if (description.contains(s)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":504,"author":{"gitId":"darrenhoon"},"content":"                            return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":505,"author":{"gitId":"darrenhoon"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":506,"author":{"gitId":"darrenhoon"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":507,"author":{"gitId":"darrenhoon"},"content":"                    return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":508,"author":{"gitId":"darrenhoon"},"content":"                })","lastModifiedDate":"2021-08-22"},{"lineNumber":509,"author":{"gitId":"darrenhoon"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-22"},{"lineNumber":510,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":511,"author":{"gitId":"darrenhoon"},"content":"        messages.displayFilteredTasks(filteredList);","lastModifiedDate":"2021-08-22"},{"lineNumber":512,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":513,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":514,"author":{"gitId":"darrenhoon"},"content":"    public String findTasksGui(String[] inputArr) {","lastModifiedDate":"2021-08-31"},{"lineNumber":515,"author":{"gitId":"darrenhoon"},"content":"        List\u003cTask\u003e filteredList \u003d this.taskList","lastModifiedDate":"2021-08-31"},{"lineNumber":516,"author":{"gitId":"darrenhoon"},"content":"                .stream()","lastModifiedDate":"2021-08-31"},{"lineNumber":517,"author":{"gitId":"darrenhoon"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2021-08-31"},{"lineNumber":518,"author":{"gitId":"darrenhoon"},"content":"                    String description \u003d task.getDescription();","lastModifiedDate":"2021-08-31"},{"lineNumber":519,"author":{"gitId":"darrenhoon"},"content":"                    for (String s: inputArr) {","lastModifiedDate":"2021-08-31"},{"lineNumber":520,"author":{"gitId":"darrenhoon"},"content":"                        if (description.contains(s)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":521,"author":{"gitId":"darrenhoon"},"content":"                            return true;","lastModifiedDate":"2021-08-31"},{"lineNumber":522,"author":{"gitId":"darrenhoon"},"content":"                        }","lastModifiedDate":"2021-08-31"},{"lineNumber":523,"author":{"gitId":"darrenhoon"},"content":"                    }","lastModifiedDate":"2021-08-31"},{"lineNumber":524,"author":{"gitId":"darrenhoon"},"content":"                    return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":525,"author":{"gitId":"darrenhoon"},"content":"                })","lastModifiedDate":"2021-08-31"},{"lineNumber":526,"author":{"gitId":"darrenhoon"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-31"},{"lineNumber":527,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":528,"author":{"gitId":"darrenhoon"},"content":"        return messages.displayFilteredTasksGui(filteredList);","lastModifiedDate":"2021-08-31"},{"lineNumber":529,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":530,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":531,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"darrenhoon":531}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"    private Circle circleMask;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // @@author benedictkhoomw-reused","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Display mask idea taken from Benedict Khoo from my tutorial group.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        setupDisplayMask();","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        displayPicture.setClip(circleMask);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private void setupDisplayMask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        double centerX \u003d displayPicture.getFitWidth() / 2;","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        double centerY \u003d displayPicture.getFitHeight() / 2;","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        double radius \u003d Math.min(displayPicture.getFitWidth(), displayPicture.getFitHeight()) / 2.0;","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        circleMask \u003d new Circle(centerX, centerY, radius);","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"-":36,"darrenhoon":39}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"    private static int TRANSITION \u003d 1500;","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(userInput.getText());","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"        if (userInput.getText().equals(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"            CompletableFuture.delayedExecutor(TRANSITION, TimeUnit.MILLISECONDS).execute(() -\u003e Platform.exit());","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darrenhoon":64}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":" * The Ui class provides dependency injection for the classes to show the response from a user\u0027s command line input.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":" * @author  Hoon Darren","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":" * @version 1.0","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":" * @since   2021-08-21","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"    private static final String BORDERLINE \u003d \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"     * Displays message input with horizontal borderlines on top and bottom.","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"     * @param input String message to be displayed to user","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    public void displayText(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(BORDERLINE + input + BORDERLINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    public String displayTextGui(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"        return input;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"     * Displays welcome message when Duke program starts.","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(this.WELCOME_MESSAGE);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"    public String welcomeMessageGui() {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"        return WELCOME_MESSAGE;","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"     * Displays goodbye message when user inputs \"bye\".","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"    public void goodbyeMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(GOODBYE_MESSAGE);","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"    public String goodbyeMessageGui() {","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"        return GOODBYE_MESSAGE;","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"     * Displays the message for a task marked as Done.","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"     * @param taskMarked the task that was marked to be done.","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"    public void markDoneMessage(String taskMarked) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"        String message \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", taskMarked);","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"    public String markDoneMessageGui(String taskMarked) {","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"        String message \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", taskMarked);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"     * Message displayed when a task is deleted.","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"     * @param taskString the task deleted from the list.","lastModifiedDate":"2021-08-20"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"     * @param listSize size of the task list after deletion.","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"    public void taskDeleteMessage(String taskString, int listSize) {","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\" + taskString + \"\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"        message +\u003d String.format(\"Now you have %d tasks in the list.\", listSize);","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"    public String taskDeleteMessageGui(String taskString, int listSize) {","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\" + taskString + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"        message +\u003d String.format(\"Now you have %d tasks in the list.\", listSize);","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"     * Displays when list is empty.","lastModifiedDate":"2021-08-20"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"    public void listEmptyMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(\"Your List is Empty\");","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":"    public String listEmptyMessageGui() {","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"        return \"Your List is Empty\";","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"darrenhoon"},"content":"     * Message displayed when a task is added.","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"darrenhoon"},"content":"     * @param taskString the task added.","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"darrenhoon"},"content":"     * @param listSize size of the task list after the addition.","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"darrenhoon"},"content":"    public void taskAddMessage(String taskString, int listSize) {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"darrenhoon"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\" + taskString + \"\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"darrenhoon"},"content":"        message +\u003d String.format(\"Now you have %d tasks in the list.\", listSize);","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"darrenhoon"},"content":"    public String taskAddMessageGui(String taskString, int listSize) {","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"darrenhoon"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\" + taskString + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"darrenhoon"},"content":"        message +\u003d String.format(\"Now you have %d tasks in the list.\", listSize);","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"darrenhoon"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"darrenhoon"},"content":"     * Displays all items and their completion status.","lastModifiedDate":"2021-08-20"},{"lineNumber":117,"author":{"gitId":"darrenhoon"},"content":"     * @param taskList the list containing Task objects.","lastModifiedDate":"2021-08-20"},{"lineNumber":118,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"darrenhoon"},"content":"    public void displayListTasks(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"darrenhoon"},"content":"        //shown when there are no tasks in the list","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"darrenhoon"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"darrenhoon"},"content":"            this.listEmptyMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"darrenhoon"},"content":"            return;","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(BORDERLINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"darrenhoon"},"content":"            //displays the current task\u0027s status","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"darrenhoon"},"content":"            String inputMessage \u003d String.format(\"%d. %s\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"darrenhoon"},"content":"            System.out.println(inputMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(BORDERLINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"darrenhoon"},"content":"    public String displayListTasksGui(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"darrenhoon"},"content":"        //shown when there are no tasks in the list","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"darrenhoon"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":143,"author":{"gitId":"darrenhoon"},"content":"            return this.listEmptyMessageGui();","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"darrenhoon"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"darrenhoon"},"content":"            //displays the current task\u0027s status","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"darrenhoon"},"content":"            String inputMessage \u003d String.format(\"%d. %s\\n\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"darrenhoon"},"content":"            message +\u003d inputMessage;","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"darrenhoon"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":156,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":157,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":158,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"darrenhoon"},"content":"     * Displays the date format to be used.","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"darrenhoon"},"content":"    public void wrongDateInputMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":162,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(\"The input should be in the form of yyyy-dd-mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":164,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":165,"author":{"gitId":"darrenhoon"},"content":"    public String wrongDateInputMessageGui() {","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"darrenhoon"},"content":"        return\"The input should be in the form of yyyy-dd-mm\";","lastModifiedDate":"2021-08-31"},{"lineNumber":167,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":168,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":169,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"darrenhoon"},"content":"     * Displays all the tasks with the keywords.","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"darrenhoon"},"content":"     * @param taskList the list containing filtered tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"darrenhoon"},"content":"    public void displayFilteredTasks(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"darrenhoon"},"content":"        //shown when there are no tasks in the list","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"darrenhoon"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"darrenhoon"},"content":"            this.listEmptyMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"darrenhoon"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":180,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":181,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(BORDERLINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":182,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"darrenhoon"},"content":"            //displays the current task\u0027s status","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"darrenhoon"},"content":"            String inputMessage \u003d String.format(\"%d. %s\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"darrenhoon"},"content":"            System.out.println(inputMessage);","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(BORDERLINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":192,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"darrenhoon"},"content":"    public String displayFilteredTasksGui(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":195,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":196,"author":{"gitId":"darrenhoon"},"content":"        //shown when there are no tasks in the list","lastModifiedDate":"2021-08-31"},{"lineNumber":197,"author":{"gitId":"darrenhoon"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":198,"author":{"gitId":"darrenhoon"},"content":"            return this.listEmptyMessageGui();","lastModifiedDate":"2021-08-31"},{"lineNumber":199,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":200,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":201,"author":{"gitId":"darrenhoon"},"content":"        String message \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":202,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":203,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":204,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":205,"author":{"gitId":"darrenhoon"},"content":"            //displays the current task\u0027s status","lastModifiedDate":"2021-08-31"},{"lineNumber":206,"author":{"gitId":"darrenhoon"},"content":"            String inputMessage \u003d String.format(\"%d. %s\\n\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":207,"author":{"gitId":"darrenhoon"},"content":"            message +\u003d inputMessage;","lastModifiedDate":"2021-08-31"},{"lineNumber":208,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":209,"author":{"gitId":"darrenhoon"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":210,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":211,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":212,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":213,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"darrenhoon":213}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darrenhoon":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darrenhoon":19}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import parser.Parser;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"    public void parserCanParseAddEventWithManyWords() {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"        String input \u003d \"event go for dance /at 01/02/2111 1200\";","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"        HashMap\u003cString, String\u003e parsed \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"event\", parsed.get(\"command\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"go for dance\", parsed.get(\"info\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"01/02/2111 1200\", parsed.get(\"at\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"    public void parserCanParseAddEventWithOneWord() {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"        String input \u003d \"event dance /at 01/02/2111 1200\";","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"        HashMap\u003cString, String\u003e parsed \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"event\", parsed.get(\"command\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"dance\", parsed.get(\"info\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"01/02/2111 1200\", parsed.get(\"at\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    public void parserCanParseAddDeadlineWithManyWords() {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"        String input \u003d \"deadline submit 2103 /by 01/02/2111 1200\";","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"        HashMap\u003cString, String\u003e parsed \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"deadline\", parsed.get(\"command\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"submit 2103\", parsed.get(\"info\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"01/02/2111 1200\", parsed.get(\"by\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"    public void parserCanParseAddDeadlineWithOneWord() {","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"        String input \u003d \"deadline sleep /by 01/02/2111 1200\";","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"        HashMap\u003cString, String\u003e parsed \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"deadline\", parsed.get(\"command\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"sleep\", parsed.get(\"info\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"01/02/2111 1200\", parsed.get(\"by\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"    public void parserCanParseAddTodoWithManyWords() {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"        String input \u003d \"todo submit 2103\";","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"        HashMap\u003cString, String\u003e parsed \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"todo\", parsed.get(\"command\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"submit 2103\", parsed.get(\"info\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"    public void parserCanParseAddTodoWithOneWord() {","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"        String input \u003d \"todo sleep\";","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"        HashMap\u003cString, String\u003e parsed \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"todo\", parsed.get(\"command\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"sleep\", parsed.get(\"info\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"    public void parserCanParseList() {","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"        HashMap\u003cString, String\u003e parsed \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"list\", parsed.get(\"command\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"    public void parserCanParseDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"        String input \u003d \"done 1\";","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"        HashMap\u003cString, String\u003e parsed \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"done\", parsed.get(\"command\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"1\", parsed.get(\"info\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"    public void parserCanParseDelete() {","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"        HashMap\u003cString, String\u003e parsed \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"delete\", parsed.get(\"command\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"        assertEquals(\"1\", parsed.get(\"info\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"darrenhoon":96}},{"path":"text-ui-test/database/database.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"todo true cmVhZCBib29rcw\u003d\u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"event false MTQvMDgvMjE\u003d bWVldCAoaW1hZ2luYXJ5KSBnaXJsZnJpZW5k","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"deadline false 2021-11-11 YnV5IGdyb2Nlcmllcw\u003d\u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"todo false cmVhZCBib29rcw\u003d\u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"deadline false 2021-11-11 YnV5IGdyb2Nlcmllcw\u003d\u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"event false MTQvMDgvMjE\u003d bWVldCAoaW1hZ2luYXJ5KSBnaXJsZnJpZW5k","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"darrenhoon":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"todo read books","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"deadline buy groceries /by 2021-11-11","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"event meet (imaginary) girlfriend /at 14/08/21","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"done -1","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"delete 5","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"delete -1","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"deadline buy books /at tom0\\rrow","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"event /by 887799","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"darrenhoon":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"SET JAVA_HOME\u003dC:\\Program Files\\Java\\liberica-11.0.9.1","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"SET Path\u003d%JAVA_HOME%\\bin;%Path%","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"echo Java home set to: %JAVA_HOME%","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"echo Java 11 activated","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":21,"darrenhoon":4}}]
