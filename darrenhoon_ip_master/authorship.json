[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"## Acknowldgements","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"-":24,"darrenhoon":2}},{"path":"SwitchJava.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"@ECHO OFF","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"SET JAVA_HOME\u003dC:\\Program Files\\Java\\liberica-11.0.9.1","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"SET Path\u003d%JAVA_HOME%\\bin;%Path%","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"echo Java home set to: %JAVA_HOME%","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"echo Java 11 activated","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"java -version","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"darrenhoon":6}},{"path":"database/database.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"deadline false 2021-08-08 bW9udGFo","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"event false bWFjcGhlcnNvbm5h bG9vbGFpIGxlZXZh","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"deadline true 2021-08-31 bG9vdmVseSBkYXk\u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"todo false ZWF0IGd1bSE\u003d","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"darrenhoon":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import main.java.tasklist.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"     * Initialises app.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"     * @param args empty args.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"        Ui messages \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"        TaskList engine \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"        messages.welcomeMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"        engine.runProgram();","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"        messages.goodbyeMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"darrenhoon":16}},{"path":"src/main/java/exception/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"public class CommandException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"     * Constructor to create a new CommandException.","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"     * @param task task to be added.","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"     * @param command command required.","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"    public CommandException(String task, String command) {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"        super(String.format(\"Your task of %s requires the command %s\", task, command));","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"darrenhoon":14}},{"path":"src/main/java/exception/DescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"public class DescriptionException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"     * Constructor to create a new DescriptionException.","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"     * @param task task which does not have a description.","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"    public DescriptionException(String task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"        super(String.format(\"The description of a %s cannot be empty.\", task));","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"darrenhoon":12}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"     * Superclass of all exceptions that could be thrown by the Duke app.","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"     * @param message error message to be shown.","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"darrenhoon":12}},{"path":"src/main/java/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"     * Exception when the command is invalid.","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"darrenhoon":10}},{"path":"src/main/java/exception/TaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"public class TaskNumberException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"     * Exception when a done or delete command is followed by a number out of the list\u0027s range.","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"    public TaskNumberException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"        super(\"The number is either not in the list or your input after the done or delete command is not an Integer! (pls do that)\");","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"darrenhoon":11}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"     * Method to split a string into an array, removing spaces.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"     * @param input string to be segmented.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"     * @return String array with no spaces.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"    public static String[] sanitizeInput(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"        return inputArr;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"darrenhoon":14}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import main.java.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import main.java.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import main.java.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import main.java.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"import java.util.Base64;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"    private Path dir;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    private Path fileDir;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"    private Ui messages \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"     * Constructor of DatabaseEngine.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    public Storage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"        this.dir \u003d Paths.get(System.getProperty(\"user.dir\"), \"database\");","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"        this.fileDir \u003d Paths.get(System.getProperty(\"user.dir\"), \"database\", \"database.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"     * Writes current list to local storage\u0027s text file.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"     * @param taskList list to be saved.","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"    public void writeToDatabase(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"        this.deleteDatabase();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"        this.createDatabase();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"            FileWriter fw \u003d new FileWriter(String.valueOf(this.fileDir), true);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"            List\u003cString\u003e mappedList \u003d taskList.stream().map(task -\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"                String line \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"                    Deadline deadlineTask \u003d (Deadline) task;","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"                    String encodedString \u003d Base64.getEncoder().encodeToString(deadlineTask.getDescription().getBytes());","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"                    line +\u003d \"deadline \" + deadlineTask.getIsDone() + \" \" + deadlineTask.getBy() + \" \" + encodedString;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"                    Event eventTask \u003d (Event) task;","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"                    String encodedDescription \u003d Base64.getEncoder().encodeToString(eventTask.getDescription().getBytes());","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"                    String encodedAt \u003d Base64.getEncoder().encodeToString(eventTask.getAt().getBytes());","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"                    line +\u003d \"event \" + eventTask.getIsDone() + \" \" + encodedAt + \" \" + encodedDescription;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"                    //task instance of Todo","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"                    String encodedString \u003d Base64.getEncoder().encodeToString(task.getDescription().getBytes());","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"                    line +\u003d \"todo \" + task.getIsDone() + \" \" + encodedString;","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"                line +\u003d \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"                return line;","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"            }).collect(Collectors.toList());","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"            for (String task: mappedList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"                fw.write(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"            messages.displayText(\"Error writing to database.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"     * Reads from local storage\u0027s text file.","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"     * @return list containing Tasks stored in local storage.","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"    public List\u003cTask\u003e readFromDatabase() {","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"            List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":"            File file \u003d new File(String.valueOf(this.fileDir));","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"darrenhoon"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"darrenhoon"},"content":"                String task \u003d scanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"darrenhoon"},"content":"                String[] dataArr \u003d task.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"darrenhoon"},"content":"                if (dataArr[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"darrenhoon"},"content":"                    Boolean isDone \u003d Boolean.valueOf(dataArr[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"darrenhoon"},"content":"                    LocalDate by \u003d LocalDate.parse(dataArr[2]);","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"darrenhoon"},"content":"                    String description \u003d new String(Base64.getDecoder().decode(dataArr[3]));","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"darrenhoon"},"content":"                    Deadline deadlineTask \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"darrenhoon"},"content":"                    if (isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"darrenhoon"},"content":"                        deadlineTask.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"darrenhoon"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"darrenhoon"},"content":"                    taskList.add(deadlineTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"darrenhoon"},"content":"                else if (dataArr[0].equals(\"event\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"darrenhoon"},"content":"                    Boolean isDone \u003d Boolean.valueOf(dataArr[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"darrenhoon"},"content":"                    String at \u003d new String(Base64.getDecoder().decode(dataArr[2]));","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"darrenhoon"},"content":"                    String description \u003d new String(Base64.getDecoder().decode(dataArr[3]));","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"darrenhoon"},"content":"                    Event eventTask \u003d new Event(description, at);","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"darrenhoon"},"content":"                    if (isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"darrenhoon"},"content":"                        eventTask.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"darrenhoon"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"darrenhoon"},"content":"                    taskList.add(eventTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"darrenhoon"},"content":"                else {","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"darrenhoon"},"content":"                    Boolean isDone \u003d Boolean.valueOf(dataArr[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"darrenhoon"},"content":"                    String description \u003d new String(Base64.getDecoder().decode(dataArr[2]));","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"darrenhoon"},"content":"                    Todo todoTask \u003d new Todo(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"darrenhoon"},"content":"                    if (isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"darrenhoon"},"content":"                        todoTask.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"darrenhoon"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"darrenhoon"},"content":"                    taskList.add(todoTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"darrenhoon"},"content":"            scanner.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"darrenhoon"},"content":"            return taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"darrenhoon"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"darrenhoon"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"darrenhoon"},"content":"            System.out.println(\"Error: File path was provided as null.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"darrenhoon"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"darrenhoon"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"darrenhoon"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"darrenhoon"},"content":"            System.out.println(\"Error: File was not found in database.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"darrenhoon"},"content":"            return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":152,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":153,"author":{"gitId":"darrenhoon"},"content":"     * Creates a text file if not present in local storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":155,"author":{"gitId":"darrenhoon"},"content":"    public void createDatabase() {","lastModifiedDate":"2021-08-21"},{"lineNumber":156,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":157,"author":{"gitId":"darrenhoon"},"content":"            File file \u003d new File(String.valueOf(this.fileDir));","lastModifiedDate":"2021-08-21"},{"lineNumber":158,"author":{"gitId":"darrenhoon"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":159,"author":{"gitId":"darrenhoon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":160,"author":{"gitId":"darrenhoon"},"content":"            //should not occur since we are writing to local memory as opposed to network file","lastModifiedDate":"2021-08-21"},{"lineNumber":161,"author":{"gitId":"darrenhoon"},"content":"            messages.displayText(\"Error: Unable to create txt file.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":164,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":165,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"darrenhoon"},"content":"     * Deletes the text file from storage\u0027s directory.","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"darrenhoon"},"content":"    public void deleteDatabase() {","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"darrenhoon"},"content":"        File fileDelete \u003d new File(String.valueOf(this.fileDir));","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"darrenhoon"},"content":"        fileDelete.delete();","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":172,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":173,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":174,"author":{"gitId":"darrenhoon"},"content":"     * Creates a directory if not present in local storage.","lastModifiedDate":"2021-08-21"},{"lineNumber":175,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":176,"author":{"gitId":"darrenhoon"},"content":"    public void createDirectory() {","lastModifiedDate":"2021-08-21"},{"lineNumber":177,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":178,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":179,"author":{"gitId":"darrenhoon"},"content":"            if(!Files.exists(this.dir)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":180,"author":{"gitId":"darrenhoon"},"content":"                messages.displayText(\"You currently do not have a directory to save the database. \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":181,"author":{"gitId":"darrenhoon"},"content":"                        \"Creating one now at: \" + this.dir);","lastModifiedDate":"2021-08-21"},{"lineNumber":182,"author":{"gitId":"darrenhoon"},"content":"                Files.createDirectory(this.dir);","lastModifiedDate":"2021-08-21"},{"lineNumber":183,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":184,"author":{"gitId":"darrenhoon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":185,"author":{"gitId":"darrenhoon"},"content":"            messages.displayText(\"Error: Unable to create the directory.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":186,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":187,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":188,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"darrenhoon":189}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"     * Constructor to create a new Deadline object.","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"     * @param description the description of the Deadline Task.","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"     * @param by due date of Deadline Task.","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"     * Retrieves the parameter by as a string.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"     * @return by property as a String.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"        return this.by.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"darrenhoon":31}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import main.java.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"    protected String at;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"     * Constructor for new Event object.","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"     * @param description description of the event.","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"     * @param at date in which the event is to be held at.","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"     * Retrieves this event\u0027s at.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"     * @return at.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"        return this.at;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"darrenhoon":31}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"     * Constructor of superclass Task.","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"     * @param description description of the task.","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"     * Gets the status of the current task object","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"     * @return the string status where X means done and blank is not done","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"     * Marks this task as done by changing the isDone boolean to true","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"     * Retrieves the description of this task.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"     * @return the string description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"        return this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"darrenhoon":48}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import main.java.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"     * Constructor for a new Todo object.","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"     * @param description description of the Todo Task.","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"darrenhoon":19}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.tasklist;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import main.java.exception.DescriptionException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"import main.java.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import main.java.exception.InvalidCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"import main.java.exception.CommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"import main.java.exception.TaskNumberException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"import main.java.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"import main.java.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"import main.java.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"import main.java.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"import main.java.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"import main.java.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"import main.java.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"    private final Ui messages \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"    private final Storage databaseEngine \u003d new Storage();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"     * Main engine to run the program.","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"    public void runProgram() {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"        this.loadData();","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"        //initialises the scanner","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"        String input;","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"        while (true) {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"            //saves the latest copy of the task list","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"            this.saveData();","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"            //removes additional space from the input","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"            input \u003d sc.nextLine().trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"            //removes space in the command input and stores the strings in an array","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"            String[] inputArr \u003d Parser.sanitizeInput(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"                messages.displayListTasks(this.taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"            } else if (inputArr[0].equals(\"done\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"                ","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"                //obtains the task number which we want to mark as done","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"                Integer index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"                    this.markAsDone(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"                    messages.displayText(e.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"                ","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"            } else if (inputArr[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"                //obtains the task number which we want to delete","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"                Integer index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"                    this.deleteTask(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"                    messages.displayText(e.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"            } else if (inputArr[0].equals(\"find\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"                this.findTasks(inputArr);","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"                //adds item input by the user into the inputList","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"                    this.addTask(inputArr);","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"                    messages.displayText(e.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"        //terminates scanner","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"        sc.close();","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"     * Loads data from local storage.","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"darrenhoon"},"content":"    public void loadData() {","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"darrenhoon"},"content":"        databaseEngine.createDirectory();","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"darrenhoon"},"content":"        databaseEngine.createDatabase();","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"darrenhoon"},"content":"        this.taskList \u003d databaseEngine.readFromDatabase();","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"darrenhoon"},"content":"     * Adds a TooDo Task into the List containing Tasks.","lastModifiedDate":"2021-08-20"},{"lineNumber":106,"author":{"gitId":"darrenhoon"},"content":"     * @param inputArr String array containing input by the user.","lastModifiedDate":"2021-08-20"},{"lineNumber":107,"author":{"gitId":"darrenhoon"},"content":"     * @throws InvalidCommandException if inputArr length \u003c 2.","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"darrenhoon"},"content":"    public void addTask(String[] inputArr) throws InvalidCommandException {","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"darrenhoon"},"content":"            if (inputArr[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"darrenhoon"},"content":"                this.addTodo(inputArr);","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"darrenhoon"},"content":"            } else if (inputArr[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"darrenhoon"},"content":"                this.addDeadline(inputArr);","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"darrenhoon"},"content":"            } else if (inputArr[0].equals(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"darrenhoon"},"content":"                this.addEvent(inputArr);","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"darrenhoon"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"darrenhoon"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"darrenhoon"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"darrenhoon"},"content":"            messages.displayText(e.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"darrenhoon"},"content":"     * Adds a Todo Task into the List containing Tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"darrenhoon"},"content":"     * @param inputArr String array containing input by the user.","lastModifiedDate":"2021-08-20"},{"lineNumber":132,"author":{"gitId":"darrenhoon"},"content":"     * @throws DescriptionException if inputArr length \u003c 2.","lastModifiedDate":"2021-08-20"},{"lineNumber":133,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"darrenhoon"},"content":"    public void addTodo(String[] inputArr) throws DescriptionException {","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"darrenhoon"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"todo\");","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"darrenhoon"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(inputArr, 1, inputArr.length);","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"darrenhoon"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"darrenhoon"},"content":"        Todo todoTask \u003d new Todo(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"darrenhoon"},"content":"        this.taskList.add(todoTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"darrenhoon"},"content":"        messages.taskAddMessage(todoTask.toString(), this.taskList.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"darrenhoon"},"content":"     * Adds a Deadline Task into the List containing Tasks.","lastModifiedDate":"2021-08-20"},{"lineNumber":150,"author":{"gitId":"darrenhoon"},"content":"     * @param inputArr String array containing input by the user.","lastModifiedDate":"2021-08-20"},{"lineNumber":151,"author":{"gitId":"darrenhoon"},"content":"     * @throws DescriptionException if inputArr length \u003c 2.","lastModifiedDate":"2021-08-20"},{"lineNumber":152,"author":{"gitId":"darrenhoon"},"content":"     * @throws CommandException if \"/by\" is absent from input.","lastModifiedDate":"2021-08-20"},{"lineNumber":153,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"darrenhoon"},"content":"    public void addDeadline(String[] inputArr) throws DescriptionException, CommandException {","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"darrenhoon"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"deadline\");","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"darrenhoon"},"content":"        boolean commandAbsent \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"darrenhoon"},"content":"        int commandIndex \u003d 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c inputArr.length; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"darrenhoon"},"content":"            String currentStr \u003d inputArr[i];","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"darrenhoon"},"content":"            if (currentStr.equals(\"/by\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"darrenhoon"},"content":"                commandAbsent \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"darrenhoon"},"content":"                commandIndex \u003d i;","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"darrenhoon"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":167,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":168,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"darrenhoon"},"content":"        if (commandAbsent) {","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"darrenhoon"},"content":"            throw new CommandException(\"deadline\", \"/by\");","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"darrenhoon"},"content":"        } else if (commandIndex \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"deadline\");","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"darrenhoon"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(inputArr, 1, commandIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"darrenhoon"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":178,"author":{"gitId":"darrenhoon"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":179,"author":{"gitId":"darrenhoon"},"content":"            if (commandIndex + 1 \u003c\u003d inputArr.length - 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"darrenhoon"},"content":"                String[] byArray \u003d Arrays.copyOfRange(inputArr, commandIndex + 1, inputArr.length);","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":182,"author":{"gitId":"darrenhoon"},"content":"                if (byArray.length \u003e\u003d 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":183,"author":{"gitId":"darrenhoon"},"content":"                    throw new DukeException(\"Command after /by should at most only have 2 parts for date and time!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":184,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":185,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":186,"author":{"gitId":"darrenhoon"},"content":"                if (byArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":187,"author":{"gitId":"darrenhoon"},"content":"                    LocalDate by \u003d LocalDate.parse(byArray[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":188,"author":{"gitId":"darrenhoon"},"content":"                    Deadline deadlineTask \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-19"},{"lineNumber":189,"author":{"gitId":"darrenhoon"},"content":"                    this.taskList.add(deadlineTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":190,"author":{"gitId":"darrenhoon"},"content":"                    messages.taskAddMessage(deadlineTask.toString(), this.taskList.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":191,"author":{"gitId":"darrenhoon"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":192,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":193,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":194,"author":{"gitId":"darrenhoon"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":195,"author":{"gitId":"darrenhoon"},"content":"                throw new DukeException(\"Command after /by cannot be empty!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":196,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":197,"author":{"gitId":"darrenhoon"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":198,"author":{"gitId":"darrenhoon"},"content":"            messages.wrongDateInputMessage();","lastModifiedDate":"2021-08-21"},{"lineNumber":199,"author":{"gitId":"darrenhoon"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":200,"author":{"gitId":"darrenhoon"},"content":"            messages.displayText(e.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":201,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":202,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":203,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":204,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":205,"author":{"gitId":"darrenhoon"},"content":"     * Adds an Event Task into the List containing Tasks.","lastModifiedDate":"2021-08-20"},{"lineNumber":206,"author":{"gitId":"darrenhoon"},"content":"     * @param inputArr String array containing input by the user.","lastModifiedDate":"2021-08-20"},{"lineNumber":207,"author":{"gitId":"darrenhoon"},"content":"     * @throws DescriptionException if inputArr length \u003c 2.","lastModifiedDate":"2021-08-20"},{"lineNumber":208,"author":{"gitId":"darrenhoon"},"content":"     * @throws CommandException if \"/at\" is absent from input.","lastModifiedDate":"2021-08-20"},{"lineNumber":209,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":210,"author":{"gitId":"darrenhoon"},"content":"    public void addEvent(String[] inputArr) throws DescriptionException, CommandException {","lastModifiedDate":"2021-08-19"},{"lineNumber":211,"author":{"gitId":"darrenhoon"},"content":"        if (inputArr.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":212,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"event\");","lastModifiedDate":"2021-08-19"},{"lineNumber":213,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":214,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":215,"author":{"gitId":"darrenhoon"},"content":"        boolean commandAbsent \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":216,"author":{"gitId":"darrenhoon"},"content":"        int commandIndex \u003d 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":217,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c inputArr.length; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":218,"author":{"gitId":"darrenhoon"},"content":"            String currentStr \u003d inputArr[i];","lastModifiedDate":"2021-08-19"},{"lineNumber":219,"author":{"gitId":"darrenhoon"},"content":"            if (currentStr.equals(\"/at\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":220,"author":{"gitId":"darrenhoon"},"content":"                commandAbsent \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":221,"author":{"gitId":"darrenhoon"},"content":"                commandIndex \u003d i;","lastModifiedDate":"2021-08-19"},{"lineNumber":222,"author":{"gitId":"darrenhoon"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":223,"author":{"gitId":"darrenhoon"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":224,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":225,"author":{"gitId":"darrenhoon"},"content":"        if (commandAbsent) {","lastModifiedDate":"2021-08-19"},{"lineNumber":226,"author":{"gitId":"darrenhoon"},"content":"            throw new CommandException(\"event\", \"/at\");","lastModifiedDate":"2021-08-19"},{"lineNumber":227,"author":{"gitId":"darrenhoon"},"content":"        } else if (commandIndex \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":228,"author":{"gitId":"darrenhoon"},"content":"            throw new DescriptionException(\"event\");","lastModifiedDate":"2021-08-22"},{"lineNumber":229,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":230,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":231,"author":{"gitId":"darrenhoon"},"content":"        String[] descriptionArray \u003d Arrays.copyOfRange(inputArr, 1, commandIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":232,"author":{"gitId":"darrenhoon"},"content":"        String description \u003d String.join(\" \", descriptionArray);","lastModifiedDate":"2021-08-19"},{"lineNumber":233,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":234,"author":{"gitId":"darrenhoon"},"content":"        String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":235,"author":{"gitId":"darrenhoon"},"content":"        if (commandIndex + 1 \u003c\u003d inputArr.length - 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":236,"author":{"gitId":"darrenhoon"},"content":"            String[] atArray \u003d Arrays.copyOfRange(inputArr, commandIndex + 1, inputArr.length);","lastModifiedDate":"2021-08-19"},{"lineNumber":237,"author":{"gitId":"darrenhoon"},"content":"            at \u003d String.join(\" \", atArray);","lastModifiedDate":"2021-08-19"},{"lineNumber":238,"author":{"gitId":"darrenhoon"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":239,"author":{"gitId":"darrenhoon"},"content":"            //TODO: might need to throw error here because this case is /by and nothing behind?","lastModifiedDate":"2021-08-19"},{"lineNumber":240,"author":{"gitId":"darrenhoon"},"content":"            at \u003d \"No data was inputted\";","lastModifiedDate":"2021-08-19"},{"lineNumber":241,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":242,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":243,"author":{"gitId":"darrenhoon"},"content":"        Event eventTask \u003d new Event(description, at);","lastModifiedDate":"2021-08-19"},{"lineNumber":244,"author":{"gitId":"darrenhoon"},"content":"        this.taskList.add(eventTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":245,"author":{"gitId":"darrenhoon"},"content":"        messages.taskAddMessage(eventTask.toString(), this.taskList.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":246,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":247,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":248,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":249,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":250,"author":{"gitId":"darrenhoon"},"content":"     * Marks a task in the taskList as done.","lastModifiedDate":"2021-08-20"},{"lineNumber":251,"author":{"gitId":"darrenhoon"},"content":"     * @param taskNumber task number to be marked as done.","lastModifiedDate":"2021-08-20"},{"lineNumber":252,"author":{"gitId":"darrenhoon"},"content":"     * @throws TaskNumberException if the number is \u003c 0 or \u003e taskList size.","lastModifiedDate":"2021-08-20"},{"lineNumber":253,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":254,"author":{"gitId":"darrenhoon"},"content":"    public void markAsDone(Integer taskNumber) throws TaskNumberException {","lastModifiedDate":"2021-08-20"},{"lineNumber":255,"author":{"gitId":"darrenhoon"},"content":"        if (taskNumber \u003e this.taskList.size() || taskNumber \u003c 0) {","lastModifiedDate":"2021-08-20"},{"lineNumber":256,"author":{"gitId":"darrenhoon"},"content":"            throw new TaskNumberException();","lastModifiedDate":"2021-08-19"},{"lineNumber":257,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":258,"author":{"gitId":"darrenhoon"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":259,"author":{"gitId":"darrenhoon"},"content":"            //because our list starts from index 0 instead of index 1","lastModifiedDate":"2021-08-19"},{"lineNumber":260,"author":{"gitId":"darrenhoon"},"content":"            int realIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":261,"author":{"gitId":"darrenhoon"},"content":"            this.taskList.get(realIndex).markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":262,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":263,"author":{"gitId":"darrenhoon"},"content":"            messages.markDoneMessage(this.taskList.get(realIndex).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":264,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":265,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":266,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":267,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":268,"author":{"gitId":"darrenhoon"},"content":"     * Deletes a task from the taskList.","lastModifiedDate":"2021-08-20"},{"lineNumber":269,"author":{"gitId":"darrenhoon"},"content":"     * @param taskNumber task number to be deleted.","lastModifiedDate":"2021-08-20"},{"lineNumber":270,"author":{"gitId":"darrenhoon"},"content":"     * @throws TaskNumberException if the number is \u003c 0 or \u003e taskList size.","lastModifiedDate":"2021-08-20"},{"lineNumber":271,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":272,"author":{"gitId":"darrenhoon"},"content":"    public void deleteTask(Integer taskNumber) throws TaskNumberException {","lastModifiedDate":"2021-08-20"},{"lineNumber":273,"author":{"gitId":"darrenhoon"},"content":"        if (taskNumber \u003e this.taskList.size() || taskNumber \u003c 0) {","lastModifiedDate":"2021-08-20"},{"lineNumber":274,"author":{"gitId":"darrenhoon"},"content":"            throw new TaskNumberException();","lastModifiedDate":"2021-08-19"},{"lineNumber":275,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":276,"author":{"gitId":"darrenhoon"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":277,"author":{"gitId":"darrenhoon"},"content":"            //because our list starts from index 0 instead of index 1","lastModifiedDate":"2021-08-19"},{"lineNumber":278,"author":{"gitId":"darrenhoon"},"content":"            int realIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":279,"author":{"gitId":"darrenhoon"},"content":"            String removedTask \u003d this.taskList.get(realIndex).toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":280,"author":{"gitId":"darrenhoon"},"content":"            this.taskList.remove(realIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":281,"author":{"gitId":"darrenhoon"},"content":"            messages.taskDeleteMessage(removedTask, this.taskList.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":282,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":283,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":284,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":285,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":286,"author":{"gitId":"darrenhoon"},"content":"     * Saves the current task list to local memory\u0027s json.","lastModifiedDate":"2021-08-21"},{"lineNumber":287,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":288,"author":{"gitId":"darrenhoon"},"content":"    public void saveData() {","lastModifiedDate":"2021-08-21"},{"lineNumber":289,"author":{"gitId":"darrenhoon"},"content":"        databaseEngine.writeToDatabase(this.taskList);","lastModifiedDate":"2021-08-21"},{"lineNumber":290,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":291,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":292,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":293,"author":{"gitId":"darrenhoon"},"content":"     * Displays the tasks that have the keywords inputted.","lastModifiedDate":"2021-08-22"},{"lineNumber":294,"author":{"gitId":"darrenhoon"},"content":"     * @param inputArr the array containing the keywords.","lastModifiedDate":"2021-08-22"},{"lineNumber":295,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":296,"author":{"gitId":"darrenhoon"},"content":"    public void findTasks(String[] inputArr) {","lastModifiedDate":"2021-08-22"},{"lineNumber":297,"author":{"gitId":"darrenhoon"},"content":"        List\u003cTask\u003e filteredList \u003d this.taskList","lastModifiedDate":"2021-08-22"},{"lineNumber":298,"author":{"gitId":"darrenhoon"},"content":"                .stream()","lastModifiedDate":"2021-08-22"},{"lineNumber":299,"author":{"gitId":"darrenhoon"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":300,"author":{"gitId":"darrenhoon"},"content":"                    String description \u003d task.getDescription();","lastModifiedDate":"2021-08-22"},{"lineNumber":301,"author":{"gitId":"darrenhoon"},"content":"                    for (String s: inputArr) {","lastModifiedDate":"2021-08-22"},{"lineNumber":302,"author":{"gitId":"darrenhoon"},"content":"                        if (description.contains(s)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":303,"author":{"gitId":"darrenhoon"},"content":"                            return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":304,"author":{"gitId":"darrenhoon"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":305,"author":{"gitId":"darrenhoon"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":306,"author":{"gitId":"darrenhoon"},"content":"                    return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":307,"author":{"gitId":"darrenhoon"},"content":"                })","lastModifiedDate":"2021-08-22"},{"lineNumber":308,"author":{"gitId":"darrenhoon"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-22"},{"lineNumber":309,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":310,"author":{"gitId":"darrenhoon"},"content":"        messages.displayFilteredTasks(filteredList);","lastModifiedDate":"2021-08-22"},{"lineNumber":311,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":312,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":313,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"darrenhoon":313}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"package main.java.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"import main.java.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"    private final String welcomeMessage \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"    private final String borderLine \u003d \"\\n____________________________________________________________\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"    private final String goodbyeMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"     * Displays message input with horizontal borderlines on top and bottom.","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"darrenhoon"},"content":"     * @param input String message to be displayed to user","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"darrenhoon"},"content":"    public void displayText(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(borderLine + input + borderLine);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"darrenhoon"},"content":"     * Displays welcome message when Duke program starts.","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"darrenhoon"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(welcomeMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"darrenhoon"},"content":"     * Displays goodbye message when user inputs \"bye\".","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"darrenhoon"},"content":"    public void goodbyeMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(goodbyeMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"darrenhoon"},"content":"     * Displays the message for a task marked as Done.","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"darrenhoon"},"content":"     * @param taskMarked the task that was marked to be done.","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"darrenhoon"},"content":"    public void markDoneMessage(String taskMarked) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"darrenhoon"},"content":"        String message \u003d String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", taskMarked);","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"darrenhoon"},"content":"     * Message displayed when a task is deleted.","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"darrenhoon"},"content":"     * @param taskString the task deleted from the list.","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"darrenhoon"},"content":"     * @param listSize size of the task list after deletion.","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"darrenhoon"},"content":"    public void taskDeleteMessage(String taskString, int listSize) {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"darrenhoon"},"content":"        String message \u003d \"Noted. I\u0027ve removed this task:\\n\" + taskString + \"\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"darrenhoon"},"content":"        message +\u003d String.format(\"Now you have %d tasks in the list.\", listSize);","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"darrenhoon"},"content":"     * Displays when list is empty.","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"darrenhoon"},"content":"    public void listEmptyMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(\"Your List is Empty\");","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"darrenhoon"},"content":"     * Message displayed when a task is added.","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"darrenhoon"},"content":"     * @param taskString the task added.","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"darrenhoon"},"content":"     * @param listSize size of the task list after the addition.","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"darrenhoon"},"content":"    public void taskAddMessage(String taskString, int listSize) {","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"darrenhoon"},"content":"        String message \u003d \"Got it. I\u0027ve added this task:\\n\" + taskString + \"\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"darrenhoon"},"content":"        message +\u003d String.format(\"Now you have %d tasks in the list.\", listSize);","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"darrenhoon"},"content":"     * Displays all items and their completion status.","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"darrenhoon"},"content":"     * @param taskList the list containing Task objects.","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"darrenhoon"},"content":"    public void displayListTasks(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"darrenhoon"},"content":"        //shown when there are no tasks in the list","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"darrenhoon"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"darrenhoon"},"content":"            this.listEmptyMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"darrenhoon"},"content":"            return;","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(borderLine);","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"darrenhoon"},"content":"            //displays the current task\u0027s status","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"darrenhoon"},"content":"            String inputMessage \u003d String.format(\"%d. %s\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"darrenhoon"},"content":"            System.out.println(inputMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(borderLine);","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"darrenhoon"},"content":"     * Displays the date format to be used.","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"darrenhoon"},"content":"    public void wrongDateInputMessage() {","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"darrenhoon"},"content":"        this.displayText(\"The input should be in the form of yyyy-dd-mm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"darrenhoon"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"darrenhoon"},"content":"     * Displays all the tasks with the keywords.","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"darrenhoon"},"content":"     * @param taskList the list containing filtered tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"darrenhoon"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"darrenhoon"},"content":"    public void displayFilteredTasks(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"darrenhoon"},"content":"        //shown when there are no tasks in the list","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"darrenhoon"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"darrenhoon"},"content":"            this.listEmptyMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"darrenhoon"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(borderLine);","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"darrenhoon"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"darrenhoon"},"content":"            //displays the current task\u0027s status","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"darrenhoon"},"content":"            String inputMessage \u003d String.format(\"%d. %s\", i + 1, taskList.get(i).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"darrenhoon"},"content":"            System.out.println(inputMessage);","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"darrenhoon"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"darrenhoon"},"content":"        System.out.println(borderLine);","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"darrenhoon"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"darrenhoon"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"darrenhoon"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"darrenhoon":130}},{"path":"text-ui-test/database/database.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"todo true cmVhZCBib29rcw\u003d\u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"event false MTQvMDgvMjE\u003d bWVldCAoaW1hZ2luYXJ5KSBnaXJsZnJpZW5k","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"deadline false 2021-11-11 YnV5IGdyb2Nlcmllcw\u003d\u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"todo false cmVhZCBib29rcw\u003d\u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"deadline false 2021-11-11 YnV5IGdyb2Nlcmllcw\u003d\u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"event false MTQvMDgvMjE\u003d bWVldCAoaW1hZ2luYXJ5KSBnaXJsZnJpZW5k","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"darrenhoon":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"darrenhoon"},"content":"todo read books","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"deadline buy groceries /by 2021-11-11","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"event meet (imaginary) girlfriend /at 14/08/21","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"darrenhoon"},"content":"done -1","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"darrenhoon"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"darrenhoon"},"content":"delete 5","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"darrenhoon"},"content":"delete -1","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"darrenhoon"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"darrenhoon"},"content":"deadline buy books /at tom0\\rrow","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"darrenhoon"},"content":"event /by 887799","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"darrenhoon"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"darrenhoon"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"darrenhoon":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"darrenhoon"},"content":"SET JAVA_HOME\u003dC:\\Program Files\\Java\\liberica-11.0.9.1","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"darrenhoon"},"content":"SET Path\u003d%JAVA_HOME%\\bin;%Path%","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"darrenhoon"},"content":"echo Java home set to: %JAVA_HOME%","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"darrenhoon"},"content":"echo Java 11 activated","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":21,"darrenhoon":4}}]
