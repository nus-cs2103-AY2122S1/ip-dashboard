[{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":"public class Main {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":"            File note \u003d new File(\"duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":"            if (note.createNewFile()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":"                System.out.println(\"created\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":"            Duke duke \u003d new Duke(note);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"            duke.Run();","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"meerian":19}},{"path":"src/main/java/duke/DateValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":" * DateValidator is a class that the bot uses to check if the user inputs","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":" * a properly formatted date.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":" * @author meerian","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":"public class DateValidator {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"     * Represents the format to validate.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"    private final DateTimeFormatter format;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"meerian"},"content":"     * Creates a DateValidator with the provided format","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"meerian"},"content":"     * @param format The format for this object to validate using.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"meerian"},"content":"    public DateValidator(DateTimeFormatter format) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"meerian"},"content":"        this.format \u003d format;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"meerian"},"content":"     * Checks if string provided is formatted as a date.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"meerian"},"content":"     * @param string The provided input.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"meerian"},"content":"     * @return true if string provided is properly formatted, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"meerian"},"content":"    public boolean isValid(String string) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"meerian"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"meerian"},"content":"            LocalDate.parse(string, format);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"meerian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"meerian"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"meerian"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"meerian":43}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":" * Deadline is a class that extends Task with additional variables to store the date.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":" * @author meerian","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":"     * Represents the date when the event occurs. Only one field is \u0027filled\u0027 in each","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"     * event object.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"    private String when;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"    private LocalDate time \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"meerian"},"content":"     * Creates a deadline with the specified description.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"meerian"},"content":"     * @param str1 The deadline\u0027s description.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"meerian"},"content":"     * @param str2 The deadline\u0027s date in a string","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"meerian"},"content":"     * @throws DukeException when the user inputs an empty description.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"meerian"},"content":"    public Deadline(String str1, String str2) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"meerian"},"content":"        super(str1);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"meerian"},"content":"        this.when \u003d str2;","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"meerian"},"content":"     * Creates a deadline with the specified description.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"meerian"},"content":"     * @param str1 The deadline\u0027s description.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"meerian"},"content":"     * @param time The deadline\u0027s date in a localDate","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"meerian"},"content":"     * @throws DukeException when the user inputs an empty description.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"meerian"},"content":"    public Deadline(String str1, LocalDate time) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"meerian"},"content":"        super(str1);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"meerian"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"meerian"},"content":"     * Returns the string representation of the deadline to be displayed based on whether","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"meerian"},"content":"     * the object is initialized with a localDate or String.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"meerian"},"content":"     * @return the string representation of the deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"meerian"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"meerian"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"meerian"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"meerian"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + when + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"meerian"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"meerian"},"content":"            return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"meerian"},"content":"                    time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"meerian":58}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":"import java.util.InputMismatchException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":" * Duke is the main class of the bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":" * @author meerian","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"     * Represents the storage to read/write files and the list to","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"     * hold any tasks created.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"    Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"    TaskList list;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"meerian"},"content":"     * Creates a duke with storage pointing to the right file.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"meerian"},"content":"     * @param file the file to write/read the list to.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"meerian"},"content":"    public Duke(File file) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"meerian"},"content":"        this.storage \u003d new Storage(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"meerian"},"content":"        this.list \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"meerian"},"content":"     * The main program. Keeps on looping until the user inputs \"bye\",","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"meerian"},"content":"     * which will result in the bot saving the current task list into the file","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"meerian"},"content":"     * provided before shutting down.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"meerian"},"content":"    public void Run() {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"meerian"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"meerian"},"content":"        Ui.Logo();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"meerian"},"content":"        storage.read(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"meerian"},"content":"        Ui.WelcomeMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"meerian"},"content":"        String input \u003d scanner.next();","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"meerian"},"content":"        while (!Objects.equals(input, \"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"meerian"},"content":"            switch (input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"meerian"},"content":"                case \"list\":","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"meerian"},"content":"                    Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"meerian"},"content":"                    list.display();","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"meerian"},"content":"                    Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"meerian"},"content":"                    input \u003d scanner.next();","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"meerian"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"meerian"},"content":"                case \"done\":","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"meerian"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"meerian"},"content":"                        int temp \u003d scanner.nextInt();","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"meerian"},"content":"                        Task cur \u003d list.get(temp - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"meerian"},"content":"                        cur.Done();","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"meerian"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"meerian"},"content":"                        System.out.println(cur);","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"meerian"},"content":"                        input \u003d scanner.next();","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"meerian"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"meerian"},"content":"                    } catch (InputMismatchException | DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"meerian"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"meerian"},"content":"                        input \u003d scanner.next();","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"meerian"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"meerian"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"meerian"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"meerian"},"content":"                    String tdLabel \u003d scanner.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"meerian"},"content":"                    Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"meerian"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"meerian"},"content":"                        Todo todo \u003d new Todo(tdLabel);","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"meerian"},"content":"                        list.add(todo);","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"meerian"},"content":"                        input \u003d scanner.next();","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"meerian"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"meerian"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"meerian"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"meerian"},"content":"                        input \u003d scanner.next();","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"meerian"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"meerian"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"meerian"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"meerian"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"meerian"},"content":"                        String dlLabel \u003d scanner.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"meerian"},"content":"                        Task deadline \u003d Parser.check(dlLabel, \"/by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"meerian"},"content":"                        list.add(deadline);","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"meerian"},"content":"                        input \u003d scanner.next();","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"meerian"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"meerian"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"meerian"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"meerian"},"content":"                        input \u003d scanner.next();","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"meerian"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"meerian"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"meerian"},"content":"                case \"event\":","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"meerian"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"meerian"},"content":"                        String eLabel \u003d scanner.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"meerian"},"content":"                        Task event \u003d Parser.check(eLabel, \"/at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"meerian"},"content":"                        list.add(event);","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"meerian"},"content":"                        input \u003d scanner.next();","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"meerian"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"meerian"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"meerian"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"meerian"},"content":"                        input \u003d scanner.next();","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"meerian"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"meerian"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"meerian"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"meerian"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"meerian"},"content":"                        int temp \u003d scanner.nextInt();","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"meerian"},"content":"                        list.delete(temp);","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"meerian"},"content":"                        input \u003d scanner.next();","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"meerian"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"meerian"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"meerian"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"meerian"},"content":"                        input \u003d scanner.next();","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"meerian"},"content":"                        break;","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"meerian"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"meerian"},"content":"                case \"find\":","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"meerian"},"content":"                    try {","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"meerian"},"content":"                        String find \u003d scanner.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"meerian"},"content":"                        list.find(find);","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"meerian"},"content":"                        input \u003d scanner.next();","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"meerian"},"content":"                        break;","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"meerian"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"meerian"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"meerian"},"content":"                        Ui.Border();","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"meerian"},"content":"                        input \u003d scanner.next();","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"meerian"},"content":"                        break;","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"meerian"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"meerian"},"content":"                default:","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"meerian"},"content":"                    scanner.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"meerian"},"content":"                    Ui.UnknownCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"meerian"},"content":"                    input \u003d scanner.next();","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"meerian"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"meerian"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"meerian"},"content":"        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"meerian"},"content":"        storage.write(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"meerian"},"content":"        Ui.Goodbye();","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"meerian":162,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":" * DukeException is a class that provides the basic exception that the bot throws","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":" * when invalid inputs are provided by users.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":" * @author meerian","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":"     * Creates a DukeException with the specified description.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":"     * @param str The exception\u0027s description.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"    public DukeException(String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"        super(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"meerian":18}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":" * Event is a class that extends Task with additional variables to store the date.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":" * @author meerian","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":"     * Represents the date when the event occurs. Only one field is \u0027filled\u0027 in each","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"     * event object.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"    private String when;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"    private LocalDate time \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"meerian"},"content":"     * Creates a event with the specified description.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"meerian"},"content":"     * @param str1 The event\u0027s description.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"meerian"},"content":"     * @param str2 The event\u0027s date in a string","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"meerian"},"content":"     * @throws DukeException when the user inputs an empty description.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"meerian"},"content":"    public Event(String str1, String str2) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"meerian"},"content":"        super(str1);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"meerian"},"content":"        this.when \u003d str2;","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"meerian"},"content":"     * Creates a event with the specified description.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"meerian"},"content":"     * @param str1 The event\u0027s description.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"meerian"},"content":"     * @param time The event\u0027s date in a localDate","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"meerian"},"content":"     * @throws DukeException when the user inputs an empty description.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"meerian"},"content":"    public Event(String str1, LocalDate time) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"meerian"},"content":"        super(str1);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"meerian"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"meerian"},"content":"     * Returns the string representation of the event to be displayed based on whether","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"meerian"},"content":"     * the object is initialized with a localDate or String.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"meerian"},"content":"     * @return the string representation of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"meerian"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"meerian"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"meerian"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"meerian"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + when + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"meerian"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"meerian"},"content":"            return \"[E]\" + super.toString() + \" (at: \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"meerian"},"content":"                    time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"meerian":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":" * Parser is a static class that interprets the users inputs.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":" * @author meerian","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":"     * Represents the DateValidators the parser uses to interpret users inputs.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"    private static final DateValidator ISOLocalDateValidator \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"            new DateValidator(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"    private static final DateValidator LocalDateValidator \u003d","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"            new DateValidator(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"meerian"},"content":"     * Interpret what task the user is trying to create.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"meerian"},"content":"     * @param str the description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"meerian"},"content":"     * @param check used to verify what task to create.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"meerian"},"content":"     * @return the relevant task from the strings provided.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"meerian"},"content":"    public static Task check(String str, String check) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"meerian"},"content":"        int partition \u003d str.indexOf(check);","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"meerian"},"content":"        if (partition \u003c 0 || partition + check.length() \u003e str.length()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"meerian"},"content":"            throw new DukeException(\"☹ OOPS!!! The task is formatted wrongly.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"meerian"},"content":"        String str1 \u003d str.substring(0, partition);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"meerian"},"content":"        String str2 \u003d str.substring(partition + check.length());","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"meerian"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"meerian"},"content":"        if (ISOLocalDateValidator.isValid(str2)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"meerian"},"content":"            date \u003d LocalDate.parse(str2);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"meerian"},"content":"        } else if (LocalDateValidator.isValid(str2)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"meerian"},"content":"            date \u003d LocalDate.parse(str2, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"meerian"},"content":"        switch (check) {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"meerian"},"content":"            case \"/by \":","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"meerian"},"content":"                if (date \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"meerian"},"content":"                    return new Deadline(str1, str2);","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"meerian"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"meerian"},"content":"                    return new Deadline(str1, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"meerian"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"meerian"},"content":"            case \" (by: \":","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"meerian"},"content":"                return new Deadline(str1, str2);","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"meerian"},"content":"            case \"/at \":","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"meerian"},"content":"                if (date \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"meerian"},"content":"                    return new Event(str1, str2);","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"meerian"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"meerian"},"content":"                    return new Event(str1, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"meerian"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"meerian"},"content":"            case \" (at: \":","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"meerian"},"content":"                return new Event(str1, str2);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"meerian"},"content":"            default:","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"meerian"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"meerian"},"content":"     * Interpret the lines in the save file and recreate the correct tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"meerian"},"content":"     * @param string the description of the task to recreate.","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"meerian"},"content":"     * @return the relevant task from the string provided.","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"meerian"},"content":"    public static Task read(String string) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"meerian"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"meerian"},"content":"        String taskType \u003d string.substring(0, 3);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"meerian"},"content":"        char doneCheck \u003d string.charAt(4);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"meerian"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"meerian"},"content":"            case \"[T]\":","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"meerian"},"content":"                String tdLabel \u003d string.substring(7);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"meerian"},"content":"                task \u003d new Todo(tdLabel);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"meerian"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"meerian"},"content":"            case \"[D]\":","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"meerian"},"content":"                String dlLabel \u003d string.substring(7, string.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"meerian"},"content":"                task \u003d Parser.check(dlLabel, \" (by: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"meerian"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"meerian"},"content":"            case \"[E]\":","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"meerian"},"content":"                String eLabel \u003d string.substring(7, string.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"meerian"},"content":"                task \u003d Parser.check(eLabel, \" (at: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"meerian"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"meerian"},"content":"            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"meerian"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"meerian"},"content":"        if (doneCheck \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"meerian"},"content":"            task.Done();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"meerian"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"meerian":105}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":" * Storage is a class that deals with loading and saving tasks from the","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":" * provided file.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":" * @author meerian","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"     * Represents the file to read/write the TaskList to.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"    File taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"meerian"},"content":"     * Creates a Storage with the provided file.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"meerian"},"content":"     * @param taskList The deadline\u0027s description.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"meerian"},"content":"    public Storage(File taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"meerian"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"meerian"},"content":"     * Writes the provided TaskList into the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"meerian"},"content":"     * @param list the provided task list to write.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"meerian"},"content":"    public void write(TaskList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"meerian"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"meerian"},"content":"            FileWriter writer \u003d new FileWriter(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"meerian"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"meerian"},"content":"                String temp \u003d list.get(i).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"meerian"},"content":"                writer.write(temp);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"meerian"},"content":"                writer.write(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"meerian"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"meerian"},"content":"            System.out.println(\"List saved!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"meerian"},"content":"            writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"meerian"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"meerian"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"meerian"},"content":"     * Reads the provided file and interpreting it into a TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"meerian"},"content":"     * @param list the provided task list to rebuild.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"meerian"},"content":"    public void read(TaskList list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"meerian"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"meerian"},"content":"            Scanner scanner \u003d new Scanner(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"meerian"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"meerian"},"content":"                String temp \u003d scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"meerian"},"content":"                list.read(Parser.read(temp));","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"meerian"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"meerian"},"content":"            System.out.println(\"List loaded successfully!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"meerian"},"content":"            scanner.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"meerian"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"meerian"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"meerian":74}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":" * Task is a class that provides the basic methods and fields that all other variations","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":" * such as deadline and event will use.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":" * @author meerian","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":"    private boolean done \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":"    private final String name;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"     * Creates a task with the specified description.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"     * @param name The task\u0027s description.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"     * @throws DukeException when the user inputs an empty description.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"    public Task(String name) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"meerian"},"content":"        if (name.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"meerian"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"meerian"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"meerian"},"content":"     * Sets the task as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"meerian"},"content":"    public void Done() {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"meerian"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"meerian"},"content":"     * Returns the string representation of the task to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"meerian"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"meerian"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"meerian"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"meerian"},"content":"        if (done) {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"meerian"},"content":"            return \"[X] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"meerian"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"meerian"},"content":"            return \"[ ] \" + name;","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"meerian":46}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":" * TaskList is the wrapper around ArrayList to store the tasks created.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":" * @author meerian","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":"public class TaskList {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":"    private final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"     * Adds the task into the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"     * @param task task provided to add to the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"        list.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"meerian"},"content":"        System.out.println(\"added: \" + task);","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"meerian"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"meerian"},"content":"     * Adds the task into the list without print statements.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"meerian"},"content":"     * @param task task provided to add to the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"meerian"},"content":"    public void read(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"meerian"},"content":"        list.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"meerian"},"content":"     * Fetches the task specified by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"meerian"},"content":"     * @param pos index of the task the user wants.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"meerian"},"content":"     * @return the task in the corresponding index.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"meerian"},"content":"     * @throws DukeException when no task is found at the index.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"meerian"},"content":"    public Task get(int pos) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"meerian"},"content":"        if (pos \u003c 0 || pos \u003e list.size()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"meerian"},"content":"            throw new DukeException(\"☹ OOPS!!! No such task found!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"meerian"},"content":"        return list.get(pos);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"meerian"},"content":"     * Returns the size of the current task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"meerian"},"content":"     * @return the size of the current task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"meerian"},"content":"    public int size() {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"meerian"},"content":"        return list.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"meerian"},"content":"     * Prints out a visual representation of the current task list","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"meerian"},"content":"     * in a legible manner.","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"meerian"},"content":"    public void display() {","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"meerian"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"meerian"},"content":"            String cur \u003d list.get(i).toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"meerian"},"content":"            int label \u003d i + 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"meerian"},"content":"            System.out.println(label + \". \" + cur);","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"meerian"},"content":"     * Deletes a task entry from the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"meerian"},"content":"     * @param pos index of the task the user wants to delete.","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"meerian"},"content":"     * @throws DukeException when no task is found at the index.","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"meerian"},"content":"    public void delete(int pos) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"meerian"},"content":"        if (pos - 1 \u003c 0 || pos \u003e list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"meerian"},"content":"            throw new DukeException(\"☹ OOPS!!! No such task found!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"meerian"},"content":"        Task temp \u003d list.get(pos - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"meerian"},"content":"        list.remove(pos - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"meerian"},"content":"        System.out.println(\"Noted, I have removed this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"meerian"},"content":"        System.out.println(temp.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"meerian"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"meerian"},"content":"     * Finds entries in the list with the provided keyword","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"meerian"},"content":"     * @param string keyword to search the list with.","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"meerian"},"content":"     * @throws DukeException when no input is detected.","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"meerian"},"content":"    public void find(String string) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"meerian"},"content":"        if (string.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"meerian"},"content":"            throw new DukeException(\"☹ OOPS!!! No input was detected!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"meerian"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"meerian"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"meerian"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"meerian"},"content":"            String cur \u003d task.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"meerian"},"content":"            if (cur.contains(string)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"meerian"},"content":"                int label \u003d counter + 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"meerian"},"content":"                System.out.println(label + \". \" + cur);","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"meerian"},"content":"                counter++;","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"meerian"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"meerian"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"meerian"},"content":"            System.out.println(\"☹ OOPS!!! No items found!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"meerian":111}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":" * Todo is a class that extends Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":" * @author meerian","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":"     * Creates a task with the specified description.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":"     * @param str The event\u0027s description.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"     * @throws DukeException when the user inputs an empty description.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"    public Todo(String str) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"        super(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"meerian"},"content":"     * Returns the string representation of the task to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"meerian"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"meerian"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"meerian"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"meerian"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"meerian":29}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":" * Ui is a static class that handles most of the print statements that the user will see.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":" * @author meerian","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":"     * Prints out the logo of the DukeBot.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"    public static void Logo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"meerian"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"meerian"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"meerian"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"meerian"},"content":"     * Prints out the standard border between each print statement of the bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"meerian"},"content":"    public static void Border() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"meerian"},"content":"        System.out.println(\"──────────────────────────────────────────\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"meerian"},"content":"     * Prints out the welcome message upon startup of the bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"meerian"},"content":"    public static void WelcomeMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"meerian"},"content":"        System.out.println(\"What can i do for you?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"meerian"},"content":"        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"meerian"},"content":"     * Prints out an error message when an unknown command is entered by user.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"meerian"},"content":"    public static void UnknownCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"meerian"},"content":"        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"meerian"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"meerian"},"content":"        Ui.Border();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"meerian"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"meerian"},"content":"     * Prints out the goodbye message once user closes the bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"meerian"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"meerian"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"meerian"},"content":"    public static void Goodbye() {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"meerian"},"content":"        System.out.println(\"Bye, hope to see you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"meerian":61}},{"path":"src/test/java/DateValidatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"import duke.DateValidator;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":"import static org.junit.Assert.assertFalse;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":"import static org.junit.Assert.assertTrue;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":"public class DateValidatorTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":"    public void DateTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"        DateValidator dateValidator \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"                new DateValidator(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"        assertTrue(dateValidator.isValid(\"2020-10-15\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"        assertFalse(dateValidator.isValid(\"2020-15-15\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"meerian":21}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"import duke.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":"    TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":"    public void addTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meerian"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meerian"},"content":"            Task task \u003d new Task(\"test\");","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meerian"},"content":"            list.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meerian"},"content":"            assertEquals(list.size(), 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"meerian"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"meerian"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"meerian"},"content":"    public void getTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"meerian"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"meerian"},"content":"            Task task \u003d new Task(\"test\");","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"meerian"},"content":"            list.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"meerian"},"content":"            assertEquals(list.get(0), task);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"meerian"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"meerian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"meerian"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"meerian"},"content":"    public void deleteTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"meerian"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"meerian"},"content":"            Task task \u003d new Task(\"test\");","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"meerian"},"content":"            list.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"meerian"},"content":"            assertEquals(list.size(), 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"meerian"},"content":"            list.delete(0);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"meerian"},"content":"            assertEquals(list.size(), 0);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"meerian"},"content":"        } catch (DukeException ignored) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"meerian"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"meerian"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"meerian"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"meerian":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"meerian"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"meerian"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"meerian"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"meerian"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"meerian"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"meerian"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"meerian"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"meerian"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"meerian"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"meerian"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"meerian"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"meerian"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"meerian":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"meerian"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"meerian":1,"-":20}}]
