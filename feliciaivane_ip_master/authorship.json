[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"    String javaFxVersion \u003d \u002714\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"feliciaivane"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"feliciaivane"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"feliciaivane"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"feliciaivane"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"feliciaivane"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"feliciaivane"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"feliciaivane"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"feliciaivane"},"content":"    mainClassName \u003d \"bob.Launcher\"","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"feliciaivane"},"content":"    archiveBaseName \u003d \"bob\"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"feliciaivane"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"feliciaivane":18,"-":44}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.DirectoryNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"import bob.gui.DialogBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"import bob.gui.HelpDialogBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"import bob.gui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"import java.net.URI;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.control.Hyperlink;","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.layout.BackgroundImage;","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.layout.BackgroundPosition;","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.layout.BackgroundRepeat;","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.layout.BackgroundSize;","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"feliciaivane"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"feliciaivane"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"feliciaivane"},"content":" * A chatbot that stores, displays and alters the user\u0027s task list based on the user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"feliciaivane"},"content":"public class Bob extends Application {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"feliciaivane"},"content":"    /** Storage object that deals with loading tasks from the file and saving tasks in the file */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"feliciaivane"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"feliciaivane"},"content":"    /** List of user tasks */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"feliciaivane"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"feliciaivane"},"content":"    /** Ui object that deals with interactions with the user */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"feliciaivane"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"feliciaivane"},"content":"    /** Parser object that deals with making sense of the user commands */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"feliciaivane"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"feliciaivane"},"content":"    /** Whether the data directory is already present in the user computer */","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"feliciaivane"},"content":"    private boolean isDirectoryPresent \u003d true;","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"feliciaivane"},"content":"    /** Whether the bob.txt file is already present within the data directory in the user computer */","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"feliciaivane"},"content":"    private boolean isBobFilePresent \u003d true;","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"feliciaivane"},"content":"    /** UI element that allows users to scroll up and down the stage to view more content */","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"feliciaivane"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"feliciaivane"},"content":"    /** UI element that lays out its children in a single vertical column */","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"feliciaivane"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"feliciaivane"},"content":"    /** UI element that allows users to type in their input */","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"feliciaivane"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"feliciaivane"},"content":"    /** UI element that allows Bob to take in the user input when the user clicks on it */","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"feliciaivane"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"feliciaivane"},"content":"    /** UI element that contains all the nodes to be shown in the GUI */","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"feliciaivane"},"content":"    private Scene scene;","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"feliciaivane"},"content":"    /** Image representing the user in the chat */","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"feliciaivane"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"feliciaivane"},"content":"    /** Image representing Bob in the chat */","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"feliciaivane"},"content":"    private Image bob \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaBob.jpeg\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new Bob instance.","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"feliciaivane"},"content":"    public Bob() {","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"feliciaivane"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"feliciaivane"},"content":"        storage \u003d new Storage(new File(\"\").getAbsolutePath() + \"/data\");","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"feliciaivane"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"feliciaivane"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"feliciaivane"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"feliciaivane"},"content":"        } catch (DirectoryNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"feliciaivane"},"content":"            isDirectoryPresent \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"feliciaivane"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"feliciaivane"},"content":"            storage.makeDataDirectory();","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"feliciaivane"},"content":"            storage.makeBobFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"feliciaivane"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"feliciaivane"},"content":"            isBobFilePresent \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"feliciaivane"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"feliciaivane"},"content":"            storage.makeBobFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"feliciaivane"},"content":"     * Does not do anything.","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"feliciaivane"},"content":"     * @param args String array that acts as the argument to the main method.","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"feliciaivane"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"feliciaivane"},"content":"     * Sets up the GUI for Bob.","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"feliciaivane"},"content":"     * @param stage The primary stage provided by JavaFX for the GUI.","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"feliciaivane"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"feliciaivane"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"feliciaivane"},"content":"        // Step 1. Setting up required components.","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"feliciaivane"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"feliciaivane"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"feliciaivane"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"feliciaivane"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"feliciaivane"},"content":"        userInput.setPromptText(\"Talk to me here!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"feliciaivane"},"content":"        userInput.setFocusTraversable(false);","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"feliciaivane"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"feliciaivane"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"feliciaivane"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"feliciaivane"},"content":"        // Setting the main darker background.","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"feliciaivane"},"content":"        Image bg \u003d new Image(this.getClass().getResourceAsStream(\"/images/Background.jpeg\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"feliciaivane"},"content":"        BackgroundImage bgImage \u003d new BackgroundImage(bg,","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"feliciaivane"},"content":"                BackgroundRepeat.REPEAT,","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"feliciaivane"},"content":"                BackgroundRepeat.REPEAT,","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"feliciaivane"},"content":"                BackgroundPosition.DEFAULT,","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"feliciaivane"},"content":"                BackgroundSize.DEFAULT);","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"feliciaivane"},"content":"        Background background \u003d new Background(bgImage);","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"feliciaivane"},"content":"        mainLayout.setBackground(background);","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"feliciaivane"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"feliciaivane"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"feliciaivane"},"content":"        stage.show();","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"feliciaivane"},"content":"        // Step 2. Formatting the window to look as expected.","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"feliciaivane"},"content":"        stage.setTitle(\"Bob\");","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"feliciaivane"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"feliciaivane"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"feliciaivane"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"feliciaivane"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"feliciaivane"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"feliciaivane"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"feliciaivane"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"feliciaivane"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"feliciaivane"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"feliciaivane"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"feliciaivane"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"feliciaivane"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"feliciaivane"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"feliciaivane"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"feliciaivane"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"feliciaivane"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"feliciaivane"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"feliciaivane"},"content":"        // Displaying the initial message when Bob first starts up.","lastModifiedDate":"2021-08-29"},{"lineNumber":176,"author":{"gitId":"feliciaivane"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":177,"author":{"gitId":"feliciaivane"},"content":"                DialogBox.getBobDialog(new Label(ui.getStartMessage()), new ImageView(bob))","lastModifiedDate":"2021-08-29"},{"lineNumber":178,"author":{"gitId":"feliciaivane"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":179,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":180,"author":{"gitId":"feliciaivane"},"content":"        // Setting the paler chat background.","lastModifiedDate":"2021-09-16"},{"lineNumber":181,"author":{"gitId":"feliciaivane"},"content":"        Image img \u003d new Image(this.getClass().getResourceAsStream(\"/images/PaleBackground.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":182,"author":{"gitId":"feliciaivane"},"content":"        BackgroundImage bImg \u003d new BackgroundImage(img,","lastModifiedDate":"2021-09-16"},{"lineNumber":183,"author":{"gitId":"feliciaivane"},"content":"                BackgroundRepeat.REPEAT,","lastModifiedDate":"2021-09-16"},{"lineNumber":184,"author":{"gitId":"feliciaivane"},"content":"                BackgroundRepeat.REPEAT,","lastModifiedDate":"2021-09-16"},{"lineNumber":185,"author":{"gitId":"feliciaivane"},"content":"                BackgroundPosition.DEFAULT,","lastModifiedDate":"2021-09-16"},{"lineNumber":186,"author":{"gitId":"feliciaivane"},"content":"                BackgroundSize.DEFAULT);","lastModifiedDate":"2021-09-16"},{"lineNumber":187,"author":{"gitId":"feliciaivane"},"content":"        Background bGround \u003d new Background(bImg);","lastModifiedDate":"2021-09-16"},{"lineNumber":188,"author":{"gitId":"feliciaivane"},"content":"        dialogContainer.setBackground(bGround);","lastModifiedDate":"2021-09-16"},{"lineNumber":189,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":190,"author":{"gitId":"feliciaivane"},"content":"        // Displaying the appropriate Bob messages if the data directory or bob.txt file do not exist yet.","lastModifiedDate":"2021-08-29"},{"lineNumber":191,"author":{"gitId":"feliciaivane"},"content":"        if (!isDirectoryPresent) {","lastModifiedDate":"2021-08-29"},{"lineNumber":192,"author":{"gitId":"feliciaivane"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"feliciaivane"},"content":"                    DialogBox.getBobDialog(new Label(ui.getDirectoryLoadingErrorMessage()), new ImageView(bob))","lastModifiedDate":"2021-08-29"},{"lineNumber":194,"author":{"gitId":"feliciaivane"},"content":"            );","lastModifiedDate":"2021-08-29"},{"lineNumber":195,"author":{"gitId":"feliciaivane"},"content":"        } else if (!isBobFilePresent) {","lastModifiedDate":"2021-08-29"},{"lineNumber":196,"author":{"gitId":"feliciaivane"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":197,"author":{"gitId":"feliciaivane"},"content":"                    DialogBox.getBobDialog(new Label(ui.getFileLoadingErrorMessage()), new ImageView(bob))","lastModifiedDate":"2021-08-29"},{"lineNumber":198,"author":{"gitId":"feliciaivane"},"content":"            );","lastModifiedDate":"2021-08-29"},{"lineNumber":199,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":200,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":201,"author":{"gitId":"feliciaivane"},"content":"        // Displaying Bob\u0027s greeting message once initialisation is completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":202,"author":{"gitId":"feliciaivane"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":203,"author":{"gitId":"feliciaivane"},"content":"                DialogBox.getBobDialog(new Label(ui.getGreetingMessage()), new ImageView(bob))","lastModifiedDate":"2021-08-29"},{"lineNumber":204,"author":{"gitId":"feliciaivane"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":205,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":206,"author":{"gitId":"feliciaivane"},"content":"        // Step 3. Add functionality to handle user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":207,"author":{"gitId":"feliciaivane"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());","lastModifiedDate":"2021-09-16"},{"lineNumber":208,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":209,"author":{"gitId":"feliciaivane"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());","lastModifiedDate":"2021-09-16"},{"lineNumber":210,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":211,"author":{"gitId":"feliciaivane"},"content":"        // Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2021-08-28"},{"lineNumber":212,"author":{"gitId":"feliciaivane"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-08-28"},{"lineNumber":213,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":214,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":215,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":216,"author":{"gitId":"feliciaivane"},"content":"     * Takes in the user input and displays both the user input and Bob\u0027s response in the GUI.","lastModifiedDate":"2021-08-29"},{"lineNumber":217,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":218,"author":{"gitId":"feliciaivane"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":219,"author":{"gitId":"feliciaivane"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2021-08-28"},{"lineNumber":220,"author":{"gitId":"feliciaivane"},"content":"        // If the user types in the special command \"bye\" the GUI should terminate.","lastModifiedDate":"2021-09-06"},{"lineNumber":221,"author":{"gitId":"feliciaivane"},"content":"        if (Objects.equals(userInput.getText(), \"bye\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":222,"author":{"gitId":"feliciaivane"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":223,"author":{"gitId":"feliciaivane"},"content":"                    DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2021-08-29"},{"lineNumber":224,"author":{"gitId":"feliciaivane"},"content":"                    DialogBox.getBobDialog(new Label(ui.getGoodbyeMessage()), new ImageView(bob))","lastModifiedDate":"2021-08-29"},{"lineNumber":225,"author":{"gitId":"feliciaivane"},"content":"            );","lastModifiedDate":"2021-08-29"},{"lineNumber":226,"author":{"gitId":"feliciaivane"},"content":"            userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":227,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":228,"author":{"gitId":"feliciaivane"},"content":"            // Leave a short pause of 2 seconds after the user inputs \"bye\" to display Bob\u0027s goodbye message","lastModifiedDate":"2021-08-29"},{"lineNumber":229,"author":{"gitId":"feliciaivane"},"content":"            // before automatically closing the window and terminating the program.","lastModifiedDate":"2021-08-29"},{"lineNumber":230,"author":{"gitId":"feliciaivane"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2021-08-29"},{"lineNumber":231,"author":{"gitId":"feliciaivane"},"content":"            delay.setOnFinished(event -\u003e Platform.exit());","lastModifiedDate":"2021-08-29"},{"lineNumber":232,"author":{"gitId":"feliciaivane"},"content":"            delay.play();","lastModifiedDate":"2021-08-29"},{"lineNumber":233,"author":{"gitId":"feliciaivane"},"content":"        } else { // If the user types in any other command the GUI should show the corresponding response from Bob.","lastModifiedDate":"2021-09-06"},{"lineNumber":234,"author":{"gitId":"feliciaivane"},"content":"            String response \u003d parser.getResponse(userInput.getText(), ui, tasks, storage);","lastModifiedDate":"2021-09-06"},{"lineNumber":235,"author":{"gitId":"feliciaivane"},"content":"            // If the user types in the help command Bob should return a hyperlink to the help page.","lastModifiedDate":"2021-09-06"},{"lineNumber":236,"author":{"gitId":"feliciaivane"},"content":"            if (Objects.equals(userInput.getText(), \"help\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":237,"author":{"gitId":"feliciaivane"},"content":"                Hyperlink dukeText \u003d new Hyperlink(response);","lastModifiedDate":"2021-09-06"},{"lineNumber":238,"author":{"gitId":"feliciaivane"},"content":"                dukeText.setVisited(true); // Set the hyperlink as visited so that the text is black.","lastModifiedDate":"2021-09-06"},{"lineNumber":239,"author":{"gitId":"feliciaivane"},"content":"                dukeText.setOnAction(e -\u003e {","lastModifiedDate":"2021-09-06"},{"lineNumber":240,"author":{"gitId":"feliciaivane"},"content":"                    try {","lastModifiedDate":"2021-09-06"},{"lineNumber":241,"author":{"gitId":"feliciaivane"},"content":"                        Desktop.getDesktop().browse(new URI(\"https://felwuzhere.wixsite.com/bobhelp\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":242,"author":{"gitId":"feliciaivane"},"content":"                    } catch (IOException ex) {","lastModifiedDate":"2021-09-06"},{"lineNumber":243,"author":{"gitId":"feliciaivane"},"content":"                        ex.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":244,"author":{"gitId":"feliciaivane"},"content":"                    } catch (URISyntaxException ex) {","lastModifiedDate":"2021-09-06"},{"lineNumber":245,"author":{"gitId":"feliciaivane"},"content":"                        ex.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":246,"author":{"gitId":"feliciaivane"},"content":"                    }","lastModifiedDate":"2021-09-06"},{"lineNumber":247,"author":{"gitId":"feliciaivane"},"content":"                });","lastModifiedDate":"2021-09-06"},{"lineNumber":248,"author":{"gitId":"feliciaivane"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-06"},{"lineNumber":249,"author":{"gitId":"feliciaivane"},"content":"                        DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2021-09-06"},{"lineNumber":250,"author":{"gitId":"feliciaivane"},"content":"                        new HelpDialogBox(dukeText, new ImageView(bob))","lastModifiedDate":"2021-09-06"},{"lineNumber":251,"author":{"gitId":"feliciaivane"},"content":"                );","lastModifiedDate":"2021-09-06"},{"lineNumber":252,"author":{"gitId":"feliciaivane"},"content":"            } else { // If the user types in any other command Bob should return its response as regular text.","lastModifiedDate":"2021-09-06"},{"lineNumber":253,"author":{"gitId":"feliciaivane"},"content":"                Label dukeText \u003d new Label(response);","lastModifiedDate":"2021-09-06"},{"lineNumber":254,"author":{"gitId":"feliciaivane"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":255,"author":{"gitId":"feliciaivane"},"content":"                        DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2021-08-28"},{"lineNumber":256,"author":{"gitId":"feliciaivane"},"content":"                        DialogBox.getBobDialog(dukeText, new ImageView(bob))","lastModifiedDate":"2021-08-28"},{"lineNumber":257,"author":{"gitId":"feliciaivane"},"content":"                );","lastModifiedDate":"2021-08-28"},{"lineNumber":258,"author":{"gitId":"feliciaivane"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":259,"author":{"gitId":"feliciaivane"},"content":"            userInput.clear();","lastModifiedDate":"2021-08-28"},{"lineNumber":260,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":261,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":262,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"feliciaivane":262}},{"path":"src/main/java/bob/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"public class Launcher {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"     * Launches the Bob GUI.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"     * @param args String array that acts as the argument to the main method.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"        Application.launch(Bob.class, args);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"feliciaivane":17}},{"path":"src/main/java/bob/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.InvalidDateException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.InvalidInputException;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.NoDeadlineException;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.NoEventTimingException;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.NoKeywordException;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.NoTaskAndDateException;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.NoTaskException;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.OutOfBoundsException;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"import bob.gui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"import bob.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"import bob.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"import bob.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"import bob.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":" * Represents an object that deals with making sense of the user commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"feliciaivane"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for creating a new Parser instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"feliciaivane"},"content":"    public Parser() {}","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"feliciaivane"},"content":"     * Makes sense of the user commands and returns the appropriate Bob response.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"feliciaivane"},"content":"     * @param input User input.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"feliciaivane"},"content":"     * @param ui Ui object responsible for interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"feliciaivane"},"content":"     * @param tasks Tasklist that stores the user\u0027s list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"feliciaivane"},"content":"     * @param storage Storage object responsible for loading tasks from the file and saving tasks into the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"feliciaivane"},"content":"    public String getResponse(String input, Ui ui, TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"feliciaivane"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"feliciaivane"},"content":"            checkInput(input, tasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"feliciaivane"},"content":"            String response \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"feliciaivane"},"content":"            assert (Objects.equals(input, \"list\") || input.matches(\"done(.*)\")","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"feliciaivane"},"content":"                    || input.matches(\"delete(.*)\") || input.matches(\"todo(.*)\")","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"feliciaivane"},"content":"                    || input.matches(\"deadline(.*)\") || input.matches(\"event(.*)\")","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"feliciaivane"},"content":"                    || input.matches(\"find(.*)\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"feliciaivane"},"content":"            boolean isListCommand \u003d Objects.equals(input, \"list\");","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"feliciaivane"},"content":"            boolean isHelpCommand \u003d Objects.equals(input, \"help\");","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"feliciaivane"},"content":"            boolean isDoneCommand \u003d input.matches(\"done(.*)\");","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"feliciaivane"},"content":"            boolean isDeleteCommand \u003d input.matches(\"delete(.*)\");","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"feliciaivane"},"content":"            boolean isTodoCommand \u003d input.matches(\"todo(.*)\");","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"feliciaivane"},"content":"            boolean isDeadlineCommand \u003d input.matches(\"deadline(.*)\");","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"feliciaivane"},"content":"            boolean isEventCommand \u003d input.matches(\"event(.*)\");","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"feliciaivane"},"content":"            boolean isSearchCommand \u003d input.matches(\"find(.*)\");","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"feliciaivane"},"content":"            if (isListCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"feliciaivane"},"content":"                return ui.getListMessage(tasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"feliciaivane"},"content":"            } else if (isHelpCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"feliciaivane"},"content":"                return ui.getHelpMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"feliciaivane"},"content":"            } else if (isDoneCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"feliciaivane"},"content":"                String[] splitResponse \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"feliciaivane"},"content":"                int index \u003d Integer.parseInt(splitResponse[1]) - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"feliciaivane"},"content":"                response \u003d ui.getIndexCompletedMessage(index, tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"feliciaivane"},"content":"                storage.updateBobFile(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"feliciaivane"},"content":"            } else if (isDeleteCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"feliciaivane"},"content":"                String[] splitResponse \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"feliciaivane"},"content":"                int index \u003d Integer.parseInt(splitResponse[1]) - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"feliciaivane"},"content":"                response \u003d ui.getIndexDeletedMessage(index, tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"feliciaivane"},"content":"                storage.updateBobFile(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"feliciaivane"},"content":"            } else if (isTodoCommand || isDeadlineCommand || isEventCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"feliciaivane"},"content":"                String[] splitResponse \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"feliciaivane"},"content":"                Task newTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"feliciaivane"},"content":"                if (isTodoCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"feliciaivane"},"content":"                    newTask \u003d new Todo(splitResponse[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"feliciaivane"},"content":"                } else if (isDeadlineCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"feliciaivane"},"content":"                    String[] splitAgain \u003d splitResponse[1].split(\" /by \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"feliciaivane"},"content":"                    newTask \u003d new Deadline(splitAgain[0], splitAgain[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"feliciaivane"},"content":"                } else if (isEventCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"feliciaivane"},"content":"                    String[] splitAgain \u003d splitResponse[1].split(\" /at \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"feliciaivane"},"content":"                    newTask \u003d new Event(splitAgain[0], splitAgain[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"feliciaivane"},"content":"                } else { // Should never reach this branch.","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"feliciaivane"},"content":"                    newTask \u003d new Task(\"\");","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"feliciaivane"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"feliciaivane"},"content":"                response \u003d ui.getTaskAddedMessage(newTask, tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"feliciaivane"},"content":"                storage.updateBobFile(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"feliciaivane"},"content":"            } else if (isSearchCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"feliciaivane"},"content":"                String[] splitResponse \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"feliciaivane"},"content":"                response \u003d ui.getSearchResultMessage(splitResponse[1], tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"feliciaivane"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"feliciaivane"},"content":"            return response;","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"feliciaivane"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"feliciaivane"},"content":"            return ui.getInvalidDateExceptionMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"feliciaivane"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"feliciaivane"},"content":"            return ui.getInvalidInputExceptionMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"feliciaivane"},"content":"        } catch (NoDeadlineException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"feliciaivane"},"content":"            return ui.getNoDeadlineExceptionMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"feliciaivane"},"content":"        } catch (NoEventTimingException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"feliciaivane"},"content":"            return ui.getNoEventTimingExceptionMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"feliciaivane"},"content":"        } catch (NoKeywordException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"feliciaivane"},"content":"            return ui.getNoKeywordExceptionMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"feliciaivane"},"content":"        } catch (NoTaskAndDateException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"feliciaivane"},"content":"            return ui.getNoTaskAndDateExceptionMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"feliciaivane"},"content":"        } catch (NoTaskException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"feliciaivane"},"content":"            return ui.getNoTaskExceptionMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"feliciaivane"},"content":"        } catch (OutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"feliciaivane"},"content":"            return ui.getOutOfBoundsExceptionMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"feliciaivane"},"content":"     * Checks the user input to determine if any exception needs to be thrown.","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"feliciaivane"},"content":"     * @param response The user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"feliciaivane"},"content":"     * @param tasklist Current list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"feliciaivane"},"content":"     * @throws InvalidInputException If the user input is not one of the supported commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"feliciaivane"},"content":"     * @throws NoDeadlineException If the user does not specify the deadline of their Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"feliciaivane"},"content":"     * @throws NoEventTimingException If the user does not specify the timing of their Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"feliciaivane"},"content":"     * @throws NoKeywordException If the user does not specify the keyword in their task search.","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"feliciaivane"},"content":"     * @throws NoTaskAndDateException If the user does not specify both the task description and deadline or timing.","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"feliciaivane"},"content":"     * @throws NoTaskException If the user does not specify the task description.","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"feliciaivane"},"content":"     * @throws OutOfBoundsException If the user tries to mark as completed or remove a task not inside the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"feliciaivane"},"content":"    private void checkInput(String response, TaskList tasklist) throws InvalidInputException, NoTaskException,","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"feliciaivane"},"content":"            NoDeadlineException, NoEventTimingException, OutOfBoundsException, NoKeywordException,","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"feliciaivane"},"content":"            NoTaskAndDateException {","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"feliciaivane"},"content":"        boolean isListCommand \u003d Objects.equals(response, \"list\");","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"feliciaivane"},"content":"        boolean isHelpCommand \u003d Objects.equals(response, \"help\");","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"feliciaivane"},"content":"        boolean isDoneCommand \u003d response.matches(\"done(.*)\");","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"feliciaivane"},"content":"        boolean isDeleteCommand \u003d response.matches(\"delete(.*)\");","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"feliciaivane"},"content":"        boolean isTodoCommand \u003d response.matches(\"todo(.*)\");","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"feliciaivane"},"content":"        boolean isDeadlineCommand \u003d response.matches(\"deadline(.*)\");","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"feliciaivane"},"content":"        boolean isEventCommand \u003d response.matches(\"event(.*)\");","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"feliciaivane"},"content":"        boolean isSearchCommand \u003d response.matches(\"find(.*)\");","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"feliciaivane"},"content":"        if (isListCommand || isHelpCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"feliciaivane"},"content":"            // Correct input, do nothing","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"feliciaivane"},"content":"        } else if (isDoneCommand || isDeleteCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"feliciaivane"},"content":"            String[] splitResponse \u003d response.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"feliciaivane"},"content":"            boolean isIndexLessThanOrEqualToZero \u003d Integer.parseInt(splitResponse[1]) \u003c\u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"feliciaivane"},"content":"            boolean isIndexGreaterThanListLength \u003d Integer.parseInt(splitResponse[1])","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"feliciaivane"},"content":"                    \u003e Integer.parseInt(tasklist.getNoOfTasks());","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"feliciaivane"},"content":"            if (isIndexLessThanOrEqualToZero || isIndexGreaterThanListLength) {","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"feliciaivane"},"content":"                throw new OutOfBoundsException();","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"feliciaivane"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"feliciaivane"},"content":"        } else if (isTodoCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"feliciaivane"},"content":"            String[] splitResponse \u003d response.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"feliciaivane"},"content":"            boolean hasNoTaskDescription \u003d splitResponse.length \u003d\u003d 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"feliciaivane"},"content":"            if (hasNoTaskDescription) {","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"feliciaivane"},"content":"                throw new NoTaskException();","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"feliciaivane"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"feliciaivane"},"content":"        } else if (isDeadlineCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":150,"author":{"gitId":"feliciaivane"},"content":"            String[] splitResponse \u003d response.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"feliciaivane"},"content":"            boolean hasNoTaskDescription \u003d splitResponse.length \u003d\u003d 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":152,"author":{"gitId":"feliciaivane"},"content":"            boolean hasNoDate \u003d !response.contains(\"/by\");","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"feliciaivane"},"content":"            boolean hasNoTaskAndDate \u003d splitResponse.length \u003d\u003d 2;","lastModifiedDate":"2021-09-06"},{"lineNumber":154,"author":{"gitId":"feliciaivane"},"content":"            if (hasNoTaskDescription) {","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"feliciaivane"},"content":"                throw new NoTaskException();","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"feliciaivane"},"content":"            } else if (hasNoDate) {","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"feliciaivane"},"content":"                throw new NoDeadlineException();","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"feliciaivane"},"content":"            } else if (hasNoTaskAndDate) {","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"feliciaivane"},"content":"                throw new NoTaskAndDateException();","lastModifiedDate":"2021-08-29"},{"lineNumber":160,"author":{"gitId":"feliciaivane"},"content":"            } else if (splitResponse[1].split(\" \", 3).length \u003d\u003d 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"feliciaivane"},"content":"                throw new NoTaskException();","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"feliciaivane"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"feliciaivane"},"content":"        } else if (isEventCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"feliciaivane"},"content":"            String[] splitResponse \u003d response.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"feliciaivane"},"content":"            boolean hasNoTaskDescription \u003d splitResponse.length \u003d\u003d 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"feliciaivane"},"content":"            boolean hasNoDate \u003d !response.contains(\"/at\");","lastModifiedDate":"2021-09-06"},{"lineNumber":167,"author":{"gitId":"feliciaivane"},"content":"            boolean hasNoTaskAndDate \u003d splitResponse.length \u003d\u003d 2;","lastModifiedDate":"2021-09-06"},{"lineNumber":168,"author":{"gitId":"feliciaivane"},"content":"            if (hasNoTaskDescription) {","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"feliciaivane"},"content":"                throw new NoTaskException();","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"feliciaivane"},"content":"            } else if (hasNoDate) {","lastModifiedDate":"2021-09-06"},{"lineNumber":171,"author":{"gitId":"feliciaivane"},"content":"                throw new NoEventTimingException();","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"feliciaivane"},"content":"            } else if (hasNoTaskAndDate) {","lastModifiedDate":"2021-09-06"},{"lineNumber":173,"author":{"gitId":"feliciaivane"},"content":"                throw new NoTaskAndDateException();","lastModifiedDate":"2021-08-29"},{"lineNumber":174,"author":{"gitId":"feliciaivane"},"content":"            } else if (splitResponse[1].split(\" \", 3).length \u003d\u003d 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":175,"author":{"gitId":"feliciaivane"},"content":"                throw new NoTaskException();","lastModifiedDate":"2021-08-29"},{"lineNumber":176,"author":{"gitId":"feliciaivane"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"feliciaivane"},"content":"        } else if (isSearchCommand) {","lastModifiedDate":"2021-09-06"},{"lineNumber":178,"author":{"gitId":"feliciaivane"},"content":"            String[] splitResponse \u003d response.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"feliciaivane"},"content":"            boolean hasNoSearchKeyword \u003d splitResponse.length \u003d\u003d 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":180,"author":{"gitId":"feliciaivane"},"content":"            if (hasNoSearchKeyword) {","lastModifiedDate":"2021-09-06"},{"lineNumber":181,"author":{"gitId":"feliciaivane"},"content":"                throw new NoKeywordException();","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"feliciaivane"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"feliciaivane"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"feliciaivane"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"feliciaivane":187}},{"path":"src/main/java/bob/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.DirectoryNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.InvalidDateException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"import bob.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"import bob.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"import bob.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"import bob.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":" * Represents an object that deals with loading tasks from a specified file and saving tasks in the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"feliciaivane"},"content":"    /** Pathname to directory where the data will be stored */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"    private final String path;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new Storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"feliciaivane"},"content":"     * @param path Pathname to the data directory that will be used to store the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"feliciaivane"},"content":"    public Storage(String path) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"feliciaivane"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"feliciaivane"},"content":"     * Loads the data from the bob.txt file to instantiate the TaskList for the current session.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"feliciaivane"},"content":"     * @return ArrayList containing tasks to be added to the TaskList for this current session.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"feliciaivane"},"content":"     * @throws DirectoryNotFoundException If the data directory does not exist yet.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"feliciaivane"},"content":"     * @throws FileNotFoundException If the bob.txt file does not exist yet.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"feliciaivane"},"content":"    public ArrayList\u003cTask\u003e load() throws DirectoryNotFoundException, FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"feliciaivane"},"content":"        File dataDirectory \u003d new File(this.path);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"feliciaivane"},"content":"        // Check for data directory","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"feliciaivane"},"content":"        boolean directoryExists \u003d dataDirectory.exists();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"feliciaivane"},"content":"        if (!directoryExists) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"feliciaivane"},"content":"            throw new DirectoryNotFoundException();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"feliciaivane"},"content":"        // Check for bob.txt","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"feliciaivane"},"content":"        File bobFile \u003d new File(this.path + \"/bob.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"feliciaivane"},"content":"        boolean fileExists \u003d bobFile.exists();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"feliciaivane"},"content":"        if (!fileExists) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"feliciaivane"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"feliciaivane"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"feliciaivane"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"feliciaivane"},"content":"            Scanner s \u003d new Scanner(bobFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"feliciaivane"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"feliciaivane"},"content":"                String curr \u003d s.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"feliciaivane"},"content":"                Task newTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"feliciaivane"},"content":"                boolean isComplete;","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"feliciaivane"},"content":"                assert (curr.matches(\"\\\\[T](.*)\") || curr.matches(\"\\\\[D](.*)\")","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"feliciaivane"},"content":"                        || curr.matches(\"\\\\[E](.*)\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"feliciaivane"},"content":"                if (curr.matches(\"\\\\[T](.*)\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"feliciaivane"},"content":"                    String[] splitCurr \u003d curr.split(\" \\\\Q[\\\\E.\\\\Q]\\\\E \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"feliciaivane"},"content":"                    newTask \u003d new Todo(splitCurr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"feliciaivane"},"content":"                    isComplete \u003d curr.contains(\"[X]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"feliciaivane"},"content":"                } else if (curr.matches(\"\\\\[D](.*)\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"feliciaivane"},"content":"                    String[] splitCurr \u003d curr.split(\" \\\\Q[\\\\E.\\\\Q]\\\\E \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"feliciaivane"},"content":"                    String[] splitRight \u003d splitCurr[1].split(\" \\\\(by: \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"feliciaivane"},"content":"                    String deadline \u003d splitRight[1].substring(0, splitRight[1].length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"feliciaivane"},"content":"                    newTask \u003d new Deadline(splitRight[0], formatDate(deadline));","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"feliciaivane"},"content":"                    isComplete \u003d curr.contains(\"[X]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"feliciaivane"},"content":"                } else if (curr.matches(\"\\\\[E](.*)\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"feliciaivane"},"content":"                    String[] splitCurr \u003d curr.split(\" \\\\Q[\\\\E.\\\\Q]\\\\E \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"feliciaivane"},"content":"                    String[] splitRight \u003d splitCurr[1].split(\" \\\\(at: \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"feliciaivane"},"content":"                    String timing \u003d splitRight[1].substring(0, splitRight[1].length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"feliciaivane"},"content":"                    newTask \u003d new Event(splitRight[0], formatDate(timing));","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"feliciaivane"},"content":"                    isComplete \u003d curr.contains(\"[X]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"feliciaivane"},"content":"                } else { // Should never reach this branch.","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"feliciaivane"},"content":"                    newTask \u003d new Task(\"\");","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"feliciaivane"},"content":"                    isComplete \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"feliciaivane"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"feliciaivane"},"content":"                tasks.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"feliciaivane"},"content":"                if (isComplete) {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"feliciaivane"},"content":"                    newTask.markCompleted();","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"feliciaivane"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"feliciaivane"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"feliciaivane"},"content":"        } catch (IOException | InvalidDateException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"feliciaivane"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"feliciaivane"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"feliciaivane"},"content":"     * Formats the date from the printed format to the format required to make a LocalDate object.","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"feliciaivane"},"content":"     * (e.g. Dec 1 2021 to 2021-12-01)","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"feliciaivane"},"content":"     * @param date Date of Event or Deadline task in the printed format.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"feliciaivane"},"content":"     * @return Date in the String format required to make a LocalDate object.","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"feliciaivane"},"content":"    private String formatDate(String date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"feliciaivane"},"content":"        String day;","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"feliciaivane"},"content":"        String month;","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"feliciaivane"},"content":"        String year;","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"feliciaivane"},"content":"        String[] splitDate \u003d date.split(\" \", 3);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"feliciaivane"},"content":"        assert (splitDate[1].length() \u003d\u003d 1 || splitDate[1].length() \u003d\u003d 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"feliciaivane"},"content":"        day \u003d splitDate[1].length() \u003d\u003d 1 ? \"0\" + splitDate[1] : splitDate[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"feliciaivane"},"content":"        assert (splitDate[0] \u003d\u003d \"Jan\" || splitDate[0] \u003d\u003d \"Feb\" || splitDate[0] \u003d\u003d \"Mar\" || splitDate[0] \u003d\u003d \"Apr\"","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"feliciaivane"},"content":"                || splitDate[0] \u003d\u003d \"May\" || splitDate[0] \u003d\u003d \"Jun\" || splitDate[0] \u003d\u003d \"Jul\" || splitDate[0] \u003d\u003d \"Aug\"","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"feliciaivane"},"content":"                || splitDate[0] \u003d\u003d \"Sep\" || splitDate[0] \u003d\u003d \"Oct\" || splitDate[0] \u003d\u003d \"Nov\" || splitDate[0] \u003d\u003d \"Dec\");","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"feliciaivane"},"content":"        switch (splitDate[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"feliciaivane"},"content":"        case \"Jan\":","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"01\";","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"feliciaivane"},"content":"        case \"Feb\":","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"02\";","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"feliciaivane"},"content":"        case \"Mar\":","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"03\";","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"feliciaivane"},"content":"        case \"Apr\":","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"04\";","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"feliciaivane"},"content":"        case \"May\":","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"05\";","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"feliciaivane"},"content":"        case \"Jun\":","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"06\";","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"feliciaivane"},"content":"        case \"Jul\":","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"07\";","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"feliciaivane"},"content":"        case \"Aug\":","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"08\";","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"feliciaivane"},"content":"        case \"Sep\":","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"09\";","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"feliciaivane"},"content":"        case \"Oct\":","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"10\";","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"feliciaivane"},"content":"        case \"Nov\":","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"11\";","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"feliciaivane"},"content":"        case \"Dec\":","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"12\";","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"feliciaivane"},"content":"        default:","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"feliciaivane"},"content":"            month \u003d \"00\"; // Should never reach this branch.","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"feliciaivane"},"content":"        assert (splitDate[2].length() \u003d\u003d 4);","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"feliciaivane"},"content":"        year \u003d splitDate[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"feliciaivane"},"content":"        // Return year, month and day Strings in the required format.","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"feliciaivane"},"content":"        return year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"feliciaivane"},"content":"     * Makes the data directory that will later contain the bob.txt file if it does not yet exist.","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"feliciaivane"},"content":"    public void makeDataDirectory() {","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"feliciaivane"},"content":"        File dataDirectory \u003d new File(this.path);","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"feliciaivane"},"content":"        dataDirectory.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"feliciaivane"},"content":"     * Makes the bob.txt file in the data directory if it does not yet exist.","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"feliciaivane"},"content":"    public void makeBobFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"feliciaivane"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"feliciaivane"},"content":"            File dataDirectory \u003d new File(this.path);","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"feliciaivane"},"content":"            new File(dataDirectory, \"bob.txt\").createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"feliciaivane"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"feliciaivane"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"feliciaivane"},"content":"     * Updates bob.txt with the newest list of tasks provided.","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"feliciaivane"},"content":"     * @param taskList New list of tasks to be saved to the bob.txt file.","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"feliciaivane"},"content":"    public void updateBobFile(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"feliciaivane"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"feliciaivane"},"content":"            FileWriter writer \u003d new FileWriter(this.path + \"/bob.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"feliciaivane"},"content":"            writer.write(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"feliciaivane"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"feliciaivane"},"content":"            int noOfTasks \u003d Integer.parseInt(taskList.getNoOfTasks());","lastModifiedDate":"2021-09-06"},{"lineNumber":184,"author":{"gitId":"feliciaivane"},"content":"            for (int i \u003d 0; i \u003c noOfTasks; i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":185,"author":{"gitId":"feliciaivane"},"content":"                String currTaskPrinted \u003d taskList.getTask(i).printTask();","lastModifiedDate":"2021-09-06"},{"lineNumber":186,"author":{"gitId":"feliciaivane"},"content":"                appendToFile(currTaskPrinted);","lastModifiedDate":"2021-09-06"},{"lineNumber":187,"author":{"gitId":"feliciaivane"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"feliciaivane"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"feliciaivane"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":194,"author":{"gitId":"feliciaivane"},"content":"     * Adds text to the existing text file without overriding it.","lastModifiedDate":"2021-08-25"},{"lineNumber":195,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":196,"author":{"gitId":"feliciaivane"},"content":"     * @param textToAppend Text to be added to the existing text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":198,"author":{"gitId":"feliciaivane"},"content":"    private void appendToFile(String textToAppend) {","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"feliciaivane"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"feliciaivane"},"content":"            FileWriter fw \u003d new FileWriter(this.path + \"/bob.txt\", true); //FileWriter in append mode","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"feliciaivane"},"content":"            fw.write(textToAppend + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"feliciaivane"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"feliciaivane"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"feliciaivane"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"feliciaivane":208}},{"path":"src/main/java/bob/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.NoSearchResultException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"import bob.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":" * Represents the user\u0027s list of tasks to be completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"public class TaskList {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    /** List of user tasks to keep track of. */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new empty TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new TaskList containing the provided tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"feliciaivane"},"content":"     * @param tasks Array containing the tasks to be added to the new TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"feliciaivane"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"feliciaivane"},"content":"        this.taskList \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"feliciaivane"},"content":"     * Adds the given task to the current list.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"feliciaivane"},"content":"     * @param task Task to be added to the current TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"feliciaivane"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"feliciaivane"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"feliciaivane"},"content":"     * Returns the current list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"feliciaivane"},"content":"     * @return Current list of tasks as a String.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"feliciaivane"},"content":"    public String getList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"feliciaivane"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"feliciaivane"},"content":"        for (int index \u003d 0; index \u003c this.taskList.size(); index++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"feliciaivane"},"content":"            String currTask \u003d this.taskList.get(index).printTask();","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"feliciaivane"},"content":"            String currNumber \u003d (index + 1) + \".\";","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"feliciaivane"},"content":"            result \u003d result + currNumber + currTask + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"feliciaivane"},"content":"        return result;","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"feliciaivane"},"content":"     * Marks the task at the specified index as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"feliciaivane"},"content":"     * @param index The index of the task in the list to be marked as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"feliciaivane"},"content":"     * @return String representation of the completed task.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"feliciaivane"},"content":"    public String markIndexCompleted(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"feliciaivane"},"content":"        assert (index \u003c this.taskList.size() \u0026\u0026 index \u003e -1);","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"feliciaivane"},"content":"        Task selectedTask \u003d this.taskList.get(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"feliciaivane"},"content":"        selectedTask.markCompleted();","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"feliciaivane"},"content":"        return selectedTask.printTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"feliciaivane"},"content":"     * Deletes the task at the specified index from the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"feliciaivane"},"content":"     * @param index The index of the task in the list to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"feliciaivane"},"content":"     * @return String representation of the deleted task.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"feliciaivane"},"content":"    public String deleteIndex(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"feliciaivane"},"content":"        assert (index \u003c this.taskList.size() \u0026\u0026 index \u003e -1);","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"feliciaivane"},"content":"        Task selectedTask \u003d this.taskList.get(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"feliciaivane"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"feliciaivane"},"content":"        return selectedTask.printTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"feliciaivane"},"content":"     * Returns the number of tasks in the list currently.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"feliciaivane"},"content":"     * @return The number of tasks in the list as a String.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"feliciaivane"},"content":"    public String getNoOfTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"feliciaivane"},"content":"        return Integer.toString(this.taskList.size());","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"feliciaivane"},"content":"     * Returns the task at the specified index from the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"feliciaivane"},"content":"     * @param index The index of the task in the list to be returned.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"feliciaivane"},"content":"     * @return Specified task.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"feliciaivane"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"feliciaivane"},"content":"        assert (index \u003c this.taskList.size() \u0026\u0026 index \u003e -1);","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"feliciaivane"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"feliciaivane"},"content":"     * Returns a list of tasks from the task list that contain a specific keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"feliciaivane"},"content":"     * @param keyword Keyword provided by the user to search for in the list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"feliciaivane"},"content":"     * @return List of tasks from within the task list that contain the given keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"feliciaivane"},"content":"     * @throws NoSearchResultException If there are no tasks in the list that contain the given keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"feliciaivane"},"content":"    public String searchList(String keyword) throws NoSearchResultException {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"feliciaivane"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"feliciaivane"},"content":"        int noOfResults \u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"feliciaivane"},"content":"        for (int index \u003d 0; index \u003c this.taskList.size(); index++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"feliciaivane"},"content":"            String currTask \u003d this.taskList.get(index).printTask();","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"feliciaivane"},"content":"            if (currTask.contains(keyword)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"feliciaivane"},"content":"                String currNumber \u003d (noOfResults + 1) + \".\";","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"feliciaivane"},"content":"                result \u003d result + currNumber + currTask + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"feliciaivane"},"content":"                noOfResults++;","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"feliciaivane"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"feliciaivane"},"content":"        if (noOfResults \u003d\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"feliciaivane"},"content":"            throw new NoSearchResultException();","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"feliciaivane"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"feliciaivane"},"content":"            return result;","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"feliciaivane":126}},{"path":"src/main/java/bob/exception/BobException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents an exception thrown by Bob while it runs.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class BobException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new BobException instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    public BobException() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"        super();","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"feliciaivane":13}},{"path":"src/main/java/bob/exception/DirectoryNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents the exception thrown by Bob when it is unable to locate the data directory in the user\u0027s computer.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class DirectoryNotFoundException extends BobException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new DirectoryNotFoundException instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    public DirectoryNotFoundException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"feliciaivane":13}},{"path":"src/main/java/bob/exception/FileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents the exception thrown by Bob when it is unable to locate the bob.txt file in the user\u0027s computer.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class FileNotFoundException extends BobException {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new FileNotFoundException instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    public FileNotFoundException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"feliciaivane":13}},{"path":"src/main/java/bob/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.exception;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents the exception thrown by Bob when the user inputs an invalid date as a deadline or event timing.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class InvalidDateException extends BobException {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new InvalidDateException instance.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    public InvalidDateException() {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"        super();","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"feliciaivane":13}},{"path":"src/main/java/bob/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents the exception thrown by Bob when it receives an unsupported command from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class InvalidInputException extends BobException {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new InvalidInputException instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    public InvalidInputException() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"        super();","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"feliciaivane":13}},{"path":"src/main/java/bob/exception/NoDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents the exception thrown by Bob when the user does not specify the deadline of the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class NoDeadlineException extends BobException {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new NoDeadlineException instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    public NoDeadlineException() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"        super();","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"feliciaivane":13}},{"path":"src/main/java/bob/exception/NoEventTimingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents the exception thrown by Bob when the user does not specify the timing of the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class NoEventTimingException extends BobException {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new NoEventTimingException instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    public NoEventTimingException() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"        super();","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"feliciaivane":13}},{"path":"src/main/java/bob/exception/NoKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents the exception thrown by Bob when the user does not specify the keyword for their task search.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class NoKeywordException extends BobException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new NoKeywordException instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    public NoKeywordException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"feliciaivane":13}},{"path":"src/main/java/bob/exception/NoSearchResultException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents the exception thrown by Bob when there is no task in the task list that corresponds to their search.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class NoSearchResultException extends BobException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new NoSearchResultException instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    public NoSearchResultException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"        super();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"feliciaivane":13}},{"path":"src/main/java/bob/exception/NoTaskAndDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.exception;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents the exception thrown by Bob when the user does not specify the task description","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" * and event or deadline date.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"public class NoTaskAndDateException extends BobException {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new NoTaskAndDateException instance.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"    public NoTaskAndDateException() {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"        super();","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"feliciaivane":14}},{"path":"src/main/java/bob/exception/NoTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents the exception thrown by Bob when the user does not specify the task description.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class NoTaskException extends BobException {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new NoTaskException instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    public NoTaskException() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"        super();","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"feliciaivane":13}},{"path":"src/main/java/bob/exception/OutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents the exception thrown by Bob when the user tries to mark as completed or remove a task not inside the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class OutOfBoundsException extends BobException {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new OutOfBoundsException instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    public OutOfBoundsException() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"        super();","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"feliciaivane":13}},{"path":"src/main/java/bob/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.gui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.text.FontPosture;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":" * Represents a message sent in the chat, with the message sender\u0027s image and their message.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":"    /** Message sent in the chat */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"feliciaivane"},"content":"    private Label text;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"feliciaivane"},"content":"    /** Image of message sender */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"feliciaivane"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a DialogBox instance.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"feliciaivane"},"content":"     * @param l Label object containing the dialog message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"feliciaivane"},"content":"     * @param iv Image of entity that is \"speaking\" the dialog.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"feliciaivane"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"feliciaivane"},"content":"        text \u003d l;","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"feliciaivane"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"feliciaivane"},"content":"        text.setWrapText(true);","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"feliciaivane"},"content":"        text.setStyle(\"-fx-text-fill: BLACK;\");","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"feliciaivane"},"content":"        text.setFont(Font.font(\"Comic Sans MS\", FontWeight.NORMAL, FontPosture.REGULAR, 13));","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"feliciaivane"},"content":"        displayPicture.setFitWidth(150.0);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"feliciaivane"},"content":"        displayPicture.setFitHeight(150.0);","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"feliciaivane"},"content":"        Circle circle \u003d new Circle(50);","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"feliciaivane"},"content":"        circle.setCenterX(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"feliciaivane"},"content":"        circle.setCenterY(displayPicture.getFitHeight() / 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"feliciaivane"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"feliciaivane"},"content":"        this.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"feliciaivane"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"feliciaivane"},"content":"        this.setStyle(\"-fx-border-color: AZURE; -fx-border-width: 2;\" +","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"feliciaivane"},"content":"                \"-fx-border-radius: 30; -fx-border-insets: 5;\");","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"feliciaivane"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"feliciaivane"},"content":"    private void flip() {","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"feliciaivane"},"content":"        this.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"feliciaivane"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"feliciaivane"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"feliciaivane"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"feliciaivane"},"content":"     * Factory method for producing a DialogBox for the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"feliciaivane"},"content":"     * @param l Label containing the dialog message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"feliciaivane"},"content":"     * @param iv Image of entity that is \"speaking\" the dialog.","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"feliciaivane"},"content":"     * @return DialogBox with image on the right and text on the left.","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"feliciaivane"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"feliciaivane"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"feliciaivane"},"content":"     * Factory method for producing a DialogBox for Bob.","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"feliciaivane"},"content":"     * DialogBox for Bob is flipped horizontally, meaning the image is on the left instead of the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"feliciaivane"},"content":"     * @param l Label containing the dialog message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"feliciaivane"},"content":"     * @param iv Image of entity that is \"speaking\" the dialog.","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"feliciaivane"},"content":"     * @return DialogBox with text on the right and image on the left.","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"feliciaivane"},"content":"    public static DialogBox getBobDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"feliciaivane"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"feliciaivane"},"content":"        db.flip();","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"feliciaivane"},"content":"        return db;","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"feliciaivane":88}},{"path":"src/main/java/bob/gui/HelpDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.gui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.control.Hyperlink;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.text.FontPosture;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"public class HelpDialogBox extends HBox {","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"    /** Help message sent in the chat */","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"    private Hyperlink link;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"    /** Image of message sender */","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a DialogBox instance.","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"     * @param l Hyperlink object containing the link to the help page.","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"feliciaivane"},"content":"     * @param iv Image of entity that is \"speaking\" the dialog.","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"feliciaivane"},"content":"    public HelpDialogBox(Hyperlink l, ImageView iv) {","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"feliciaivane"},"content":"        link \u003d l;","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"feliciaivane"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"feliciaivane"},"content":"        link.setWrapText(true);","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"feliciaivane"},"content":"        link.setFont(Font.font(\"Comic Sans MS\", FontWeight.NORMAL, FontPosture.REGULAR, 13));","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"feliciaivane"},"content":"        displayPicture.setFitWidth(150.0);","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"feliciaivane"},"content":"        displayPicture.setFitHeight(150.0);","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"feliciaivane"},"content":"        Circle circle \u003d new Circle(50);","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"feliciaivane"},"content":"        circle.setCenterX(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"feliciaivane"},"content":"        circle.setCenterY(displayPicture.getFitHeight() / 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"feliciaivane"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"feliciaivane"},"content":"        this.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"feliciaivane"},"content":"        this.getChildren().addAll(displayPicture, link);","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"feliciaivane"},"content":"        this.setStyle(\"-fx-border-color: AZURE; -fx-border-width: 2;\" +","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"feliciaivane"},"content":"                \"-fx-border-radius: 30; -fx-border-insets: 5;\");","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"feliciaivane":45}},{"path":"src/main/java/bob/gui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.gui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"import bob.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.NoSearchResultException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"import bob.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":" * Represents an object that deals with interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":" * It is responsible for retrieving all of Bob\u0027s possible responses.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    public Ui() {}","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when Bob first starts up and initialises the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"    public String getStartMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"        return \"I\u0027m waking up... please wait...\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when the Data directory for the Bob.txt file does not yet exist.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"     * Bob.txt does not exist yet either.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"feliciaivane"},"content":"    public String getDirectoryLoadingErrorMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"feliciaivane"},"content":"        return \"You don\u0027t have the data directory and Bob text file yet.\"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"feliciaivane"},"content":"                + \" I\u0027ll make them for you now, you\u0027re welcome! :D\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when the Bob.txt file does not yet exist.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"feliciaivane"},"content":"    public String getFileLoadingErrorMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"feliciaivane"},"content":"        return \"You don\u0027t have the Bob.Bob text file yet. I\u0027ll make one for you now, you\u0027re welcome! :D\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when Bob is ready to receive commands from the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"feliciaivane"},"content":"    public String getGreetingMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"feliciaivane"},"content":"        return \"OKKAYYY finally awake!\\nHowwwwwwdy! I\u0027m Bob :D\\nWhat do you want?\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"feliciaivane"},"content":"                + \"(Psst... type \u0027help\u0027 if you don\u0027t know what to do!)\";","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"feliciaivane"},"content":"     * Returns current list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"feliciaivane"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"feliciaivane"},"content":"    public String getListMessage(TaskList tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"feliciaivane"},"content":"        String result \u003d \"Here\u0027s your tasks! Wow I\u0027m so helpful!\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"feliciaivane"},"content":"        result \u003d result + tasks.getList();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"feliciaivane"},"content":"        return result;","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"feliciaivane"},"content":"     * Returns link to the user guide.","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"feliciaivane"},"content":"     * @return Message referring the user to the user guide.","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"feliciaivane"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"feliciaivane"},"content":"        return \"HA HA do you not know how to talk to me? Click on this message to view my guide then!\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"feliciaivane"},"content":"                + \"(You\u0027ll need internet access though :p)\";","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"feliciaivane"},"content":"     * Adds new task to the task list and returns the corresponding message.","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"feliciaivane"},"content":"     * @param task New task to be added to the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"feliciaivane"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"feliciaivane"},"content":"    public String getTaskAddedMessage(Task task, TaskList tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"feliciaivane"},"content":"        tasks.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"feliciaivane"},"content":"        return \"Okay okay I\u0027ve added the task:\\n\" + task.printTask() + \"\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"feliciaivane"},"content":"                + \"Yay \" + tasks.getNoOfTasks() + \" tasks!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"feliciaivane"},"content":"     * Marks the specified task as completed and returns the corresponding message.","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"feliciaivane"},"content":"     * @param index Index of the specified task in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"feliciaivane"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"feliciaivane"},"content":"    public String getIndexCompletedMessage(int index, TaskList tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"feliciaivane"},"content":"        return \"Wow you finally did something productive!\\n\" + tasks.markIndexCompleted(index) + \"\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"feliciaivane"},"content":"     * Deletes the specified task and returns the corresponding message.","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"feliciaivane"},"content":"     * @param index Index of the specified task in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"feliciaivane"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"feliciaivane"},"content":"    public String getIndexDeletedMessage(int index, TaskList tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"feliciaivane"},"content":"        return \"Okay task yeeted away :D\\n\" + tasks.deleteIndex(index) + \"\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"feliciaivane"},"content":"                + \"Yay \" + tasks.getNoOfTasks() + \" tasks!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"feliciaivane"},"content":"     * Searches for a specific keyword in the list of tasks and returns the tasks containing the keyword.","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"feliciaivane"},"content":"     * @param keyword Keyword from the user to search for in the list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"feliciaivane"},"content":"     * @param tasks Current list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"feliciaivane"},"content":"    public String getSearchResultMessage(String keyword, TaskList tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"feliciaivane"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"feliciaivane"},"content":"            String searchResult \u003d tasks.searchList(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"feliciaivane"},"content":"            return \"Are any of these tasks the one you\u0027re looking for?\" + \"\\n\" + searchResult;","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"feliciaivane"},"content":"        } catch (NoSearchResultException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"feliciaivane"},"content":"            return \"None of your tasks contain this word -_-\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when the user does not input a valid date for their deadline or event timing.","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"feliciaivane"},"content":"    public String getInvalidDateExceptionMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"feliciaivane"},"content":"        return \"What kind of date is that \u003e:(\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when the user input is not one of the supported commands.","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"feliciaivane"},"content":"    public String getInvalidInputExceptionMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"feliciaivane"},"content":"        return \"That doesn\u0027t make any sense! \u003e:(\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when the user does not specify the task description.","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"feliciaivane"},"content":"    public String getNoTaskExceptionMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"feliciaivane"},"content":"        return \"You didn\u0027t specify your task! \u003e:(\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when the user does not specify the task description and date of event or deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"feliciaivane"},"content":"    public String getNoTaskAndDateExceptionMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"feliciaivane"},"content":"        return \"You didn\u0027t specify your task OR its date! \u003e:(\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when the user does not specify the deadline of their Deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"feliciaivane"},"content":"    public String getNoDeadlineExceptionMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"feliciaivane"},"content":"        return \"When is the deadline? \u003e:(\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when the user does not specify the timing of their Event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"feliciaivane"},"content":"    public String getNoEventTimingExceptionMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":153,"author":{"gitId":"feliciaivane"},"content":"        return \"When is the event? \u003e:(\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when the user does not specify any keyword for their search.","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"feliciaivane"},"content":"    public String getNoKeywordExceptionMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":160,"author":{"gitId":"feliciaivane"},"content":"        return \"What are you even looking for \u003e:(\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":164,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when the user tries to mark as completed or remove a task that is not inside the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":165,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":166,"author":{"gitId":"feliciaivane"},"content":"    public String getOutOfBoundsExceptionMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":167,"author":{"gitId":"feliciaivane"},"content":"        return \"Huh what task is that :/\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":169,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":170,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":171,"author":{"gitId":"feliciaivane"},"content":"     * Returns message for when the user terminates the session and Bob stops running.","lastModifiedDate":"2021-08-29"},{"lineNumber":172,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":173,"author":{"gitId":"feliciaivane"},"content":"    public String getGoodbyeMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":174,"author":{"gitId":"feliciaivane"},"content":"        return \"Bye! Shoo!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":175,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"feliciaivane":176}},{"path":"src/main/java/bob/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.InvalidDateException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":" * Represents a special type of task with a deadline, meaning the task must be completed before the specified date.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"    /** Deadline date of Deadline */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"     * Calls the constructor of Task as well as the Deadline task is a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":"     * @param deadline Deadline of the Deadline task (when the task must be completed by).","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"feliciaivane"},"content":"     * @throws InvalidDateException If the user inputs an invalid date for the deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"feliciaivane"},"content":"    public Deadline(String description, String deadline) throws InvalidDateException {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"feliciaivane"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"feliciaivane"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"feliciaivane"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"feliciaivane"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"feliciaivane"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"feliciaivane"},"content":"     * Overrides the printTask() method in Task to print specifically the String representation of the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"feliciaivane"},"content":"     * Calls the printTask() method in Task as well to form the general part of the String representation.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"feliciaivane"},"content":"     * @return String representation of the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"feliciaivane"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"feliciaivane"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"feliciaivane"},"content":"        String deadlineHeader \u003d \"[D] \";","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"feliciaivane"},"content":"        String formattedDate \u003d deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"feliciaivane"},"content":"        return deadlineHeader + super.printTask() + \" (by: \" + formattedDate + \")\";","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"feliciaivane":45}},{"path":"src/main/java/bob/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"import bob.exception.InvalidDateException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":" * Represents a special type of task with a specific date, meaning the task will occur or be completed at that date.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"    /** Date of event */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"     * Calls the constructor of Task as well as the Event task is a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":"     * @param description Description of the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":"     * @param date Date of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"feliciaivane"},"content":"     * @throws InvalidDateException If the user inputs an invalid date for the timing.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"feliciaivane"},"content":"    public Event(String description, String date) throws InvalidDateException {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"feliciaivane"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"feliciaivane"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"feliciaivane"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"feliciaivane"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"feliciaivane"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"feliciaivane"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"feliciaivane"},"content":"     * Overrides the printTask() method in Task to print specifically the String representation of the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"feliciaivane"},"content":"     * Calls the printTask() method in Task as well to form the general part of the String representation.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"feliciaivane"},"content":"     * @return String representation of the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"feliciaivane"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"feliciaivane"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"feliciaivane"},"content":"        String eventHeader \u003d \"[E] \";","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"feliciaivane"},"content":"        String formattedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"feliciaivane"},"content":"        return eventHeader + super.printTask() + \" (at: \" + formattedDate + \")\";","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"feliciaivane":45}},{"path":"src/main/java/bob/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents a task for the user to ask Bob to store in the list and complete or remove at a later time.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /** Description of user Task */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"    private String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    /** Whether the Task has been completed by the user */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new Task instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"     * @param description Description of the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":"        assert !description.isEmpty();","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"feliciaivane"},"content":"     * Checks if the current Task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"feliciaivane"},"content":"     * @return \"X\" if the task is completed, \" \" otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"feliciaivane"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"feliciaivane"},"content":"        return (isCompleted ? \"X\" : \" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"feliciaivane"},"content":"     * Marks the current Task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"feliciaivane"},"content":"    public void markCompleted() {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"feliciaivane"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"feliciaivane"},"content":"     * Returns the String representation of the current Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"feliciaivane"},"content":"     * @return String representation of the current Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"feliciaivane"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"feliciaivane"},"content":"        assert (this.getStatusIcon() \u003d\u003d \"X\" || this.getStatusIcon() \u003d\u003d \" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"feliciaivane"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"feliciaivane":49}},{"path":"src/main/java/bob/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":" * Represents a special type of task with no specific deadline or time of occurrence.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"     * Constructor for a new Todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"     * Calls the constructor of Task as well as the Todo task is a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"     * Overrides the printTask() method in Task to print specifically the String representation of the Todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":"     * Calls the printTask() method in Task as well to form the general part of the String representation.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":"     * @return String representation of the Todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"feliciaivane"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"feliciaivane"},"content":"    public String printTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"feliciaivane"},"content":"        String todoHeader \u003d \"[T] \";","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"feliciaivane"},"content":"        return todoHeader + super.printTask();","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"feliciaivane":28}},{"path":"src/test/java/bob/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    Task testTask \u003d new Task(\"eat bread\");","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"    public void newTaskTest(){","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"        assertEquals(\" \", testTask.getStatusIcon());","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"    public void markCompletedTest(){","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"        testTask.markCompleted();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"        assertEquals(\"X\", testTask.getStatusIcon());","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"feliciaivane":18}},{"path":"src/test/java/bob/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"package bob.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"    public void newTodoTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"        assertEquals(\"[T] [ ] eat bread\", new Todo(\"eat bread\").printTask());","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"    public void newCompletedTodoTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"        Todo testTodo \u003d new Todo(\"eat bread\");","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"        testTodo.markCompleted();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"        assertEquals(\"[T] [X] eat bread\", testTodo.printTask());","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"feliciaivane":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"feliciaivane"},"content":"deadline buy bread /by 2021-08-12","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"feliciaivane"},"content":"event eat bread /at 2021-03-01","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"feliciaivane"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"feliciaivane"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"feliciaivane"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"feliciaivane"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"feliciaivane"},"content":"todo bake bread","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"feliciaivane"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"feliciaivane"},"content":"blah","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"feliciaivane"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"feliciaivane"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"feliciaivane"},"content":"deadline buy more bread","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"feliciaivane"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"feliciaivane"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"feliciaivane"},"content":"event have fun /at 2021-04-12","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"event have fun","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"feliciaivane"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"feliciaivane"},"content":"delete 4","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"feliciaivane"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"feliciaivane"},"content":"delete 4","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"feliciaivane"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"feliciaivane":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"feliciaivane"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/bob/*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"feliciaivane"},"content":"java -classpath ../bin Bob \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"feliciaivane":2,"-":36}}]
