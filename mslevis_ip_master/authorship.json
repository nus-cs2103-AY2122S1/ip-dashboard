[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mslevis"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mslevis"},"content":" * Encapsulates a bot that manages tasks for users.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mslevis"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mslevis"},"content":" * @author Owen Tan","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mslevis"},"content":" * @version Duke Level-9","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mslevis"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"mslevis"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"mslevis"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"mslevis"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"mslevis"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"mslevis"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mslevis"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"mslevis"},"content":"     * @param filepath","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mslevis"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"mslevis"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"mslevis"},"content":"        ui \u003d new Ui(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"mslevis"},"content":"        storage \u003d new Storage(filepath, tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"mslevis"},"content":"        parser \u003d new Parser(tasks, ui);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"mslevis"},"content":"        storage.load();","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"mslevis"},"content":"    private void run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mslevis"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"mslevis"},"content":"        ui.greeting();","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"mslevis"},"content":"        String cmd \u003d sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"mslevis"},"content":"        while (!cmd.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"mslevis"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"mslevis"},"content":"                parser.parse(cmd);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"mslevis"},"content":"                storage.save();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mslevis"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"mslevis"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"mslevis"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"mslevis"},"content":"            cmd \u003d sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"mslevis"},"content":"        sc.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"mslevis"},"content":"        ui.farewellMsg();","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"mslevis"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mslevis":51,"-":4}},{"path":"src/main/java/duke/commands/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":" * Encapsulates a Deadline object that implements a Task and has a deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mslevis"},"content":" * @author Owen Tan","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mslevis"},"content":" * @version Duke Level-9","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mslevis"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mslevis"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"mslevis"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mslevis"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"mslevis"},"content":"     * @param description Description to be stored in Deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mslevis"},"content":"     * @param by Deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mslevis"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"mslevis"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mslevis"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mslevis"},"content":"     * Overloaded constructor for Deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mslevis"},"content":"     * @param description Description to be stored.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mslevis"},"content":"     * @param isDone Boolean that represents Deadline completion status.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mslevis"},"content":"     * @param by Deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"mslevis"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"mslevis"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mslevis"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mslevis"},"content":"     * Returns a string representation of Deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mslevis"},"content":"     * @return A string representation of Deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"mslevis"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"mslevis"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"mslevis"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mslevis"},"content":"        String dateString \u003d by.format(format);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"mslevis"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateString + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"mslevis"},"content":"     * Returns a string formatted for saving purposes.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"mslevis"},"content":"     * @return A string representation of Deadline for saving.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"mslevis"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"mslevis"},"content":"    public String printFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"mslevis"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mslevis"},"content":"        String dateString \u003d by.format(format);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"mslevis"},"content":"        String[] info \u003d {\"D\", isDone ? \"1\" : \"0\", description, dateString};","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"mslevis"},"content":"        return String.join(\" | \", info);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mslevis"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mslevis":58}},{"path":"src/main/java/duke/commands/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":" * Encapsulates an Event object that implements a Task and has an event time.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mslevis"},"content":" * @author Owen Tan","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mslevis"},"content":" * @version Duke Level-9","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mslevis"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mslevis"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"mslevis"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mslevis"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"mslevis"},"content":"     * @param description Description to be stored in an Event.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mslevis"},"content":"     * @param at Event Time.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mslevis"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"mslevis"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mslevis"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mslevis"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mslevis"},"content":"     * @param description Description to be stored in an Event.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mslevis"},"content":"     * @param isDone Boolean that represents Task completion status.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mslevis"},"content":"     * @param at Event Time.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"mslevis"},"content":"    public Event(String description, boolean isDone, LocalDateTime at) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"mslevis"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mslevis"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mslevis"},"content":"     * Returns a string representation of Event.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mslevis"},"content":"     * @return A string representation of Event.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"mslevis"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"mslevis"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"mslevis"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mslevis"},"content":"        String dateString \u003d at.format(format);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"mslevis"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + dateString + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"mslevis"},"content":"     * Returns a string formatted for saving purposes.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"mslevis"},"content":"     * @return A string representation of Event for saving.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"mslevis"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"mslevis"},"content":"    public String printFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"mslevis"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mslevis"},"content":"        String dateString \u003d at.format(format);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"mslevis"},"content":"        String[] info \u003d {\"E\", isDone ? \"1\" : \"0\", description, dateString};","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"mslevis"},"content":"        return String.join(\" | \", info);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mslevis"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mslevis":58}},{"path":"src/main/java/duke/commands/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":" * Encapsulates a Task that has a description and a completion state isDone.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":" * To be implemented by Deadline, Event and Todo.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":" *","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":" * @author Owen Tan","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":" * @version Duke Level-9","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"mslevis"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"mslevis"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"mslevis"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mslevis"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"mslevis"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mslevis"},"content":"     * @param description Description to be stored in a Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mslevis"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"mslevis"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"mslevis"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"mslevis"},"content":"     * Overloaded Constructor for Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mslevis"},"content":"     * @param description Description to be stored in a Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mslevis"},"content":"     * @param isDone Completion state.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mslevis"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"mslevis"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"mslevis"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"mslevis"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"mslevis"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mslevis"},"content":"     * Completes a Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"mslevis"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"mslevis"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"mslevis"},"content":"     * Returns a string representation of Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"mslevis"},"content":"     * @return A string representation of Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"mslevis"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"mslevis"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"mslevis"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"mslevis"},"content":"     * Checks if the description contains a keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"mslevis"},"content":"     * @param keyword Keyword to be searched in the description.","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"mslevis"},"content":"     * @return A boolean representing if the description .","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"mslevis"},"content":"    public boolean findKeyword(String keyword) {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"mslevis"},"content":"        return description.contains(keyword);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"mslevis"},"content":"     * Returns a string formatted for saving purposes.","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"mslevis"},"content":"     * @return A string representation of Task for saving.","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"mslevis"},"content":"    public abstract String printFormat();","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"mslevis"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mslevis":68}},{"path":"src/main/java/duke/commands/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"package duke.commands;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":" * Encapsulates a Todo object that implements a Task.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":" * @author Owen Tan","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":" * @version Duke Level-9","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mslevis"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mslevis"},"content":"     * Public constructor for Todo.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mslevis"},"content":"     * @param description Description to be stored.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mslevis"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"mslevis"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mslevis"},"content":"     * Overloaded public constructor for Todo.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mslevis"},"content":"     * @param description Description to be stored.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"mslevis"},"content":"     * @param isDone Boolean that represents Todo completion status.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mslevis"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"mslevis"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mslevis"},"content":"     * Returns a string representation of Todo.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mslevis"},"content":"     * @return A string representation of Todo.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"mslevis"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"mslevis"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"mslevis"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mslevis"},"content":"     * Returns a string formatted for saving purposes.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mslevis"},"content":"     * @return A string representation of Todo for saving.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"mslevis"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"mslevis"},"content":"    public String printFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"mslevis"},"content":"        String[] info \u003d {\"T\", isDone ? \"1\" : \"0\", description};","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"mslevis"},"content":"        return String.join(\" | \", info);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mslevis"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mslevis":45}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"package duke.data;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"import duke.commands.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mslevis"},"content":" * Encapsulates a TodoList that contains Tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mslevis"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mslevis"},"content":" * @author Owen Tan","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mslevis"},"content":" * @version Duke Level-9","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mslevis"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mslevis"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"mslevis"},"content":"    /** A list of tasks */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mslevis"},"content":"    private ArrayList\u003cTask\u003e lst;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mslevis"},"content":"     * Public constructor for TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"mslevis"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"mslevis"},"content":"        lst \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mslevis"},"content":"     * Prints all items in a TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mslevis"},"content":"    public void iterList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"mslevis"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"mslevis"},"content":"        if (lst.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"mslevis"},"content":"            System.out.println(\"---- No Tasks currently ----\");","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"mslevis"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"mslevis"},"content":"        for (Task s : lst) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"mslevis"},"content":"            System.out.println(i + \".\" + s);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"mslevis"},"content":"            i++;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"mslevis"},"content":"     * Adds a Task to TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"mslevis"},"content":"     * @param text","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"mslevis"},"content":"    public void add(Task text) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"mslevis"},"content":"        lst.add(text);","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"mslevis"},"content":"     * Completes a Task in a Tasklist with a given index.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"mslevis"},"content":"     * @param index Index of Task in the List (0-indexed)","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"mslevis"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"mslevis"},"content":"    public void complete(int index) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"mslevis"},"content":"        if (index \u003c 0 || index \u003e lst.size() - 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"mslevis"},"content":"            throw new DukeException(\"Hey! Invalid Task number given.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"mslevis"},"content":"        Task task \u003d lst.get(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"mslevis"},"content":"        task.completeTask();","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"mslevis"},"content":"     * Deletes a Task in a Tasklist with a given index.","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"mslevis"},"content":"     * @param index Index of Task in the List (0-indexed)","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"mslevis"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"mslevis"},"content":"    public void delete(int index) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"mslevis"},"content":"        if (index \u003c 0 || index \u003e lst.size() - 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"mslevis"},"content":"            throw new DukeException(\"Hey! Invalid Task number given.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"mslevis"},"content":"        lst.remove(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"mslevis"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"mslevis"},"content":"        return lst;","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"mslevis"},"content":"     * Returns a length of TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"mslevis"},"content":"     * @return An integer that represents the number of Tasks in a TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"mslevis"},"content":"    public int count() {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"mslevis"},"content":"        return lst.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"mslevis"},"content":"    public Task get(int index) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"mslevis"},"content":"        if (index \u003c 0 || index \u003e lst.size() - 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"mslevis"},"content":"            throw new DukeException(\"Hey! Invalid Task number given.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"mslevis"},"content":"        Task task \u003d lst.get(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"mslevis"},"content":"        return task;","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"mslevis"},"content":"     * Prints all relevant tasks that contain a certain keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"mslevis"},"content":"     * @param keyword Keyword to be contained in the Task\u0027s description.","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"mslevis"},"content":"    public void searchKeyword(String keyword) {","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"mslevis"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"mslevis"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"mslevis"},"content":"        for (Task task : lst) {","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"mslevis"},"content":"            if (task.findKeyword(keyword)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"mslevis"},"content":"                System.out.println(i + \".\" + task);","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"mslevis"},"content":"                i++;","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"mslevis"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"mslevis"},"content":"        if (i \u003d\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"mslevis"},"content":"            System.out.println(\"---- No related tasks found ----\");","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"mslevis"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"mslevis":111}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":" * Encapsulates error handling for Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":" * @author Owen Tan","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":" * @version Duke Level-9","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mslevis"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mslevis"},"content":"     * Public constructor for DukeException.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mslevis"},"content":"     * @param message Error message.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mslevis"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"mslevis"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"mslevis"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mslevis":17}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"package duke.parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"import duke.commands.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":"import duke.commands.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":"import duke.commands.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":"import duke.commands.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"mslevis"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"mslevis"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"mslevis"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"mslevis"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"mslevis"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"mslevis"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"mslevis"},"content":" * Encapsulates a Parser object that reads in and executes commands based on user\u0027s input.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mslevis"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mslevis"},"content":" * @author Owen Tan","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mslevis"},"content":" * @version Duke Level-9","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"mslevis"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"mslevis"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"mslevis"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"mslevis"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mslevis"},"content":"     * Commands from user\u0027s input","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mslevis"},"content":"    public enum Keyword {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"mslevis"},"content":"        TODO, LIST, DEADLINE, EVENT, DONE, DELETE, FIND","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"mslevis"},"content":"     * Public constructor for Parser.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mslevis"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mslevis"},"content":"     * @param ui Ui for Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mslevis"},"content":"    public Parser(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"mslevis"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"mslevis"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"mslevis"},"content":"     * Reads in and executes user\u0027s input based on string given.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"mslevis"},"content":"     * @param cmd String from user\u0027s input.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"mslevis"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"mslevis"},"content":"    public void parse(String cmd) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"mslevis"},"content":"        String[] tokens \u003d cmd.split(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"mslevis"},"content":"        Keyword command \u003d validateCommand(tokens);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"mslevis"},"content":"        int middle;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"mslevis"},"content":"        int index;","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"mslevis"},"content":"        String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"mslevis"},"content":"        String dateString;","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"mslevis"},"content":"        LocalDateTime at;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"mslevis"},"content":"        LocalDateTime by;","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"mslevis"},"content":"        Task task;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"mslevis"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"mslevis"},"content":"        switch (command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"mslevis"},"content":"        case LIST:","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"mslevis"},"content":"            this.tasks.iterList();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"mslevis"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"mslevis"},"content":"        case TODO:","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"mslevis"},"content":"            task \u003d new Todo(cmd.substring(5));","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"mslevis"},"content":"            this.tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"mslevis"},"content":"            ui.addTaskMsg(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"mslevis"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"mslevis"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"mslevis"},"content":"            middle \u003d Arrays.asList(tokens).indexOf(\"/by\");","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"mslevis"},"content":"            if (middle \u003d\u003d -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"mslevis"},"content":"                throw new DukeException(\"Missing deadline.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"mslevis"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"mslevis"},"content":"            description \u003d String.join(\" \", Arrays.copyOfRange(tokens, 1, middle));","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"mslevis"},"content":"            dateString \u003d String.join(\" \", Arrays.copyOfRange(tokens, middle + 1, tokens.length));","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"mslevis"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"mslevis"},"content":"                by \u003d LocalDateTime.parse(dateString, format);","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"mslevis"},"content":"                task \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"mslevis"},"content":"                this.tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"mslevis"},"content":"                ui.addTaskMsg(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"mslevis"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"mslevis"},"content":"                System.out.println(\"Please enter a date in the following format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"mslevis"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"mslevis"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"mslevis"},"content":"        case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"mslevis"},"content":"            middle \u003d Arrays.asList(tokens).indexOf(\"/at\");","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"mslevis"},"content":"            if (middle \u003d\u003d -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"mslevis"},"content":"                throw new DukeException(\"Missing time of event.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"mslevis"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"mslevis"},"content":"            description \u003d String.join(\" \", Arrays.copyOfRange(tokens, 1, middle));","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"mslevis"},"content":"            dateString \u003d String.join(\" \", Arrays.copyOfRange(tokens, middle + 1, tokens.length));","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"mslevis"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"mslevis"},"content":"                at \u003d LocalDateTime.parse(dateString, format);","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"mslevis"},"content":"                task \u003d new Event(description, at);","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"mslevis"},"content":"                this.tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"mslevis"},"content":"                ui.addTaskMsg(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"mslevis"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"mslevis"},"content":"                System.out.println(\"Please enter a date in the following format: dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"mslevis"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"mslevis"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"mslevis"},"content":"        case DONE:","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"mslevis"},"content":"            index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"mslevis"},"content":"            task \u003d this.tasks.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"mslevis"},"content":"            this.tasks.complete(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"mslevis"},"content":"            ui.completeTaskMsg(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"mslevis"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"mslevis"},"content":"        case DELETE:","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"mslevis"},"content":"            index \u003d Integer.parseInt(tokens[1]) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"mslevis"},"content":"            task \u003d this.tasks.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"mslevis"},"content":"            this.tasks.delete(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"mslevis"},"content":"            ui.deleteTaskMsg(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"mslevis"},"content":"            ui.listCountMsg();","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"mslevis"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"mslevis"},"content":"        case FIND:","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"mslevis"},"content":"            String keyword \u003d cmd.substring(5);","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"mslevis"},"content":"            tasks.searchKeyword(keyword);","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"mslevis"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"mslevis"},"content":"    private static Keyword validateCommand(String[] cmd) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"mslevis"},"content":"        Keyword keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"mslevis"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"mslevis"},"content":"            keyword \u003d Keyword.valueOf(cmd[0].toUpperCase());","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"mslevis"},"content":"            if ((keyword.equals(Keyword.TODO) || keyword.equals(Keyword.DEADLINE) || keyword.equals(Keyword.EVENT))","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"mslevis"},"content":"                    \u0026\u0026 cmd.length \u003c 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"mslevis"},"content":"                throw new DukeException(String.format(\"☹ OOPS!!! The description of a %s cannot be empty.\", keyword));","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"mslevis"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"mslevis"},"content":"            if ((keyword.equals(Keyword.DONE) || keyword.equals(Keyword.DELETE) || keyword.equals(Keyword.FIND))","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"mslevis"},"content":"                    \u0026\u0026 (cmd.length \u003c 2)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"mslevis"},"content":"                throw new DukeException(\"☹ OOPS!!! Missing arguments.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"mslevis"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"mslevis"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"mslevis"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"mslevis"},"content":"        return keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"mslevis"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"mslevis":139}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"package duke.storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"import duke.commands.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":"import duke.commands.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":"import duke.commands.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":"import duke.commands.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"mslevis"},"content":"import java.io.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"mslevis"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"mslevis"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mslevis"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mslevis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mslevis"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mslevis"},"content":" * Encapsulates a Storage object that handles loading and saving of Tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"mslevis"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mslevis"},"content":" * @author Owen Tan","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mslevis"},"content":" * @version Duke Level-9","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mslevis"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"mslevis"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"mslevis"},"content":"    private String path;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"mslevis"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mslevis"},"content":"     * Public constructor of Storage.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mslevis"},"content":"     * @param path Path of text file stored.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mslevis"},"content":"     * @param tasks Associated TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"mslevis"},"content":"    public Storage(String path, TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"mslevis"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"mslevis"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mslevis"},"content":"     * Loads the file into Storage and parses Tasks into TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mslevis"},"content":"    public void load() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"mslevis"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"mslevis"},"content":"            File fileDir \u003d new File(path).getParentFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"mslevis"},"content":"            File file \u003d new File(path);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mslevis"},"content":"            if (!fileDir.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"mslevis"},"content":"                fileDir.mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mslevis"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"mslevis"},"content":"            if (!file.createNewFile()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"mslevis"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"mslevis"},"content":"                String line;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"mslevis"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"mslevis"},"content":"                    tasks.add(parseTask(line));","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"mslevis"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mslevis"},"content":"                reader.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"mslevis"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"mslevis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"mslevis"},"content":"            System.out.println(\"Something went wrong with loading\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"mslevis"},"content":"     * Saves Tasks from TaskList into text file.","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"mslevis"},"content":"    public void save() {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"mslevis"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"mslevis"},"content":"            FileWriter writer \u003d new FileWriter(path);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"mslevis"},"content":"            ArrayList\u003cTask\u003e lst \u003d tasks.getList();","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"mslevis"},"content":"            for (Task task: lst) {","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"mslevis"},"content":"                writer.write(task.printFormat());","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"mslevis"},"content":"                writer.write(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"mslevis"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"mslevis"},"content":"            writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"mslevis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"mslevis"},"content":"            System.out.println(\"Something went wrong with saving\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"mslevis"},"content":"    private Task parseTask(String task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"mslevis"},"content":"        String[] tokens \u003d task.split(\" \\\\| \");","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"mslevis"},"content":"        Task t \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"mslevis"},"content":"        // T | 0 | description | addInfo","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"mslevis"},"content":"        boolean isDone \u003d tokens[1].equals(\"1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"mslevis"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"mslevis"},"content":"        LocalDateTime timestamp \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"mslevis"},"content":"        switch (tokens[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"mslevis"},"content":"            case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"mslevis"},"content":"                t \u003d new Todo(tokens[2], isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"mslevis"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"mslevis"},"content":"            case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"mslevis"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"mslevis"},"content":"                    timestamp \u003d LocalDateTime.parse(tokens[3], format);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"mslevis"},"content":"                    t \u003d new Deadline(tokens[2], isDone, timestamp);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"mslevis"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"mslevis"},"content":"                    System.out.println(\"Error parsing task from saved file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"mslevis"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"mslevis"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"mslevis"},"content":"            case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"mslevis"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"mslevis"},"content":"                    timestamp \u003d LocalDateTime.parse(tokens[3], format);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"mslevis"},"content":"                    t \u003d new Event(tokens[2], isDone, timestamp);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"mslevis"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"mslevis"},"content":"                    System.out.println(\"Error parsing task from saved file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"mslevis"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"mslevis"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"mslevis"},"content":"        return t;","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"mslevis"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"mslevis":108}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"package duke.ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"import duke.commands.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":" * Encapsulates the Ui component of Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mslevis"},"content":" * @author Owen Tan","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mslevis"},"content":" * @version Duke Level-9","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mslevis"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mslevis"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"mslevis"},"content":"    TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"mslevis"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mslevis"},"content":"     * Public constructor for Ui.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"mslevis"},"content":"     * @param tasks Associated TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mslevis"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mslevis"},"content":"    public Ui(TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"mslevis"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"mslevis"},"content":"    public void greeting() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"mslevis"},"content":"        System.out.println(\"Aloha! I\u0027m Sophia.\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"mslevis"},"content":"    public void farewellMsg() {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"mslevis"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"mslevis"},"content":"    public void addTaskMsg(Task text) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"mslevis"},"content":"        System.out.println(\"Sure thing! I\u0027ve added this task:\\n  \" + text);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"mslevis"},"content":"    public void completeTaskMsg(Task text) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"mslevis"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + text);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"mslevis"},"content":"    public void deleteTaskMsg(Task text) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"mslevis"},"content":"        System.out.println(\"Noted! I\u0027ve removed this task:\\n  \" + text);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"mslevis"},"content":"    public void listCountMsg() {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"mslevis"},"content":"        int len \u003d tasks.count();","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"mslevis"},"content":"        if (len \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"mslevis"},"content":"            System.out.println(String.format(\"Now you have %d task in the list.\", len));","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"mslevis"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"mslevis"},"content":"            System.out.println(String.format(\"Now you have %d tasks in the list.\", len));","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"mslevis"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"mslevis":49}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"package duke.parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"mslevis"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"mslevis"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"mslevis"},"content":"    public void deadlineTest() {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"mslevis"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"mslevis"},"content":"        Ui ui \u003d new Ui(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"mslevis"},"content":"        Parser parser \u003d new Parser(taskList, ui);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"mslevis"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"mslevis"},"content":"            String cmd \u003d \"deadline return book /by 06/12/2019 1800\";","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"mslevis"},"content":"            parser.parse(cmd);","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"mslevis"},"content":"            assertEquals(\"[D][ ] return book (by: Dec 06 2019 18:00)\", taskList.get(0).toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"mslevis"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"mslevis"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"mslevis"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"mslevis"},"content":"    public void deleteTest() {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"mslevis"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"mslevis"},"content":"        Ui ui \u003d new Ui(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"mslevis"},"content":"        Parser parser \u003d new Parser(taskList, ui);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"mslevis"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"mslevis"},"content":"            String cmd \u003d \"deadline return book /by 06/12/2019 1800\";","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"mslevis"},"content":"            parser.parse(cmd);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"mslevis"},"content":"            cmd \u003d \"delete 1\";","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"mslevis"},"content":"            parser.parse(cmd);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"mslevis"},"content":"            assertEquals(0, taskList.count());","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"mslevis"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"mslevis"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"mslevis"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"mslevis"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"mslevis":40}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"import duke.commands.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":"import duke.commands.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"mslevis"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"mslevis"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"mslevis"},"content":"    public void statusIconTest() {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"mslevis"},"content":"        Task todo \u003d new Todo(\"do homework\", true);","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"mslevis"},"content":"        assertEquals(\"[X]\", todo.getStatusIcon());","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"mslevis"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"mslevis"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"mslevis"},"content":"        Task todo \u003d new Todo(\"do homework\", true);","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"mslevis"},"content":"        assertEquals(\"[T][X] do homework\", todo.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"mslevis"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"mslevis"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"mslevis"},"content":"    public void saveFormatTest() {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"mslevis"},"content":"       Task todo \u003d new Todo(\"do homework\", true);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"mslevis"},"content":"       assertEquals(\"T | 1 | do homework\", todo.printFormat());","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"mslevis"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"mslevis"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"mslevis":27}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"D | 0 | return book | 06/12/2019 1800","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"E | 0 | project meeting | 10/03/2021 1700","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"T | 0 | borrow book","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":"T | 0 | read book","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":"D | 0 | return book | 06/12/2019 1800","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":"E | 0 | project meeting | 10/03/2021 1700","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"mslevis":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mslevis"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"mslevis"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"mslevis"},"content":"todo read book","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mslevis"},"content":"deadline return book /by 06/12/2019 1800","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mslevis"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"mslevis"},"content":"event project meeting /at 10/03/2021 1700","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mslevis"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"mslevis"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mslevis":8}}]
