[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"    private String time;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"    public Deadline(String taskName, String time) {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"        return \"[D]\" + \"[\" + checkIfTaskCompleted(this) + \"] \" + this.getTaskName() + this.getTimeString();","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"    public String getTimeString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"        return \"(by: \" + this.time + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"justintanyf":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"    private static ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"        start();","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"    public static void start() {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"        System.out.println(\"\\nInput:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"justintanyf"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"            parseInput(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"justintanyf"},"content":"        catch(DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"justintanyf"},"content":"            reply(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"        finally {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"            start();","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"justintanyf"},"content":"    public static void reply(String dukeReply) {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"justintanyf"},"content":"        String lines \u003d \"--------------------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"justintanyf"},"content":"        String newString \u003d lines + \"\\nOutput: \\n\" + dukeReply + \"\\n\" + lines + \"\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"justintanyf"},"content":"        System.out.println(newString);","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"justintanyf"},"content":"        start();","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"justintanyf"},"content":"    public static void parseInput(String userInput) throws DukeException{","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"justintanyf"},"content":"        if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"justintanyf"},"content":"            String lines \u003d \"--------------------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"justintanyf"},"content":"            String newString \u003d lines + \"\\nOutput: \\n\" + \"Good bye, see you soon!\" + \"\\n\" + lines + \"\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"justintanyf"},"content":"            System.out.println(newString);","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"justintanyf"},"content":"            System.exit(0); //Should have no error message, hence 0","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"justintanyf"},"content":"        } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"justintanyf"},"content":"            if (toDoList.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"justintanyf"},"content":"                reply(\"There are no tasks to complete!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"justintanyf"},"content":"            } else{","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"justintanyf"},"content":"                String toDoListToPrint \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"justintanyf"},"content":"                for (int pos \u003d 0; pos \u003c toDoList.size(); pos++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"justintanyf"},"content":"                    if (pos \u003d\u003d toDoList.size() - 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"justintanyf"},"content":"                        toDoListToPrint \u003d addToStringToPrint(pos, toDoListToPrint);","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"justintanyf"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"justintanyf"},"content":"                        toDoListToPrint \u003d addToStringToPrint(pos, toDoListToPrint) + \"\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"justintanyf"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"justintanyf"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"justintanyf"},"content":"                reply(toDoListToPrint);","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"justintanyf"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"justintanyf"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"justintanyf"},"content":"            String[] parsedUserInput \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"justintanyf"},"content":"            if (parsedUserInput[0].equals(\"done\")) { // Mark task as completed","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"justintanyf"},"content":"                if (parsedUserInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"justintanyf"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please enter \\\"delete\\\" followed the number corresponding to \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"justintanyf"},"content":"                            \"the task you want to mark as completed\");","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"justintanyf"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"justintanyf"},"content":"                    int taskDone \u003d Integer.parseInt(parsedUserInput[1]) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"justintanyf"},"content":"                    toDoList.get(taskDone).markAsCompleted();","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"justintanyf"},"content":"                    reply(\"Nice! I\u0027ve marked this task as done: \\n\" + addToStringToPrint(taskDone, \"\"));","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"justintanyf"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"justintanyf"},"content":"            } else if (parsedUserInput[0].equals(\"delete\")) { // todo","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"justintanyf"},"content":"                if (parsedUserInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"justintanyf"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please enter \\\"delete\\\" followed the number corresponding to \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"justintanyf"},"content":"                            \"the task you want deleted\");","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"justintanyf"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"justintanyf"},"content":"                    int taskToDelete \u003d Integer.parseInt(parsedUserInput[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"justintanyf"},"content":"                    Task deletedTask \u003d toDoList.get(taskToDelete);","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"justintanyf"},"content":"                    toDoList.remove(taskToDelete);","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"justintanyf"},"content":"                    reply(\"Noted. I\u0027ve removed this task: \\n\" + deletedTask.toString() +","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"justintanyf"},"content":"                                   \"\\nNow you have \" + toDoList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"justintanyf"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"justintanyf"},"content":"            } else if (parsedUserInput[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"justintanyf"},"content":"                if (parsedUserInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"justintanyf"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"justintanyf"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"justintanyf"},"content":"                Task newTask \u003d new ToDo(parsedUserInput[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"justintanyf"},"content":"                addTaskToList(newTask, parsedUserInput[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"justintanyf"},"content":"            } else if (parsedUserInput[0].equals(\"deadline\")) { // Add deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"justintanyf"},"content":"                if (parsedUserInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"justintanyf"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"justintanyf"},"content":"                } else if (!parsedUserInput[1].contains(\"/by\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"justintanyf"},"content":"                    throw new DukeException(\"Please include the keyword \\\"/by\\\" if you want to add a deadline.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"justintanyf"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"justintanyf"},"content":"                    String[] parsedDeadlineInput \u003d parsedUserInput[1].split(\"/by\", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"justintanyf"},"content":"                    Task newTask \u003d new Deadline(parsedDeadlineInput[0], parsedDeadlineInput[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"justintanyf"},"content":"                    addTaskToList(newTask, parsedUserInput[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"justintanyf"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"justintanyf"},"content":"            } else if (parsedUserInput[0].equals(\"event\")) { // Add event","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"justintanyf"},"content":"                if (parsedUserInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"justintanyf"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"justintanyf"},"content":"                } else if (!parsedUserInput[1].contains(\"/at\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"justintanyf"},"content":"                    throw new DukeException(\"Please include the keyword \\\"/at\\\" if you want to add an event.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"justintanyf"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"justintanyf"},"content":"                    String[] parsedDeadlineInput \u003d parsedUserInput[1].split(\"/at\", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"justintanyf"},"content":"                    Task newTask \u003d new Event(parsedDeadlineInput[0], parsedDeadlineInput[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"justintanyf"},"content":"                    addTaskToList(newTask, parsedUserInput[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"justintanyf"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"justintanyf"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"justintanyf"},"content":"                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"justintanyf"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"justintanyf"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"justintanyf"},"content":"    public static void addTaskToList(Task newTask, String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"justintanyf"},"content":"        toDoList.add(newTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"justintanyf"},"content":"        reply(\"Got it. I\u0027ve added this task: \\n\" + newTask.toString() +","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"justintanyf"},"content":"                \"     \\nNow you have \" + toDoList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"justintanyf"},"content":"    public static String addToStringToPrint(int pos, String toDoListToPrint) {","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"justintanyf"},"content":"        Task currentTask \u003d toDoList.get(pos);","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"justintanyf"},"content":"        return toDoListToPrint + (pos + 1) + \".\" + currentTask.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"justintanyf":115,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"class DukeException extends IllegalArgumentException {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"    DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"        return getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"justintanyf":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"    private String time;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"    public Event(String taskName, String time) {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"        return \"[E]\" + \"[\" + checkIfTaskCompleted(this) + \"] \" + this.getTaskName() + this.getTimeString();","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"    public String getTimeString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"        return \"(at: \" + this.time + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"justintanyf":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"    private boolean completed;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"    private String taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"        this.completed \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"justintanyf"},"content":"    public void markAsCompleted() {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"justintanyf"},"content":"        this.completed \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"justintanyf"},"content":"    public boolean checkIfCompleted() {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"        return this.completed;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"justintanyf"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"justintanyf"},"content":"        return this.taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"justintanyf"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"justintanyf"},"content":"        return \"[\" + checkIfTaskCompleted(this) + \"] \" + this.getTaskName();","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"justintanyf"},"content":"    public static String checkIfTaskCompleted(Task currentTask) {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"justintanyf"},"content":"        return currentTask.checkIfCompleted()","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"justintanyf"},"content":"                ? \"✅\"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"justintanyf"},"content":"                : \"X\";","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"justintanyf":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"    public ToDo(String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"        return \"[T]\" + \"[\" + checkIfTaskCompleted(this) + \"] \" + this.getTaskName();","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"justintanyf":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"justintanyf"},"content":"test","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"justintanyf"},"content":"todo big test","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"justintanyf"},"content":"event triton /by thursday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"justintanyf"},"content":"deadline tomorrow /by tomorrow","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"justintanyf"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"justintanyf"},"content":"deadline lmao","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"justintanyf"},"content":"event lol","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"justintanyf"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"justintanyf"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"justintanyf"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"justintanyf":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"justintanyf"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"justintanyf":1,"-":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"justintanyf"},"content":"if ! javac -cp \"C:\\Users\\tanyf\\Github Code\\cs2103\\ip\\src\\main\\java\" -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"justintanyf"},"content":"java -classpath \"C:\\Users\\tanyf\\Github Code\\cs2103\\ip\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"justintanyf":2,"-":36}}]
