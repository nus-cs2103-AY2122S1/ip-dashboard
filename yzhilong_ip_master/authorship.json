[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"    ignoreFailures \u003d true","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yzhilong":15,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"T | 1 | read book","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"D | 0 | return book | 6/6/2021 1800","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"E | 0 | project meeting | 6/8/2021 1400","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"T | 1 | join sports club","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"D | 1 | complete iP Week 3 | 27/8/2021 0800","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"D | 0 | do CS3243 tutorial | 25/8/2021 0800","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"T | 0 | some stuff","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"yzhilong":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import duke.gui.Gui;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import duke.utils.CliUi;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import duke.utils.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    private static final String DATA_FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    private CliUi cliUi;","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"     * Duke constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"     * @param filePath File path of where the saved task list is.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"        this.cliUi \u003d new CliUi();","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"            this.cliUi.showLoadingError();","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"     * Duke constructor. Loads stored tasks from default filepath.","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"    public Duke() {","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        this.cliUi \u003d new CliUi();","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"        this.storage \u003d new Storage(DATA_FILE_PATH);","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"            this.taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"            this.cliUi.showLoadingError();","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"            this.taskList \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"     * Method to initialize commandline version of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"        cliUi.showWelcome();","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"        Command command;","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"        do {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"                String input \u003d cliUi.readCommand();","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"                command \u003d Parser.parseNext(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"                command.execute(taskList, cliUi, storage);","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"                isExit \u003d command.hasExited();","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"                cliUi.printOut(e.getMessage());","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"        while (!isExit);","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"        Command command;","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"        String response;","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"            command \u003d Parser.parseNext(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"            response \u003d command.execute(taskList, cliUi, storage);","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"            isExit \u003d command.hasExited();","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"        return response;","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"        Gui gui \u003d new Gui();","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"        gui.setup(stage);","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"        EventHandler\u003c? super MouseEvent\u003e mouseEventHandler;","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"        EventHandler\u003cActionEvent\u003e buttonEventHandler;","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"        mouseEventHandler \u003d e -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"            String input \u003d gui.getUserInput();","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"            gui.generateDialogBoxes(getResponse(input));","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"            if (isExit) {","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"                gui.exit();","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"yzhilong"},"content":"        };","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"yzhilong"},"content":"        buttonEventHandler \u003d e -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"yzhilong"},"content":"            String input \u003d gui.getUserInput();","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"yzhilong"},"content":"            gui.generateDialogBoxes(getResponse(input));","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"yzhilong"},"content":"            if (isExit) {","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"yzhilong"},"content":"                gui.exit();","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"        };","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"yzhilong"},"content":"        gui.setUserInputHandler(mouseEventHandler, buttonEventHandler);","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"     * Main method for Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"yzhilong"},"content":"     * @param args Placeholder argument.","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"yzhilong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"yzhilong"},"content":"        Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"yzhilong"},"content":"        duke.run();","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yzhilong":121,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yzhilong":12}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.InvalidTimeStampException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"public class AddDeadlineCommand extends AddTaskCommand {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"     * AddDeadlineCommand constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"     * @param keywords Array containing the deadline details and when it should be done by.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"     * @throws InvalidTimeStampException Exception thrown when an invalid deadline is given.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    public AddDeadlineCommand(String[] keywords) throws InvalidTimeStampException {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"        super(new Deadline(keywords[0], keywords[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":17}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.InvalidTimeStampException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"public class AddEventCommand extends AddTaskCommand {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"     * AddEventCommand constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"     * @param keywords Array containing the event details and when it occurs.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"     * @throws InvalidTimeStampException Exception thrown when an invalid event time is given.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    public AddEventCommand(String[] keywords) throws InvalidTimeStampException {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"        super(new Event(keywords[0], keywords[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":17}},{"path":"src/main/java/duke/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import duke.utils.CliUi;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"/** Abstract class to represent command when we add something to the taskList */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"public abstract class AddTaskCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    private Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"     * AddTaskCommand constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"     * @param task Task that this command will add to the taskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        assert (task !\u003d null) : \"task should not be null\";","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     * Adds the task to the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"     * @param taskList The list of tasks in Duke. Handles all task related functions.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"     * @param cliUi Ui object to deal with user input/outputs.","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"     * @param storage Storage object to deal with saving taskList to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"     * @return String[] with the messages to be printed out to the Ui.","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"    public String execute(TaskList taskList, CliUi cliUi, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        assert taskList.getSize() \u003e 0 : \"taskList should not be empty after adding a task\";","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        String[] messages \u003d new String[] {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"            \"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"            \"    \" + task.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"            String.format(\"Now you have %d tasks in the list.\", taskList.getSize())","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        };","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"        cliUi.printOut(messages);","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        return String.join(\"\\n\", messages);","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"     * Returns a String representation of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"TO ADD: %s\", task);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":55}},{"path":"src/main/java/duke/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"public class AddTodoCommand extends AddTaskCommand {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"     * AddTodoCommand constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"     * @param keywords Array containing the Todo details.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    public AddTodoCommand(String[] keywords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"        super(new Todo(keywords[0]));","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":15}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import duke.utils.CliUi;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"/** Represents command to end Duke */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"     * Adds the task to the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"     * @param taskList The list of tasks in Duke. Handles all task related functions.","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"     * @param cliUi Ui object to deal with user input/outputs.","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"     * @param storage Storage object to deal with saving taskList to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"     * @return String[] with the messages to be printed out to the Ui.","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    public String execute(TaskList taskList, CliUi cliUi, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"        cliUi.printOut(BYE_MESSAGE);","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"        return BYE_MESSAGE;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"     * Checks if this command exits Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"     * @return True.","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    public boolean hasExited() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"     * Returns a String representation of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"TO PRINT: %s\", BYE_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":45}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import duke.utils.CliUi;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"     * @param taskList The list of tasks in Duke. Handles all task related functions.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"     * @param cliUi Ui object to deal with user input/outputs.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"     * @param storage Storage object to deal with saving taskList to disk.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of command output.","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"     * @throws DukeException Any exception relating specifically with Duke or its components.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    public abstract String execute(TaskList taskList, CliUi cliUi, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"     * Returns boolean representing whether the specified command exits Duke. Will always return","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     * False unless overwritten.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"     * @return False.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    public boolean hasExited() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":30}},{"path":"src/main/java/duke/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import duke.utils.CliUi;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"/** Represents command to delete an item from the taskList */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"     * DeleteTaskCommand constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"     * @param taskNumber The index of the task to delete, counting from 1.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"    public DeleteTaskCommand(String taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        this.taskNumber \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     * Deletes the specified task from the taskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"     * @param taskList The list of tasks in Duke. Handles all task related functions.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"     * @param cliUi Ui object to deal with user input/outputs.","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"     * @param storage Storage object to deal with saving taskList to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"     * @return String[] with the messages to be printed out to the Ui.","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"     * @throws InvalidTaskNumberException if the taskNumber is 0 or greater than the size of the taskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    public String execute(TaskList taskList, CliUi cliUi, Storage storage) throws InvalidTaskNumberException {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        String[] messages \u003d taskList.deleteTask(taskNumber);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        cliUi.printOut(messages);","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        return String.join(\"\\n\", messages);","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"     * Returns a String representation of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"TO DELETE: index %d\", taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":48}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import duke.utils.CliUi;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    private HashSet\u003cString\u003e keywords \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"     * FindCommand constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"     * @param keywords Keywords to search for within task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"    public FindCommand(String[] keywords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        String[] keyWordsSplit \u003d keywords[0].split(\" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"        for (String keyword : keyWordsSplit) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"            this.keywords.add(keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"        assert (keywords.length \u003e 0) : \"keywords should contain at least 1 keyword.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"     * Finds all tasks in the taskList that matches all of the specified keywords.","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"     * @param taskList The list of tasks in Duke. Handles all task related functions.","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"     * @param cliUi Ui object to deal with user input/outputs.","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"     * @param storage Storage object to deal with saving taskList to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"     * @return String[] with the messages to be printed out to the Ui.","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"    public String execute(TaskList taskList, CliUi cliUi, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        // TODO: Make tasks.find return a String","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"        return taskList.find(keywords, cliUi);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"     * Returns a String representation of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"        return \"TO FIND: All tasks containing all of these keywords, \" + keywords.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":49}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import duke.utils.CliUi;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"/** Represents command to list all values in the current taskList */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"     * Lists all the tasks in the taskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"     * @param taskList The list of tasks in Duke. Handles all task related functions.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"     * @param cliUi Ui object to deal with user input/outputs.","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"     * @param storage Storage object to deal with saving taskList to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"     * @return String[] with the messages to be printed out to the Ui.","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    public String execute(TaskList taskList, CliUi cliUi, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"        String[] messages \u003d taskList.showList(cliUi);","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"        return String.join(\"\\n\", messages);","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"     * Returns a String representation of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"        return \"TO PRINT: Enumerated tasklist\";","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":33}},{"path":"src/main/java/duke/commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import duke.utils.CliUi;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"/** Represents command to list all values in the current taskList */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"     * MarkDoneCommand constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"     * @param taskNumber The index of the task to mark as done, counting from 1.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"    public MarkDoneCommand(String taskNumber) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        this.taskNumber \u003d Integer.parseInt(taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"     * @param taskList The list of tasks in Duke. Handles all task related functions.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"     * @param cliUi Ui object to deal with user input/outputs.","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"     * @param storage Storage object to deal with saving taskList to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"     * @return String[] with the messages to be printed out to the Ui.","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"     * @throws InvalidTaskNumberException if the taskNumber is 0 or greater than the size of the taskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    public String execute(TaskList taskList, CliUi cliUi, Storage storage) throws InvalidTaskNumberException {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        String[] messages \u003d taskList.markDone(taskNumber);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        cliUi.printOut(messages);","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        return String.join(\"\\n\", messages);","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"TO MARK DONE: index %d\", taskNumber);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":43}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"     * DukeException constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"     * @param errorMessage Message to be shown to user when this exception occurs.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"        super(\"OOPS!!! \" + errorMessage);","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"     * Returns the String representation of the Exception.","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of the Exception.","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"OOPS!!! %s\", super.getMessage());","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"yzhilong":23}},{"path":"src/main/java/duke/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"     * EmptyDescriptionException constructor.","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"    public EmptyDescriptionException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"        super(\"The description of a task cannot be empty!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"yzhilong":11}},{"path":"src/main/java/duke/exceptions/EmptyTimestampException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"public class EmptyTimestampException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"     * EmptyTimestampException constructor.","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"    public EmptyTimestampException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"        super(\"The timestamp of a Deadline/Event task cannot be empty!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"yzhilong":11}},{"path":"src/main/java/duke/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"     * InvalidTaskNumberException constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"     * @param n Current size of tasklist.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    public InvalidTaskNumberException(int n) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"        super(n \u003e 0","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"                ? String.format(\"Sorry, this task index is invalid! Please input an integer between 1-%d\", n)","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"                : \"Sorry, this task index is invalid! Please add tasks before using this command\");","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"yzhilong":16}},{"path":"src/main/java/duke/exceptions/InvalidTimeStampException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"public class InvalidTimeStampException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"     * InvalidTimeStampException constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"     * @param timeStamp Invalid timestamp given.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    public InvalidTimeStampException(String timeStamp) {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"        super(String.format(","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"                \"This timestamp \\\"%s\\\" is invalid, duke.Duke requires d/M/yyyy HHmm format\",","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"                timeStamp","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"        ));","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":16}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"     * UnknownCommandException constructor.","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"yzhilong":11}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"    private Label text;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"     * DialogBox constructor.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"     * @param label Label for created dialogBox.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"     * @param imageView ImageView for created dialogBox.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    public DialogBox(Label label, ImageView imageView) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"        text \u003d label;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"        displayPicture \u003d imageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"        text.setWrapText(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"     * Returns a user DialogBox.","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"     * @param label","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"     * @param imageView","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"     * @return DialogBox originating from user with specified label and image.","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"    public static DialogBox getUserDialog(Label label, ImageView imageView) {","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"        return new DialogBox(label, imageView);","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"     * Returns a Duke DialogBox.","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"     * @param label","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"     * @param imageView","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"     * @return DialogBox originating from Duke with specified label and image.","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"    public static DialogBox getDukeDialog(Label label, ImageView imageView) {","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"        var db \u003d new DialogBox(label, imageView);","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"yzhilong":67}},{"path":"src/main/java/duke/gui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.gui;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"public class Gui {","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    private static final String DUKE_IMAGE_FILE_PATH \u003d \"/images/DaDuke.png\";","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    private static final String USER_IMAGE_FILE_PATH \u003d \"/images/DaUser.png\";","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    private static final float ANCHOR_WIDTH \u003d 400;","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    private static final float ANCHOR_HEIGHT \u003d 600;","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    private static final float SCROLL_PANE_WIDTH \u003d 385;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    private static final float SCROLL_PANE_HEIGHT \u003d 535;","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"    private static final float USER_INPUT_WIDTH \u003d 325;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    private static final float BUTTON_WIDTH \u003d 55;","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"    private static final float EXIT_PAUSE \u003d 2;","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(DUKE_IMAGE_FILE_PATH));","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(USER_IMAGE_FILE_PATH));","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"     * @param text String containing text to add","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"    private static Label getDialogLabel(String text) {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"        return textToAdd;","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"     * Gets the text that the user has typed into the textfield.","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"     * @return Text that user has has typed into the textfield.","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"        return userInput.getText();","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"     * Sets the input handlers to be the given EventHandlers.","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"     * @param mouseEventHandler EventHandler to handle when send button is clicked.","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"     * @param buttonEventHandler EventHandler to handle when user completes input.","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"    public void setUserInputHandler(EventHandler\u003c? super MouseEvent\u003e mouseEventHandler,","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"                                   EventHandler\u003cActionEvent\u003e buttonEventHandler) {","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"        sendButton.setOnMouseClicked(mouseEventHandler);","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"        userInput.setOnAction(buttonEventHandler);","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"     * Generates the dialog boxes.","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"     * @param response Response given by Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"    public void generateDialogBoxes(String response) {","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"        Label userText \u003d new Label(input);","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"        Label dukeText \u003d new Label(response);","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"                DialogBox.getUserDialog(userText, new ImageView(userImage)),","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(dukeImage))","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"     * Closes the window after defined duration.","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"    public void exit() {","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(EXIT_PAUSE));","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"        delay.setOnFinished(e -\u003e Platform.exit());","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"        delay.play();","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"    private void formatStage(Stage stage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"        stage.setMinHeight(ANCHOR_HEIGHT);","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"        stage.setMinWidth(ANCHOR_WIDTH);","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"yzhilong"},"content":"        scrollPane.setPrefSize(SCROLL_PANE_WIDTH, SCROLL_PANE_HEIGHT);","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"yzhilong"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"yzhilong"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"yzhilong"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"yzhilong"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"yzhilong"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"        userInput.setPrefWidth(USER_INPUT_WIDTH);","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"yzhilong"},"content":"        sendButton.setPrefWidth(BUTTON_WIDTH);","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"yzhilong"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"yzhilong"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"yzhilong"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"yzhilong"},"content":"    private void setupFunctionality() {","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"yzhilong"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"yzhilong"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"yzhilong"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"yzhilong"},"content":"        });","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"yzhilong"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"yzhilong"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"yzhilong"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"yzhilong"},"content":"        });","lastModifiedDate":"2021-09-03"},{"lineNumber":129,"author":{"gitId":"yzhilong"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":131,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":132,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":133,"author":{"gitId":"yzhilong"},"content":"     * Sets up the Gui.","lastModifiedDate":"2021-09-03"},{"lineNumber":134,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"yzhilong"},"content":"     * @param stage Default stage of a javafx application.","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"yzhilong"},"content":"    public void setup(Stage stage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":138,"author":{"gitId":"yzhilong"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"yzhilong"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"yzhilong"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-03"},{"lineNumber":141,"author":{"gitId":"yzhilong"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-03"},{"lineNumber":142,"author":{"gitId":"yzhilong"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"yzhilong"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"yzhilong"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-03"},{"lineNumber":146,"author":{"gitId":"yzhilong"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"yzhilong"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-03"},{"lineNumber":148,"author":{"gitId":"yzhilong"},"content":"        stage.show();","lastModifiedDate":"2021-09-03"},{"lineNumber":149,"author":{"gitId":"yzhilong"},"content":"        mainLayout.setPrefSize(ANCHOR_WIDTH, ANCHOR_HEIGHT);","lastModifiedDate":"2021-09-03"},{"lineNumber":150,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":151,"author":{"gitId":"yzhilong"},"content":"        formatStage(stage);","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"yzhilong"},"content":"        setupFunctionality();","lastModifiedDate":"2021-09-03"},{"lineNumber":153,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":154,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"yzhilong":154}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.InvalidTimeStampException;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"/** Class representing a deadline */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    private static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\u0027 \u0027HHmm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    private static DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\");","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    private LocalDateTime timeInfo;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"     * Deadline constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"     * @param taskDetails Details about the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     * @param timeInfoString Deadline of the task, to be given in d/M/YYYY HHmm format.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"     * @throws InvalidTimeStampException If given timeInfoString is invalid.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    public Deadline(String taskDetails, String timeInfoString) throws InvalidTimeStampException {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"        super(taskDetails);","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"            this.timeInfo \u003d LocalDateTime.parse(timeInfoString, inputFormatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"            throw new InvalidTimeStampException(timeInfoString);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"     * Returns a String representation of the Deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of the Deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        String timeInfoString \u003d timeInfo.format(outputFormatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), timeInfoString);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"     * Returns a String which is used to save data to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of how data will be saved to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"    public String toDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"        String timeInfoString \u003d timeInfo.format(inputFormatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"D | %s | %s\", super.toDataString(), timeInfoString);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"yzhilong":56}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.InvalidTimeStampException;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"/** Class representing an event */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    private static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\u0027 \u0027HHmm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    private static DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h:mma\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"    private LocalDateTime timeInfo;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"     * Event constructor.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"     * @param taskDetails Details about the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"     * @param timeInfoString When the event occurs, to be given in d/M/YYYY HHmm format.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"     * @throws InvalidTimeStampException If given timeInfoString is invalid.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    public Event(String taskDetails, String timeInfoString) throws InvalidTimeStampException {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"        super(taskDetails);","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"            this.timeInfo \u003d LocalDateTime.parse(timeInfoString, inputFormatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"            throw new InvalidTimeStampException(timeInfoString);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"     * Returns a String representation of the Event.","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of the Event.","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        String timeInfoString \u003d timeInfo.format(outputFormatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), timeInfoString);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"     * Returns a String which is used to save data to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of how data will be saved to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"    public String toDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"        String timeInfoString \u003d timeInfo.format(inputFormatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"E | %s | %s\", super.toDataString(), timeInfoString);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"yzhilong":52}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"/** Abstract class representing a task */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"    private boolean done \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    private String taskDetails;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"     * Task constructor.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"     * @param taskDetails String describing the task.","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    public Task(String taskDetails) {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        assert (!taskDetails.trim().equals(\"\")) : \"taskDetails should not be empty String\";","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     * Marks the task as done and checks if it was previously completed.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"     * @return boolean indicating whether the task status has been changed from not done to done.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    public boolean markDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        if (!done) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"            done \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"            return true;","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"            return false;","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"     * Returns true if the task matches all keywords, and false otherwise.","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"     * @return boolean indicating whether the task contains all the keywords.","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"    public boolean containsKeywords(HashSet\u003cString\u003e keywords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        HashSet\u003cString\u003e words \u003d new HashSet\u003c\u003e(Arrays.asList(this.taskDetails.split(\" \")));","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        words.retainAll(keywords);","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"        return words.equals(keywords);","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"     * Returns a String which is used to save data to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of how data will be saved to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"    public String toDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"%d | %s\", done ? 1 : 0, taskDetails);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"     * Returns a String representation of the Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"[%s] %s\", done ? \"X\" : \" \", taskDetails);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"yzhilong":65}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"/** Class representing a todo */","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"    public Todo(String taskDetails) {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"        super(taskDetails);","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"     * Returns a String representation of the Todo.","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of the Todo.","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"     * Returns a String which is used to save data to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of how data will be saved to disk.","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    public String toDataString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"        return String.format(\"T | %s\", super.toDataString());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"yzhilong":28}},{"path":"src/main/java/duke/utils/CliUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.utils;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"/** Class to handle all printing of messages */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"public class CliUi {","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"    private static final String SEPARATOR \u003d \"_\".repeat(60);","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    private static final String[] WELCOME_MESSAGE \u003d {\"Hello! I\u0027m Duke\", \"What can I do for you?\"};","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    private static final String TAB \u003d \" \".repeat(4);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"     * Prints welcome message.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        printOut(WELCOME_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"     * Prints error message of exceptions thrown by Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    public void showError(DukeException dukeException) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"        printOut(dukeException.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"     * Prints message telling the user that the saved data is corrupted.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        printOut(\"Data file is corrupted, unable to load\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"     * Prints message telling the user that the saved data is loaded successfully.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"    public void showLoadingSuccess() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        printOut(\"Task list loaded successfully!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"     * Reads the commands of the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"     * @return String input given by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"        return input;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"     * Prints the output of Duke in a user-friendly manner.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"     * @param messages Strings representing the lines of messages to be printed out.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"    public static void printOut(String... messages) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"        System.out.println(TAB + SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"            System.out.println(TAB + message);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"        System.out.println(TAB + SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":65}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.utils;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import duke.commands.AddDeadlineCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import duke.commands.AddEventCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import duke.commands.AddTodoCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import duke.commands.DeleteTaskCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"import duke.commands.MarkDoneCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"/** Class to parse user inputs */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"     * Parses the input to determine what command should be issued.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"     * @param input Input string that user types in.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"     * @return command Command representing the input.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     * @throws DukeException If any error relating to duke occurs.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    public static Command parseNext(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"        assert (input !\u003d null) : \"input should not be null.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"        Command command \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        if (input.matches(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"            command \u003d new ByeCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        } else if (input.matches(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        } else if (input.matches(\"deadline\\\\s.{1,}\\\\s\\\\/by\\\\s.{1,}\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"            String[] keywords \u003d extractKeywordsFromCommand(input, new String[] {\"deadline\", \"/by\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"            command \u003d new AddDeadlineCommand(keywords);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        } else if (input.matches(\"event\\\\s.{1,}\\\\s\\\\/at\\\\s.{1,}\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"            String[] keywords \u003d extractKeywordsFromCommand(input, new String[] {\"event\", \"/at\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"            command \u003d new AddEventCommand(keywords);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        } else if (input.matches(\"todo\\\\s.{1,}\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"            String[] keywords \u003d extractKeywordsFromCommand(input, new String[] {\"todo\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"            command \u003d new AddTodoCommand(keywords);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        } else if (input.matches(\"done [0-9]{1,}\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"            String[] keywords \u003d extractKeywordsFromCommand(input, new String[] {\"done\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"            command \u003d new MarkDoneCommand(keywords[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"        } else if (input.matches(\"delete [0-9]{1,}\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"            String[] keywords \u003d extractKeywordsFromCommand(input, new String[] {\"delete\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"            command \u003d new DeleteTaskCommand(keywords[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"        } else if (input.matches(\"find .{1,}\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"            String[] keywords \u003d extractKeywordsFromCommand(input, new String[]{\"find\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"            return new FindCommand(keywords);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"        if (command !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"            return command;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"        throw new UnknownCommandException();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"    private static String[] extractKeywordsFromCommand(String command, String[] keywords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"        if (keywords.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"            String[] commands \u003d command.split(keywords[1], 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"            String taskDescription \u003d commands[0].split(\" \", 2)[1].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"            String timeInfo \u003d commands[1].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"            assert (taskDescription.length() \u003e 0) : \"taskDescription should not be \\\"\\\"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"            assert (timeInfo.length() \u003e 0) : \"timeInfo should not be \\\"\\\"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"            return new String[]{taskDescription, timeInfo};","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"            String taskDescription \u003d command.split(keywords[0], 2)[1].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"            assert (taskDescription.length() \u003e 0) : \"taskDescription should not be \\\"\\\"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"            return new String[]{taskDescription};","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":73}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.utils;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"/** Class to deal with saving/loading tasks from disk */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"     * Loads previously saved tasks from the disk.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"     * Will create a new file to save tasks in if none currently exists.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"     * @return List of tasks loaded from disk.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"     * @throws DukeException if any of the saved tasks are invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        String dirName \u003d filePath.split(\"/duke.txt\")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        File dir \u003d new File(dirName);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        dir.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        File data \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"            data.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"            Scanner reader \u003d new Scanner(data);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"            while (reader.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"                String line \u003d reader.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"                addTask(line, tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"        return tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"    private void addTask(String line, List\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"        String[] info \u003d line.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"        if (info.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"            return;","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"        assert (info[1].equals(\"0\") || info[1].equals(\"1\")) : \"Task status should be either \\\"0\\\" or \\\"1\\\"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"        String command \u003d info[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"        boolean done \u003d info[1].equals(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"        if (command.equals(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"            task \u003d new Todo(info[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"        } else if (command.equals(\"D\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"            task \u003d new Deadline(info[2], info[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"        } else if (command.equals(\"E\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"            task \u003d new Event(info[2], info[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"            if (done) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"                task.markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"     * Saves the task list to disc.","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"     * @param tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"        String data \u003d tasks.getData();","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"        boolean isDataValid \u003d data.equals(\"\");","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"        isDataValid \u003d isDataValid || data.matches(\"[T, D, E] \\\\| [0, 1] \\\\|.*\");","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"        assert (!isDataValid)","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"                : \"data should be formatted as \\\"EVENT | VALUE | ...\\\",\"","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"                    + \"where EVENT is T, D or E, and VALUE is \\\" \\\" or X\";","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"        try (PrintWriter out \u003d new PrintWriter(filePath)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"            out.println(data);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"            // will never occur since the file will always be created first","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":99}},{"path":"src/main/java/duke/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.utils;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"/** Class containing all tasks currently stored in Duke */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"     * TaskList constructor.","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"     * TaskList constructor.","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"     * @param tasks list of tasks to be added.","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"    private Task getTask(int i) throws InvalidTaskNumberException {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"        if (i \u003d\u003d 0 || i \u003e tasks.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"            throw new InvalidTaskNumberException(tasks.size());","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"            Task output \u003d tasks.get(i - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"            return output;","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"     * @return size of the taskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"     * Adds a task to the taskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"     * @param task Task to be added to taskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        assert (task !\u003d null) : \"TaskList should not contain any null objects\";","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"     * Deletes the ith task.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"     * Counting from 1.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"     * @param i Index of task to delete.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"     * @return String[] Strings telling the user what this method has done.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"yzhilong"},"content":"     * @throws InvalidTaskNumberException if i \u003d\u003d 0 or i \u003e\u003d number of tasks in list.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"yzhilong"},"content":"    public String[] deleteTask(int i) throws InvalidTaskNumberException {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"yzhilong"},"content":"        Task task \u003d getTask(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"yzhilong"},"content":"        boolean removed \u003d tasks.remove(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"yzhilong"},"content":"        return new String[] {\"I have deleted this task:\", \"    \" + task.toString()};","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"yzhilong"},"content":"     * Marks the ith task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"yzhilong"},"content":"     * Counting from 1.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"yzhilong"},"content":"     * @param i Index of task to mark as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"yzhilong"},"content":"     * @return String[] Strings telling the user what this method has done.","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"yzhilong"},"content":"     * @throws InvalidTaskNumberException if i \u003d\u003d 0 or i \u003e\u003d number of tasks in list.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"yzhilong"},"content":"    public String[] markDone(int i) throws InvalidTaskNumberException {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"yzhilong"},"content":"        Task task \u003d getTask(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"yzhilong"},"content":"        boolean isMarked \u003d task.markDone();","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"yzhilong"},"content":"        if (isMarked) {","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"yzhilong"},"content":"            return new String[] {\"Nice! I\u0027ve marked this task as done:\", \"    \" + task.toString()};","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"yzhilong"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"yzhilong"},"content":"            return new String[] {\"This was completed previously:\", \"    \" + task.toString()};","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"yzhilong"},"content":"     * Returns String representation of taskList, which will be used to save to disk.","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of taskList, which will be used to save to disk.","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"yzhilong"},"content":"    public String getData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"yzhilong"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"yzhilong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"yzhilong"},"content":"            data.append(task.toDataString()).append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"yzhilong"},"content":"        if (data.length() \u003e 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"yzhilong"},"content":"            return data.toString().substring(0, data.length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"yzhilong"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"yzhilong"},"content":"            return \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"yzhilong"},"content":"     * Prints the current contents of the list in a user-friendly manner.","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"yzhilong"},"content":"     * @param cliUi Ui object.","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"yzhilong"},"content":"    public String find(HashSet\u003cString\u003e keywords, CliUi cliUi) {","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"yzhilong"},"content":"        TaskList filteredTasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"yzhilong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"yzhilong"},"content":"            if (task.containsKeywords(keywords)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"yzhilong"},"content":"                filteredTasks.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"yzhilong"},"content":"        if (filteredTasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"yzhilong"},"content":"            cliUi.printOut(\"No matching tasks found!\");","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"yzhilong"},"content":"            return \"No matching tasks found!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"yzhilong"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"yzhilong"},"content":"            return String.join(\"\\n\", filteredTasks.showList(cliUi));","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"yzhilong"},"content":"     * Returns array containing lines to be printed.","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"yzhilong"},"content":"     * @param cliUi Ui object.","lastModifiedDate":"2021-09-03"},{"lineNumber":132,"author":{"gitId":"yzhilong"},"content":"     * @return String array containing lines to be printed.","lastModifiedDate":"2021-09-02"},{"lineNumber":133,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":134,"author":{"gitId":"yzhilong"},"content":"    public String[] showList(CliUi cliUi) {","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"yzhilong"},"content":"        cliUi.printOut(toStrings());","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"yzhilong"},"content":"        return toStrings();","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"yzhilong"},"content":"    private String[] toStrings() {","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"yzhilong"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"yzhilong"},"content":"            return new String[] {\"No tasks added yet!\"};","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"yzhilong"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"yzhilong"},"content":"            String[] messages \u003d new String[tasks.size()];","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"yzhilong"},"content":"            int i \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"yzhilong"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"yzhilong"},"content":"                messages[i] \u003d String.format(\"%d. %s\", ++i, task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"yzhilong"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"yzhilong"},"content":"            return messages;","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"yzhilong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"yzhilong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"yzhilong"},"content":"     * Returns String representation of the taskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"yzhilong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":155,"author":{"gitId":"yzhilong"},"content":"     * @return String representation of the taskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":156,"author":{"gitId":"yzhilong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":157,"author":{"gitId":"yzhilong"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"yzhilong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"yzhilong"},"content":"        return String.join(\"\\n\", toStrings());","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":161}},{"path":"src/test/java/duke/commands/AddDeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.InvalidTimeStampException;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"public class AddDeadlineCommandTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    public void testInvalidYear() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"                InvalidTimeStampException.class,","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"                () -\u003e new AddDeadlineCommand(new String[] {\"PLACEHOLDER_EVENT_DETAILS\", \"1/2/21 2021\"})","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    public void testInvalidMonth() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"                InvalidTimeStampException.class,","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"                () -\u003e new AddDeadlineCommand(new String[] {\"PLACEHOLDER_EVENT_DETAILS\", \"1/13/2021 2021\"})","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"    public void testInvalidDay() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"                InvalidTimeStampException.class,","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"                () -\u003e new AddDeadlineCommand(new String[] {\"PLACEHOLDER_EVENT_DETAILS\", \"32/4/2021 2021\"})","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"    public void testInvalidHour() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"                InvalidTimeStampException.class,","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"                () -\u003e new AddDeadlineCommand(new String[] {\"PLACEHOLDER_EVENT_DETAILS\", \"32/4/2021 2421\"})","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"    public void testInvalidMinute() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"                InvalidTimeStampException.class,","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"                () -\u003e new AddDeadlineCommand(new String[] {\"PLACEHOLDER_EVENT_DETAILS\", \"32/4/2021 2460\"})","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":52}},{"path":"src/test/java/duke/commands/AddEventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.InvalidTimeStampException;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    public void testInvalidYear() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"            InvalidTimeStampException.class,","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"            () -\u003e new AddEventCommand(new String[] {\"PLACEHOLDER_EVENT_DETAILS\", \"1/2/21 2021\"})","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    public void testInvalidMonth() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"            InvalidTimeStampException.class,","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"            () -\u003e new AddEventCommand(new String[] {\"PLACEHOLDER_EVENT_DETAILS\", \"1/13/2021 2021\"})","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"    public void testInvalidDay() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"            InvalidTimeStampException.class,","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"            () -\u003e new AddEventCommand(new String[] {\"PLACEHOLDER_EVENT_DETAILS\", \"32/4/2021 2021\"})","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    public void testInvalidHour() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"            InvalidTimeStampException.class,","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"            () -\u003e new AddEventCommand(new String[] {\"PLACEHOLDER_EVENT_DETAILS\", \"32/4/2021 2421\"})","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"    public void testInvalidMinute() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"            InvalidTimeStampException.class,","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"            () -\u003e new AddEventCommand(new String[] {\"PLACEHOLDER_EVENT_DETAILS\", \"32/4/2021 2460\"})","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":50}},{"path":"src/test/java/duke/commands/AddTodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"public class AddTodoCommandTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"    public void testValidTodoCommand1() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"        String expected \u003d \"TO ADD: [T][ ] PLACEHOLDER SENTENCE\";","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"        Command actual \u003d new AddTodoCommand(new String[] {\"PLACEHOLDER SENTENCE\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"                expected,","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"                actual.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    public void testValidTodoCommand2() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"        String expected \u003d \"TO ADD: [T][ ] PLACEHOLDER /at sometime\";","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"        Command actual \u003d new AddTodoCommand(new String[] {\"PLACEHOLDER /at sometime\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"                expected,","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"                actual.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":28}},{"path":"src/test/java/duke/commands/DeleteTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"    public void testValidDeleteCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"        String expected \u003d \"TO DELETE: index 10\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"        Command actual \u003d new DeleteTaskCommand(\"10\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"                expected,","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"                actual.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"    public void test0Index() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"        Command command \u003d new DeleteTaskCommand(\"0\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"                InvalidTaskNumberException.class, () -\u003e command.execute(new TaskList(), null, null)","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"    public void testInvalidIndex() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"        Command command \u003d new DeleteTaskCommand(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"                InvalidTaskNumberException.class, () -\u003e command.execute(new TaskList(), null, null)","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":38}},{"path":"src/test/java/duke/commands/MarkDoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"public class MarkDoneCommandTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    public void testValidMarkDoneCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"        String expected \u003d \"TO MARK DONE: index 10\";","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        Command actual \u003d new MarkDoneCommand(\"10\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"                expected,","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"                actual.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"    public void test0Index() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"        Command command \u003d new MarkDoneCommand(\"0\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"                InvalidTaskNumberException.class, () -\u003e command.execute(new TaskList(), null, null)","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"    public void testInvalidIndex() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        Command command \u003d new MarkDoneCommand(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"        assertThrows(","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"                InvalidTaskNumberException.class, () -\u003e command.execute(new TaskList(), null, null)","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":40}},{"path":"src/test/java/duke/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.utils;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import duke.commands.AddDeadlineCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"import duke.commands.AddEventCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"import duke.commands.AddTodoCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"    public void testParseDeadlineInput() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"        String command \u003d \"deadline PLACEHOLDER /by 24/8/2021 1800\";","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        Command expected \u003d new AddDeadlineCommand(new String[] {\"PLACEHOLDER\", \"24/8/2021 1800\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"        Command actual \u003d Parser.parseNext(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"                expected.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"                actual.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"    public void testParseTodoInput() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"        String command \u003d \"todo PLACEHOLDER\";","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        Command expected \u003d new AddTodoCommand(new String[] {\"PLACEHOLDER\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"        Command actual \u003d Parser.parseNext(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"yzhilong"},"content":"                expected.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"yzhilong"},"content":"                actual.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"yzhilong"},"content":"    public void testParseEventInput() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"yzhilong"},"content":"        String command \u003d \"event PLACEHOLDER /at 24/8/2021 1800\";","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"yzhilong"},"content":"        Command expected \u003d new AddEventCommand(new String[] {\"PLACEHOLDER\", \"24/8/2021 1800\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"yzhilong"},"content":"        Command actual \u003d Parser.parseNext(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"yzhilong"},"content":"                expected.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"yzhilong"},"content":"                actual.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"yzhilong"},"content":"    public void testParseLongDetailsInput() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"yzhilong"},"content":"        String command \u003d \"event PLACEHOLDER SENTENCE IS VERY LONG /at 24/8/2021 1800\";","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"yzhilong"},"content":"        Command expected \u003d new AddEventCommand(new String[] {\"PLACEHOLDER SENTENCE IS VERY LONG\", \"24/8/2021 1800\"});","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"yzhilong"},"content":"        Command actual \u003d Parser.parseNext(command);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"yzhilong"},"content":"                expected.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"yzhilong"},"content":"                actual.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"yzhilong"},"content":"                expected.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"yzhilong"},"content":"                actual.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":63}},{"path":"src/test/java/duke/utils/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"package duke.utils;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"yzhilong"},"content":"    public void testEmptyTaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"yzhilong"},"content":"        String expected \u003d \"No tasks added yet!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"yzhilong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"yzhilong"},"content":"                expected,","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"yzhilong"},"content":"                taskList.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"yzhilong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"yzhilong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"yzhilong"},"content":"    public void testAddTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"yzhilong"},"content":"        String expected \u003d \"1. [T][ ] Placeholder\";","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"yzhilong"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"yzhilong"},"content":"        taskList.addTask(new Todo(\"Placeholder\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"yzhilong"},"content":"        assertEquals(","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"yzhilong"},"content":"                expected,","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"yzhilong"},"content":"                taskList.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"yzhilong"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"yzhilong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"yzhilong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"yzhilong":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yzhilong"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"yzhilong"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"yzhilong"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"yzhilong"},"content":"event project meeting /at Aug 10th","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"yzhilong"},"content":"todo join sport club","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"yzhilong"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"yzhilong"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"yzhilong"},"content":"event myedurec stuff /at now","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"yzhilong"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"yzhilong"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"yzhilong":10}}]
