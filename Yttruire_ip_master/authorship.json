[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"    public boolean hasDueDate(LocalDate dueDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"        return dueDate.isEqual(this.deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"    public Deadline(String description, String deadline, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"    public String getFormattedData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"        return super.getFormattedData() + \"|\" + this.deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"    public String getTaskIdentifier() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"        return \"D\";","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Yttruire"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"        return \"[D][\" + getStatusIcon() + \"] \" + this.description + \" (by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Yttruire":36}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"import java.util.List;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"     * Sends a message to the user in the specified format","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"     * ","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"     * @param message The message to be sent to the user","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"    protected static void sendMessage(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"        System.out.println(\"    ____________________________________________________________\\n    \"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"                + message.replace(\"\\n\", \"\\n    \")","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"                + \"\\n    ____________________________________________________________\");","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"    protected static void writeTasksToFile(String pathName, List\u003cTask\u003e taskData) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(pathName));","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"        if (!taskData.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"            writer.write(taskData.get(0).getFormattedData() + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"        for (int i \u003d 1; i \u003c taskData.size(); ++i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"            writer.append(taskData.get(i).getFormattedData() + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Yttruire"},"content":"        writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"    protected static List\u003cTask\u003e loadTaskData(File taskFile) throws FileNotFoundException {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Yttruire"},"content":"        Scanner sc \u003d new Scanner(taskFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Yttruire"},"content":"        List\u003cTask\u003e taskData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Yttruire"},"content":"            String task \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Yttruire"},"content":"            String[] taskDetails \u003d task.split(\"\\\\|\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Yttruire"},"content":"            boolean taskDone \u003d Objects.equals(taskDetails[1], \"1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Yttruire"},"content":"            switch (taskDetails[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Yttruire"},"content":"                case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Yttruire"},"content":"                    taskData.add(new Todo(taskDetails[2], taskDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Yttruire"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"                case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Yttruire"},"content":"                    taskData.add(new Deadline(taskDetails[2], taskDetails[3], taskDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Yttruire"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Yttruire"},"content":"                case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Yttruire"},"content":"                    taskData.add(new Event(taskDetails[2], taskDetails[3], taskDone));","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Yttruire"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Yttruire"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Yttruire"},"content":"        sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Yttruire"},"content":"        return taskData;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"Yttruire"},"content":"    public static void printTaskList(List\u003cTask\u003e taskData) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Yttruire"},"content":"        // Construct the string containing the list of items that have been stored in","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Yttruire"},"content":"        // preparation to send to user","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Yttruire"},"content":"        StringBuilder listMessage \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"Yttruire"},"content":"        // Add all elements in the list","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Yttruire"},"content":"        for (int i \u003d 0; i \u003c taskData.size(); ++i) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"Yttruire"},"content":"            listMessage.append(\"\\n\").append(i + 1).append(\". \").append(taskData.get(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Yttruire"},"content":"        sendMessage(listMessage.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Yttruire"},"content":"    public static void printTaskList(List\u003cTask\u003e taskData, LocalDate date) {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Yttruire"},"content":"        // Construct the string containing the list of items that have been stored in","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Yttruire"},"content":"        // preparation to send to user","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Yttruire"},"content":"        StringBuilder listMessage \u003d new StringBuilder(\"Here are the tasks in your list that are due on \")","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Yttruire"},"content":"                .append(date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))).append(\":\");","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Yttruire"},"content":"        // Add all elements in the list","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Yttruire"},"content":"        for (int i \u003d 0; i \u003c taskData.size(); ++i) {","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"Yttruire"},"content":"            listMessage.append(\"\\n\").append(i + 1).append(\". \").append(taskData.get(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Yttruire"},"content":"        sendMessage(listMessage.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"Yttruire"},"content":"        final String fileName \u003d \"tasks.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"Yttruire"},"content":"        final String pathName \u003d fileName;","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"Yttruire"},"content":"        final String welcomeMessage \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"Yttruire"},"content":"        try (Scanner sc \u003d new Scanner(System.in)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"Yttruire"},"content":"            // File directory \u003d new File(pathDirectory);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Yttruire"},"content":"            // if(!directory.mkdirs()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"Yttruire"},"content":"            // sendMessage(\"Cannot create\");","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"Yttruire"},"content":"            // }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"Yttruire"},"content":"            File taskFile \u003d new File(pathName);","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Yttruire"},"content":"            List\u003cTask\u003e taskData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"Yttruire"},"content":"            // If already exists, do nothing, leave taskData empty. Else, load the data","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"Yttruire"},"content":"            if (!taskFile.createNewFile()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"Yttruire"},"content":"                taskData \u003d loadTaskData(taskFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"Yttruire"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"Yttruire"},"content":"            sendMessage(welcomeMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"Yttruire"},"content":"            String userInput;","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"Yttruire"},"content":"            boolean isTaskListUpdated \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"Yttruire"},"content":"            while (true) {","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"Yttruire"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"Yttruire"},"content":"                    if (isTaskListUpdated) {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"Yttruire"},"content":"                        // update file","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"Yttruire"},"content":"                        writeTasksToFile(pathName, taskData);","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"Yttruire"},"content":"                        isTaskListUpdated \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"Yttruire"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"Yttruire"},"content":"                    userInput \u003d sc.nextLine().trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"Yttruire"},"content":"                    if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"Yttruire"},"content":"                        // EXIT command","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"Yttruire"},"content":"                        sendMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"Yttruire"},"content":"                        break;","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"Yttruire"},"content":"                    } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"Yttruire"},"content":"                        // LIST command","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"Yttruire"},"content":"                        // Construct the string containing the list of items that have been stored in","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"Yttruire"},"content":"                        // preparation to send to user","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"Yttruire"},"content":"                        StringBuilder listMessage \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"Yttruire"},"content":"                        // Add all elements in the list","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"Yttruire"},"content":"                        for (int i \u003d 0; i \u003c taskData.size(); ++i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"Yttruire"},"content":"                            listMessage.append(\"\\n\").append(i + 1).append(\". \").append(taskData.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"Yttruire"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"Yttruire"},"content":"                        sendMessage(listMessage.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"Yttruire"},"content":"                    } else if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"Yttruire"},"content":"                        int index \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"Yttruire"},"content":"                        taskData.get(index).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"Yttruire"},"content":"                        isTaskListUpdated \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"Yttruire"},"content":"                        sendMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + taskData.get(index));","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"Yttruire"},"content":"                    } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"Yttruire"},"content":"                        int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"Yttruire"},"content":"                        Task removedTask \u003d taskData.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"Yttruire"},"content":"                        isTaskListUpdated \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"Yttruire"},"content":"                        sendMessage(\"Noted. I\u0027ve removed this task:\\n  \" + removedTask + \"\\nNow you have \"","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"Yttruire"},"content":"                                + taskData.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"Yttruire"},"content":"                    } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"Yttruire"},"content":"                        // If no arguments provided","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"Yttruire"},"content":"                        if (userInput.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"Yttruire"},"content":"                            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"Yttruire"},"content":"                        } else if (!userInput.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"Yttruire"},"content":"                            // If it does not start with \"todo \" after trimming, it is an invalid word","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"Yttruire"},"content":"                            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"Yttruire"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"Yttruire"},"content":"                        Todo newTodo \u003d new Todo(userInput.substring(5).trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"Yttruire"},"content":"                        taskData.add(newTodo);","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"Yttruire"},"content":"                        isTaskListUpdated \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"Yttruire"},"content":"                        sendMessage(\"Got it. I\u0027ve added this task:\\n  \" + newTodo + \"\\nNow you have \" + taskData.size()","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"Yttruire"},"content":"                                + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"Yttruire"},"content":"                    } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"Yttruire"},"content":"                        // If no arguments provided","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"Yttruire"},"content":"                        if (userInput.length() \u003d\u003d 8) {","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"Yttruire"},"content":"                            throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"Yttruire"},"content":"                        } else if (!userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"Yttruire"},"content":"                            // If it does not start with \"deadline \" after trimming, it is an invalid word","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"Yttruire"},"content":"                            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"Yttruire"},"content":"                        } else if (!userInput.contains(\"/by \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"Yttruire"},"content":"                            throw new DukeException(","lastModifiedDate":"2021-08-26"},{"lineNumber":180,"author":{"gitId":"Yttruire"},"content":"                                    (\"A deadline must contain a deadline indicated after the /by command\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"Yttruire"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"Yttruire"},"content":"                        String description \u003d userInput.substring(9, userInput.indexOf(\"/by\")).trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"Yttruire"},"content":"                        String deadlineDate \u003d userInput.substring(userInput.indexOf(\"/by\")).trim(); // Inclusive of the","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"Yttruire"},"content":"                                                                                                    // /by command","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"Yttruire"},"content":"                        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"Yttruire"},"content":"                            throw new DukeException(\"The description of a deadline cannot be empty\");","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"Yttruire"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"Yttruire"},"content":"                        Deadline newDeadline \u003d new Deadline(description, deadlineDate.substring(4));","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"Yttruire"},"content":"                        taskData.add(newDeadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"Yttruire"},"content":"                        isTaskListUpdated \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"Yttruire"},"content":"                        sendMessage(\"Got it. I\u0027ve added this task:\\n  \" + newDeadline + \"\\nNow you have \"","lastModifiedDate":"2021-08-26"},{"lineNumber":195,"author":{"gitId":"Yttruire"},"content":"                                + taskData.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"Yttruire"},"content":"                    } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"Yttruire"},"content":"                        // If no arguments provided","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"Yttruire"},"content":"                        if (userInput.length() \u003d\u003d 5) {","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"Yttruire"},"content":"                            throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"Yttruire"},"content":"                        } else if (!userInput.startsWith(\"event \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"Yttruire"},"content":"                            // If it does not start with \"deadline \" after trimming, it is an invalid word","lastModifiedDate":"2021-08-18"},{"lineNumber":202,"author":{"gitId":"Yttruire"},"content":"                            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":203,"author":{"gitId":"Yttruire"},"content":"                        } else if (!userInput.contains(\"/at \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":204,"author":{"gitId":"Yttruire"},"content":"                            throw new DukeException(","lastModifiedDate":"2021-08-26"},{"lineNumber":205,"author":{"gitId":"Yttruire"},"content":"                                    (\"An event must contain a datetime indicated after the /at command\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":206,"author":{"gitId":"Yttruire"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":207,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":208,"author":{"gitId":"Yttruire"},"content":"                        String description \u003d userInput.substring(5, userInput.indexOf(\"/at\")).trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":209,"author":{"gitId":"Yttruire"},"content":"                        String datetime \u003d userInput.substring(userInput.indexOf(\"/at\")).trim(); // Inclusive of the /by","lastModifiedDate":"2021-08-26"},{"lineNumber":210,"author":{"gitId":"Yttruire"},"content":"                                                                                                // command","lastModifiedDate":"2021-08-26"},{"lineNumber":211,"author":{"gitId":"Yttruire"},"content":"                        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":212,"author":{"gitId":"Yttruire"},"content":"                            throw new DukeException(\"The description of an event cannot be empty\");","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"Yttruire"},"content":"                        }","lastModifiedDate":"2021-08-18"},{"lineNumber":214,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"Yttruire"},"content":"                        Event newEvent \u003d new Event(description, datetime.substring(4));","lastModifiedDate":"2021-08-18"},{"lineNumber":216,"author":{"gitId":"Yttruire"},"content":"                        taskData.add(newEvent);","lastModifiedDate":"2021-08-25"},{"lineNumber":217,"author":{"gitId":"Yttruire"},"content":"                        isTaskListUpdated \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":218,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":219,"author":{"gitId":"Yttruire"},"content":"                        sendMessage(\"Got it. I\u0027ve added this task:\\n  \" + newEvent + \"\\nNow you have \" + taskData.size()","lastModifiedDate":"2021-08-26"},{"lineNumber":220,"author":{"gitId":"Yttruire"},"content":"                                + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":221,"author":{"gitId":"Yttruire"},"content":"                    } else if (userInput.startsWith(\"date\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":222,"author":{"gitId":"Yttruire"},"content":"                        if (userInput.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-26"},{"lineNumber":223,"author":{"gitId":"Yttruire"},"content":"                            throw new DukeException(","lastModifiedDate":"2021-08-26"},{"lineNumber":224,"author":{"gitId":"Yttruire"},"content":"                                    \"A date must be provided to find events and deadlines occurring on that day\");","lastModifiedDate":"2021-08-26"},{"lineNumber":225,"author":{"gitId":"Yttruire"},"content":"                        } else if (!userInput.startsWith(\"date \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":226,"author":{"gitId":"Yttruire"},"content":"                            // If it does not start with \"date \" after trimming, it is an invalid command","lastModifiedDate":"2021-08-26"},{"lineNumber":227,"author":{"gitId":"Yttruire"},"content":"                            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":228,"author":{"gitId":"Yttruire"},"content":"                        }","lastModifiedDate":"2021-08-26"},{"lineNumber":229,"author":{"gitId":"Yttruire"},"content":"                        LocalDate queryDate \u003d LocalDate.parse(userInput.substring(5));","lastModifiedDate":"2021-08-26"},{"lineNumber":230,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":231,"author":{"gitId":"Yttruire"},"content":"                        List\u003cTask\u003e dueTasks \u003d taskData.stream().filter(x -\u003e x.hasDueDate(queryDate))","lastModifiedDate":"2021-08-26"},{"lineNumber":232,"author":{"gitId":"Yttruire"},"content":"                                .collect(Collectors.toList());","lastModifiedDate":"2021-08-26"},{"lineNumber":233,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":234,"author":{"gitId":"Yttruire"},"content":"                        printTaskList(dueTasks, queryDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":235,"author":{"gitId":"Yttruire"},"content":"                    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":236,"author":{"gitId":"Yttruire"},"content":"                        // Unknown command","lastModifiedDate":"2021-08-18"},{"lineNumber":237,"author":{"gitId":"Yttruire"},"content":"                        throw new DukeException((\"I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":238,"author":{"gitId":"Yttruire"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":239,"author":{"gitId":"Yttruire"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":240,"author":{"gitId":"Yttruire"},"content":"                    sendMessage(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":241,"author":{"gitId":"Yttruire"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":242,"author":{"gitId":"Yttruire"},"content":"                    sendMessage(\"Unknown date format. Please input a valid date in the format: YYYY-MM-DD\");","lastModifiedDate":"2021-08-26"},{"lineNumber":243,"author":{"gitId":"Yttruire"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":244,"author":{"gitId":"Yttruire"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":245,"author":{"gitId":"Yttruire"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":246,"author":{"gitId":"Yttruire"},"content":"            sendMessage(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":247,"author":{"gitId":"Yttruire"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":248,"author":{"gitId":"Yttruire"},"content":"            sendMessage(\"An unexpected exception has occurred\" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":249,"author":{"gitId":"Yttruire"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":250,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Yttruire":248,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"        return \"☹ OOPS!!! \" + this.getMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Yttruire":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"    protected LocalDate dateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"    public Event(String description, String dateTime) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"        this.dateTime \u003d LocalDate.parse(dateTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"    public boolean hasDueDate(LocalDate dueDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"        return dueDate.isEqual(this.dateTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"    public Event(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"    public String getFormattedData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"        return super.getFormattedData() + \"|\" + this.dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"    public String getTaskIdentifier() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"        return \"E\";","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Yttruire"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + this.description + \" (at: \" + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Yttruire":35}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"    protected Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"    public String getFormattedData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"        return this.getTaskIdentifier() + \"|\" + (this.isDone ? 1 : 0) + \"|\" + this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Yttruire"},"content":"    public abstract String getTaskIdentifier();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"    public boolean hasDueDate(LocalDate dueDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Yttruire":44}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"    public String getTaskIdentifier() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"        return \"T\";","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Yttruire":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"deadline as","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"deadline /by","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"deadline /by","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"deadline 3 /by","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"deadline /by thurs","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Yttruire":14}}]
