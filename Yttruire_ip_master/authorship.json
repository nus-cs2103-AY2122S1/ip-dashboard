[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"    protected String deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"        return \"[D][\" + getStatusIcon() + \"] \" + this.description + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Yttruire":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"import java.util.List;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"     * Sends a message to the user in the specified format","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"     * @param message The message to be sent to the user","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"    protected static void sendMessage(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"        System.out.println(\"    ____________________________________________________________\\n    \" +","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"                message.replace(\"\\n\", \"\\n    \") +","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"                \"\\n    ____________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"        List\u003cTask\u003e listData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"        final String welcomeMessage \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"        sendMessage(welcomeMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"        String userInput;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Yttruire"},"content":"        while (true) {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"Yttruire"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Yttruire"},"content":"                userInput \u003d sc.nextLine().trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"Yttruire"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Yttruire"},"content":"                    // EXIT command","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"Yttruire"},"content":"                    sendMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"Yttruire"},"content":"                    System.exit(0);","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"Yttruire"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Yttruire"},"content":"                    // LIST command","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"Yttruire"},"content":"                    // Construct the string containing the list of items that have been stored in preparation to send to user","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"Yttruire"},"content":"                    StringBuilder listMessage \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"Yttruire"},"content":"                    // Add all elements in the list","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"Yttruire"},"content":"                    for (int i \u003d 0; i \u003c listData.size(); ++i) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"Yttruire"},"content":"                        listMessage.append(\"\\n\").append(i + 1).append(\". \").append(listData.get(i));","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"Yttruire"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"Yttruire"},"content":"                    sendMessage(listMessage.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"Yttruire"},"content":"                } else if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"Yttruire"},"content":"                    int index \u003d Integer.parseInt(userInput.substring(5)) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"Yttruire"},"content":"                    listData.get(index).markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"Yttruire"},"content":"                    sendMessage(\"Nice! I\u0027ve marked this task as done:\\n  \" + listData.get(index));","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"Yttruire"},"content":"                } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"Yttruire"},"content":"                    int index \u003d Integer.parseInt(userInput.substring(7)) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"Yttruire"},"content":"                    Task removedTask \u003d listData.remove(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"Yttruire"},"content":"                    sendMessage(\"Noted. I\u0027ve removed this task:\\n  \" + removedTask +","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"Yttruire"},"content":"                            \"\\nNow you have \" + listData.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"Yttruire"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"Yttruire"},"content":"                    // If no arguments provided","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"Yttruire"},"content":"                    if (userInput.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"Yttruire"},"content":"                        throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"Yttruire"},"content":"                    } else if (!userInput.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"Yttruire"},"content":"                        // If it does not start with \"todo \" after trimming, it is an invalid word","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"Yttruire"},"content":"                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"Yttruire"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"Yttruire"},"content":"                    Todo newTodo \u003d new Todo(userInput.substring(5).trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"Yttruire"},"content":"                    listData.add(newTodo);","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"Yttruire"},"content":"                    sendMessage(\"Got it. I\u0027ve added this task:\\n  \" + newTodo + \"\\nNow you have \" + listData.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"Yttruire"},"content":"                } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"Yttruire"},"content":"                    // If no arguments provided","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"Yttruire"},"content":"                    if (userInput.length() \u003d\u003d 8) {","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"Yttruire"},"content":"                        throw new DukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"Yttruire"},"content":"                    } else if (!userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"Yttruire"},"content":"                        // If it does not start with \"deadline \" after trimming, it is an invalid word","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"Yttruire"},"content":"                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"Yttruire"},"content":"                    } else if (!userInput.contains(\"/by \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"Yttruire"},"content":"                        throw new DukeException((\"A deadline must contain a deadline indicated after the /by command\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"Yttruire"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"Yttruire"},"content":"                    String description \u003d userInput.substring(9, userInput.indexOf(\"/by\")).trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"Yttruire"},"content":"                    String deadlineDate \u003d userInput.substring(userInput.indexOf(\"/by\")).trim(); // Inclusive of the /by command","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"Yttruire"},"content":"                    if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"Yttruire"},"content":"                        throw new DukeException(\"The description of a deadline cannot be empty\");","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"Yttruire"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"Yttruire"},"content":"                    Deadline newDeadline \u003d new Deadline(description, deadlineDate.substring(4));","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"Yttruire"},"content":"                    listData.add(newDeadline);","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"Yttruire"},"content":"                    sendMessage(\"Got it. I\u0027ve added this task:\\n  \" + newDeadline + \"\\nNow you have \" + listData.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"Yttruire"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"Yttruire"},"content":"                    // If no arguments provided","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"Yttruire"},"content":"                    if (userInput.length() \u003d\u003d 5) {","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"Yttruire"},"content":"                        throw new DukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"Yttruire"},"content":"                    } else if (!userInput.startsWith(\"event \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"Yttruire"},"content":"                        // If it does not start with \"deadline \" after trimming, it is an invalid word","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"Yttruire"},"content":"                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"Yttruire"},"content":"                    } else if (!userInput.contains(\"/at \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"Yttruire"},"content":"                        throw new DukeException((\"An event must contain a datetime indicated after the /at command\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"Yttruire"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"Yttruire"},"content":"                    String description \u003d userInput.substring(5, userInput.indexOf(\"/at\")).trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"Yttruire"},"content":"                    String datetime \u003d userInput.substring(userInput.indexOf(\"/at\")).trim(); // Inclusive of the /by command","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"Yttruire"},"content":"                    if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"Yttruire"},"content":"                        throw new DukeException(\"The description of an event cannot be empty\");","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"Yttruire"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"Yttruire"},"content":"                    Event newEvent \u003d new Event(description, datetime.substring(4));","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"Yttruire"},"content":"                    listData.add(newEvent);","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"Yttruire"},"content":"                    sendMessage(\"Got it. I\u0027ve added this task:\\n  \" + newEvent + \"\\nNow you have \" + listData.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"Yttruire"},"content":"                } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"Yttruire"},"content":"                    // Unknown command","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"Yttruire"},"content":"                    throw new DukeException((\"I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"Yttruire"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"Yttruire"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"Yttruire"},"content":"                sendMessage(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"Yttruire"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"Yttruire"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Yttruire":115,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"        return \"☹ OOPS!!! \" + this.getMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Yttruire":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"    protected String dateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"    public Event(String description, String dateTime) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"        return \"[E][\" + getStatusIcon() + \"] \" + this.description + \" (at: \" + this.dateTime + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Yttruire":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"    protected Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Yttruire"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Yttruire"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Yttruire"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Yttruire":23}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Yttruire":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Yttruire"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Yttruire"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Yttruire"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Yttruire"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Yttruire"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Yttruire"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Yttruire"},"content":"deadline as","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Yttruire"},"content":"deadline /by","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Yttruire"},"content":"deadline /by","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Yttruire"},"content":"deadline 3 /by","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Yttruire"},"content":"deadline /by thurs","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Yttruire"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Yttruire"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Yttruire"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Yttruire":14}}]
