[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    private boolean exit;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"        this.exit \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"            taskList \u003d storage.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    public void run() {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"        Parser parser \u003d new Parser(this, taskList, storage, ui);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"        while (!exit) {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"//            String userInput \u003d ui.takeInput();","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"            if (sc.hasNextLine()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"                Command cmd \u003d parser.parse(sc.nextLine());","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"                if (cmd !\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"                    cmd.execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"        sc.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"    public void triggerExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"        exit \u003d true;","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"     * Main function.","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"     * @param args","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"        new Duke(\"task-list.txt\").run();","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"timiditi":54,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import duke.command.MarkDoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"import duke.task.EventTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"public class Parser {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    public Parser(Duke duke, TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"     * Parses the user input string.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"     * @param input","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"     * @return true if user enters the exit command, false otherwise.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"    public Command parse(String input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"        String firstWord \u003d splitInput[0];","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"            return new ExitCommand(taskList, storage, ui, duke);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"            return deleteFromList(splitInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"            return addDeadline(splitInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"        case \"done\":","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"            return setTaskDone(splitInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"        case \"list\":","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"            ui.showMessage(taskList.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"        case \"event\":","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"            return addEvent(splitInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"            return addTodo(splitInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"        default:","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"Error: Command not recognised, sorry.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"        return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"timiditi"},"content":"    private Command addTodo(String[] input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"timiditi"},"content":"            String name \u003d input[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"timiditi"},"content":"            TodoTask todo \u003d new TodoTask(name);","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"timiditi"},"content":"            return new AddTaskCommand(taskList, storage, ui, todo);","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"timiditi"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"Error: Description for To-do cannot be empty.\\nexample:\\ntodo buy groceries\");","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"timiditi"},"content":"            return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"timiditi"},"content":"    private Command addEvent(String[] input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"timiditi"},"content":"        String TIME_MARKER \u003d \" /at \";","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"timiditi"},"content":"            String[] taskAndTime \u003d input[1].split(TIME_MARKER, 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"timiditi"},"content":"            EventTask event;","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"timiditi"},"content":"            if (taskAndTime.length \u003e 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"timiditi"},"content":"                event \u003d new EventTask(taskAndTime[0], taskAndTime[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"timiditi"},"content":"                return new AddTaskCommand(taskList, storage, ui, event);","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"timiditi"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"timiditi"},"content":"                ui.showError(\"Error: Need to specify event name and time.\\nexample:\\nevent meeting /at Tuesday 12pm\");","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"timiditi"},"content":"                return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"timiditi"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"Error: Description for Event cannot be empty.\\nexample:\\nevent meeting /at Tuesday 12pm\");","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"timiditi"},"content":"            return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"timiditi"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"Error: Unsupported date format, must be in format yyyy-mm-dd.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"timiditi"},"content":"            return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"timiditi"},"content":"    private Command addDeadline(String[] input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"timiditi"},"content":"        String DEADLINE_MARKER \u003d \" /by \";","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"timiditi"},"content":"            String[] taskAndTime \u003d input[1].split(DEADLINE_MARKER, 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"timiditi"},"content":"            if (taskAndTime.length \u003e 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"timiditi"},"content":"                DeadlineTask deadlineTask \u003d new DeadlineTask(taskAndTime[0], taskAndTime[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"timiditi"},"content":"                return new AddTaskCommand(taskList, storage, ui, deadlineTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"timiditi"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"timiditi"},"content":"                ui.showError(\"Error: Need to specify task name and deadline.\\nexample:\\ndeadline return book /by Sunday\");","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"timiditi"},"content":"                return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"timiditi"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"Error: Description for deadline cannot be empty.\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"timiditi"},"content":"                    \"\\nexample:\\ndeadline return book /by Sunday\");","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"timiditi"},"content":"            return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"timiditi"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"Error: Unsupported date format, must be in format yyyy-mm-dd.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"timiditi"},"content":"            return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"timiditi"},"content":"    private Command deleteFromList(String[] input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"timiditi"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"No tasks in list!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"timiditi"},"content":"            return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"timiditi"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"timiditi"},"content":"            try {","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"timiditi"},"content":"                int index \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"timiditi"},"content":"                return new DeleteCommand(taskList, storage, ui, index);","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"timiditi"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"timiditi"},"content":"                ui.showError(\"Error: Invalid input, please enter a number from 1 to \" + taskList.getSize());","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"timiditi"},"content":"                return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"timiditi"},"content":"     * Sets a task in itemList as \u0027done\u0027.","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"timiditi"},"content":"     * @param input String of user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"timiditi"},"content":"    private Command setTaskDone(String[] input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"timiditi"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"Error: No tasks in list!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"timiditi"},"content":"            return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"timiditi"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"timiditi"},"content":"            try {","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"timiditi"},"content":"                int index \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"timiditi"},"content":"                return new MarkDoneCommand(taskList, storage, ui, index);","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"timiditi"},"content":"            } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"timiditi"},"content":"                ui.showError(\"Error: Invalid input, please enter a number from 1 to \" + taskList.getSize());","lastModifiedDate":"2021-08-29"},{"lineNumber":152,"author":{"gitId":"timiditi"},"content":"                return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":153,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":157}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.task.EventTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"public class Storage {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    private String filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"     * Saves TaskList to file.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"        StringBuilder saveData \u003d new StringBuilder();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"        FileWriter fw;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"        for (int i \u003d 1; i \u003c taskList.getSize() + 1; i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"            saveData.append(taskList.get(i).formatForFile());","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        file.createNewFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"        fw \u003d new FileWriter(file);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"        fw.write(saveData.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"        fw.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"    public TaskList load() throws FileNotFoundException {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"            String[] line \u003d sc.nextLine().split(\"\\\\\" + Task.SAVE_DATA_MARKER);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"            String taskType \u003d line[0];","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"            boolean isDone \u003d Integer.parseInt(line[1]) !\u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"            String taskName \u003d line[2];","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"                case \"T\":","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"                    taskList.add(new TodoTask(taskName, isDone));","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"                case \"E\":","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"                    taskList.add(new EventTask(taskName, isDone, line[3]));","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"                case \"D\":","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"                    taskList.add(new DeadlineTask(taskName, isDone, line[3]));","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"                default:","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"timiditi"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"timiditi"},"content":"        return taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":66}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"public class Ui {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"        System.out.println(\"Howdy! The name\u0027s\\n\" + logo + \"\\nWhat can I do for ya?\");","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    public void showFarewell() {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"        System.out.println(\"Seeya!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"     * Prints a given String to console.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"     * @param message message to be printed to console.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"     * Shows a given exception error message to user.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"     * @param errorMessage Error message to show to user.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":36}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":" * This class encapsulates a command to add a Task to a TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":" * Extends Command class.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    private Task task;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"     * Constructor for a AddTaskCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"     * @param taskList TaskList from which to delete Task.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"     * @param ui Ui involved in the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"    public AddTaskCommand(TaskList taskList, Storage storage, Ui ui, Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"        super(taskList, storage, ui);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"     * Executes the Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"            storage.save(taskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"Error: Unable to Save\\n\" + e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"        ui.showMessage(\"Sure thing. Added to list:\\n\" + task + \"\\nNumber of tasks in list: \" + taskList.getSize());","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":44}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":" * This class encapsulates an abstract Command class, to be implemented as specific commands for Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"    protected Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    protected Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"     * Constructor for a Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"     * @param taskList TaskList used by Duke instance.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"     * @param ui Ui used by the DUke instance.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"    public Command(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    public abstract void execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":" * This class encapsulates a command to delete a Task from a TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":" * Extends Command class.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"     * Constructor for a DeleteCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"     * @param taskList TaskList from which to delete Task.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"     * @param ui Ui involved in the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"     * @param taskNumber Number of the Task to be deleted.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"    public DeleteCommand(TaskList taskList, Storage storage, Ui ui, int taskNumber) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"        super(taskList, storage, ui);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"     * Executes the Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"            Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"            taskList.delete(taskNumber);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"            storage.save(taskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"            ui.showMessage(\"Okay then, I\u0027ve removed this from the list:\\n\" + task +","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"                    \"\\nNumber of tasks in list: \" + taskList.getSize());","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"Error: Unable to Save\\n\" + e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"Error: Invalid input, please enter a number from 1 to \" + taskList.getSize());","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":47}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":" * This class encapsulates an \"Exit\" command from Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":" * Extends Command class.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    public ExitCommand(TaskList taskList, Storage storage, Ui ui, Duke duke) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"        super(taskList, storage, ui);","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"        duke.triggerExit();","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        ui.showFarewell();","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":27}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":" * This class encapsulates a command to mark a task as \u0027Done\u0027.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":" * Extends Command class.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    public MarkDoneCommand(TaskList taskList, Storage storage, Ui ui, int taskNumber) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"        super(taskList, storage, ui);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"     * Executes the Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"    public void execute() throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"            taskList.setDone(taskNumber);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"            storage.save(taskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"            ui.showMessage(\"Alrighty, marking this task as done:\\n\" + taskList.get(taskNumber));","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"Error: Unable to Save\\n\" + e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"            ui.showError(\"Error: Invalid input, please enter a number from 1 to \" + taskList.getSize());","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":38}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"     * Constructor for a DeadlineTask object.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"     * @param name name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"     * @param isDone whether or not task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"     * @param deadline deadline for the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    public DeadlineTask(String name, boolean isDone, String deadline) throws DateTimeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"    public DeadlineTask(String name, String deadline) throws DateTimeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    public String formatForFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"        return \"D\" + super.formatForFile() + SAVE_DATA_MARKER + this.deadline + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"timiditi":36}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"     * Constructor for EventTask object.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"     * @param name name of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"     * @param isDone whether or not task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"     * @param date date of event.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    public EventTask(String name, boolean isDone, String date) throws DateTimeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"    public EventTask(String name, String date) throws DateTimeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    public String formatForFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"        return \"E\" + super.formatForFile() + SAVE_DATA_MARKER + this.date + \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"timiditi":36}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"    public static final String SAVE_DATA_MARKER \u003d \"|\";","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"    private String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"     * @param name Task name.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"     * @param isDone Whether or not task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"     * Returns a character based on whether or not Task is done.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"     * @return \u0027X\u0027 if Task is done, \u0027 \u0027 otherwise.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"     * Marks the Task as \u0027done\u0027.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"     * Returns a string representation of the Task when saved to a file.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"     * @return String to be written into file when task list is saved.","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"    public String formatForFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"        char doneStatus \u003d this.isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"        return SAVE_DATA_MARKER + doneStatus + SAVE_DATA_MARKER + this.name;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"     * Returns a String representation of the Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"     * @return Task name and whether or not Task is done.","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"timiditi":57}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"public class TaskList {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"     * Adds a given Task to list.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"     * @param task Task to add to list.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"        list.add(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"     * Returns a specific task in the list at a given index.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"     * @param itemNumber starts from 1.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"     * @return Task","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    public Task get(int itemNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"        int index \u003d itemNumber - 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"        return list.get(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"     * Removes a Task from the TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"     * @param itemNumber registered number of task in list, starts from 1.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"    public void delete(int itemNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"        int index \u003d itemNumber - 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"        list.remove(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"     * Sets a Task from the TaskList as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"     * @param itemNumber index of task in list, starts from 1.","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"     * @return true if successful, false otherwise.","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"    public void setDone(int itemNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"        list.get(itemNumber - 1).markAsDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"     * Returns the number of tasks in list.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"     * @return size of list.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"        return list.size();","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"     * Returns a String representation of the TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"     * @return Full list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"timiditi"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"timiditi"},"content":"            return \"No tasks in list!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"timiditi"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"timiditi"},"content":"            String output \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"timiditi"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"timiditi"},"content":"                output +\u003d ((i + 1) + \". \" + list.get(i) + \"\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"timiditi"},"content":"            return output;","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":72}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"    TODO,","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"    EVENT,","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"    DEADLINE","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":7}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"     * Constructor for a TodoTask object.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"     * @param name name of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"     * @param isDone whether or not task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"    public TodoTask(String name, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"    public TodoTask(String name) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    public String formatForFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"        return \"T\" + super.formatForFile() + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"timiditi":28}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    public void setUp() {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    public void delete_when_taskList_empty() {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        Duke duke \u003d new Duke(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"        Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"        Parser parser \u003d new Parser(duke, taskList, storage, ui);","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"        parser.parse(\"delete 1\");","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"        assertEquals(\"No tasks in list!\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"    public void addTodo_noInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"        Duke duke \u003d new Duke(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"        Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"        Parser parser \u003d new Parser(duke, taskList, storage, ui);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"        parser.parse(\"todo\");","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"        assertEquals(\"Error: Description for To-do cannot be empty.\\nexample:\\ntodo buy groceries\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"    public void markDone_outOfBounds() {","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"        Duke duke \u003d new Duke(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"        Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"        Parser parser \u003d new Parser(duke, taskList, storage, ui);","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"        taskList.add(new TodoTask(\"test\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"        parser.parse(\"done 2\").execute();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"        assertEquals(\"Error: Invalid input, please enter a number from 1 to 1\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"timiditi":60}},{"path":"task-list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"T|0|xxx","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"T|1|level-7","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"timiditi":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"todo x","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"event y /at 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"deadline z /by 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"timiditi":4}}]
