[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"# Duke *ver. T*","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"\u003e \"Wow, this software is great!\" - Me, in some other context.","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"This is Tim\u0027s *incredible* version of the infamous Duke software. ","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"It has:","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"* a **lot** of work and green tea :tea: put into it","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"* potential","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"* features I guess","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"What I did to get into this:","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"1. Sign up for CS2103T","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"2. Not realise much work I was signing up for","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"3. Profit..?","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"Here\u0027s a tiny preview of some code you\u0027ll find in this project!","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"``` java","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"public","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"Pretty cool, if I do say so myself. (You might also spot `return` somewhere in the code too)","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"### To-do:","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"- [x] start this project","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"- [ ] finish this project","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"[Enjoy!](https://www.youtube.com/watch?v\u003ddQw4w9WgXcQ)","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"timiditi":21,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"timiditi":14,"-":46}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"    private void flip() {","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"        db.flip();","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"        return db;","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"timiditi":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    private boolean isExit;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"     * Constructor for a Duke instance.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"     * @param filePath file path for file to save/load save data.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"            taskList \u003d storage.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"        this.parser \u003d new Parser(this, taskList, storage, ui);","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"            if (!isExit) {","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"                Command cmd \u003d parser.parse(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"                assert cmd !\u003d null;","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"                cmd.execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"                System.exit(0);","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"            ui.showError(e);","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"        return ui.getMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"     * Triggers the exit boolean to stop the Duke from running.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"    public void triggerExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"        isExit \u003d true;","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"timiditi":55,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"public class Launcher {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"timiditi":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    private static final String FILEPATH \u003d \"task-list.txt\";","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    private Duke duke \u003d new Duke(FILEPATH);","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"            stage.setTitle(\"Duke ver. T\");","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"            stage.show();","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"timiditi":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"timiditi":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import duke.exception.EmptyListException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"import duke.task.EventTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"public class Parser {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"    private static final String START_MARKER \u003d \" /from \";","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    private static final String END_MARKER \u003d \" /to \";","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    private static final String DEADLINE_MARKER \u003d \" /by \";","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"     * Constructor for a Parser for Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"     * @param duke Duke instance the Parser is being used for.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"     * @param taskList TaskList used by the Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"     * @param storage Storage used by the Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"     * @param ui Ui used by the Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    public Parser(Duke duke, TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"     * Parses the user input string.","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"     * @param input user input","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"     * @return true if user enters the exit command, false otherwise.","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"        Command command;","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"        String firstWord \u003d splitInput[0];","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"            command \u003d new ExitCommand(taskList, storage, ui, duke);","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"            command \u003d deleteFromList(splitInput);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"            command \u003d addDeadline(splitInput);","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"timiditi"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"timiditi"},"content":"        case \"done\":","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"timiditi"},"content":"            command \u003d setTaskDone(splitInput);","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"timiditi"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"timiditi"},"content":"        case \"list\":","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"timiditi"},"content":"            command \u003d new ListCommand(taskList, storage, ui);","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"timiditi"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"timiditi"},"content":"        case \"event\":","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"timiditi"},"content":"            command \u003d addEvent(splitInput);","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"timiditi"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"timiditi"},"content":"        case \"find\":","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"timiditi"},"content":"            command \u003d findTask(splitInput);","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"timiditi"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"timiditi"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"timiditi"},"content":"            command \u003d addTodo(splitInput);","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"timiditi"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"timiditi"},"content":"        default:","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"timiditi"},"content":"            throw new InvalidInputException(\"Command not recognised.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"timiditi"},"content":"        return command;","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"timiditi"},"content":"     * Parses a user input to add a Todo type task.","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"timiditi"},"content":"     * @param input user input split into individual words.","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"timiditi"},"content":"     * @return Command to add a new TodoTask, null if error occurs.","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"timiditi"},"content":"    private Command addTodo(String[] input) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"timiditi"},"content":"        assert input !\u003d null : \"input cannot be null\";","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"timiditi"},"content":"            String name \u003d input[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"timiditi"},"content":"            TodoTask todo \u003d new TodoTask(name);","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"timiditi"},"content":"            return new AddTaskCommand(taskList, storage, ui, todo);","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"timiditi"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"timiditi"},"content":"            throw new InvalidInputException(\"Description for To-do cannot be empty.\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"timiditi"},"content":"                    \"\\nexample:\\ntodo buy groceries\");","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"timiditi"},"content":"     * Parses a user input to add a Event type task.","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"timiditi"},"content":"     * @param input user input split into individual words.","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"timiditi"},"content":"     * @return Command to add a new EventTask, null if error occurs.","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"timiditi"},"content":"    private Command addEvent(String[] input) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"timiditi"},"content":"        assert input !\u003d null : \"addEvent: input cannot be null\";","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"timiditi"},"content":"        EventTask event;","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"timiditi"},"content":"            String[] taskAndTime \u003d input[1].split(START_MARKER, 2);","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"timiditi"},"content":"            String[] startAndEnd \u003d taskAndTime[1].split(END_MARKER, 2);","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"timiditi"},"content":"            String start \u003d startAndEnd[0];","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"timiditi"},"content":"            String end \u003d startAndEnd[1];","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"timiditi"},"content":"            event \u003d new EventTask(taskAndTime[0], start, end);","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"timiditi"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"timiditi"},"content":"            throw new InvalidInputException(\"Invalid format, need to specify event name, start and end time.\"","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"timiditi"},"content":"                    + \"\\nexample:\\nevent meeting /from 2021-09-11 09:00 /to 2021-09-11 10:30\");","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"timiditi"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"timiditi"},"content":"            throw new InvalidInputException(\"Unsupported date time format, must be in format yyyy-MM-dd HH:mm.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"timiditi"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"timiditi"},"content":"            throw e;","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"timiditi"},"content":"        return new AddTaskCommand(taskList, storage, ui, event);","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":130,"author":{"gitId":"timiditi"},"content":"     * Parses a user input to add a Deadline type task.","lastModifiedDate":"2021-08-30"},{"lineNumber":131,"author":{"gitId":"timiditi"},"content":"     * @param input user input split into individual words.","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"timiditi"},"content":"     * @return Command to add a new DeadlineTask, null if error occurs.","lastModifiedDate":"2021-08-30"},{"lineNumber":133,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"timiditi"},"content":"    private Command addDeadline(String[] input) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"timiditi"},"content":"        assert input !\u003d null : \"addDeadline: input cannot be null\";","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"timiditi"},"content":"            String[] taskAndTime \u003d input[1].split(DEADLINE_MARKER, 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"timiditi"},"content":"            if (taskAndTime.length \u003e 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"timiditi"},"content":"                DeadlineTask deadlineTask \u003d new DeadlineTask(taskAndTime[0], taskAndTime[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"timiditi"},"content":"                return new AddTaskCommand(taskList, storage, ui, deadlineTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"timiditi"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"timiditi"},"content":"                throw new InvalidInputException(\"Need to specify task name and deadline.\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"timiditi"},"content":"                        \"\\nexample:\\ndeadline return book /by 2021-09-11\");","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"timiditi"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"timiditi"},"content":"            throw new InvalidInputException(\"Description for deadline cannot be empty.\\\" +\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"timiditi"},"content":"                    \"\\nexample:\\ndeadline return book /by 2021-09-11\");","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"timiditi"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"timiditi"},"content":"            throw new InvalidInputException(\"Unsupported date format, must be in format yyyy-mm-dd.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":153,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":157,"author":{"gitId":"timiditi"},"content":"     * Parses a user input to delete a task from task list.","lastModifiedDate":"2021-08-30"},{"lineNumber":158,"author":{"gitId":"timiditi"},"content":"     * @param input user input split into individual words.","lastModifiedDate":"2021-08-30"},{"lineNumber":159,"author":{"gitId":"timiditi"},"content":"     * @return Command to delete a Task from TaskList, null if error occurs.","lastModifiedDate":"2021-08-30"},{"lineNumber":160,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":161,"author":{"gitId":"timiditi"},"content":"    private Command deleteFromList(String[] input) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":162,"author":{"gitId":"timiditi"},"content":"        assert input !\u003d null : \"deleteFromList: input cannot be null\";","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"timiditi"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":165,"author":{"gitId":"timiditi"},"content":"            throw new EmptyListException();","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":169,"author":{"gitId":"timiditi"},"content":"            int index \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":170,"author":{"gitId":"timiditi"},"content":"            return new DeleteCommand(taskList, storage, ui, index);","lastModifiedDate":"2021-08-29"},{"lineNumber":171,"author":{"gitId":"timiditi"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":172,"author":{"gitId":"timiditi"},"content":"            throw new InvalidInputException(\"Invalid input, please enter a number from 1 to \"","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"timiditi"},"content":"                    + taskList.getSize());","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":175,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":177,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":178,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":179,"author":{"gitId":"timiditi"},"content":"     * Parses a user input to set a task as \u0027done\u0027.","lastModifiedDate":"2021-08-30"},{"lineNumber":180,"author":{"gitId":"timiditi"},"content":"     * @param input user input split into individual words.","lastModifiedDate":"2021-08-30"},{"lineNumber":181,"author":{"gitId":"timiditi"},"content":"     * @return Command to set a task as done, null if error occurs.","lastModifiedDate":"2021-08-30"},{"lineNumber":182,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":183,"author":{"gitId":"timiditi"},"content":"    private Command setTaskDone(String[] input) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"timiditi"},"content":"        assert input !\u003d null : \"setTaskDone: input cannot be null\";","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"timiditi"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":187,"author":{"gitId":"timiditi"},"content":"            throw new EmptyListException();","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":191,"author":{"gitId":"timiditi"},"content":"            int index \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":192,"author":{"gitId":"timiditi"},"content":"            return new MarkDoneCommand(taskList, storage, ui, index);","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"timiditi"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":194,"author":{"gitId":"timiditi"},"content":"            throw new InvalidInputException(\"Invalid input, please enter a number from 1 to \"","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"timiditi"},"content":"                    + taskList.getSize());","lastModifiedDate":"2021-09-15"},{"lineNumber":196,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":197,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":198,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":199,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":200,"author":{"gitId":"timiditi"},"content":"     * Finds a Task from the TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":201,"author":{"gitId":"timiditi"},"content":"     * @param input String of user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":202,"author":{"gitId":"timiditi"},"content":"     * @return FindCommand, null if error.","lastModifiedDate":"2021-08-31"},{"lineNumber":203,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":204,"author":{"gitId":"timiditi"},"content":"    private Command findTask(String[] input) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":205,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":206,"author":{"gitId":"timiditi"},"content":"            String[] searchTerms \u003d input[1].split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":207,"author":{"gitId":"timiditi"},"content":"            return new FindCommand(taskList, storage, ui, searchTerms);","lastModifiedDate":"2021-08-31"},{"lineNumber":208,"author":{"gitId":"timiditi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":209,"author":{"gitId":"timiditi"},"content":"            throw new InvalidInputException(\"Please specify search terms.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":210,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":211,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":212,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":212}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.task.EventTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"public class Storage {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    private String filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"     * Constructor for a Storage instance.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"     * @param filePath file path for file to save/load save data.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"     * Saves TaskList to file.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"     * @param taskList TaskList to be saved.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"        StringBuilder saveData \u003d new StringBuilder();","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"        FileWriter fw;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        for (int i \u003d 1; i \u003c taskList.getSize() + 1; i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"            saveData.append(taskList.get(i).formatForFile());","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"        file.createNewFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"        fw \u003d new FileWriter(file);","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"        fw.write(saveData.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"        fw.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"     * Creates a new TaskList by reading save data from a Storage object\u0027s file path.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"     * @return new TaskList with Tasks from save data.","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"     * @throws FileNotFoundException if no save data file exists/is found.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"    public TaskList load() throws FileNotFoundException {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"            String[] line \u003d sc.nextLine().split(\"\\\\\" + Task.SAVE_DATA_MARKER);","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"            String taskType \u003d line[0];","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"            boolean isDone \u003d Integer.parseInt(line[1]) !\u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"            String taskName \u003d line[2];","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"timiditi"},"content":"                case \"T\":","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"timiditi"},"content":"                    taskList.add(new TodoTask(taskName, isDone));","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"timiditi"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"timiditi"},"content":"                case \"E\":","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"timiditi"},"content":"                    taskList.add(new EventTask(taskName, isDone, line[3], line[4]));","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"timiditi"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"timiditi"},"content":"                case \"D\":","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"timiditi"},"content":"                    taskList.add(new DeadlineTask(taskName, isDone, line[3]));","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"timiditi"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"timiditi"},"content":"                default:","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"timiditi"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"timiditi"},"content":"        return taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":76}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"public class Ui {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"    private String message \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"        System.out.println(\"Howdy! The name\u0027s\\n\" + logo + \"\\nWhat can I do for ya?\");","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"     * Sets the next response to user as a given String.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"     * @param message message to be printed to console.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"    public void setMessage(String message) {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"     * Appends a string to the next message.","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"     * @param appendix String to append to existing message.","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"    public void appendMessage(String appendix) {","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"        this.message +\u003d appendix;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"        return this.message;","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"     * Shows a given exception\u0027s error message to user.","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"     * @param error Error to show to user.","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"    public void showError(DukeException error) {","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"        setMessage(error.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":47}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"import duke.task.EventTask;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"import javax.swing.border.BevelBorder;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":" * This class encapsulates a command to add a Task to a TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":" * Extends Command class.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"    private Task task;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"     * Constructor for a AddTaskCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"     * @param taskList TaskList from which to delete Task.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"     * @param ui Ui involved in the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"    public AddTaskCommand(TaskList taskList, Storage storage, Ui ui, Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"        super(taskList, storage, ui);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"     * Executes the Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"        ui.setMessage(\"Sure thing. Added to list:\\n\" + task +","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"                \"\\nNumber of tasks in list: \" + taskList.getSize());","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"        if (task instanceof EventTask) {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"            EventTask eTask \u003d (EventTask) task;","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"            checkForClash(eTask);","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"        saveData();","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"     * Checks whether or not an EventTask clashes with another event in the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"     * Appends a warning to the UI message if there is a clash.","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"     * @param eventTask EventTask to be checked.","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"    private void checkForClash(EventTask eventTask) {","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"        ArrayList\u003cEventTask\u003e clashingTasks \u003d getClashes(eventTask);","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"timiditi"},"content":"        if (!clashingTasks.isEmpty()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"timiditi"},"content":"            String events \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"timiditi"},"content":"            for (EventTask e: clashingTasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"timiditi"},"content":"                events +\u003d e.toString() + \"\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"timiditi"},"content":"            ui.appendMessage(\"\\n\\nTake note of clashing event(s):\\n\" + events);","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"timiditi"},"content":"        ","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"timiditi"},"content":"    private ArrayList\u003cEventTask\u003e getClashes(EventTask eventTask) {","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"timiditi"},"content":"        ArrayList\u003cEventTask\u003e clashes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"timiditi"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"timiditi"},"content":"            Task t \u003d taskList.get(i);","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"timiditi"},"content":"            if (t instanceof EventTask) {","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"timiditi"},"content":"                @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"timiditi"},"content":"                EventTask other \u003d (EventTask) t;","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"timiditi"},"content":"                if (!eventTask.equals(other) \u0026\u0026 eventTask.overlapsWith(other)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"timiditi"},"content":"                    clashes.add(other);","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"timiditi"},"content":"                }","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"timiditi"},"content":"            } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"timiditi"},"content":"                continue;","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"timiditi"},"content":"        return clashes;","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"timiditi"},"content":"    private void saveData() {","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"timiditi"},"content":"            storage.save(taskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"timiditi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"timiditi"},"content":"            ui.showError(new DukeException(\"Unable to Save\\n\" + e.getMessage()));","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":98}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":" * This class encapsulates an abstract Command class, to be implemented as specific commands for Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    protected Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"    protected Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"     * Constructor for a Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"     * @param taskList TaskList used by Duke instance.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"     * @param ui Ui used by the DUke instance.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    public Command(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"    public abstract void execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":" * This class encapsulates a command to delete a Task from a TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":" * Extends Command class.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"     * Constructor for a DeleteCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"     * @param taskList TaskList from which to delete Task.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"     * @param storage Storage involved in the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"     * @param ui Ui involved in the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"     * @param taskNumber Number of the Task to be deleted.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    public DeleteCommand(TaskList taskList, Storage storage, Ui ui, int taskNumber) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"        super(taskList, storage, ui);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"     * Executes the Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"            Task task \u003d taskList.get(taskNumber);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"            taskList.delete(taskNumber);","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"            storage.save(taskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"            ui.setMessage(\"Okay then, I\u0027ve removed this from the list:\\n\" + task +","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"                    \"\\nNumber of tasks in list: \" + taskList.getSize());","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"            ui.showError(new DukeException(\"Unable to Save\\n\" + e.getMessage()));","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"            ui.showError(new InvalidInputException(\"Invalid input, please enter a number from 1 to \"","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"                    + taskList.getSize()));","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":51}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":" * This class encapsulates an \"Exit\" command from Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":" * Extends Command class.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"     * Constructor for a ExitCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"     * @param taskList TaskList involved in the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"     * @param storage Storage involved in the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"     * @param ui Ui involved in the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"     * @param duke Duke instance involved in the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    public ExitCommand(TaskList taskList, Storage storage, Ui ui, Duke duke) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        super(taskList, storage, ui);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"     * Executes the Command.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        duke.triggerExit();","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"        ui.setMessage(\"Seeya, press enter again to close.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":37}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":" * This class encapsulates a command to find a Task in a TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":" * Extends Command class.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"    private String[] searchInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"     * Constructor for a FindCommand.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"     * @param taskList TaskList from which to search.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"     * @param storage Storage involved in command.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"     * @param ui Ui involved in command.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"     * @param searchInput Array of words input by user to search from TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    public FindCommand(TaskList taskList, Storage storage, Ui ui, String[] searchInput) {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"        super(taskList, storage, ui);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        this.searchInput \u003d searchInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"    public void execute() {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"        String result \u003d \"Here\u0027s a list of the stuff I\u0027ve found that match what you\u0027re looking for:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        TaskList resultList \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"            boolean isMatch \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"            String[] taskWords \u003d task.getName().split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"            for (String keyword : searchInput) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"                for (String word: taskWords) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"                    if (keyword.equalsIgnoreCase(word)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"                        resultList.add(task);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"                        isMatch \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"                        break;","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"                    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"                if (isMatch) {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"                    break;","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"        ui.setMessage(result + resultList);","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"timiditi":56}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    public ListCommand(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"        super(taskList, storage, ui);","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    public void execute() {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"        if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"            ui.setMessage(\"No tasks in list!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"            ui.setMessage(taskList.toString());","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"timiditi":21}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":" * This class encapsulates a command to mark a task as \u0027Done\u0027.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":" * Extends Command class.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"     * Constructor for a MarkDoneCommand.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"     * @param taskList TaskList from which to mark Task as done.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"     * @param storage Storage involved in the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"     * @param ui Ui involved in the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"     * @param taskNumber Number of the Task to be marked as done.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"    public MarkDoneCommand(TaskList taskList, Storage storage, Ui ui, int taskNumber) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"        super(taskList, storage, ui);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"     * Executes the Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"    public void execute() throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"            taskList.setDone(taskNumber);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"            storage.save(taskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"            ui.setMessage(\"Alrighty, marking this task as done:\\n\" + taskList.get(taskNumber));","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"            ui.showError(new DukeException(\"Unable to Save\\n\" + e.getMessage()));","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"            ui.showError(new InvalidInputException(\"Invalid input, please enter a number from 1 to \"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"                    + taskList.getSize()));","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":48}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":" * This class encapsulates an Exception from Duke.","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":" * Extends RunTimeException.","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"        super(message);","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"        return \"Error: \" + super.getMessage();","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"timiditi":17}},{"path":"src/main/java/duke/exception/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"public class EmptyListException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"    public EmptyListException(String message) {","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"        super(message);","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    public EmptyListException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"        super(\"No tasks in list!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"timiditi":13}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"        super(message);","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"    public InvalidInputException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"        super(\"Invalid input.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"timiditi":11}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"     * Constructor for a DeadlineTask object.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"     * @param name name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"     * @param isDone whether or not task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"     * @param deadline deadline for the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    public DeadlineTask(String name, boolean isDone, String deadline) throws DateTimeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"    public DeadlineTask(String name, String deadline) throws DateTimeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    public String formatForFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"        return \"D\" + super.formatForFile() + SAVE_DATA_MARKER + this.deadline + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"timiditi":36}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH\u0027:\u0027mm\");","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"    private LocalDateTime start;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    private LocalDateTime end;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"     * Constructor for EventTask object.","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"     * @param name name of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"     * @param isDone whether or not task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"     * @param start starting date and time of event, format according to DATE_TIME_FORMAT.","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"     * @param end end date and time of event, of format according to DATE_TIME_FORMAT.","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    public EventTask(String name, boolean isDone, String start, String end) throws DateTimeException, InvalidInputException {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"        this.start \u003d LocalDateTime.parse(start, DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"        this.end \u003d LocalDateTime.parse(end, DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"        if (this.end.compareTo(this.start) \u003c 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"            throw new InvalidInputException(\"End of event cannot be before start of event.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    public EventTask(String name, String start, String end) throws DateTimeException, InvalidInputException {","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"        this.start \u003d LocalDateTime.parse(start, DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"        this.end \u003d LocalDateTime.parse(end, DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"        if (this.end.compareTo(this.start) \u003c 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"            throw new InvalidInputException(\"End of event cannot be before start of event.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"     * Checks whether the time of this event overlaps with as a given event.","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"     * @param eventTask The event to be compared to.","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"     * @return true if the two events overlap.","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"    public boolean overlapsWith(EventTask eventTask) {","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"        boolean startAfterOther \u003d this.start.compareTo(eventTask.start) \u003e\u003d 0;","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"        boolean startBeforeOtherEnds \u003d this.start.compareTo(eventTask.end) \u003c 0;","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"        boolean thisStartsDuringOther \u003d startAfterOther \u0026\u0026 startBeforeOtherEnds;","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"        boolean startAfterThis \u003d eventTask.start.compareTo(this.start) \u003e\u003d 0;","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"        boolean startBeforeThisEnds \u003d eventTask.start.compareTo(this.end) \u003c 0;","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"        boolean otherStartsDuringThis \u003d startAfterThis \u0026\u0026 startBeforeThisEnds;","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"        return thisStartsDuringOther || otherStartsDuringThis;","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"timiditi"},"content":"    public String formatForFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"timiditi"},"content":"        String startEndData \u003d SAVE_DATA_MARKER + this.start.format(DATE_TIME_FORMAT)","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"timiditi"},"content":"                + SAVE_DATA_MARKER + this.end.format(DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"timiditi"},"content":"        return \"E\" + super.formatForFile() + startEndData + \"\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"timiditi"},"content":"        DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy H\u0027:\u0027mm\");","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"timiditi"},"content":"        DateTimeFormatter justTime \u003d DateTimeFormatter.ofPattern(\"H\u0027:\u0027mm\");","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"timiditi"},"content":"        String startTime \u003d this.start.format(dateTimeFormat);","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"timiditi"},"content":"        String endTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"timiditi"},"content":"        if (this.end.toLocalDate().equals(this.start.toLocalDate())) {","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"timiditi"},"content":"            endTime \u003d this.end.format(justTime);","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"timiditi"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"timiditi"},"content":"            endTime \u003d this.end.format(dateTimeFormat);","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"timiditi"},"content":"        return \"[E]\" + super.toString() + \" (\" + startTime + \" - \" + endTime + \")\";","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"timiditi":83}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"    public static final String SAVE_DATA_MARKER \u003d \"|\";","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"    private String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"     * @param name Task name.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"     * @param isDone Whether or not task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"     * Returns a character based on whether or not Task is done.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"     * @return \u0027X\u0027 if Task is done, \u0027 \u0027 otherwise.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"     * Marks the Task as \u0027done\u0027.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"     * Returns a string representation of the Task when saved to a file.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"     * @return String to be written into file when task list is saved.","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"    public String formatForFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"        char doneStatus \u003d this.isDone ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"        return SAVE_DATA_MARKER + doneStatus + SAVE_DATA_MARKER + this.name;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"     * Returns the name of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"     * @return name of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"    public String getName() {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"        return this.name;","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"     * Returns a String representation of the Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"     * @return Task name and whether or not Task is done.","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"timiditi"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"timiditi":65}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"public class TaskList {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"     * Constructor for a TaskList.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"     * Adds a given Task to list.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"     * @param task Task to add to list.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"        list.add(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"     * Returns a specific task in the list at a given index.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"     * @param itemNumber starts from 1.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"     * @return Task","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"    public Task get(int itemNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"        int index \u003d itemNumber - 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"        return list.get(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"     * Removes a Task from the TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"     * @param itemNumber registered number of task in list, starts from 1.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"    public void delete(int itemNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"        int index \u003d itemNumber - 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"        list.remove(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"     * Sets a Task from the TaskList as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"     * @param itemNumber index of task in list, starts from 1.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"     * @return true if successful, false otherwise.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"    public void setDone(int itemNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"        list.get(itemNumber - 1).markAsDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"     * Returns the number of tasks in list.","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"     * @return size of list.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"        return list.size();","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"     * Returns a String representation of the TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"timiditi"},"content":"     * @return Full list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"timiditi"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"timiditi"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"timiditi"},"content":"            output +\u003d ((i + 1) + \". \" + list.get(i));","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"timiditi"},"content":"            if (i !\u003d list.size() - 1) {","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"timiditi"},"content":"                output +\u003d \"\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"timiditi"},"content":"        return output;","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":77}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"    TODO,","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"    EVENT,","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"    DEADLINE","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"timiditi":7}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"     * Constructor for a TodoTask object.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"     * @param name name of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"     * @param isDone whether or not task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"    public TodoTask(String name, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"    public TodoTask(String name) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    public String formatForFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"        return \"T\" + super.formatForFile() + \"\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"timiditi":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"timiditi":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"450.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"372.0\" promptText\u003d\"Enter Command\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"    \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"450.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"timiditi":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    public void setUp() {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"    public void delete_when_taskList_empty() {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"        Duke duke \u003d new Duke(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"        Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"        Parser parser \u003d new Parser(duke, taskList, storage, ui);","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"        parser.parse(\"delete 1\");","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"        assertEquals(\"No tasks in list!\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"    public void addTodo_noInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"        Duke duke \u003d new Duke(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"        Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"        Parser parser \u003d new Parser(duke, taskList, storage, ui);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"        parser.parse(\"todo\");","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"        assertEquals(\"Error: Description for To-do cannot be empty.\\nexample:\\ntodo buy groceries\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"    public void markDone_outOfBounds() {","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"        Duke duke \u003d new Duke(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"        Storage storage \u003d new Storage(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"        Parser parser \u003d new Parser(duke, taskList, storage, ui);","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"        taskList.add(new TodoTask(\"test\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"        parser.parse(\"done 2\").execute();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"        assertEquals(\"Error: Invalid input, please enter a number from 1 to 1\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"timiditi":60}},{"path":"task-list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"T|0|a","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"T|1|b","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"T|0|c","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"E|0|abc|2021-09-11 13:00|2021-09-11 15:27","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"E|1|xyz|2021-09-11 13:00|2021-09-11 13:30","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"E|0|ijk|2021-09-11 13:05|2021-09-11 13:10","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"timiditi":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"todo x","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"event y /at 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"deadline z /by 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"timiditi":4}}]
