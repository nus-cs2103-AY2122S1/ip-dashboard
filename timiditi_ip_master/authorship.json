[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"    private String deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"     * Constructor for a DeadlineTask object.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"     * @param name name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"     * @param deadline deadline for the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"    public DeadlineTask(String name, String deadline) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"timiditi":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"    private static ArrayList\u003cTask\u003e itemList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"     * Parses the user input string.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"     * @param input","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"     * @return true if user enters the exit command, false otherwise.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    private static boolean parseInput(String input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"        String[] splitInput \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"        switch (splitInput[0]) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"                System.out.println(\"Seeya!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"                return true;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"            case \"list\":","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"                readList();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"            case \"done\":","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"                setTaskDone(splitInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"                addTodo(splitInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"            case \"event\":","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"                addEvent(splitInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"                addDeadline(splitInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"                deleteFromList(splitInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"timiditi"},"content":"            default:","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"timiditi"},"content":"                System.out.println(\"Command not recognised, sorry.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"timiditi"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"timiditi"},"content":"        return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"timiditi"},"content":"    private static void addTodo(String[] input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"timiditi"},"content":"            String name \u003d input[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"timiditi"},"content":"            TodoTask task \u003d new TodoTask(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"timiditi"},"content":"            add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"timiditi"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"timiditi"},"content":"            System.out.println(\"Error: Description for To-do cannot be empty.\\nexample:\\ntodo buy groceries\");","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"timiditi"},"content":"    private static void addEvent(String[] input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"timiditi"},"content":"        String TIME_MARKER \u003d \" /at \";","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"timiditi"},"content":"            String[] taskAndTime \u003d input[1].split(TIME_MARKER, 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"timiditi"},"content":"            EventTask event;","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"timiditi"},"content":"            if (taskAndTime.length \u003e 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"timiditi"},"content":"                event \u003d new EventTask(taskAndTime[0], taskAndTime[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"timiditi"},"content":"                add(event);","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"timiditi"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"timiditi"},"content":"                System.out.println(\"Error: Need to specify event name and time.\\nexample:\\nevent meeting /at Tuesday 12pm\");","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"timiditi"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"timiditi"},"content":"            System.out.println(\"Error: Description for Event cannot be empty.\\nexample:\\nevent meeting /at Tuesday 12pm\");","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"timiditi"},"content":"    private static void addDeadline(String[] input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"timiditi"},"content":"        String DEADLINE_MARKER \u003d \" /by \";","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"timiditi"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"timiditi"},"content":"            String[] taskAndTime \u003d input[1].split(DEADLINE_MARKER, 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"timiditi"},"content":"            if (taskAndTime.length \u003e 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"timiditi"},"content":"                DeadlineTask deadlineTask \u003d new DeadlineTask(taskAndTime[0], taskAndTime[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"timiditi"},"content":"                add(deadlineTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"timiditi"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"timiditi"},"content":"                System.out.println(\"Error: Need to specify task name and deadline.\\nexample:\\ndeadline return book /by Sunday\");","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"timiditi"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"timiditi"},"content":"            System.out.println(\"Error: Description for deadline cannot be empty.\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"timiditi"},"content":"                    \"\\nexample:\\ndeadline return book /by Sunday\");","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"timiditi"},"content":"     * Sets a task in itemList as \u0027done\u0027.","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"timiditi"},"content":"     * @param input String of user input.","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"timiditi"},"content":"    private static void setTaskDone(String[] input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"timiditi"},"content":"        if (input.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"timiditi"},"content":"            System.out.println(\"done: mark task in list as done.\\nexample:\\ndone 1\");","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"timiditi"},"content":"        } else if (itemList.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"timiditi"},"content":"            System.out.println(\"No tasks in list!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"timiditi"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"timiditi"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"timiditi"},"content":"                int index \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"timiditi"},"content":"                if (index \u003c 0 || index \u003e\u003d itemList.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"timiditi"},"content":"                    System.out.println(\"Invalid input, please enter a number from 1 to \" + itemList.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"timiditi"},"content":"                } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"timiditi"},"content":"                    Task t \u003d itemList.get(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"timiditi"},"content":"                    t.markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"timiditi"},"content":"                    System.out.println(\"Alrighty, marking this task as done:\\n\" + t);","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"timiditi"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"timiditi"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"timiditi"},"content":"                System.out.println(\"Invalid input, please enter a number from 1 to \" + itemList.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"timiditi"},"content":"     * Adds a given Task to itemList.","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"timiditi"},"content":"     * @param task Task to add to itemList.","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"timiditi"},"content":"    private static void add(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"timiditi"},"content":"        itemList.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"timiditi"},"content":"        System.out.println(\"Sure thing. Added to list:\\n\" + task + \"\\nNumber of tasks in list: \" + itemList.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"timiditi"},"content":"     * Prints out itemList.","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"timiditi"},"content":"    private static void readList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"timiditi"},"content":"        if (itemList.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"timiditi"},"content":"            System.out.println(\"No tasks in list!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"timiditi"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"timiditi"},"content":"            for (int i \u003d 0; i \u003c itemList.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"timiditi"},"content":"                System.out.println((i + 1) + \". \" + itemList.get(i));","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"timiditi"},"content":"    private static void deleteFromList(String[] input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"timiditi"},"content":"        if (input.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"timiditi"},"content":"            System.out.println(\"Error: must specify the index number of task to be deleted.\\nexample:\\ndelete 1\");","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"timiditi"},"content":"        } else if (itemList.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"timiditi"},"content":"            System.out.println(\"No tasks in list!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"timiditi"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"timiditi"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"timiditi"},"content":"                int index \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"timiditi"},"content":"                if (index \u003c 0 || index \u003e\u003d itemList.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"timiditi"},"content":"                    System.out.println(\"Invalid input, please enter a number from 1 to \" + itemList.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"timiditi"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"timiditi"},"content":"                    Task t \u003d itemList.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"timiditi"},"content":"                    itemList.remove(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"timiditi"},"content":"                    System.out.println(\"Okay then, I\u0027ve removed this from the list:\\n\" + t +","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"timiditi"},"content":"                            \"\\nNumber of tasks in list: \" + itemList.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"timiditi"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"timiditi"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":167,"author":{"gitId":"timiditi"},"content":"                System.out.println(\"Invalid input, please enter a number from 1 to \" + itemList.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":168,"author":{"gitId":"timiditi"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":174,"author":{"gitId":"timiditi"},"content":"     * Echo function. Prints out given input String.","lastModifiedDate":"2021-08-17"},{"lineNumber":175,"author":{"gitId":"timiditi"},"content":"     * @param input The String to be printed.","lastModifiedDate":"2021-08-17"},{"lineNumber":176,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":177,"author":{"gitId":"timiditi"},"content":"    private static void echo(String input) {","lastModifiedDate":"2021-08-16"},{"lineNumber":178,"author":{"gitId":"timiditi"},"content":"        System.out.println(input);","lastModifiedDate":"2021-08-16"},{"lineNumber":179,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":180,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":182,"author":{"gitId":"timiditi"},"content":"     * Main function.","lastModifiedDate":"2021-08-16"},{"lineNumber":183,"author":{"gitId":"timiditi"},"content":"     * @param args","lastModifiedDate":"2021-08-16"},{"lineNumber":184,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":191,"author":{"gitId":"timiditi"},"content":"        System.out.println(\"Howdy! The name\u0027s\\n\" + logo + \"\\nWhat can I do for ya?\");","lastModifiedDate":"2021-08-16"},{"lineNumber":192,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":193,"author":{"gitId":"timiditi"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":194,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":195,"author":{"gitId":"timiditi"},"content":"        while (!parseInput(sc.nextLine())) {","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"timiditi"},"content":"            continue;","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"timiditi"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":198,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":199,"author":{"gitId":"timiditi"},"content":"        sc.close();","lastModifiedDate":"2021-08-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"timiditi":192,"-":9}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"    private String time;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"     * Constructor for EventTask object.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"     * @param name name of task.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"     * @param time time of event.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"    public EventTask(String name, String time) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.time + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"timiditi":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"    private String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"     * @param name Task name.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"     * Returns a character based on whether or not Task is done.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"timiditi"},"content":"     * @return \u0027X\u0027 if Task is done, \u0027 \u0027 otherwise.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"timiditi"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"timiditi"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"timiditi"},"content":"     * Marks the Task as \u0027done\u0027.","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"timiditi"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"timiditi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"timiditi"},"content":"     * Returns a String representation of the Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"timiditi"},"content":"     * @return Task name and whether or not Task is done.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"timiditi"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"timiditi":38}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"     * Constructor for a TodoTask object.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"timiditi"},"content":"     * @param name","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"timiditi"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"timiditi"},"content":"    public TodoTask(String name) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"timiditi"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"timiditi"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"timiditi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"timiditi"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"timiditi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"timiditi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"timiditi"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"timiditi":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"timiditi"},"content":"todo x","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"timiditi"},"content":"event y /at 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"timiditi"},"content":"deadline z /by 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"timiditi"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"timiditi":4}}]
