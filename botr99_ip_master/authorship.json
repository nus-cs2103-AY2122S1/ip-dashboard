[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"botr99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"botr99"},"content":"    private String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"botr99"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"botr99"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"botr99"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"botr99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"botr99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"botr99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"botr99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"botr99":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"botr99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"botr99"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"botr99"},"content":"    private static Task[] tasks \u003d new Task[100];","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"botr99"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"botr99"},"content":"    private static String formatDukeResponse(String response) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"botr99"},"content":"        return HORIZONTAL_LINE + \"\\n\" + response + \"\\n\" + HORIZONTAL_LINE + \"\\n\";","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"botr99"},"content":"    private static void printWelcomeMessage() {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"botr99"},"content":"        String welcomeMessage \u003d logo + \"Hello! I\u0027m Duke.\\n\" + \"What can I do for you?\";","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"botr99"},"content":"        System.out.println(formatDukeResponse(welcomeMessage));","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"botr99"},"content":"    private static void printExitMessage() {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"botr99"},"content":"        String exitMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"botr99"},"content":"        System.out.println(formatDukeResponse(exitMessage));","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"botr99"},"content":"    private static void addTask(String description) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"botr99"},"content":"        if (description \u003d\u003d null || description.equals(\"\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"botr99"},"content":"            throw new DukeException(\"Oops!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"botr99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"botr99"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"botr99"},"content":"        tasks[taskCount] \u003d task;","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"botr99"},"content":"        taskCount++;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"botr99"},"content":"        printAddTaskMessage(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"botr99"},"content":"    private static void addTask(String descriptionAndTime, String command) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"botr99"},"content":"        String[] splitDescriptionAndTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"botr99"},"content":"        Task task;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"botr99"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"botr99"},"content":"            if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"botr99"},"content":"                splitDescriptionAndTime \u003d descriptionAndTime.split(\" /by \");","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"botr99"},"content":"                task \u003d new Deadline(splitDescriptionAndTime[0].trim(), splitDescriptionAndTime[1].trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"botr99"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"botr99"},"content":"                splitDescriptionAndTime \u003d descriptionAndTime.split(\" /at \");","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"botr99"},"content":"                task \u003d new Event(splitDescriptionAndTime[0].trim(), splitDescriptionAndTime[1].trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"botr99"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"botr99"},"content":"                printInvalidCommandMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"botr99"},"content":"                return;","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"botr99"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"botr99"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"botr99"},"content":"            throw new DukeException(\"Oops!!! Deadlines or events should contain a description, followed by \" +","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"botr99"},"content":"                    \"a /by or /at respectively, followed by a date or a time.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"botr99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"botr99"},"content":"        tasks[taskCount] \u003d task;","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"botr99"},"content":"        taskCount++;","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"botr99"},"content":"        printAddTaskMessage(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"botr99"},"content":"    private static void markTask(String taskNumberString) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"botr99"},"content":"        int taskNumber;","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"botr99"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"botr99"},"content":"            taskNumber \u003d Integer.parseInt(taskNumberString);","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"botr99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"botr99"},"content":"            throw new DukeException(\"Oops!!! The done command should be followed by an integer.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"botr99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"botr99"},"content":"        if (taskNumber \u003c 1 || taskNumber \u003e taskCount) {","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"botr99"},"content":"            throw new DukeException(\"Oops!!! The task number provided is not valid.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"botr99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"botr99"},"content":"        Task task \u003d tasks[taskNumber - 1];","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"botr99"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"botr99"},"content":"        printMarkTaskDoneMessage(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"botr99"},"content":"    private static void printAddTaskMessage(Task task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"botr99"},"content":"        System.out.println(formatDukeResponse(\"Got it. I\u0027ve added this task:\\n\" + task","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"botr99"},"content":"                + \"\\nNow you have \" + taskCount","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"botr99"},"content":"                + (taskCount \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in the list.\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"botr99"},"content":"    private static void printTasksMessage() {","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"botr99"},"content":"        StringBuilder tasksMessage \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"botr99"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"botr99"},"content":"            int taskNumber \u003d i + 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"botr99"},"content":"            tasksMessage.append(\"\\n\").append(taskNumber).append(\".\").append(tasks[i]);","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"botr99"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"botr99"},"content":"        System.out.println(formatDukeResponse(tasksMessage.toString()));","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"botr99"},"content":"    private static void printMarkTaskDoneMessage(Task task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"botr99"},"content":"        System.out.println(formatDukeResponse(\"Nice! I\u0027ve marked this task as done:\\n\" + task));","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"botr99"},"content":"    private static void printInvalidCommandMessage() {","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"botr99"},"content":"        System.out.println(formatDukeResponse(\"Oops!!! I\u0027m sorry, but I don\u0027t know what that means.\"));","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"botr99"},"content":"    private static void printDukeExceptionMessage(DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"botr99"},"content":"        System.out.println(formatDukeResponse(e.getMessage()));","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"botr99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"botr99"},"content":"        printWelcomeMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"botr99"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"botr99"},"content":"        while (true) {","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"botr99"},"content":"            String[] userInput \u003d sc.nextLine().trim().split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"botr99"},"content":"            String command \u003d userInput[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"botr99"},"content":"            String action \u003d userInput.length \u003d\u003d 2 ? userInput[1].trim() : \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"botr99"},"content":"            if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"botr99"},"content":"                sc.close();","lastModifiedDate":"2021-08-16"},{"lineNumber":120,"author":{"gitId":"botr99"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":121,"author":{"gitId":"botr99"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":122,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"botr99"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"botr99"},"content":"                switch (command) {","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"botr99"},"content":"                case \"list\":","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"botr99"},"content":"                    printTasksMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":127,"author":{"gitId":"botr99"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"botr99"},"content":"                case \"done\":","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"botr99"},"content":"                    markTask(action);","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"botr99"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"botr99"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"botr99"},"content":"                    addTask(action);","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"botr99"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"botr99"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"botr99"},"content":"                case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"botr99"},"content":"                    addTask(action, command);","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"botr99"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"botr99"},"content":"                default:","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"botr99"},"content":"                    printInvalidCommandMessage();","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"botr99"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"botr99"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"botr99"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"botr99"},"content":"                printDukeExceptionMessage(e);","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"botr99"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"botr99"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":146,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":147,"author":{"gitId":"botr99"},"content":"        printExitMessage();","lastModifiedDate":"2021-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"botr99":141,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"botr99"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"botr99"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"botr99"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"botr99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"botr99":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"botr99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"botr99"},"content":"    private String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"botr99"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"botr99"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"botr99"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"botr99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"botr99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"botr99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"botr99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"botr99":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"botr99"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"botr99"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"botr99"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"botr99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"botr99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"botr99"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"botr99"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"botr99"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"botr99"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"botr99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"botr99"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"botr99"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"botr99":19}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"botr99"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"botr99"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"botr99"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"botr99"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"botr99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"botr99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"botr99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"botr99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"botr99"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"botr99":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"botr99"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"botr99"},"content":"   deadline   return book   /by   Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"botr99"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"botr99"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"botr99"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"botr99"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"botr99"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"botr99"},"content":"done 0","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"botr99"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"botr99"},"content":"done hello","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"botr99"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"botr99"},"content":"deadline /by 3pm","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"botr99"},"content":"event meet friends /at","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"botr99"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"botr99"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"botr99"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"botr99":16}}]
