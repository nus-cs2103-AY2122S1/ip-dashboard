[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"/** CLI Task manager based on Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":" *","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":" * @author bhcs","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"  /**","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"   * Begins main process of Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"   *","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"   * @param args java command line arguments.","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"   */","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    String logo \u003d","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"      \" ____        _        \\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"      \"|  _ \\\\ _   _| | _____ \\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"      \"| | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"      \"| |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"      \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"    System.out.println(\"Hello from\\n\" + logo + \u0027\\n\u0027 + \"What can I do for you?\");","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    monitor();","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"  private static void monitor() {","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    DukeStorage.readFromDatabase();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"      String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"      DukeLogic.takeInput(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"      if (input.strip().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"      }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"    sc.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"    DukeStorage.writeToDatabase();","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"  /**","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"   * Function to print indented, outlined output to console.","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"   *","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"   * @param output Multi-line or single line string.","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"   */","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"  protected static void renderOutput(String output) {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"    output.lines().map(x -\u003e \"     \" + x).forEach(System.out::println);","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"    System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bharathcs":46,"-":5}},{"path":"src/main/java/DukeLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"import tasks.InvalidTaskException;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":" * Handles matching input to behaviour and execution action.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":" * Using function `takeInput` with the input string will run the function","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":" * and return true or false (whether or not to continue monitoring input)","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"public class DukeLogic {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"  private static ArrayList\u003cTask\u003e tasks \u003d DukeStorage.tasksList;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"  enum Actions {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    DELETE,","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    MARK_COMPLETE,","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"    //  EDIT","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    //  MARK_INCOMPLETE,","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"  /**","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"   * Takes in and handles input for Duke (the logic).","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"   *","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"   * @param input User input passed in to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"   * @return boolean of whether or not to continue Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"   */","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"  public static boolean takeInput(String input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    if (matches(\"bye\", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"      Duke.renderOutput(\"Goodbye!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"      return false;","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    } else if (matches(\"\", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"      return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    } else if (matches(\"list\", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"      listTasks();","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"      return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"    } else if (startsWithOrEquals(\"done \", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"      doTaskAction(getArgs(input, \"done \"), Actions.MARK_COMPLETE);","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"      return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"    } else if (startsWithOrEquals(\"delete \", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"      doTaskAction(getArgs(input, \"delete \"), Actions.DELETE);","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"      return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"    } else if (startsWithOrEquals(\"todo \", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"      addTask(getArgs(input, \"todo \"), Task.Type.TODO);","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"      return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"    } else if (startsWithOrEquals(\"deadline \", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"      addTask(getArgs(input, \"deadline \"), Task.Type.DEADLINE);","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"      return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"    } else if (startsWithOrEquals(\"event \", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"      addTask(getArgs(input, \"event \"), Task.Type.EVENT);","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"      return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"    } else if (matches(\"save\", input)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"      DukeStorage.writeToDatabase();","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"      DukeStorage.readFromDatabase();","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"      return true;","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"    } else if (matches(\"reset\", input)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"      tasks.clear();","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"      return true;","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"    } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"      Duke.renderOutput(\"I did not understand, sorry!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"      return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"  private static boolean matches(String phrase, String input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"    return input.trim().equalsIgnoreCase(phrase);","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"  private static boolean startsWithOrEquals(String phrase, String input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"    return input.trim().startsWith(phrase) || input.trim().equalsIgnoreCase(phrase.trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"  private static boolean contains(String phrase, String input) {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"    return input.trim().contains(phrase);","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"  private static String getArgs(String input, String command) {","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"    return input.substring(input.toLowerCase().indexOf(command) + command.length()).trim();","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"  private static void listTasks() {","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"    int taskCount \u003d 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"    StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"    for (Task task : tasks) {","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"      result.append(String.format(\"%2d. %s\\n\", taskCount++, task));","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"    Duke.renderOutput(result.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"  private static void addTask(String taskName, Task.Type type) {","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"    try {","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"      Task task \u003d Task.createTask(taskName.trim(), type);","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"      tasks.add(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"      Duke.renderOutput(\"added: \" + task);","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"    } catch (InvalidTaskException err) {","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"      Duke.renderOutput(err.getMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"  private static void doTaskAction(String taskNumStr, Actions action) {","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"    try {","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"      int taskNum \u003d Integer.parseInt(taskNumStr);","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"      Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"      String output \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"      switch (action) {","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"        case DELETE:","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"          tasks.remove(taskNum - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"          output +\u003d \"Noted. I have deleted the following:\\n    \" + task;","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"          output +\u003d String.format(\"%s\\nYou now have %d tasks in the list\", output, tasks.size());","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"          break;","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"        case MARK_COMPLETE:","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"bharathcs"},"content":"          task.markComplete(true);","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"          output +\u003d \"Great! I\u0027ve marked this task as done:\\n    \" + task;","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"          break;","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"        default:","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"          throw new IllegalArgumentException(\"Invalid action\");","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"      }","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"bharathcs"},"content":"      Duke.renderOutput(output);","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"    } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"      Duke.renderOutput(","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"        \"Which task are you interacting with?\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"bharathcs"},"content":"        \"USAGE:\\n{action} {task number}\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"        \"Example: \u003e done 4\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"        \"         \u003e delete 2\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"        \"Try the `list` command to see the list of tasks\"","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"      );","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"    } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"      Duke.renderOutput(\"There is no task at that index.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":130}},{"path":"src/main/java/DukeStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":" * Handle database data and operations for Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":" * Source of truth for the task list as well as able to write to and read from","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":" * the database as necessary.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"public class DukeStorage {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"  public static final ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"  /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"   * Checks for the save file, and if it exists, read from it to restore tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"   * Relies on the Task class to handle conversions to and from a task object to","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"   * a string stored in the database.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"   */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"  public static void readFromDatabase() {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    String dukeLocation \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"    Path filePath \u003d Paths.get(dukeLocation, \"data\", \"tasks\");","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"    if (!Files.isRegularFile(filePath)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"      return;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    Duke.renderOutput(\"Reading last save  - \" + filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    ArrayList\u003cString\u003e failedParses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"    try {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"      Stream\u003cString\u003e databaseToString \u003d Files.lines(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"      tasksList.clear();","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"      databaseToString.forEach(","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"        taskString -\u003e {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"          try {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"            Task task \u003d Task.stringToTask(taskString);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"            tasksList.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"          } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"            failedParses.add(taskString);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"          }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"      );","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"      databaseToString.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"    } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"      Duke.renderOutput(\"Save file could not be read. It will be wiped on the next save.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"    if (failedParses.size() \u003e 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"      String status \u003d String.format(","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"        \"Save file was read partially. %d tasks added, %d tasks could not be understood:\\n\",","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"        tasksList.size(),","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        failedParses.size()","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"      );","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"      status +\u003d","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"        \"Failed to parse\\n:\" + failedParses.stream().map(x -\u003e x + \"\\n\").reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"      Duke.renderOutput(status);","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"  /**","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"   * Updates the user save file with the latest list of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"   * If such a save file does not exist, it will create it.","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"   */","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"  public static void writeToDatabase() {","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"    String dukeLocation \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"    Path folderPath \u003d Paths.get(dukeLocation, \"data\");","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"    Path filePath \u003d Paths.get(dukeLocation, \"data\", \"tasks\");","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"    StringBuilder save \u003d new StringBuilder();","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"    tasksList.forEach(x -\u003e save.append(x.taskToString() + System.lineSeparator()));","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"    byte[] saveResult \u003d save.toString().getBytes();","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"    Duke.renderOutput(\"Saving tasks  - \" + filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"    Duke.renderOutput(\"DEBUG: Text to be saved \\n\" + save);","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"    try {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"      if (!Files.isDirectory(folderPath)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"        Files.createDirectory(folderPath);","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"      }","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"      if (Files.isRegularFile(filePath)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"        Files.delete(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"      }","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"      Files.write(filePath, saveResult);","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"    } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"      // Potentially add why it failed (e.g. no write permissions in folder)","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"      Duke.renderOutput(\"File could not be saved. - \" + e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"bharathcs":94}},{"path":"src/main/java/tasks/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":" * Class to handle the logic of parsing, with static fields to provide regex expr.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"public class DateParser {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"  public static final String REGEX_DATE \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"  public static final String REGEX_TIME \u003d \"\\\\d{4}\";","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"  public static final String REGEX_VALID_INPUT \u003d REGEX_DATE + \"(\\\\s+\" + REGEX_TIME + \")?\";","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"  /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"   * Parses date time strings in the form of YYYY-MM-DD HHMM where the time is optional.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"   * If the format is not expected, the LocalDateTime.parse function will fail and throw","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"   * DateTimeParseException.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"   *","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"   * @throws DateTimeParseException","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"   * @param dateTimeString","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"   * @return","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"   */","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"  public static LocalDateTime parseDateTimeInput(String dateTimeString)","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    throws DateTimeParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    Matcher dateMatch \u003d Pattern.compile(REGEX_DATE).matcher(dateTimeString);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    Matcher timeMatch \u003d Pattern.compile(REGEX_TIME).matcher(dateTimeString);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    String isoDateTime \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    if (!dateMatch.find()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"      return LocalDateTime.parse(\"\");","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"    isoDateTime \u003d dateMatch.group();","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"    String timePortion \u003d \"0000\"; // default time is midnight","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"    if (timeMatch.find(dateMatch.end())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"      timePortion \u003d timeMatch.group();","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"    isoDateTime +\u003d \"T\" + timePortion.substring(0, 2) + \":\" + timePortion.substring(2) + \":00\";","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"    return LocalDateTime.parse(isoDateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"  public static String toHumanReadable(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"    return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:mm a\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"  public static String toDatabaseFormat(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"    return dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-mm-dd HHmm\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"/*","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"Notes for REGEX:","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"(19|20)\\d\\d[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"1900-01-01 to 2099-12-31, with space, dot, slash or hyphen as separators","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"([0-2]?\\d|3[0-1])[- /][a-zA-Z]{3,}[- /](19|20)\\d{2}","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"2-xYz","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"2-xyZ","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"2-Xyz","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"02-XYZ to 31-XYZ","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"followed by another separator then a year (1900-2099)","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"separator can be space, hyphen or forward slash","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"(([01]\\d|2[0-3])[0-5]\\d)","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"0000 - 2359","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"(0?[1-9]|1[0-2])[:.]?([0-5][0-9])?\\s?(pm|am|PM|AM)","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"2 PM","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"2.30 PM","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"02.30 PM","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"02:30 PM","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"hours from 1-12, minutes from 00 - 59","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"followed by AM/PM/pm/am, preceding space not necessary.","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"bharathcs":78}},{"path":"src/main/java/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package tasks;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":" * Handles tasks that have a single date.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"  private LocalDateTime date;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"  public DeadlineTask(String title, LocalDateTime date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"    super(title, Type.DEADLINE);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    this.date \u003d date;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"  @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"  public String taskToString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"    return super.taskToString() + DateParser.toDatabaseFormat(this.date);","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"  @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"  public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    return (","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"      \"[D] \" + super.toString() + String.format(\" (by: %s)\", DateParser.toHumanReadable(this.date))","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":28}},{"path":"src/main/java/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package tasks;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":" * Handles tasks that have a start and end date.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"  private LocalDateTime startDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"  private LocalDateTime endDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"  public EventTask(String title, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    super(title, Type.EVENT);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    this.startDateTime \u003d startDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    this.endDateTime \u003d endDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"  @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"  public String taskToString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"    return (","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"      super.taskToString() +","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"      String.format(","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"        \"%s - %s\",","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"        DateParser.toDatabaseFormat(this.startDateTime) +","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"        DateParser.toDatabaseFormat(this.startDateTime)","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"      )","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"  @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"  public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    return (","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"      \"[E] \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"      super.toString() +","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"      String.format(","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        \" (at: %s - %s)\",","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"        DateParser.toHumanReadable(startDateTime),","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"        DateParser.toHumanReadable(endDateTime)","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"      )","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"    );","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":43}},{"path":"src/main/java/tasks/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package tasks;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":" * This exception indicates a task of the right type was not returned.","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"public class InvalidTaskException extends IllegalArgumentException {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"  InvalidTaskException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"    super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":11}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package tasks;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":" * Task class that encapsulate task behaviour and data.","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"  /**","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"   * TODO: task without a date","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"   * EVENT: task with a start date and end date","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"   * DEADLINE: task with a single date associated with it.","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"   */","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"  public enum Type {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"    TODO,","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    EVENT,","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"  private static final String DELIMITER \u003d \"--|--\";","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"  private final String title;","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"  private final Type type;","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"  private boolean isComplete \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"  /**","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"   * Static factory method for creating Tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"   *","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"   * @param inputString Includes title and date string (if applicable).","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"   * @param type Task Type (enum)","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"   * @return instance of a subclass of Task.","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"   */","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"  public static Task createTask(String inputString, Type type) {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"    inputString \u003d inputString.trim();","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"    String[] args;","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"    switch (type) {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"      case TODO:","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"        return new TodoTask(inputString);","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"      case EVENT:","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        args \u003d inputString.split(\" /at \");","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"          throw new InvalidTaskException(\"Expected \u0027{title} /at {date}\u0027 for event tasks\");","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"        LocalDateTime startDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"        LocalDateTime endDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"          String[] arr \u003d args[1].split(\" - \");","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"          if (arr.length !\u003d 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"            DateParser.parseDateTimeInput(\"\"); // throws error","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"          }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"          startDate \u003d DateParser.parseDateTimeInput(arr[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"          endDate \u003d DateParser.parseDateTimeInput(arr[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"          throw new InvalidTaskException(","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"            \"The two dates for deadline creation could not be parsed. Expected:\\n\" +","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"            \"2 dates separated by \u0027 - \u0027. Dates come in the forms: \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"            \"\u0027YYYY-MM-DD\u0027 or \u0027YYYY-MM-DD HHMM\u0027 where time comes in 24 hour format.\"","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"          );","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"        return new EventTask(args[0].trim(), startDate, endDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"      case DEADLINE:","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"        args \u003d inputString.split(\" /by \");","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"          throw new InvalidTaskException(\"Expected \u0027{title} /by {dates}\u0027 for deadline tasks\");","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        LocalDateTime date;","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"          date \u003d DateParser.parseDateTimeInput(args[1].trim());","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"          throw new InvalidTaskException(","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"            \"Date for event creation could not be parsed. Expected:\\n\" +","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"            \"\u0027YYYY-MM-DD\u0027 or \u0027YYYY-MM-DD HHMM\u0027 where time comes in 24 hour format.\"","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"          );","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"        return new DeadlineTask(args[0].trim(), date);","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"      default:","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"        throw new InvalidTaskException(\"Task type not expected.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"  protected Task(String title, Type type) {","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"    title \u003d title.trim();","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"    if (title.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"      throw new InvalidTaskException(\"Task description cannot be empty\");","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"    this.title \u003d title;","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"    this.type \u003d type;","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"  /**","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"   * Converts string (as stored in database) to a task.","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"   * Throws an error if there is an issue parsing the string.","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"   *","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"   * @param stringifiedTask","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"   * @return Task object","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"   */","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"  public static Task stringToTask(String stringifiedTask) {","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"    // {TYPE}|{DESCRIPTION}|{DATE or DATES or BLANK}","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"    String[] taskAttr \u003d stringifiedTask.split(Pattern.quote(DELIMITER));","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"    if (taskAttr.length \u003c 2 || taskAttr.length \u003e 3) {","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"      throw new IllegalArgumentException(","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"        \"This task is not correctly stringified. - \" + stringifiedTask","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"      );","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"    String type \u003d taskAttr[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"    String descr \u003d taskAttr[1];","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"bharathcs"},"content":"    String date \u003d taskAttr.length \u003d\u003d 2 ? \"\" : taskAttr[2];","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"    switch (type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"      case \"T\":","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"        return Task.createTask(descr, Task.Type.TODO);","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"      case \"E\":","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"bharathcs"},"content":"        return Task.createTask(String.format(\"%s /at %s\", descr, date), Task.Type.EVENT);","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"      case \"D\":","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"        return Task.createTask(String.format(\"%s /by %s\", descr, date), Task.Type.DEADLINE);","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"      default:","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"bharathcs"},"content":"        throw new IllegalArgumentException(","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"          \"This task is not correctly stringified. - \" + stringifiedTask","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"  /**","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"   * Converts task into a database ready String representation.","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"   *","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"   * @return String representation of the task to be saved in database.","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"   */","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"  public String taskToString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"    String type;","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"    switch (this.type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"      case EVENT:","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"        type \u003d \"E\";","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"bharathcs"},"content":"        break;","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"      case DEADLINE:","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"bharathcs"},"content":"        type \u003d \"D\";","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"bharathcs"},"content":"        break;","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"bharathcs"},"content":"      case TODO:","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"bharathcs"},"content":"        type \u003d \"T\";","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"bharathcs"},"content":"        break;","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"bharathcs"},"content":"      default:","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"        throw new IllegalArgumentException(\"Task type enums inconsistently applied\");","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"    return String.format(\"%s%s%s%s\", type, DELIMITER, this.title, DELIMITER);","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"bharathcs"},"content":"  /**","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"bharathcs"},"content":"   * Set a task to be completed.","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"bharathcs"},"content":"   *","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"bharathcs"},"content":"   * @param isComplete new completion status","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"bharathcs"},"content":"   */","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"bharathcs"},"content":"  public void markComplete(boolean isComplete) {","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"bharathcs"},"content":"    this.isComplete \u003d isComplete;","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"bharathcs"},"content":"  @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"bharathcs"},"content":"  public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"bharathcs"},"content":"    return (isComplete ? \"[x] \" : \"[ ] \") + this.title;","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":163}},{"path":"src/main/java/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package tasks;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":" * Handles tasks that have no dates.","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"  public TodoTask(String title) {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"    super(title, Type.TODO);","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"  @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"  public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    return \"[T] \" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"  }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"foo","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"todo find a book","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"deadline learn magic","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"deadline learn magic /by tomorrow","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"event visiting koi /by today","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"event visiting koi /at 23 Apr 2998 4 pm","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"deadline /by","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"event /at","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"deadline foo /by","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"event foo /at","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"deadline /by bar","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"event /at bar","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"delete","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"delete 9","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"delete foos","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"done 3","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":32}}]
