[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bharathcs":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"\u003cimg src\u003d\"Ui.png\" alt\u003d\"UI Screenshot\" width\u003d\"144\"/\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"Duke is a task manager in the form of a chat bot.","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"It can keep track of all your to-dos, events, and deadlines.","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"Give Duke commands using just your keyboard and it will answer.","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"### Keyboard-friendly chat bot GUI","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"Maximum efficiency with our Duke app. Simply type your commands and hit enter and see Duke\u0027s output in a friendly message-like interface.","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"### Add and manage your tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"Use our Todo, Deadline and Event tasks to keep track of everything in your life:","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"- **Todo**: a task that has no deadline","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"- **Deadline**: a task that needs to be completed by a certain date.","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"- **Event**: a task that must happen between a specified time interval.","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"You can add, mark as complete or delete tasks whenever you feel like it.","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"### Recall your tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"Use list and find to quickly list your tasks by urgency or to list tasks that match a particular query. ","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"### Create Tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"There are three types of tasks as listed in the [Add tasks section](#add-tasks). The syntax for creating each type is as follows:","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"todo {description}","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"deadline {description} /by {date}","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"event {description} /at {startDate} - {endDate}","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"Currently Duke supports date inputs in the form `YYYY-MM-DD`. You can also optionally include time in the 24 hour format as: `YYY-MM-DD HHmm`.","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"todo get a book","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"deadline Visit com 3 when it is completed /by 2040-10-10","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"event Enjoy this duke bot /at 2021-08-01 - 2021-12-31","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"Each of the commands will result in its own line of output:","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"added: [T] [ ] get a book","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"added: [D] [ ] Visit com 3 when it is completed (by: 10 Oct 2040, 12:00 AM)","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"added: [E] [ ] Enjoy this duke bot (at: 01 Aug 2021, 12:00 AM - 31 Dec 2021, 12:00 AM)","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"### List tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"Duke lets you easily view your tasks with the command `list`.","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"The listed tasks are automatically sorted by order of urgency (ascending chronologically). Todos, as they do not have any date are treated as having least urgency and will always be at the bottom of the list. Event tasks will go by their end date and deadlines naturally will use its date.","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"Tasks will present with a checkbox (marking complete or incomplete `[x]` `[ ]`), the type of task and the description, with dates if applicable.","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"For user convenience, the dates are displayed in a more natural format (e.g. 12 Jan 2021, 04:30 PM).","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"list","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"With the inputs from the [Create Task section](#create-tasks):","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"[E] [ ] Enjoy this duke bot (at: 01 Aug 2021, 12:00 AM - 31 Dec 2021, 12:00 AM)","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"[D] [ ] Visit com 3 when it is completed (by: 10 Oct 2040, 12:00 AM)","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"[T] [ ] get a book","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"### Find Tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"Duke will search through all your tasks and present you with the tasks that even partially match the search query you provide with `find {query}`","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"find duke","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"With the inputs from the [Create Task section](#create-tasks):","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"[E] [ ] Enjoy this duke bot (at: 01 Aug 2021, 12:00 AM - 31 Dec 2021, 12:00 AM)","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"### Done Tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"The user can mark any task as done with the command `done {task index}`. ","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"The task index can be identified by running the list command first.","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"done 1","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"With the inputs from the [Create Task section](#create-tasks):","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":121,"author":{"gitId":"bharathcs"},"content":"Great! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"  [T] [x] get a book","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"### Delete Tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"The user can mark any task as done with the command `delete {task index}`. ","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"The task index can be identified by running the list command first.","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"Beware that there is no recover function or backup copy.","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"delete 1","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"bharathcs"},"content":"With the inputs from the [Create Task section](#create-tasks):","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"bharathcs"},"content":"Noted. I have deleted the following","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"bharathcs"},"content":"  [T] [x] get a book","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"You know have 2 tasks in the list","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"```","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"bharathcs":121,"-":26}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"import duke.controllers.Main;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"bharathcs":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":" * CLI Task manager based on Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":" *","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":" * @author bhcs","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"public class Duke {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"     * Instantiates the Duke object and its required components.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"    public Duke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"        this.tasks \u003d storage.readFromDatabase();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"        this.parser \u003d new Parser(this.tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"        String response \u003d parser.takeInput(input);","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"        storage.writeToDatabase(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"        return response;","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bharathcs":28,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.List;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import duke.tasks.InvalidTaskException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":" * Handles matching input to behaviour and execution action.","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":" * Using function `takeInput` with the input string will run the function","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":" * and return true or false (whether or not to continue monitoring input)","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    protected Parser(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    enum Actions {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"        DELETE,","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"        MARK_COMPLETE,","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"     * Takes in and handles input for Duke (the logic).","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"     * @param input User input passed in to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"     * @return String result to be output","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"    public String takeInput(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        if (matches(\"bye\", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"                public void run() {","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"                    Platform.exit();","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"                    System.exit(0);","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"            }, 1600);","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"            return \"Goodbye!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"        } else if (matches(\"\", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"            return \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"        } else if (matches(\"list\", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"            return listTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"        } else if (startsWithOrEquals(\"find \", input)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"            return findTasks(getArgs(input, \"find \"));","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"        } else if (startsWithOrEquals(\"done \", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"            return doTaskAction(getArgs(input, \"done \"), Actions.MARK_COMPLETE);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        } else if (startsWithOrEquals(\"delete \", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"            return doTaskAction(getArgs(input, \"delete \"), Actions.DELETE);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"        } else if (startsWithOrEquals(\"todo \", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"            return addTask(getArgs(input, \"todo \"), Task.Type.TODO);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"        } else if (startsWithOrEquals(\"deadline \", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"            return addTask(getArgs(input, \"deadline \"), Task.Type.DEADLINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"        } else if (startsWithOrEquals(\"event \", input)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"            return addTask(getArgs(input, \"event \"), Task.Type.EVENT);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"        } else if (matches(\"reset\", input)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"            tasks.clear();","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"            assert tasks.size() \u003d\u003d 0 : \"Tasks were not cleared\";","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"            return \"Cleared\";","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"            return \"I did not understand, sorry!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"    private boolean matches(String phrase, String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"        return input.trim().equalsIgnoreCase(phrase);","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"    private boolean startsWithOrEquals(String phrase, String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"        return input.trim().startsWith(phrase) || input.trim().equalsIgnoreCase(phrase.trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"    private boolean contains(String phrase, String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"        return input.trim().contains(phrase);","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"    private String getArgs(String input, String command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"        return input.substring(input.toLowerCase().indexOf(command) + command.length()).trim();","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"    private String listTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"        int taskCount \u003d 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"        List\u003cTask\u003e taskList \u003d this.tasks.stream().sorted(Task::chronologicalComparator).collect(Collectors.toList());","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"            result.append(String.format(\"%2d. %s\\n\", taskCount++, task));","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"        return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"    private String findTasks(String searchQuery) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"        int taskCount \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"        Stream\u003cTask\u003e filteredTasks \u003d this.tasks.stream().filter(task -\u003e task.toString().contains(searchQuery));","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"        for (Task task : filteredTasks.collect(Collectors.toList())) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"            result.append(String.format(\"%2d. %s\\n\", taskCount++, task));","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"        return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"    private String addTask(String taskName, Task.Type type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"bharathcs"},"content":"            Task task \u003d Task.createTask(taskName.trim(), type);","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"            return \"added: \" + task;","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"        } catch (InvalidTaskException err) {","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"            return err.getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"    private String doTaskAction(String taskNumStr, Actions action) {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"bharathcs"},"content":"            int taskNum \u003d Integer.parseInt(taskNumStr);","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"            Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"            String output \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"            switch (action) {","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"            case DELETE:","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"                tasks.remove(taskNum - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"                output +\u003d \"Noted. I have deleted the following:\\n    \" + task;","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"                output +\u003d String.format(","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"                    \"\\nYou now have %d tasks in the list\", tasks.size());","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"            case MARK_COMPLETE:","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"                task.setComplete(true);","lastModifiedDate":"2021-08-30"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"                output +\u003d \"Great! I\u0027ve marked this task as done:\\n    \" + task;","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"            default:","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"                assert false : \"Action not in enum Action\";","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"bharathcs"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"            return output;","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"bharathcs"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"bharathcs"},"content":"            return \"Which task are you interacting with?\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"bharathcs"},"content":"                + \"USAGE:\\n{action} {task number}\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"bharathcs"},"content":"                + \"Example: \u003e done 4\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"bharathcs"},"content":"                + \"         \u003e delete 2\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"bharathcs"},"content":"                + \"Try the `list` command to see the list of tasks\";","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"            return \"There is no task at that index.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":149}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":" * Handle database data and operations for Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":" * Source of truth for the task list as well as able to write to and read from","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":" * the database as necessary.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"     * Checks for the save file, and if it exists, read from it to restore tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"     * Relies on the Task class to handle conversions to and from a task object to","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"     * a string stored in the database.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    public TaskList readFromDatabase() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"        String dukeLocation \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"        Path filePath \u003d Paths.get(dukeLocation, \"data\", \"tasks.txt\");","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"        if (!Files.isRegularFile(filePath)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"            return new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        System.out.println(\"Reading last save  - \" + filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        ArrayList\u003cString\u003e failedParses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        ArrayList\u003cTask\u003e taskArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"        Stream\u003cString\u003e databaseToString;","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"            databaseToString \u003d Files.lines(filePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"            databaseToString.forEach(convertToTaskAndAppendTo(taskArr, failedParses));","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"            databaseToString.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"            System.out.println(\"Save file could not be read. It will be wiped on the next save.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"        if (failedParses.size() \u003e 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"            String status \u003d String.format(","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"                \"Save file was read partially. %d tasks added, %d tasks not understood:\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"                taskArr.size(),","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"                failedParses.size()","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"            );","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"            status +\u003d \"Failed to parse\\n:\";","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"            status +\u003d failedParses.stream().map(x -\u003e x + \"\\n\").reduce(\"\", (a, b) -\u003e a + b);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"            System.out.println(status);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"        return new TaskList(taskArr);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"     * Updates the user save file with the latest list of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"     * If such a save file does not exist, it will create it.","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"    public void writeToDatabase(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"        String dukeLocation \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"        Path folderPath \u003d Paths.get(dukeLocation, \"data\");","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"        Path filePath \u003d Paths.get(dukeLocation, \"data\", \"tasks.txt\");","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        StringBuilder save \u003d new StringBuilder();","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"        taskList","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"            .stream()","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"            .forEach(x -\u003e save.append(x.convertToDatabaseFormat()).append(System.lineSeparator()));","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"        byte[] saveResult \u003d save.toString().getBytes();","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"        System.out.println(\"Saving tasks  - \" + filePath);","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"        System.out.println(\"DEBUG: Text to be saved \\n\" + save);","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"            if (!Files.isDirectory(folderPath)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"                Files.createDirectory(folderPath);","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"            if (Files.isRegularFile(filePath)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"                Files.delete(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"            Files.write(filePath, saveResult);","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"            // Potentially add why it failed (e.g. no write permissions in folder)","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"            System.out.println(\"File could not be saved. - \" + e.getMessage());","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"    private static Consumer\u003cString\u003e convertToTaskAndAppendTo(ArrayList\u003cTask\u003e taskArr, ArrayList\u003cString\u003e failedParses) {","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"        return taskString -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"                Task task \u003d Task.parseTaskFromDatabase(taskString);","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"                taskArr.add(task);","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"                failedParses.add(taskString);","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"        };","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"bharathcs":103}},{"path":"src/main/java/duke/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke.controllers;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.effect.DropShadow;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    private Rectangle profilePhotoRect;","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"        profilePhotoRect.setArcWidth(30.0); // Corner radius","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"        profilePhotoRect.setArcHeight(30.0);","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"        profilePhotoRect.setFill(new ImagePattern(img));","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"        profilePhotoRect.setEffect(new DropShadow(20, Color.BLACK)); // Shadow","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"    private void setDukeStyle() {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"        Color gray \u003d new Color(1, 1, 1, 0.88);","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"        setBackground(new Background(new BackgroundFill(gray, new CornerRadii(0), Insets.EMPTY)));","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"        db.setDukeStyle();","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"bharathcs":74}},{"path":"src/main/java/duke/controllers/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke.controllers;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"bharathcs":33}},{"path":"src/main/java/duke/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke.controllers;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserPortrait.png\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukePortrait.png\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        greetUser();","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"    private void greetUser() {","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"            DialogBox.getUserDialog(\"Duke?\", userImage),","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"            DialogBox.getDukeDialog(\"Yes my dude.\", dukeImage)","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"            DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"            userInput.setEditable(false);","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"bharathcs":64}},{"path":"src/main/java/duke/tasks/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":" * Class to handle the logic of parsing, with static fields to provide regex expr.","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"public class DateParser {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    public static final String REGEX_DATE \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    public static final String REGEX_TIME \u003d \"\\\\d{4}\";","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"     * Parses date time strings in the form of YYYY-MM-DD HHMM where the time is optional.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"     * If the format is not expected, the LocalDateTime.parse function will fail and throw","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"     * DateTimeParseException.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"     * @param dateTimeString YYY-MM-DD HHMM (Time in 24 HR form, but optional)","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"     * @return LocalDateTime object","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"     * @throws DateTimeParseException runtime exception when handling an invalid input.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    public static LocalDateTime parseDateTimeInput(String dateTimeString)","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"        throws DateTimeParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"        Matcher dateMatch \u003d Pattern.compile(REGEX_DATE).matcher(dateTimeString);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"        Matcher timeMatch \u003d Pattern.compile(REGEX_TIME).matcher(dateTimeString);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"        String isoDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"        if (!dateMatch.find()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"            return LocalDateTime.parse(\"\");","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        isoDateTime \u003d dateMatch.group();","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        String timePortion \u003d \"0000\"; // default time is midnight","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"        if (timeMatch.find(dateMatch.end())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"            timePortion \u003d timeMatch.group();","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"        isoDateTime +\u003d \"T\" + timePortion.substring(0, 2) + \":\" + timePortion.substring(2) + \":00\";","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"        return LocalDateTime.parse(isoDateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"     * Convert dates into a String form in readable, pretty standardised date format.","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"     * Use replace to ensure consistency (Github containers seem to output AM while","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"     * local dev computer outputs am).","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"     * @param dateTime object representing date.","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"     * @return dateString","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"    public static String toHumanReadable(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:mm a\");","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"        return dateTime.format(dtf).replace(\"am\", \"AM\").replace(\"pm\", \"PM\");","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"     * Convert dates into a String form in database ready standardised date format.","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"     * @param dateTime object representing date.","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"     * @return dateString","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"    public static String toDatabaseFormat(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"bharathcs":67}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.time.ZoneOffset;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":" * Handles tasks that have a single date.","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"     * Create new Deadline task.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"     * @param title description of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"     * @param date date the task is to be completed by.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    public DeadlineTask(String title, LocalDateTime date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"        super(title, Type.DEADLINE);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"     * Create a task with userInput by parsing to title and dates.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"     * @param inputString complete String input sent in by user.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"     * @throws InvalidTaskException when the input cannot be parsed.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"    public static DeadlineTask of(String inputString) throws InvalidTaskException {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"        String[] args \u003d inputString.split(\" /by \");","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"        if (args.length !\u003d 2) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"            throw new InvalidTaskException(\"Expected \u0027{title} /by {dates}\u0027 for deadline tasks\");","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        LocalDateTime date;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"            date \u003d DateParser.parseDateTimeInput(args[1].trim());","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"            throw new InvalidTaskException(","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"                \"Date for event creation could not be parsed. Expected:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"                    + \"\u0027YYYY-MM-DD\u0027 or \u0027YYYY-MM-DD HHMM\u0027 (Time in 24hr format).\"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"        return new DeadlineTask(args[0].trim(), date);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"    public String convertToDatabaseFormat() {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"        return super.convertToDatabaseFormat() + DateParser.toDatabaseFormat(this.date);","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"     * Get a long number representing the urgency (date) of a task.","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"     * @return numeric value to be used to compare tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"    protected long getUrgency() {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"        return this.date.toEpochSecond(ZoneOffset.UTC);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"        return \"[D] \"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"                + super.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"                + String.format(\" (by: %s)\", DateParser.toHumanReadable(this.date));","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":69}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.time.ZoneOffset;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":" * Handles tasks that have a start and end date.","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    private final LocalDateTime startDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"    private final LocalDateTime endDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"     * Create a task based on the title, startDateTime and endDateTime.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"     * @param title single line description of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"     * @param startDateTime start of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"     * @param endDateTime end of the event","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    public EventTask(String title, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"        super(title, Type.EVENT);","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"     * Create a task with userInput by parsing to title and dates.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"     * @param inputString complete String input sent in by user.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"     * @throws InvalidTaskException when the input cannot be parsed.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"    public static EventTask of(String inputString) throws InvalidTaskException {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        String[] userInput \u003d inputString.split(\" /at \");","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        if (userInput.length !\u003d 2) {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"            throw new InvalidTaskException(\"Expected \u0027{title} /at {date}\u0027 for event tasks\");","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"        LocalDateTime startDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"        LocalDateTime endDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"            String[] arr \u003d userInput[1].split(\" - \");","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"            if (arr.length !\u003d 2) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"                DateParser.parseDateTimeInput(\"\"); // throws error","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"            startDate \u003d DateParser.parseDateTimeInput(arr[0]);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"            endDate \u003d DateParser.parseDateTimeInput(arr[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"            throw new InvalidTaskException(","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"                \"The two dates for deadline creation could not be parsed. Expected:\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"                    + \"2 dates separated by \u0027 - \u0027. Dates come in the forms: \"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"                    + \"\u0027YYYY-MM-DD\u0027 or \u0027YYYY-MM-DD HHMM\u0027 (Time in 24hr format).\"","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"        return new EventTask(userInput[0].trim(), startDate, endDate);","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"    public String convertToDatabaseFormat() {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"        String dates \u003d String.format(","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"                \"%s - %s\",","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"                DateParser.toDatabaseFormat(this.startDateTime),","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"                DateParser.toDatabaseFormat(this.startDateTime)","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"        return super.convertToDatabaseFormat() + dates;","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"     * Get a long number representing the urgency (date) of a task.","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"     * @return numeric value to be used to compare tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"    protected long getUrgency() {","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"        return this.startDateTime.toEpochSecond(ZoneOffset.UTC);","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"        return String.format(","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"                \"[E] %s (at: %s - %s)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"                super.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"                DateParser.toHumanReadable(startDateTime),","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"                DateParser.toHumanReadable(endDateTime)","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":87}},{"path":"src/main/java/duke/tasks/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":" * This exception indicates a task of the right type was not returned.","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"public class InvalidTaskException extends IllegalArgumentException {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"    InvalidTaskException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":11}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":" * Task class that encapsulate task behaviour and data.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"    private static final String DELIMITER \u003d \"--|--\";","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    private final String title;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"    private final Type type;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    private boolean isComplete \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    protected Task(String title, Type type) {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"        title \u003d title.trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"        if (title.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"            throw new InvalidTaskException(\"Task description cannot be empty\");","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"    public static int chronologicalComparator(Task task, Task task1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"        return (int) (task.getUrgency() - task1.getUrgency());","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"     * Category of task.","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"    public enum Type {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"        TODO, // task without a date","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        EVENT, // task with a start date and end date","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        DEADLINE, // task with a single date associated with it.","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"     * Static factory method for creating Tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"     * @param inputString Includes title and date string (if applicable).","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"     * @param type        Task Type (enum)","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"     * @return instance of a subclass of Task.","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"    public static Task createTask(String inputString, Type type) {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"        inputString \u003d inputString.trim();","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"        switch (type) {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"        case TODO:","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"            return new TodoTask(inputString);","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"        case EVENT:","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"            return EventTask.of(inputString);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"            return DeadlineTask.of(inputString);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"        default:","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"            throw new InvalidTaskException(\"Task type not expected.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"     * Converts string (as stored in database) to a task.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"     * Throws an error if there is an issue parsing the string.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"     * @param taskInDatabaseForm task in string form read from last save.","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"     * @return Task object","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"    public static Task parseTaskFromDatabase(String taskInDatabaseForm) {","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"        // {isComplete}|{type}|{description}|{date or dates or blank}","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"        String[] taskAttributes \u003d taskInDatabaseForm.split(Pattern.quote(DELIMITER));","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        if (taskAttributes.length \u003c 3 || taskAttributes.length \u003e 4) {","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"                \"This string could not be parsed into a task. - \" + taskInDatabaseForm","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"            );","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"bharathcs"},"content":"        boolean isComplete \u003d Boolean.parseBoolean(taskAttributes[0]);","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"bharathcs"},"content":"        String type \u003d taskAttributes[1];","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"bharathcs"},"content":"        String description \u003d taskAttributes[2];","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"bharathcs"},"content":"        String date \u003d taskAttributes.length \u003d\u003d 3 ? \"\" : taskAttributes[3];","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"bharathcs"},"content":"        Task task;","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"bharathcs"},"content":"        switch (type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"bharathcs"},"content":"        case \"T\":","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"bharathcs"},"content":"            task \u003d Task.createTask(description, Task.Type.TODO);","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"bharathcs"},"content":"        case \"E\":","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"bharathcs"},"content":"            task \u003d","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"bharathcs"},"content":"                Task.createTask(","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"bharathcs"},"content":"                    String.format(\"%s /at %s\", description, date),","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"bharathcs"},"content":"                    Task.Type.EVENT","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"bharathcs"},"content":"                );","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"bharathcs"},"content":"        case \"D\":","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"bharathcs"},"content":"            task \u003d","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"bharathcs"},"content":"                Task.createTask(","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"bharathcs"},"content":"                    String.format(\"%s /by %s\", description, date),","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"bharathcs"},"content":"                    Task.Type.DEADLINE","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"bharathcs"},"content":"                );","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"bharathcs"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"bharathcs"},"content":"            throw new IllegalArgumentException(","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"bharathcs"},"content":"                \"This string could not be parsed into a task. - \" + taskInDatabaseForm","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"bharathcs"},"content":"            );","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"bharathcs"},"content":"        task.setComplete(isComplete);","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"bharathcs"},"content":"        return task;","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"bharathcs"},"content":"     * Converts task into a database ready String representation.","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"bharathcs"},"content":"     * @return String representation of the task to be saved in database.","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"bharathcs"},"content":"    public String convertToDatabaseFormat() {","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"bharathcs"},"content":"        String type \u003d \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"bharathcs"},"content":"        switch (this.type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"bharathcs"},"content":"        case EVENT:","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"bharathcs"},"content":"            type \u003d \"E\";","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"bharathcs"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"bharathcs"},"content":"            type \u003d \"D\";","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"bharathcs"},"content":"        case TODO:","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"bharathcs"},"content":"            type \u003d \"T\";","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"bharathcs"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"bharathcs"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"bharathcs"},"content":"            assert false : \"Task type not Event, Deadline or Todo\";","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"bharathcs"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"bharathcs"},"content":"        return String.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"bharathcs"},"content":"            \"%b%s%s%s%s%s\",","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"bharathcs"},"content":"            this.isComplete,","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"bharathcs"},"content":"            DELIMITER,","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"bharathcs"},"content":"            type,","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"bharathcs"},"content":"            DELIMITER,","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"bharathcs"},"content":"            this.title,","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"bharathcs"},"content":"            DELIMITER","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":142,"author":{"gitId":"bharathcs"},"content":"     * Get a long number representing the urgency (date) of a task.","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":144,"author":{"gitId":"bharathcs"},"content":"     * @return numeric value to be used to compare tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":145,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":146,"author":{"gitId":"bharathcs"},"content":"    protected abstract long getUrgency();","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":148,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"bharathcs"},"content":"     * Set a task to be completed.","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"bharathcs"},"content":"     * @param isComplete new completion status","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"bharathcs"},"content":"    public void setComplete(boolean isComplete) {","lastModifiedDate":"2021-08-30"},{"lineNumber":154,"author":{"gitId":"bharathcs"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"bharathcs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"bharathcs"},"content":"        return (isComplete ? \"[x] \" : \"[ ] \") + this.title;","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":161}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":" * Internal representation of list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"     * Appends specified task to the end of the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"     * @param t new Task","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"     * @return boolean - has adding of task succeeded.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    public boolean add(Task t) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"        return tasks.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"     * Returns the task at the specified position in this list.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"     * @param index index of the task to return","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"     * @return the element at the specified position in this list","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"     * @throws IndexOutOfBoundsException if there is no such index in list.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"     * Removes all tasks from internal list. List will be empty after this call.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"    public void clear() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"        tasks.clear();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bharathcs"},"content":"     * Removes a specific task from internal list. List will be empty after this call.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"bharathcs"},"content":"     * @param index index of the task to return","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"bharathcs"},"content":"     * @throws IndexOutOfBoundsException if there is no such index in list.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"bharathcs"},"content":"    public void remove(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"bharathcs"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"bharathcs"},"content":"     * Returns number of tasks in list.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"bharathcs"},"content":"     * @return integer number of tasks in list.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"bharathcs"},"content":"    public int size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"bharathcs"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"bharathcs"},"content":"     * Returns stream of Tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"bharathcs"},"content":"     * @return stream of Tasks in the list","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"bharathcs"},"content":"    public Stream\u003cTask\u003e stream() {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"bharathcs"},"content":"        return tasks.stream();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bharathcs":72}},{"path":"src/main/java/duke/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":" * Handles tasks that have no dates.","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"    public TodoTask(String title) {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"        super(title, Type.TODO);","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"     * Get a long number representing the urgency (date) of a task.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"     * @return numeric value to be used to compare tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    protected long getUrgency() {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"        return Long.MAX_VALUE;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"bharathcs":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"      \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"         \u003cInsets left\u003d\"16.0\" top\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"      \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"    \u003cRectangle fx:id\u003d\"profilePhotoRect\" height\u003d\"99.0\" pickOnBounds\u003d\"true\" width\u003d\"99.0\"\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"        \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"16.0\" right\u003d\"16.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"        \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    \u003c/Rectangle\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"bharathcs":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controllers.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"bharathcs":19}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bharathcs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bharathcs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bharathcs"},"content":"import duke.tasks.DateParser;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"bharathcs"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bharathcs"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bharathcs"},"content":"    public void eventTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bharathcs"},"content":"        Task event \u003d Task.createTask(\"Find magic potion\", Task.Type.TODO);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bharathcs"},"content":"        Assertions.assertEquals(","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bharathcs"},"content":"            \"[T] [ ] Find magic potion\",","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bharathcs"},"content":"            event.toString()","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bharathcs"},"content":"    public void eventTaskDB() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bharathcs"},"content":"        Task event \u003d Task.createTask(\"Find magic potion\", Task.Type.TODO);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bharathcs"},"content":"        Assertions.assertEquals(","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bharathcs"},"content":"            \"false--|--T--|--Find magic potion--|--\",","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bharathcs"},"content":"            event.convertToDatabaseFormat()","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bharathcs"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"bharathcs"},"content":"    public void testExceptionDate() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"bharathcs"},"content":"        LocalDateTime x \u003d DateParser.parseDateTimeInput(\"2020-04-01 0500\");","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"bharathcs"},"content":"        Assertions.assertEquals(","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bharathcs"},"content":"            \"2020-04-01 0500\",","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bharathcs"},"content":"            DateParser.toDatabaseFormat(x)","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bharathcs"},"content":"        Assertions.assertEquals(","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bharathcs"},"content":"            \"01 Apr 2020, 05:00 AM\",","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"bharathcs"},"content":"            DateParser.toHumanReadable(x)","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"bharathcs"},"content":"        );","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bharathcs"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bharathcs"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bharathcs"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bharathcs":42}}]
