[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanjiaxian99":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"tanjiaxian99"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"tanjiaxian99"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"tanjiaxian99":17,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"/** The main Duke class that encapsulates all the internal workings of the chatbot. */","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"    private String filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    private ResponseLogic responseLogic;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"     * The main Duke class that will be run.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"     * @param filePath The filepath of the saved file","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"        this.responseLogic \u003d new ResponseLogic();","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"     * Initializes the task list based on the text file.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"     * @return The response from initializing the task list.","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"    public String initializeTaskList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tanjiaxian99"},"content":"            assert tasks !\u003d null : \"Tasks variable is not initialized.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"tanjiaxian99"},"content":"            return responseLogic.welcomeResponse();","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"tanjiaxian99"},"content":"            new File(\"./data\").mkdirs();","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"            try {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"                File file \u003d new File(\"./data/task_list.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"tanjiaxian99"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"tanjiaxian99"},"content":"                this.tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"            } catch (IOException ioE) {","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"tanjiaxian99"},"content":"                System.out.println(ioE);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"tanjiaxian99"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"tanjiaxian99"},"content":"            return this.responseLogic.loadingErrorResponse(this.filePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns the chatbot\u0027s response to the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"tanjiaxian99"},"content":"     * @return The chatbot\u0027s response.","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tanjiaxian99"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"tanjiaxian99"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"tanjiaxian99"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"tanjiaxian99"},"content":"            assert c !\u003d null : \"c variable is not null\";","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"tanjiaxian99"},"content":"            return c.execute(this.tasks, this.responseLogic, this.storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"tanjiaxian99"},"content":"            return this.responseLogic.dukeExceptionResponse(e);","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"tanjiaxian99"},"content":"            return this.responseLogic.indexOutOfBoundsExceptionResponse();","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"            return this.responseLogic.numberFormatExceptionResponse();","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"tanjiaxian99"},"content":"            return this.responseLogic.loadingErrorResponse(this.filePath);","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"tanjiaxian99"},"content":"            return this.responseLogic.dateTimeParseExceptionResponse();","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tanjiaxian99":76,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"/** The class which encapsulates exceptions raised specifically by Duke. */","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"    /** Initialize the DukeException object with a message. */","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"tanjiaxian99":10}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"/** A launcher class to workaround classpath issues. */","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"tanjiaxian99":10}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"/** A GUI for Duke using FXML. */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"    private Duke duke \u003d new Duke(\"./data/task_list.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"     * Starts the JavaFX application.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"     * @param stage The JavaFX stage where the UI will be displayed on.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"            String firstMessage \u003d duke.initializeTaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().sendFirstMessage(firstMessage);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"            stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"tanjiaxian99":38}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import duke.command.DateCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"/** The class takes in a command, parses it and returns an executable Command object. */","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a ListCommand object based on the user\u0027s input.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A ListCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"    private static ListCommand getListCommand(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"        return new ListCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a DoneCommand object based on the user\u0027s input.","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A DoneCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"    private static DoneCommand getDoneCommand(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"        int taskNumber \u003d parseInt(command.split(\" \")[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"        return new DoneCommand(taskNumber);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a DeleteCommand object based on the user\u0027s input.","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"tanjiaxian99"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A DeleteCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"tanjiaxian99"},"content":"    private static DeleteCommand getDeleteCommand(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"tanjiaxian99"},"content":"        int taskNumber \u003d parseInt(command.split(\" \")[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"        return new DeleteCommand(taskNumber);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a TodoCommand object based on the user\u0027s input.","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"tanjiaxian99"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A TodoCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws DukeException If there is no description for the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"tanjiaxian99"},"content":"    private static TodoCommand getTodoCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"        String[] splitCommand \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"tanjiaxian99"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"tanjiaxian99"},"content":"            throw new DukeException(\"Please fill in a description for todo.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tanjiaxian99"},"content":"        String description \u003d splitCommand[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"tanjiaxian99"},"content":"        return new TodoCommand(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a DeadlineCommand object based on the user\u0027s input.","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"tanjiaxian99"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A DeadlineCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws DukeException If there is no description for the task, or the task is missing a deadline.","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"tanjiaxian99"},"content":"    private static DeadlineCommand getDeadlineCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"tanjiaxian99"},"content":"        String[] splitCommand \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"tanjiaxian99"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"tanjiaxian99"},"content":"            throw new DukeException(\"Please fill in a description for deadline.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"tanjiaxian99"},"content":"        String description \u003d splitCommand[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"tanjiaxian99"},"content":"        String[] splitDescription \u003d description.split(\" /by \");","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"tanjiaxian99"},"content":"        if (splitDescription.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"tanjiaxian99"},"content":"            throw new DukeException(\"Please add in /by, following by a dateline.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"tanjiaxian99"},"content":"        description \u003d splitDescription[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"tanjiaxian99"},"content":"        String deadline \u003d splitDescription[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"tanjiaxian99"},"content":"        return new DeadlineCommand(description, deadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a EventCommand object based on the user\u0027s input.","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"tanjiaxian99"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A EventCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws DukeException If there is no description for the task, or the task is missing a time.","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"tanjiaxian99"},"content":"    private static EventCommand getEventCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"tanjiaxian99"},"content":"        String[] splitCommand \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"tanjiaxian99"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"tanjiaxian99"},"content":"            throw new DukeException(\"Please fill in a description for event.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"tanjiaxian99"},"content":"        String description \u003d splitCommand[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"tanjiaxian99"},"content":"        String[] splitDescription \u003d description.split(\" /at \");","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"tanjiaxian99"},"content":"        if (splitDescription.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"tanjiaxian99"},"content":"            throw new DukeException(\"Please add in /at, followed by the event\u0027s time.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"tanjiaxian99"},"content":"        description \u003d splitDescription[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"tanjiaxian99"},"content":"        String time \u003d splitDescription[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"tanjiaxian99"},"content":"        return new EventCommand(description, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a DateCommand object based on the user\u0027s input.","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"tanjiaxian99"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A DateCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws DukeException If there is no valid date in the user\u0027s input.","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"tanjiaxian99"},"content":"    private static DateCommand getDateCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"tanjiaxian99"},"content":"        String[] splitCommand \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"tanjiaxian99"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"tanjiaxian99"},"content":"            throw new DukeException(\"Please fill in a date\");","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"tanjiaxian99"},"content":"        String date \u003d splitCommand[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"tanjiaxian99"},"content":"        return new DateCommand(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a ByeCommand object based on the user\u0027s input.","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"tanjiaxian99"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A ByeCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"tanjiaxian99"},"content":"    private static ByeCommand getByeCommand(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"tanjiaxian99"},"content":"        return new ByeCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a FindCommand object based on the user\u0027s input.","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"tanjiaxian99"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A FindCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws DukeException If there is no valid keyword, or there is more than one keyword.","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"tanjiaxian99"},"content":"    private static FindCommand getFindCommand(String command) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"tanjiaxian99"},"content":"        String[] splitCommand \u003d command.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"tanjiaxian99"},"content":"        if (splitCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"tanjiaxian99"},"content":"            throw new DukeException(\"Please fill in a keyword\");","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"tanjiaxian99"},"content":"        if (splitCommand.length \u003e 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"tanjiaxian99"},"content":"            throw new DukeException(\"Please only fill in one keyword\");","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"tanjiaxian99"},"content":"        String keyword \u003d splitCommand[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"tanjiaxian99"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":161,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":163,"author":{"gitId":"tanjiaxian99"},"content":"     * Parses the command entered by the user and returns a executable","lastModifiedDate":"2021-09-05"},{"lineNumber":164,"author":{"gitId":"tanjiaxian99"},"content":"     * command object.","lastModifiedDate":"2021-09-05"},{"lineNumber":165,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":166,"author":{"gitId":"tanjiaxian99"},"content":"     * @param command The command entered by the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":167,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A command object that can be executed.","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws DukeException If the command is invalid","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":170,"author":{"gitId":"tanjiaxian99"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"tanjiaxian99"},"content":"        if (command.equals(\"ls\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":172,"author":{"gitId":"tanjiaxian99"},"content":"            return getListCommand(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"tanjiaxian99"},"content":"        } else if (command.startsWith(\"dt\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":174,"author":{"gitId":"tanjiaxian99"},"content":"            return getDateCommand(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"tanjiaxian99"},"content":"        } else if (command.startsWith(\"rm\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":176,"author":{"gitId":"tanjiaxian99"},"content":"            return getDeleteCommand(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":177,"author":{"gitId":"tanjiaxian99"},"content":"        } else if (command.startsWith(\"td\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":178,"author":{"gitId":"tanjiaxian99"},"content":"            return getTodoCommand(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":179,"author":{"gitId":"tanjiaxian99"},"content":"        } else if (command.startsWith(\"dl\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":180,"author":{"gitId":"tanjiaxian99"},"content":"            return getDeadlineCommand(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":181,"author":{"gitId":"tanjiaxian99"},"content":"        } else if (command.startsWith((\"ev\"))) {","lastModifiedDate":"2021-09-06"},{"lineNumber":182,"author":{"gitId":"tanjiaxian99"},"content":"            return getEventCommand(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":183,"author":{"gitId":"tanjiaxian99"},"content":"        } else if (command.startsWith((\"d\"))) {","lastModifiedDate":"2021-09-06"},{"lineNumber":184,"author":{"gitId":"tanjiaxian99"},"content":"            return getDoneCommand(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":185,"author":{"gitId":"tanjiaxian99"},"content":"        } else if (command.equals(\"q\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":186,"author":{"gitId":"tanjiaxian99"},"content":"            return getByeCommand(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":187,"author":{"gitId":"tanjiaxian99"},"content":"        } else if (command.startsWith(\"ff\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":188,"author":{"gitId":"tanjiaxian99"},"content":"            return getFindCommand(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":189,"author":{"gitId":"tanjiaxian99"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":190,"author":{"gitId":"tanjiaxian99"},"content":"            throw new DukeException(\"I do not understand what that means :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":191,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":192,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":193,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":193}},{"path":"src/main/java/duke/ResponseLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"/** The class responsible for the responses provided by the chatbot. */","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"public class ResponseLogic {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns the welcome message response. */","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"    public String welcomeResponse() {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"        return \"Lollipop: Hello! I am your personal chatbot, Lollipop! \"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"                + \"What would you like to do today?\";","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns the goodbye message response. */","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"    public String goodByeResponse() {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"        return \"Lollipop: See you again soon!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns a response when no task is available */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"    public String noTaskAvailableResponse() {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"        return \"Lollipop: You have no tasks available.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a response with a task and its index number.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"     * @param index The index of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"     * @param task The task to be printed.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"    public String taskWithIndexReponse(int index, Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"        return String.format(\"%d. %s%n\", index, task);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a response when a task is added.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"     * @param task The newly added task.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"    public String addTaskResponse(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"tanjiaxian99"},"content":"        return String.format(\"Lollipop: %s has been added.%n\", task.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a response when a task is marked done.","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"tanjiaxian99"},"content":"     * @param task The task which has been marked as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"    public String taskMarkedDoneResponse(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"tanjiaxian99"},"content":"        return String.format(\"Lollipop: %s has been marked as done.%n\", task.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a response when a task is deleted.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"tanjiaxian99"},"content":"     * @param task The task which has been deleted.","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"tanjiaxian99"},"content":"    public String deleteTaskResponse(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"tanjiaxian99"},"content":"        return String.format(\"Lollipop: %s has been deleted.%n\", task.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns the header when displaying the task list */","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"tanjiaxian99"},"content":"    public String taskListHeaderResponse() {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"tanjiaxian99"},"content":"        return \"Lollipop: Here are your tasks\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns the header when displaying tasks which occur on the specified date */","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"tanjiaxian99"},"content":"    public String tasksOnDateHeaderResponse() {","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"tanjiaxian99"},"content":"        return \"Lollipop: Here the tasks that occurs on the specified date:\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns the header when displaying tasks with specified keyword */","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"    public String tasksWithKeywordHeaderResponse() {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"        return \"Lollipop: Here the tasks that match your keyword:\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"tanjiaxian99"},"content":"    // Error methods","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a response for the error when the data file is not found.","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"tanjiaxian99"},"content":"     * @param filePath The filepath of the data file.","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"tanjiaxian99"},"content":"    public String loadingErrorResponse(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"tanjiaxian99"},"content":"        return String.format(\"Lollipop: %s is not found.%nThe file has been automatically created.\", filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns a response for Duke Exceptions.","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"tanjiaxian99"},"content":"     * @param e The Duke Exception.","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"tanjiaxian99"},"content":"    public String dukeExceptionResponse(Exception e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"tanjiaxian99"},"content":"        return String.format(\"Lollipop: %s%n\", e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns a response for IndexOutOfBoundsException. */","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"tanjiaxian99"},"content":"    public String indexOutOfBoundsExceptionResponse() {","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"tanjiaxian99"},"content":"        return \"Lollipop: No such duke.task number found.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns a response for NumberFormatException. */","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"tanjiaxian99"},"content":"    public String numberFormatExceptionResponse() {","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"tanjiaxian99"},"content":"        return \"Lollipop: Please input a number.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns a response for DateTimeParseException. */","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"tanjiaxian99"},"content":"    public String dateTimeParseExceptionResponse() {","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"tanjiaxian99"},"content":"        return \"Lollipop: Please specify a valid date format, such as YYYY-MM-DD\";","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"tanjiaxian99":109}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"/** The class that handles the loading and storing of data to a data file. */","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"    private String filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"     * Initialize the Storage object with a filepath.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"     * @param filePath The filePath of the data file.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns the list of tasks as loaded from the file given by the file path.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A list of the loaded tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws FileNotFoundException If the file containing the tasks is not found.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"    public List\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"        Scanner reader \u003d new Scanner(file);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"tanjiaxian99"},"content":"        while (reader.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"tanjiaxian99"},"content":"            String taskString \u003d reader.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"            String[] splitDescription \u003d taskString.split(\" \\\\| \");","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"tanjiaxian99"},"content":"            Task task \u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"            if (splitDescription[0].equals(\"T\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"tanjiaxian99"},"content":"                task \u003d new Todo(splitDescription[2]);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"tanjiaxian99"},"content":"            } else if (splitDescription[0].equals(\"D\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"                task \u003d new Deadline(splitDescription[2], splitDescription[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"tanjiaxian99"},"content":"            } else if (splitDescription[0].equals(\"E\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"tanjiaxian99"},"content":"                task \u003d new Event(splitDescription[2], splitDescription[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"tanjiaxian99"},"content":"            } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"tanjiaxian99"},"content":"                assert false : task;","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"tanjiaxian99"},"content":"            if (splitDescription[1].equals(\"1\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"                task.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"tanjiaxian99"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"tanjiaxian99"},"content":"            taskList.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"tanjiaxian99"},"content":"        return taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"tanjiaxian99"},"content":"     * Updates the saved file with the latest tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"tanjiaxian99"},"content":"     * @param taskList The most updated tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws FileNotFoundException If the file containing the tasks is not found.","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"tanjiaxian99"},"content":"    public void update(List\u003cTask\u003e taskList) throws FileNotFoundException {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"tanjiaxian99"},"content":"        PrintWriter out \u003d new PrintWriter(this.filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"tanjiaxian99"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"                out.printf(\"T | %s | %s%n\", task.getStatusIcon() \u003d\u003d \"X\" ? 1 : 0, task.getDescription());","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"tanjiaxian99"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"tanjiaxian99"},"content":"                out.printf(\"D | %s | %s | %s%n\", task.getStatusIcon() \u003d\u003d \"X\" ? 1 : 0, task.getDescription(), (","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"tanjiaxian99"},"content":"                        (Deadline) task).getDeadline());","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"tanjiaxian99"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"tanjiaxian99"},"content":"                out.printf(\"E | %s | %s | %s%n\", task.getStatusIcon() \u003d\u003d \"X\" ? 1 : 0, task.getDescription(), (","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"tanjiaxian99"},"content":"                        (Event) task).getTime());","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"tanjiaxian99"},"content":"            } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"tanjiaxian99"},"content":"                assert false : task;","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"tanjiaxian99"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"tanjiaxian99"},"content":"        out.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"tanjiaxian99":86}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import duke.ResponseLogic;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"/** The Command class responsible for saying goodbye. */","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"    public String execute(TaskList tasks, ResponseLogic responseLogic, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"        return responseLogic.goodByeResponse();","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":19}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import duke.ResponseLogic;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"/** The class in which all commands inherit from. */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"     * Executes the current command.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"     * @param tasks The TaskList object containing the list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"     * @param responseLogic The ResponseLogic object of the current Duke object.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"     * @param storage The Storage object of the current Duke object.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"     * @return The chatbot\u0027s response as a result of executing the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws FileNotFoundException If the file containing the tasks is not found.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    public abstract String execute(","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"            TaskList tasks, ResponseLogic responseLogic, Storage storage) throws FileNotFoundException;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns true if the program should exit.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"     * @return Exit boolean of the Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":32}},{"path":"src/main/java/duke/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import duke.ResponseLogic;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"/** The Command class responsible for getting tasks that occur on a certain date. */","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"    private String date;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"     * Initialize the query date.","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"     * @param date The query date.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    public DateCommand(String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    public String execute(TaskList tasks, ResponseLogic responseLogic, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"        return tasks.getTasksOnDate(this.date, responseLogic);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":25}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import duke.ResponseLogic;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"/** The Command class responsible for creating a new task with a deadline. */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    private String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"    private String deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"     * Create a new DeadlineCommand object.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    public DeadlineCommand(String description, String deadline) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"    public String execute(TaskList tasks, ResponseLogic responseLogic, Storage storage) throws FileNotFoundException {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"        return tasks.addDeadline(description, deadline, storage, responseLogic);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import duke.ResponseLogic;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"/** The Command class responsible for deleting tasks. */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"     * Initialize the task number of the task to be deleted.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"     * @param taskNumber The task number of the task to be deleted.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    public String execute(TaskList tasks, ResponseLogic responseLogic, Storage storage) throws FileNotFoundException {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"        return tasks.deleteTask(taskNumber, storage, responseLogic);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":27}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import duke.ResponseLogic;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"/** The Command class responsible for marking tasks as done. */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"     * Initialize the task number of the task to be marked as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"     * @param taskNumber The task number of the task to be marked as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    public String execute(TaskList tasks, ResponseLogic responseLogic, Storage storage) throws FileNotFoundException {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"        return tasks.markTaskAsDone(taskNumber, storage, responseLogic);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":27}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import duke.ResponseLogic;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"/** The Command class responsible for creating a new task with a time. */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    private String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"    private String time;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"     * Creates an EventCommand object.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"     * @param time The time of the event.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    public EventCommand(String description, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"    public String execute(TaskList tasks, ResponseLogic responseLogic, Storage storage) throws FileNotFoundException {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"        return tasks.addEvent(description, time, storage, responseLogic);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":30}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import duke.ResponseLogic;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"/** The Command class responsible for finding tasks that contains a certain keyword. */","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"    private String keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"     * Initialize the keyword query.","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"     * @param keyword The keyword query.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    public String execute(TaskList tasks, ResponseLogic responseLogic, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"        return tasks.getTasksWithKeyword(keyword, responseLogic);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":25}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import duke.ResponseLogic;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"/** The Command class responsible for retrieving the list of tasks. */","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"    public String execute(TaskList tasks, ResponseLogic responseLogic, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"        return tasks.getTaskList(responseLogic);","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":14}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import duke.ResponseLogic;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"/** The Command class responsible for creating a task that has to be done. */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    private String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"     * Initialize the description of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    public String execute(TaskList tasks, ResponseLogic responseLogic, Storage storage) throws FileNotFoundException {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"        return tasks.addTodo(description, storage, responseLogic);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":27}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"/** The class that encapsulates a Task with a deadline. */","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"     * Creates a new Task object with a deadline attached to it.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws DateTimeParseException If the deadline input is not a valid date.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    public Deadline(String description, String deadline) throws DateTimeParseException {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns the deadline of the task as a LocalDate object. */","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"        return this.deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns the deadline of the task as a String. */","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"    private String deadlineToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"        return this.deadline.format(formatter);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.deadlineToString());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"tanjiaxian99":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"/** The class that encapsulates a Task with a time. */","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"    private LocalDate time;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"     * Creates a new Task object with the time of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"     * @param time The time of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"        this.time \u003d LocalDate.parse(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns the time of the event as a LocalDate object. */","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"        return this.time;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns the time of the event as a String. */","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"    private String timeToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"        return this.time.format(formatter);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.timeToString());","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"tanjiaxian99":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"/** A basic Task class. */","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"    private String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"     * Creates a new Task object.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns the status icon of the task. */","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"        return (isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns the description of the task. */","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"        return this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"    /** Mark the task as done. */","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"tanjiaxian99":37}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import duke.ResponseLogic;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"/** The class which encapsulates the task list and its associated methods. */","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"     * Initialize the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"     * @param tasks The initial task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns the task list response.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"     * @param responseLogic The UI object of the current Duke object.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"     * @return The response containing the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"    public String getTaskList(ResponseLogic responseLogic) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"            return responseLogic.noTaskAvailableResponse();","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"            sb.append(responseLogic.taskListHeaderResponse());","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"                Task task \u003d this.tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"                sb.append(responseLogic.taskWithIndexReponse(i + 1, task));","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"tanjiaxian99"},"content":"            return sb.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"     * Returns the response containing the task which occurs on the specified date.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"tanjiaxian99"},"content":"     * @param dateString The date to filter tasks by.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"     * @param responseLogic The UI object of the current Duke object.","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"tanjiaxian99"},"content":"     * @return The response containing the task which occurs on the specified date.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"tanjiaxian99"},"content":"    public String getTasksOnDate(String dateString, ResponseLogic responseLogic) {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"tanjiaxian99"},"content":"        StringBuilder sb \u003d new StringBuilder(responseLogic.tasksOnDateHeaderResponse());","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"tanjiaxian99"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"tanjiaxian99"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"tanjiaxian99"},"content":"                LocalDate deadline \u003d ((Deadline) task).getDeadline();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"                if (deadline.equals(date)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"tanjiaxian99"},"content":"                    sb.append(responseLogic.taskWithIndexReponse(index, task));","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"tanjiaxian99"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"tanjiaxian99"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"tanjiaxian99"},"content":"                LocalDate time \u003d ((Event) task).getTime();","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"tanjiaxian99"},"content":"                if (time.equals(date)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"tanjiaxian99"},"content":"                    sb.append(responseLogic.taskWithIndexReponse(index, task));","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"tanjiaxian99"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"tanjiaxian99"},"content":"            } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"tanjiaxian99"},"content":"                assert false : task;","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"tanjiaxian99"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"tanjiaxian99"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"tanjiaxian99"},"content":"    /** Returns the response containing tasks with the specified keyword.","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"tanjiaxian99"},"content":"     * @param keyword The keyword specified by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"tanjiaxian99"},"content":"     * @param responseLogic The UI object of the current Duke object.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"tanjiaxian99"},"content":"     * @return The response containing tasks with the specified keyword.","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"tanjiaxian99"},"content":"    public String getTasksWithKeyword(String keyword, ResponseLogic responseLogic) {","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"tanjiaxian99"},"content":"        StringBuilder sb \u003d new StringBuilder(responseLogic.tasksWithKeywordHeaderResponse());","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"tanjiaxian99"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"tanjiaxian99"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"tanjiaxian99"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"                sb.append(responseLogic.taskWithIndexReponse(index, task));","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"tanjiaxian99"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"tanjiaxian99"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"tanjiaxian99"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"tanjiaxian99"},"content":"     * @param taskNumber The index number of the task to be marked as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"tanjiaxian99"},"content":"     * @param storage The Storage object of the current Duke object.","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"tanjiaxian99"},"content":"     * @param responseLogic The UI object of the current Duke object.","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"tanjiaxian99"},"content":"     * @return The response when a task is marked as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws FileNotFoundException If the file containing the tasks is not found.","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"tanjiaxian99"},"content":"    public String markTaskAsDone(","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"tanjiaxian99"},"content":"            int taskNumber, Storage storage, ResponseLogic responseLogic) throws FileNotFoundException {","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"tanjiaxian99"},"content":"        Task task \u003d this.tasks.get(taskNumber - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"tanjiaxian99"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"tanjiaxian99"},"content":"        storage.update(this.tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"tanjiaxian99"},"content":"        return responseLogic.taskMarkedDoneResponse(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"tanjiaxian99"},"content":"     * Deletes a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"tanjiaxian99"},"content":"     * @param taskNumber The index number of the task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"tanjiaxian99"},"content":"     * @param storage The Storage object of the current Duke object.","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"tanjiaxian99"},"content":"     * @param responseLogic The UI object of the current Duke object.","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"tanjiaxian99"},"content":"     * @return The response when a task is deleted.","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws FileNotFoundException If the file containing the tasks is not found.","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"tanjiaxian99"},"content":"    public String deleteTask(","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"tanjiaxian99"},"content":"            int taskNumber, Storage storage, ResponseLogic responseLogic) throws FileNotFoundException {","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"tanjiaxian99"},"content":"        Task task \u003d this.tasks.get(taskNumber - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"tanjiaxian99"},"content":"        this.tasks.remove(taskNumber - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"tanjiaxian99"},"content":"        storage.update(this.tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"tanjiaxian99"},"content":"        return responseLogic.deleteTaskResponse(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"tanjiaxian99"},"content":"     * Adds a Todo Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"tanjiaxian99"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"tanjiaxian99"},"content":"     * @param storage The Storage object of the current Duke object.","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"tanjiaxian99"},"content":"     * @param responseLogic The UI object of the current Duke object.","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"tanjiaxian99"},"content":"     * @return The response when a Todo task is added.","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws FileNotFoundException If the file containing the tasks is not found.","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"tanjiaxian99"},"content":"    public String addTodo(","lastModifiedDate":"2021-08-30"},{"lineNumber":135,"author":{"gitId":"tanjiaxian99"},"content":"            String description, Storage storage, ResponseLogic responseLogic) throws FileNotFoundException {","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"tanjiaxian99"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"tanjiaxian99"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"tanjiaxian99"},"content":"        storage.update(this.tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"tanjiaxian99"},"content":"        return responseLogic.addTaskResponse(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"tanjiaxian99"},"content":"     * Adds a Deadline Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"tanjiaxian99"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"tanjiaxian99"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"tanjiaxian99"},"content":"     * @param storage The Storage object of the current Duke object.","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"tanjiaxian99"},"content":"     * @param responseLogic The UI object of the current Duke object.","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"tanjiaxian99"},"content":"     * @return The response when a Deadline task is added.","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws FileNotFoundException If the file containing the tasks is not found.","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"tanjiaxian99"},"content":"    public String addDeadline(String description, String deadline, Storage storage,","lastModifiedDate":"2021-08-30"},{"lineNumber":153,"author":{"gitId":"tanjiaxian99"},"content":"                              ResponseLogic responseLogic) throws FileNotFoundException {","lastModifiedDate":"2021-08-30"},{"lineNumber":154,"author":{"gitId":"tanjiaxian99"},"content":"        Task task \u003d new Deadline(description, deadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"tanjiaxian99"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"tanjiaxian99"},"content":"        storage.update(this.tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"tanjiaxian99"},"content":"        return responseLogic.addTaskResponse(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"tanjiaxian99"},"content":"     * Adds an Event task.","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"tanjiaxian99"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"tanjiaxian99"},"content":"     * @param time The time of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"tanjiaxian99"},"content":"     * @param storage The Storage object of the current Duke object.","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"tanjiaxian99"},"content":"     * @param responseLogic The UI object of the current Duke object.","lastModifiedDate":"2021-08-29"},{"lineNumber":167,"author":{"gitId":"tanjiaxian99"},"content":"     * @retrun The response when an Event task is added.","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"tanjiaxian99"},"content":"     * @throws FileNotFoundException If the file containing the tasks is not found.","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"tanjiaxian99"},"content":"    public String addEvent(String description, String time,","lastModifiedDate":"2021-08-30"},{"lineNumber":171,"author":{"gitId":"tanjiaxian99"},"content":"                           Storage storage, ResponseLogic responseLogic) throws FileNotFoundException {","lastModifiedDate":"2021-08-30"},{"lineNumber":172,"author":{"gitId":"tanjiaxian99"},"content":"        Task task \u003d new Event(description, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"tanjiaxian99"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":174,"author":{"gitId":"tanjiaxian99"},"content":"        storage.update(this.tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":175,"author":{"gitId":"tanjiaxian99"},"content":"        return responseLogic.addTaskResponse(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":176,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":177}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"/** The class that encapsulates a Task that has to be done. */","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"     * Initialize the description of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"tanjiaxian99":19}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"     * Initializes a new DialogBox object with some text and an image.","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"     * @param text The text to be displayed in the dialog box.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"     * @param img The image to be displayed in the dialog box.","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"tanjiaxian99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"tanjiaxian99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"tanjiaxian99"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"tanjiaxian99"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"tanjiaxian99"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"tanjiaxian99"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"tanjiaxian99"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"     * Retrieves the user\u0027s dialog box.","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"tanjiaxian99"},"content":"     * @param text The user\u0027s response.","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"tanjiaxian99"},"content":"     * @param img The user\u0027s avatar.","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A new DialogBox object containing the user\u0027s response and avatar.","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"tanjiaxian99"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"tanjiaxian99"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"tanjiaxian99"},"content":"     * Retrieves the chatbot\u0027s dialog box.","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"     * @param text The chatbot\u0027s response.","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"     * @param img The chatbot\u0027s avatar.","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"tanjiaxian99"},"content":"     * @return A new DialogBox object containing the chatbot\u0027s response and avatar.","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"tanjiaxian99"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"tanjiaxian99"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"tanjiaxian99"},"content":"        db.flip();","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"tanjiaxian99"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"tanjiaxian99":81}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"import javafx.stage.Window;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserAvatar.png\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/LollipopAvatar.png\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"    /** Initialize the scrollPane\u0027s vertical property such that the scrollPane always scrolls to the bottom","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"     *  when a new response is created.","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"tanjiaxian99"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"tanjiaxian99"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"tanjiaxian99"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"tanjiaxian99"},"content":"     * Sends the chatbot\u0027s first message.","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"tanjiaxian99"},"content":"     * @param message The chatbot\u0027s first message.","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"tanjiaxian99"},"content":"    public void sendFirstMessage(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"tanjiaxian99"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(message, dukeImage));","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"tanjiaxian99"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"tanjiaxian99"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"tanjiaxian99"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"tanjiaxian99"},"content":"    private void handleUserInput(ActionEvent event) {","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"tanjiaxian99"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"tanjiaxian99"},"content":"        if (input.equals(\"q\")) { // Not ideal, how to fix?","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"tanjiaxian99"},"content":"            handleExitProgram(event);","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"tanjiaxian99"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"tanjiaxian99"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"tanjiaxian99"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"tanjiaxian99"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"tanjiaxian99"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"tanjiaxian99"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"tanjiaxian99"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"tanjiaxian99"},"content":"     * Close the JavaFX application.","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"tanjiaxian99"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"tanjiaxian99"},"content":"     * @param event The ActionEvent which causes the application to close.","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"tanjiaxian99"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"tanjiaxian99"},"content":"    private void handleExitProgram(ActionEvent event) {","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"tanjiaxian99"},"content":"        Object o \u003d event.getSource();","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"tanjiaxian99"},"content":"        if (o instanceof Button) {","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"tanjiaxian99"},"content":"            Button button \u003d (Button) event.getSource();","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"tanjiaxian99"},"content":"            Window window \u003d button.getScene().getWindow();","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"tanjiaxian99"},"content":"            Stage stage \u003d (Stage) window;","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"tanjiaxian99"},"content":"            stage.close();","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"tanjiaxian99"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"tanjiaxian99"},"content":"            TextField textField \u003d (TextField) event.getSource();","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"tanjiaxian99"},"content":"            Window window \u003d textField.getScene().getWindow();","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"tanjiaxian99"},"content":"            Stage stage \u003d (Stage) window;","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"tanjiaxian99"},"content":"            stage.close();","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"tanjiaxian99"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"tanjiaxian99":92}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"tanjiaxian99":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"tanjiaxian99":19}},{"path":"src/test/java/duke/command/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"public class ByeCommandTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"    private Command c \u003d new ByeCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    public void isExit_byeCommandInitialized_trueReturned() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(c.isExit(), true);","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":15}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"    private Deadline deadline \u003d new Deadline(\"sell book\", \"2020-04-21\");","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    public void getDeadline_deadlineInitialized_localDateReturned() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(deadline.getDeadline().toString(), \"2020-04-21\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    public void getDescription_deadlineInitialized_descriptionReturned() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(deadline.getDescription(), \"sell book\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    public void getStatusIcon_deadlineInitialized_statusIconReturned() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(deadline.getStatusIcon(), \" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"    public void toString_deadlineInitialized_descriptionAndDeadlineReturned() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(deadline.toString(), \"[D][ ] sell book (by: 21 April 2020)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"    public void markAsDone_deadlineInitialized_taskMarkedAsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"        Deadline deadline \u003d new Deadline(\"sell book\", \"2020-04-21\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"        deadline.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(deadline.toString(), \"[D][X] sell book (by: 21 April 2020)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":37}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"public class EventTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"    private Event event \u003d new Event(\"sell book\", \"2020-04-21\");","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"    public void getTime_eventInitialized_localDateReturned() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(event.getTime().toString(), \"2020-04-21\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"tanjiaxian99"},"content":"    public void getDescription_eventInitialized_descriptionReturned() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(event.getDescription(), \"sell book\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"tanjiaxian99"},"content":"    public void getStatusIcon_eventInitialized_statusIconReturned() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(event.getStatusIcon(), \" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"tanjiaxian99"},"content":"    public void toString_eventInitialized_descriptionAndTimeReturned() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(event.toString(), \"[E][ ] sell book (at: 21 April 2020)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"tanjiaxian99"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"tanjiaxian99"},"content":"    public void markAsDone_eventInitialized_taskMarkedAsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"tanjiaxian99"},"content":"        Event event \u003d new Event(\"sell book\", \"2020-04-21\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"tanjiaxian99"},"content":"        event.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"tanjiaxian99"},"content":"        assertEquals(event.toString(), \"[E][X] sell book (at: 21 April 2020)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"tanjiaxian99"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"tanjiaxian99"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"tanjiaxian99":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tanjiaxian99"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"tanjiaxian99"},"content":"todo read book","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"tanjiaxian99"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"tanjiaxian99"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"tanjiaxian99"},"content":"todo join sports club","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"tanjiaxian99"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"tanjiaxian99"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"tanjiaxian99"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"tanjiaxian99"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"tanjiaxian99"},"content":"done 4","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"tanjiaxian99"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"tanjiaxian99"},"content":"delete 3","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"tanjiaxian99"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"tanjiaxian99":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"tanjiaxian99"},"content":"    pause","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"tanjiaxian99"},"content":"pause","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"tanjiaxian99"},"content":"","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"tanjiaxian99":4,"-":21}}]
