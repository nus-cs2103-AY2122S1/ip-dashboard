[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nujiak"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"nujiak"},"content":" * A task with a description and an end date/time","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"nujiak"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"nujiak"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"nujiak"},"content":"    private String endDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"nujiak"},"content":"    Deadline(String description, boolean completed, String endDateTime) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"nujiak"},"content":"        super(description, completed);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"nujiak"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nujiak"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"nujiak"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"nujiak"},"content":"        return \"[D]\" + super.toString() + String.format(\" (by: %s)\", endDateTime);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nujiak"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nujiak":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nujiak"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"nujiak"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"nujiak"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"nujiak"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"nujiak"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"nujiak"},"content":"    // Array for storing user inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"nujiak"},"content":"    private static final List\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"nujiak"},"content":"    // Regex pattern for finding done commands","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nujiak"},"content":"    private static final Pattern DONE_PATTERN \u003d Pattern.compile(\"^done (\\\\d*)$\");","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"nujiak"},"content":"    // Regex pattern for finding delete commands","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nujiak"},"content":"    private static final Pattern DELETE_PATTERN \u003d Pattern.compile(\"^delete (\\\\d*)$\");","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"nujiak"},"content":"    // Regex pattern for finding todo commands","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"nujiak"},"content":"    private static final Pattern TODO_PATTERN \u003d Pattern.compile(\"^todo (.*)$\");","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"nujiak"},"content":"    // Regex pattern for finding deadline commands","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"nujiak"},"content":"    private static final Pattern DEADLINE_PATTERN \u003d Pattern.compile(\"^deadline (.*) /by (.*)$\");","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"nujiak"},"content":"    // Regex pattern for finding event commands","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"nujiak"},"content":"    private static final Pattern EVENT_PATTERN \u003d Pattern.compile(\"^event (.*) /at (.*)$\");","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"nujiak"},"content":"        Scanner scanner \u003d new Scanner((System.in));","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"nujiak"},"content":"        say(\"Hello, I\u0027m Duke.\", \"Make me do something.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"nujiak"},"content":"        while (true) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"nujiak"},"content":"            String userInput \u003d scanner.nextLine().strip();","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"nujiak"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"nujiak"},"content":"                if (userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"nujiak"},"content":"                    // Check if user is attempting to exit.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"nujiak"},"content":"                    say(\"Bye bye, see you next time.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"nujiak"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"nujiak"},"content":"                } else if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"nujiak"},"content":"                    // Check if user is requesting to print list.","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"nujiak"},"content":"                    list();","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"nujiak"},"content":"                } else if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"nujiak"},"content":"                    markAsDone(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"nujiak"},"content":"                } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"nujiak"},"content":"                    delete(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"nujiak"},"content":"                } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"nujiak"},"content":"                    // User is attempting to add a to-do","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"nujiak"},"content":"                    addToDo(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"nujiak"},"content":"                } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"nujiak"},"content":"                    // User is attempting to add a deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"nujiak"},"content":"                    addDeadline(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"nujiak"},"content":"                } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"nujiak"},"content":"                    // User is attempting to add an event","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"nujiak"},"content":"                    addEvent(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"nujiak"},"content":"                } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"nujiak"},"content":"                    // Invalid command","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"nujiak"},"content":"                    throw new DukeException(\"Sorry, I didn\u0027t understand what you meant by that\");","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"nujiak"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"nujiak"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"nujiak"},"content":"                // Get Duke to say out the error","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"nujiak"},"content":"                say(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"nujiak"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"nujiak"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"nujiak"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"nujiak"},"content":"     * Makes duke speak.","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"nujiak"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"nujiak"},"content":"     * Prints a list of lines with indentation.","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"nujiak"},"content":"     * @param lines list of lines for Duke","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"nujiak"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"nujiak"},"content":"    static void say(String... lines) {","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"nujiak"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"nujiak"},"content":"        for (String line : lines) {","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"nujiak"},"content":"            System.out.println(\"    \" + line);","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"nujiak"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"nujiak"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"nujiak"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"nujiak"},"content":"     * Prints the list of inputs that Duke has stored.","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"nujiak"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"nujiak"},"content":"    static void list() {","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"nujiak"},"content":"        if (store.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"nujiak"},"content":"            // Inform user if nothing has been stored.","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"nujiak"},"content":"            say(\"The list is empty!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"nujiak"},"content":"            return;","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"nujiak"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"nujiak"},"content":"        String[] listItems \u003d new String[store.size()];","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"nujiak"},"content":"        for (int i \u003d 0; i \u003c store.size(); ++i) {","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"nujiak"},"content":"            listItems[i] \u003d String.format(\"%d. %s\", i + 1, store.get(i));","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"nujiak"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"nujiak"},"content":"        say(listItems);","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"nujiak"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"nujiak"},"content":"     * Marks a task at taskPosition as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"nujiak"},"content":"     * @param userInput User input to be split by regex pattern matching","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"nujiak"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"nujiak"},"content":"    private static void markAsDone(String userInput) {","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"nujiak"},"content":"        // Check if user is attempting to mark a task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"nujiak"},"content":"        Matcher matcher \u003d  DONE_PATTERN.matcher(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"nujiak"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"nujiak"},"content":"            throw new DukeException(\"Mark a task as done like this: done \u003ctask number\u003e\");","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"nujiak"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"nujiak"},"content":"        String taskPositionString \u003d matcher.group(1);","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"nujiak"},"content":"        int taskPosition \u003d Integer.parseInt(taskPositionString);","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"nujiak"},"content":"        if (taskPosition \u003c\u003d 0 || taskPosition \u003e store.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"nujiak"},"content":"            throw new DukeException(String.format(\"There is no task number %d!\", taskPosition));","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"nujiak"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"nujiak"},"content":"        Task task \u003d store.get(taskPosition - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"nujiak"},"content":"        // Mark task as completed","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"nujiak"},"content":"        task.complete();","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"nujiak"},"content":"        say(\"I have marked the task as done!\", String.format(\"%d. %s\", taskPosition, task));","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"nujiak"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"nujiak"},"content":"     * Deletes a task from the store.","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"nujiak"},"content":"     * @param userInput User input to be split by regex pattern matching","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"nujiak"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"nujiak"},"content":"    private static void delete(String userInput) {","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"nujiak"},"content":"        // Check if user is attempting to mark a task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"nujiak"},"content":"        Matcher matcher \u003d  DELETE_PATTERN.matcher(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"nujiak"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"nujiak"},"content":"            throw new DukeException(\"Delete a task like this: delete \u003ctask number\u003e\");","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"nujiak"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"nujiak"},"content":"        String taskPositionString \u003d matcher.group(1);","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"nujiak"},"content":"        int taskPosition \u003d Integer.parseInt(taskPositionString);","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"nujiak"},"content":"        if (taskPosition \u003c\u003d 0 || taskPosition \u003e store.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"nujiak"},"content":"            throw new DukeException(String.format(\"There is no task number %d!\", taskPosition));","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"nujiak"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"nujiak"},"content":"        Task task \u003d store.get(taskPosition - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"nujiak"},"content":"        // Remove the task from the store.","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"nujiak"},"content":"        store.remove(taskPosition - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"nujiak"},"content":"        say(\"I have removed this task!\",","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"nujiak"},"content":"                String.format(\"   %s\", task),","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"nujiak"},"content":"                String.format(\"You have %d task%s left.\", store.size(), store.size() \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"nujiak"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"nujiak"},"content":"     * Adds a to-do which contains a description and no date/time.","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"nujiak"},"content":"     * @param userInput User input to be split by regex pattern matching","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"nujiak"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"nujiak"},"content":"    private static void addToDo(String userInput) {","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"nujiak"},"content":"        Matcher matcher \u003d TODO_PATTERN.matcher(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"nujiak"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"nujiak"},"content":"            throw new DukeException(\"Give me a description of the todo to add it as a task\");","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"nujiak"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"nujiak"},"content":"        String description \u003d matcher.group(1);","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"nujiak"},"content":"        ToDo todo \u003d new ToDo(description, false);","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"nujiak"},"content":"        // Add to store","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"nujiak"},"content":"        store.add(todo);","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"nujiak"},"content":"        // Inform user","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"nujiak"},"content":"        say(\"I have added a ToDo!\", String.format(\"%d. %s\", store.size(), todo));","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"nujiak"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"nujiak"},"content":"     * Adds a to-do which contains a description and an end date/time.","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"nujiak"},"content":"     * @param userInput User input to be split by regex pattern matching","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"nujiak"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"nujiak"},"content":"    private static void addDeadline(String userInput) {","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"nujiak"},"content":"        Matcher matcher \u003d DEADLINE_PATTERN.matcher(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"nujiak"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"nujiak"},"content":"            throw new DukeException(\"Give me a deadline like this: deadline \u003ctask\u003e /by \u003cdate/time\u003e\");","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"nujiak"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"nujiak"},"content":"        String description \u003d matcher.group(1);","lastModifiedDate":"2021-08-18"},{"lineNumber":193,"author":{"gitId":"nujiak"},"content":"        String endDateTime \u003d matcher.group(2);","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":195,"author":{"gitId":"nujiak"},"content":"        Deadline deadline \u003d new Deadline(description, false, endDateTime);","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"nujiak"},"content":"        // Add to store","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"nujiak"},"content":"        store.add(deadline);","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"nujiak"},"content":"        // Inform user","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"nujiak"},"content":"        say(\"I have added a new deadline!\", String.format(\"%d. %s\", store.size(), deadline));","lastModifiedDate":"2021-08-18"},{"lineNumber":202,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":203,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":204,"author":{"gitId":"nujiak"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":205,"author":{"gitId":"nujiak"},"content":"     * Adds an event which contains a description and a start and end date/time.","lastModifiedDate":"2021-08-18"},{"lineNumber":206,"author":{"gitId":"nujiak"},"content":"     * @param userInput User input to be split by regex pattern matching","lastModifiedDate":"2021-08-18"},{"lineNumber":207,"author":{"gitId":"nujiak"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":208,"author":{"gitId":"nujiak"},"content":"    private static void addEvent(String userInput) {","lastModifiedDate":"2021-08-18"},{"lineNumber":209,"author":{"gitId":"nujiak"},"content":"        Matcher matcher \u003d EVENT_PATTERN.matcher(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"nujiak"},"content":"        if (!matcher.find()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":211,"author":{"gitId":"nujiak"},"content":"            throw new DukeException(\"Tell me an event like this: event \u003ctask\u003e /at \u003cdate/time\u003e\");","lastModifiedDate":"2021-08-18"},{"lineNumber":212,"author":{"gitId":"nujiak"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"nujiak"},"content":"        String description \u003d matcher.group(1);","lastModifiedDate":"2021-08-18"},{"lineNumber":214,"author":{"gitId":"nujiak"},"content":"        String eventDateTime \u003d matcher.group(2);","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":216,"author":{"gitId":"nujiak"},"content":"        Event event \u003d new Event(description, false, eventDateTime);","lastModifiedDate":"2021-08-18"},{"lineNumber":217,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":218,"author":{"gitId":"nujiak"},"content":"        // Add to store","lastModifiedDate":"2021-08-18"},{"lineNumber":219,"author":{"gitId":"nujiak"},"content":"        store.add(event);","lastModifiedDate":"2021-08-18"},{"lineNumber":220,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":221,"author":{"gitId":"nujiak"},"content":"        // Inform user","lastModifiedDate":"2021-08-18"},{"lineNumber":222,"author":{"gitId":"nujiak"},"content":"        say(\"I have added a new event!\", String.format(\"%d. %s\", store.size(), event));","lastModifiedDate":"2021-08-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nujiak":213,"-":11}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nujiak"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"nujiak"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"nujiak"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"nujiak"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nujiak":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nujiak"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"nujiak"},"content":" * A task with a description and a start and end date/time","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"nujiak"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"nujiak"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"nujiak"},"content":"    private String eventDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"nujiak"},"content":"    Event(String description, boolean completed, String eventDateTime) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"nujiak"},"content":"        super(description, completed);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"nujiak"},"content":"        this.eventDateTime \u003d eventDateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nujiak"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"nujiak"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"nujiak"},"content":"        return \"[E]\" + super.toString() + String.format(\" (at: %s)\", eventDateTime);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nujiak"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nujiak":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nujiak"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"nujiak"},"content":" * Represents a task that can be marked as completed/done.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"nujiak"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"nujiak"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"nujiak"},"content":"    private final String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"nujiak"},"content":"    private boolean completed;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"nujiak"},"content":"    Task(String description, boolean completed) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"nujiak"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"nujiak"},"content":"        this.completed \u003d completed;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nujiak"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"nujiak"},"content":"     * Marks the task as completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"nujiak"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"nujiak"},"content":"    public void complete() {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nujiak"},"content":"        this.completed \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"nujiak"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"nujiak"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"nujiak"},"content":"        return String.format(\"[%s] %s\", completed ? \"X\" : \" \", description);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"nujiak"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nujiak":24}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nujiak"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"nujiak"},"content":" * A task with a description and no date/time","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"nujiak"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"nujiak"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"nujiak"},"content":"    ToDo(String description, boolean completed) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"nujiak"},"content":"        super(description, completed);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"nujiak"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"nujiak"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"nujiak"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nujiak"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"nujiak"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nujiak"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nujiak":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nujiak"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"nujiak"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"nujiak"},"content":"todo do homework","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"nujiak"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"nujiak"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"nujiak"},"content":"deadline study /by sunday 6pm","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"nujiak"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"nujiak"},"content":"event lessons /at monday 8am-6pm","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"nujiak"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"nujiak"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nujiak"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"nujiak"},"content":"delete 0","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nujiak"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"nujiak"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"nujiak"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"nujiak"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nujiak"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"nujiak"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nujiak":18}}]
