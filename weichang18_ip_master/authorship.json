[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"    mainClassName \u003d \"src/main/java/duke/Duke.java\"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"weichang18":1,"-":45}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"ret\u003d0","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"IFS\u003d\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"        ret\u003d1","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"    fi","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"done","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"exit $ret","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"weichang18":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"awk \u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"    BEGIN {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"        ret \u003d 0","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"    {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"        ret \u003d 1","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"    END {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"        exit ret","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"\u0027","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"weichang18":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"awk \u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"    BEGIN {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"        ret \u003d 0","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"    {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"            ret \u003d 1","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"    END {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"        exit ret","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"\u0027","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"weichang18":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"        ret\u003d1","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    fi","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"done","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"exit $ret","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"weichang18":11}},{"path":"data/dukeTaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"1.[D][ ] homework (by: Dec 31 2020 11:59PM)","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"2.[E][ ] meeting (at: Dec 23 2020 7:00PM)","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"3.[T][X] swim","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"4.[T][ ] run","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"weichang18":4}},{"path":"src/main/data/dukeTaskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"1.[T][ ] walk","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"2.[T][ ] run","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"3.[T][ ] borrow book","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"4.[D][ ] return book (by: Dec 31 2020 9:00PM)","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"weichang18":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"    /** Date aspect of the deadline */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"    /** Time aspect of the deadline */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"     * Constructor for deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"     * @param description description of deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"     * @param deadline deadline of task in \"yyyy-mm-dd HHmm\" format.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"        super(description, \"[D]\");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"        this.date \u003d LocalDate.parse(deadline.substring(0, 10));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"        this.time \u003d LocalTime.parse(deadline.substring(11), DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"     * Constructor for deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"     * @param description Description of deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"     * @param date Date aspect of the deadline in \"MMM d yyyy\" format.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"     * @param time Time aspect of the deadline in \"h:ma\" format.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"    public Deadline(String description, String date, String time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"        super(description, \"[D]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"        this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"        this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"h:ma\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"     * Returns the description of the deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"     * @return Description of deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"        return super.getDescription()","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"                + \" (by: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"                + this.time.format(DateTimeFormatter.ofPattern(\" h:mma\"))","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"                + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"weichang18":53}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"    private Boolean isRunning;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"     * Constructor for Duke program.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"     * @param filePath File path to locate the saved task list file.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"        this.isRunning \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"        if (storage.getDoesFileExists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"            this.storage.retrieveFile(this.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"            this.storage.createFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"     * Stops duke bot and save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"     * @param taskList Task list to save onto file.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"     * @throws IOException If there is wrong input or output.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"    public void stopDuke(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"        this.isRunning \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"        this.storage.saveFile(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"        this.ui.goodbyeMsg();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"     * Runs duke bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"     * @throws IOException If there is wrong input or output.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"    public void run() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"        this.ui.greetingMsg();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"        while (this.isRunning) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"weichang18"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"weichang18"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"weichang18"},"content":"                //Ends duke bot","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"weichang18"},"content":"                stopDuke(this.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"weichang18"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"weichang18"},"content":"                //List task list","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"weichang18"},"content":"                this.ui.listTaskList(this.taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"weichang18"},"content":"            } else if (input.contains(\"done \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"weichang18"},"content":"                //Set task as done","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"weichang18"},"content":"                Integer listIndex \u003d parser.doneInputParser(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"weichang18"},"content":"                this.taskList.setTaskDone(listIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"weichang18"},"content":"                this.ui.doneTaskMsg(this.taskList.getTask(listIndex));","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"weichang18"},"content":"            } else if (input.contains(\"delete \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"weichang18"},"content":"                //Deletes task","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"weichang18"},"content":"                Integer removeTaskIndex \u003d parser.deleteInputParser(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"weichang18"},"content":"                Task removedTask \u003d taskList.removeTask(removeTaskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"weichang18"},"content":"                this.ui.deleteTaskMsg(removedTask, this.taskList.getNoOfTask());","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"weichang18"},"content":"            } else if (input.contains(\"find \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"weichang18"},"content":"                //Find tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"weichang18"},"content":"                String keyword \u003d parser.findInputParser(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"weichang18"},"content":"                TaskList taskListWithKeyword \u003d this.taskList.findTasks(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"weichang18"},"content":"                this.ui.findTaskMsg(taskListWithKeyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"weichang18"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"weichang18"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"weichang18"},"content":"                    //Initialise the task if its a valid input.","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"weichang18"},"content":"                    Task newTask \u003d null;","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"weichang18"},"content":"                    if (input.contains(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"weichang18"},"content":"                        newTask \u003d new Todo(parser.toDoInputParser(input));","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"weichang18"},"content":"                    } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"weichang18"},"content":"                        if (!input.contains(\"/by\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"weichang18"},"content":"                            //for missing dateline","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"weichang18"},"content":"                            throw new MissingDateException();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"weichang18"},"content":"                        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"weichang18"},"content":"                            newTask \u003d new Deadline(parser.deadlineInputTaskParser(input),","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"weichang18"},"content":"                                    parser.deadlineInputDateParser(input));","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"weichang18"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"weichang18"},"content":"                    } else if (input.contains(\"event\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"weichang18"},"content":"                        if (!input.contains(\"/at\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"weichang18"},"content":"                            //for missing dateline","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"weichang18"},"content":"                            throw new MissingDateException();","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"weichang18"},"content":"                        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"weichang18"},"content":"                            newTask \u003d new Event(parser.eventInputTaskParser(input),","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"weichang18"},"content":"                                    parser.eventInputDateParser(input));","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"weichang18"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"weichang18"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"weichang18"},"content":"                    if (newTask !\u003d null) {","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"weichang18"},"content":"                        //Add task to the list and print message.","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"weichang18"},"content":"                        taskList.addTask(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"weichang18"},"content":"                        this.ui.addTaskMsg(newTask, this.taskList.getNoOfTask());","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"weichang18"},"content":"                    } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"weichang18"},"content":"                        //For invalid input message","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"weichang18"},"content":"                        throw new WrongInputException();","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"weichang18"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"weichang18"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"weichang18"},"content":"                    System.out.print(e.toString()","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"weichang18"},"content":"                            + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"weichang18"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"weichang18"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"weichang18"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"weichang18"},"content":"        new Duke(\"data/dukeTaskList.txt\").run();","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weichang18":119,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"    DukeException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"        super();","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"     * Return string message specific for the exception.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"     * @return String message.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"        return \"Oops! \";","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weichang18":18}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"     * Constructor for event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"     * @param description Description of event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"     * @param deadline Deadline of event task in \"yyyy-mm-dd HHmm\" format.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"    public Event(String description, String deadline) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"        super(description, \"[E]\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"        this.date \u003d LocalDate.parse(deadline.substring(0, 10));","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"        this.time \u003d LocalTime.parse(deadline.substring(11), DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"     * Constructor for event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"     * @param description Description of event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"     * @param date Date aspect of the deadline in \"MMM d yyyy\" format.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"     * @param time Time aspect of the deadline in \"h:ma\" format.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"    public Event(String description, String date, String time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"        super(description, \"[E]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"        this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"        this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"h:ma\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"     * Returns the description of the event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"     * @return Description of event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"        return super.getDescription()","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"                + \" (at: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"                + this.time.format(DateTimeFormatter.ofPattern(\" h:mma\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"                + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weichang18":50}},{"path":"src/main/java/duke/MissingDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"public class MissingDateException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"    MissingDateException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"        super();","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"     * Return string message specific for the exception.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"     * @return String message.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"        return super.toString() + \"Sorry can\u0027t have missing date for task type!\";","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weichang18":18}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"     * Return the integer x value when input \"done x\" command.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"     * @param input Input of user.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"     * @return The index of the task to be marked done.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"    public Integer doneInputParser(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"        return Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"     * Return the integer x value when input \"delete x\" command.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"     * @param input Input of user.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"     * @return The index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"    public Integer deleteInputParser(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"        return Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"     * Return the description of the to-do task when input \"todo xxx\" command.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"     * @param input Input of user.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"     * @return The to-do task description.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"    public String toDoInputParser(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"        return input.replace(\"todo \", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"     * Return the description of the deadline task when input \"deadline xxx /by...\" command.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"     * @param input Input of user.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"     * @return The deadline task description.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"    public String deadlineInputTaskParser(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"        String[] parts \u003d input.split(\" /by \");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"        return parts[0].replace(\"deadline \" , \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"     * Return the date of the deadline task when input \"deadline... /by xxxx-xx-xx xxxx\" command.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"     * @param input Inout of the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"     * @return The deadline task date.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"    public String deadlineInputDateParser(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"        String[] parts \u003d input.split(\" /by \");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"weichang18"},"content":"        return parts[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"weichang18"},"content":"     * Return the description of the event task when input \"event xxx /at...\" command.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"weichang18"},"content":"     * @param input Input of the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"weichang18"},"content":"     * @return The event task description.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"weichang18"},"content":"    public String eventInputTaskParser(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"weichang18"},"content":"        String[] parts \u003d input.split(\" /at \");","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"weichang18"},"content":"        return parts[0].replace(\"event \" , \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"weichang18"},"content":"     * Return the date of the event task when input \"event... /at xxxx-xx-xx xxxx\" command.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"weichang18"},"content":"     * @param input Input of the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"weichang18"},"content":"     * @return The event task date.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"weichang18"},"content":"    public String eventInputDateParser(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"weichang18"},"content":"        String[] parts \u003d input.split(\" /at \");","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"weichang18"},"content":"        return parts[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"weichang18"},"content":"    public String findInputParser(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"weichang18"},"content":"        return input.substring(6);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"weichang18":82}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"    private File taskListFile;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"    private Boolean doesFileExists;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"     * @param filePath File path of the file to be accessed.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"        this.taskListFile \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"        this.doesFileExists \u003d this.taskListFile.exists();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"     * Retrieve the data saved and input into task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"     * @param taskList Task list for the data to be input in.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"     * @throws FileNotFoundException If file does not exists.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"    public void retrieveFile(TaskList taskList) throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"        Scanner fileScanner \u003d new Scanner(taskListFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"            String currLine \u003d fileScanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"            String currTaskType \u003d currLine.substring(3, 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"            String currTaskCheckBox \u003d currLine.substring(6, 7);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"            String currTask \u003d currLine.substring(9);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"            switch (currTaskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"            case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"                taskList.addTask(new Todo(currTask));","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"            case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"                String[] partsD \u003d currTask.split(\"by: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"                Task currDeadlineTask \u003d new Deadline(partsD[0].replace(\" (\", \"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"                        partsD[1].substring(0, 11),","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"                        partsD[1].substring(12).replace(\")\", \"\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"                taskList.addTask(currDeadlineTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"            case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"                String[] partsE \u003d currTask.split(\"at: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"                Task currEventTask \u003d new Event(partsE[0].replace(\" (\", \"\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"                        partsE[1].substring(0, 11),","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"                        partsE[1].substring(12).replace(\")\", \"\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"                taskList.addTask(currEventTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"weichang18"},"content":"            default:","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"weichang18"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"weichang18"},"content":"            if (currTaskCheckBox.equals(\"X\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"weichang18"},"content":"                taskList.getTask(taskList.taskListSize() - 1).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"weichang18"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"weichang18"},"content":"     * Saves the data in task list onto a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"weichang18"},"content":"     * @param taskList Task list that data is retrieved from.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"weichang18"},"content":"     * @throws IOException If there is wrong input or output.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"weichang18"},"content":"    public void saveFile(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"weichang18"},"content":"        StringBuilder listBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"weichang18"},"content":"        for (int j \u003d 0; j \u003c taskList.getNoOfTask(); j++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"weichang18"},"content":"            String listItem \u003d (j + 1)","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"weichang18"},"content":"                    + \".\"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"weichang18"},"content":"                    + taskList.getTask(j).getTaskType()","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"weichang18"},"content":"                    + taskList.getTask(j).checkIsDone()","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"weichang18"},"content":"                    + \" \" + taskList.getTask(j).getDescription();","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"weichang18"},"content":"            listBuilder.append(listItem).append(System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"weichang18"},"content":"        FileWriter dukeTaskListWriter \u003d new FileWriter(this.taskListFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"weichang18"},"content":"        dukeTaskListWriter.write(listBuilder.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"weichang18"},"content":"        dukeTaskListWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"weichang18"},"content":"     * Checks if the file specified exists.","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"weichang18"},"content":"     * @return True if file exists and false if it does not.","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"weichang18"},"content":"    public Boolean getDoesFileExists() {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"weichang18"},"content":"        return this.doesFileExists;","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"weichang18"},"content":"     * Creates a new file.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"weichang18"},"content":"     * @throws IOException If there is wrong input or output.","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"weichang18"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"weichang18"},"content":"        this.taskListFile.getParentFile().mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"weichang18"},"content":"        this.taskListFile.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"weichang18"},"content":"        this.doesFileExists \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"weichang18":103}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"    private final String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"    private String isDoneBox;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"    private String taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"     * Constructor for task class.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"     * @param description Description of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"     * @param taskType String format of task type.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"     * @throws TaskDescriptionException","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"    public Task(String description, String taskType) throws TaskDescriptionException {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"            throw new TaskDescriptionException();","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"            this.isDoneBox \u003d \"[ ]\";","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"            this.taskType \u003d taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"     * Returns the checkbox of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"     * @return String representation of checkbox.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"    public String checkIsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"        return this.isDoneBox;","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"     * Returns the description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"     * @return Description of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"        return this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"     * Sets the checkbox of the task as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"        this.isDoneBox \u003d \"[X]\";","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"weichang18"},"content":"        return this.taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weichang18":56}},{"path":"src/main/java/duke/TaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"public class TaskDescriptionException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"    TaskDescriptionException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"        super();","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"     * Return string message specific for the exception.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"     * @return String message.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"        return super.toString() + \"Sorry can\u0027t have missing description for task!\";","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weichang18":18}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"    private int noOfTask \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"     * Adds task onto task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"        this.noOfTask++;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"     * Returns the task specified by the index.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"     * @param index Index of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"     * @return Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"     * @return Size of task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"    public Integer taskListSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"        return this.taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"     * Sets the task specified as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"     * @param index Index of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"    public void setTaskDone(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"        taskList.get(index).markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"     * Remove the task specified by the index.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"weichang18"},"content":"     * @param index Index of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"weichang18"},"content":"     * @return The task that is removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"weichang18"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"weichang18"},"content":"        this.noOfTask -\u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"weichang18"},"content":"        return taskList.remove(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"weichang18"},"content":"     * Finds all task that contains a keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"weichang18"},"content":"     * @param keyword Keyword use to find task.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"weichang18"},"content":"     * @return Task list that contains all task that have the keyword","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"weichang18"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"weichang18"},"content":"        TaskList taskListWithKeyword \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"weichang18"},"content":"        for (int i \u003d 0; i \u003c taskListSize(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"weichang18"},"content":"            Task currTask \u003d this.taskList.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"weichang18"},"content":"            if (currTask.getDescription().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"weichang18"},"content":"                taskListWithKeyword.addTask(currTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"weichang18"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"weichang18"},"content":"        return taskListWithKeyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"weichang18"},"content":"     * Return string form of task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"weichang18"},"content":"     * @return String form of task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"weichang18"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"weichang18"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"weichang18"},"content":"        for (int j \u003d 0; j \u003c taskList.size(); j++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"weichang18"},"content":"            String listItem \u003d (j + 1)","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"weichang18"},"content":"                    + \".\"","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"weichang18"},"content":"                    + taskList.get(j).getTaskType()","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"weichang18"},"content":"                    + taskList.get(j).checkIsDone()","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"weichang18"},"content":"                    + \" \" + taskList.get(j).getDescription() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"weichang18"},"content":"            str \u003d str + listItem;","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"weichang18"},"content":"        return str;","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"weichang18"},"content":"    public int getNoOfTask() {","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"weichang18"},"content":"        return this.noOfTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"weichang18":100}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"        super(description, \"[T]\");","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weichang18":9}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"    private final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    private final String LINEBREAK \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"     * Prints greeting message.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"    public void greetingMsg() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"        String str \u003d \"Hello from\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"                + LOGO","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"                + LINEBREAK","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"                + \"My favorite partner is back! How can I help?\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"                + LINEBREAK;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"        System.out.print(str);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"     * Prints goodbye message.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"    public void goodbyeMsg() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"        System.out.print(LINEBREAK","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"                + \"Have a good day, friend!\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"                + LINEBREAK);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"     * Prints task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"     * @param taskList Task list to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"    public void listTaskList(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"        System.out.print(LINEBREAK","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"                + taskList.toString()","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"                + LINEBREAK);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"     * Prints done task message.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"     * @param task Task to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"    public void doneTaskMsg(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"        System.out.print(LINEBREAK","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"                + \"Well Done, I\u0027ll get it marked:\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"                + task.checkIsDone()","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"                + \" \" + task.getDescription() + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"                + LINEBREAK);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"weichang18"},"content":"     * Prints delete task message.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"weichang18"},"content":"     * @param task Task to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"weichang18"},"content":"    public void deleteTaskMsg(Task task, int noOfTask) {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"weichang18"},"content":"        System.out.print(LINEBREAK","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"weichang18"},"content":"                + \"Roger! I will remove this task from the list: \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"weichang18"},"content":"                + task.getTaskType()","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"weichang18"},"content":"                + task.checkIsDone()","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"weichang18"},"content":"                + task.getDescription() + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"weichang18"},"content":"                + \"Now you have \"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"weichang18"},"content":"                + noOfTask","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"weichang18"},"content":"                + \" tasks left in the list.\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"weichang18"},"content":"                + LINEBREAK);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"weichang18"},"content":"     * Prints add task message.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"weichang18"},"content":"     * @param task Task to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"weichang18"},"content":"    public void addTaskMsg(Task task, int noOfTask) {","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"weichang18"},"content":"        System.out.print(LINEBREAK","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"weichang18"},"content":"                + \"Roger! I will add this task in: \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"weichang18"},"content":"                + task.getTaskType()","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"weichang18"},"content":"                + task.checkIsDone()","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"weichang18"},"content":"                + \" \"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"weichang18"},"content":"                + task.getDescription() + \"\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"weichang18"},"content":"                + \"Now you have \"","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"weichang18"},"content":"                + noOfTask","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"weichang18"},"content":"                + \" tasks left in the list.\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"weichang18"},"content":"                + LINEBREAK);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"weichang18"},"content":"     * Prints find task message and lists relevant tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"weichang18"},"content":"     * @param taskList Task list that contains relevant tasks to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"weichang18"},"content":"    public void findTaskMsg(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"weichang18"},"content":"        System.out.print(LINEBREAK","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"weichang18"},"content":"                + \"Are these what you were looking for?\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"weichang18"},"content":"                + taskList.toString()","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"weichang18"},"content":"                + LINEBREAK);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"weichang18":102}},{"path":"src/main/java/duke/WrongInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"public class WrongInputException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"    WrongInputException() {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"        super();","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"     * Return string message specific for the exception.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"     * @return String message.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"        return super.toString() + \"Sorry I do not know what is this!\";","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weichang18":18}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"    public void testInstanceCreationWithTwoParameter() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"        String expected \u003d \"homework (by: Dec 31 2020 11:59PM)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"        Deadline deadline \u003d new Deadline(\"homework\", \"2020-12-31 2359\");","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"        assertEquals(expected, deadline.getDescription());","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"    public void testInstanceCreationWithThreeParameter() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"        String expected \u003d \"homework (by: Dec 31 2020 11:59PM)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"        Deadline deadline \u003d new Deadline(\"homework\", \"Dec 31 2020\", \"11:59PM\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"        assertEquals(expected, deadline.getDescription());","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"weichang18":22}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"    public void testParserDeadlineDescriptionOutput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"        String expected \u003d \"homework\";","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"        String output \u003d new Parser().deadlineInputTaskParser(\"deadline homework /by 2359\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"    public void testParserDeadlineDateOutput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"        String expected \u003d \"2359\";","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"        String output \u003d new Parser().deadlineInputDateParser(\"deadline homework /by 2359\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"    public void testParserEventDescriptionOutput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"        String expected \u003d \"birthday party\";","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"        String output \u003d new Parser().eventInputTaskParser(\"event birthday party /at 1900\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"    public void testParserEventDateOutput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"        String expected \u003d \"20/12/20 1900\";","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"        String output \u003d new Parser().eventInputDateParser(\"event birthday party /at 20/12/20 1900\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"        assertEquals(expected, output);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"weichang18":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"todo run","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"deadline do homework /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weichang18":5}}]
