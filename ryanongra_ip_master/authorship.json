[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"# The Duke","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"\u003cp\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"The Duke (inspired by a character in the show Solar Opposites) is a personal helper chatbot. The Duke allows you to ","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"keep track of tasks such as:","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":" - To-do type tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":" - Tasks with deadlines","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" - Events","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"See below for a full list of The Duke\u0027s commands and how to use The Duke :smiley:","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"\u003e Welcome to my humble abode. I\u0027m the Duke. The ruler of shadows.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"\u003e The main vein. The big boy. The top puppy.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"## User Guide","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"### Add To-Do `todo \u003ctask name\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"Adds a to-do type task to your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"###### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"`todo New Task` will add a to-do task called New Task to your list. ","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"### Add Deadline `deadline \u003cdeadline name\u003e /\u003cdate and time\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"Adds a task with a deadline to your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":" - Date and time is preceded with a backslash (/).","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":" - Date and time must be entered in the format YYYY-MM-DD HH-MM.","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"###### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"`deadline New Deadline /2021-12-30 18:00` will add a deadline task called ","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"New Deadline with the deadline set to the 30th of december 2021 at 6pm.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"### Add Event `event \u003cevent name\u003e /\u003cdate and time\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"Adds an event with a date and time to your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"- Date and time is preceded with a backslash (/).","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"- Date and time must be entered in the format YYYY-MM-DD HH-MM.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"###### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"`event New Event /2021-12-30 18:00` will add an event called","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"New Event scheduled for the 30th of december 2021 at 6pm.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"### List Tasks `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"Lists out all the tasks which you currently have in your list.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"### Complete Task `done \u003ctask index\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"Sets a task to be marked as completed.","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":" - `task index` is based on the index indicated with the command `list`.","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"###### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"`done 1` will mark the first task in the list as completed.","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"### Delete Task `delete \u003ctask index\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"Deletes a task from your task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"- `task index` is based on the index indicated with the command `list`.","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"###### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"`delete 1` will delete the first task in your list.","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"### Close Application `bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"Closes the application.","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"### Search List of Tasks `find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"Shows you your tasks which names contain the keyword specified. ","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"###### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"`find CS2103` will show you a list of all your tasks which have ","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"\"CS2103\" in their name.","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"### Reschedule a Task `snooze \u003ctask index\u003e /\u003cdate and time\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"Changes the deadline/time of a Deadline or Event task to the date and ","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"time specified.","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"- Command is only applicable to Deadline or Event tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"- `task index` is based on the index indicated with the command `list`.","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"- Date and time is preceded with a backslash (/).","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"- Date and time must be entered in the format YYYY-MM-DD HH-MM.","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"###### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"`snooze 1 /2021-12-30 23:59` will change the date and time of the first","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"task to the 30th of December, 11:59pm.","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ryanongra":68,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    String javaFxVersion \u003d \u002715.0.1\u0027","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ryanongra":18,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"# The Duke","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"\u003cp\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"The Duke (inspired by a character in the show Solar Opposites) is a personal helper chatbot. The Duke allows you to ","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"keep track of tasks such as:","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"\u003c/p\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":" - To-do type tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":" - Tasks with deadlines","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" - Events","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"See below for a full list of The Duke\u0027s commands and how to use The Duke :smiley:","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"\u003e Welcome to my humble abode. I\u0027m the Duke. The ruler of shadows.","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"\u003e The main vein. The big boy. The top puppy.","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"## User Guide","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"### Add To-Do `todo \u003ctask name\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"Adds a to-do type task to your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"#### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"`todo New Task` will add a to-do task called New Task to your list. ","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"### Add Deadline `deadline \u003cdeadline name\u003e /\u003cdate and time\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"Adds a task with a deadline to your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":" - Date and time is preceded with a backslash (/).","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":" - Date and time must be entered in the format YYYY-MM-DD HH-MM.","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"#### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"`deadline New Deadline /2021-12-30 18:00` will add a deadline task called ","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"New Deadline with the deadline set to the 30th of december 2021 at 6pm.","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"### Add Event `event \u003cevent name\u003e /\u003cdate and time\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"Adds an event with a date and time to your list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"- Date and time is preceded with a backslash (/).","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"- Date and time must be entered in the format YYYY-MM-DD HH-MM.","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"#### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"`event New Event /2021-12-30 18:00` will add an event called","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"New Event scheduled for the 30th of december 2021 at 6pm.","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"### List Tasks `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"Lists out all the tasks which you currently have in your list.","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"### Complete Task `done \u003ctask index\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"Sets a task to be marked as completed.","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":" - `task index` is based on the index indicated with the command `list`.","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"#### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"`done 1` will mark the first task in the list as completed.","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"### Delete Task `delete \u003ctask index\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"Deletes a task from your task list.","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"- `task index` is based on the index indicated with the command `list`.","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"#### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"`delete 1` will delete the first task in your list.","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"### Close Application `bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"Closes the application.","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"### Search List of Tasks `find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"Shows you your tasks which names contain the keyword specified. ","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"#### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"`find CS2103` will show you a list of all your tasks which have ","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"\"CS2103\" in their name.","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"### Reschedule a Task `snooze \u003ctask index\u003e /\u003cdate and time\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"Changes the deadline/time of a Deadline or Event task to the date and ","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"time specified.","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"- Command is only applicable to Deadline or Event tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"- `task index` is based on the index indicated with the command `list`.","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"- Date and time is preceded with a backslash (/).","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"- Date and time must be entered in the format YYYY-MM-DD HH-MM.","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"#### Example","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"`snooze 1 /2021-12-30 23:59` will change the date and time of the first","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"task to the 30th of December, 11:59pm.","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ryanongra":68,"-":18}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"import duke.Main;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":12}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.command.ICommand;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.io.Parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import duke.io.UserDialogBox;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":" * The main class for Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    // GUI components","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"    private Button helpButton;","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"    // Backend components","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"    private final ResponseManager responseManager;","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"    private final Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    // Image resources","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Jesse.jpg\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"     * @param saveFileLocation The path to where the save file is to be stored.","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"    public Duke(String saveFileLocation) {","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        responseManager \u003d new ResponseManager();","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        storage \u003d new Storage(saveFileLocation);","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"        taskManager \u003d new TaskManager(storage.loadSave());","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"     * Starts running the program.","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"     * @param stage The UI stage to display the chat.","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"        helpButton \u003d new Button(\"Help\");","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton, helpButton);","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"        stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"        stage.setTitle(\"The Duke\");","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"ryanongra"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"ryanongra"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"ryanongra"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"        helpButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"ryanongra"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"ryanongra"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"ryanongra"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"ryanongra"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"ryanongra"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"ryanongra"},"content":"     * Iteration 2:","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"ryanongra"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"ryanongra"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"ryanongra"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"ryanongra"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"ryanongra"},"content":"        System.out.println(react(userText));","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"ryanongra"},"content":"        String dukeText \u003d react(userText);","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"ryanongra"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"ryanongra"},"content":"                UserDialogBox.getUserDialog(userText, userImage),","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"ryanongra"},"content":"                UserDialogBox.getDukeDialog(dukeText, dukeImage)","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"ryanongra"},"content":"        );","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"ryanongra"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":134,"author":{"gitId":"ryanongra"},"content":"     * Generates a response based on the given input.","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":136,"author":{"gitId":"ryanongra"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"ryanongra"},"content":"        ICommand c \u003d parser.getInput(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"ryanongra"},"content":"        c.execute(taskManager, responseManager, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":139,"author":{"gitId":"ryanongra"},"content":"        return c.getReply();","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":141,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":142,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"ryanongra"},"content":"     * Runs the program until the bye command is used to end it.","lastModifiedDate":"2021-09-02"},{"lineNumber":144,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":145,"author":{"gitId":"ryanongra"},"content":"    public String react(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":146,"author":{"gitId":"ryanongra"},"content":"        ICommand c \u003d parser.getInput(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":147,"author":{"gitId":"ryanongra"},"content":"        assert(c !\u003d null);","lastModifiedDate":"2021-09-09"},{"lineNumber":148,"author":{"gitId":"ryanongra"},"content":"        c.execute(taskManager, responseManager, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":149,"author":{"gitId":"ryanongra"},"content":"        return c.getReply();","lastModifiedDate":"2021-09-02"},{"lineNumber":150,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":151,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":151}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates exceptions which the Duke program could throw/","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"     * This exception occurs when an input is invalid","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"     * (e.g. passes a String instead of an int).","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    public static class InvalidInputException extends Exception {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"        public InvalidInputException(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"            super(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     * This exception occurs when the user attempts to create a","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     * deadline/event without specifying the time.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    public static class NoTimeSpecifiedException extends Exception {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        public NoTimeSpecifiedException(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"            super(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"     * This exception occurs when the user attempts to","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"     * add in a task with no name.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"    public static class NoNameException extends Exception {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        public NoNameException(String message) {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"            super(message);","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"     * This exception occurs when the user attempts to","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"     * snooze a task which does not have a dateTime","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"     * (i.e. a to-do type task)","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"    public static class UnsnoozeableTaskException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        public UnsnoozeableTaskException(String message) {","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"            super(message);","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":49}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.io.MainWindow;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    private final Duke duke \u003d new Duke(\".\\\\docs\\\\save.txt\");","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"     * This method builds a GUI for Duke using FXML.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":32}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import java.util.List;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":" * This class encapsulated the management of local storage for Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    private final String SAVE_FILE_LOCATION;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"     * Constructor for Storage object, requires the path to","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"     * where the save file should be located.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"     * @param saveFileLocation A string which denotes the path to the save file.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    public Storage(String saveFileLocation) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        assert (saveFileLocation !\u003d null \u0026\u0026 saveFileLocation !\u003d \"\");","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"        this.SAVE_FILE_LOCATION \u003d saveFileLocation;","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"     * This method updates the local save file with the latest","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"     * list of tasks. It is called whenever a task is added/deleted/completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"     * @param tasks The latest list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    public void updateSave(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"            data.append(task.toStringSave()).append(\"\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"            FileOutputStream fos \u003d new FileOutputStream(SAVE_FILE_LOCATION, false);","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"            byte[] b \u003d data.toString().getBytes();","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"            fos.write(b);","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"            fos.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"            System.out.println(\"Error: Unable to save latest task. Please try again \\n\" + ex.getMessage());","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"     * This method is run once whenever the program is started up.","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"     * It loads the previous save or creates a new save file if it is","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"     * the first time the program is run.","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"     * @return The array list from the previous save.","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"    public ArrayList\u003cTask\u003e loadSave() {","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"            File saveFile \u003d new File(SAVE_FILE_LOCATION);","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"            Scanner sc \u003d new Scanner(saveFile);","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"                Task newTask \u003d generateTaskFromSave(sc.nextLine());","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"                tasks.add(newTask);","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"            return tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"            System.out.println(\"Error: save file not found \\n\" + e.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.NoNameException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"            System.out.println(\"Error: save file invalid\");","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"     * Creates a task by reading the string representing the task from the save file.","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"     * @param nextLine The string from the save file representing the task to be generated.","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"     * @return The task that has been generated from the save file string.","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"     * @throws DukeException.NoNameException Occurs when the task type in the save file is invalid.","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"    private Task generateTaskFromSave(String nextLine) throws DukeException.NoNameException {","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"        Task newTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"        String[] taskDetails \u003d nextLine.split(\"\u003e\");","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"        String name \u003d taskDetails[2];","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"        boolean done \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"        switch (taskDetails[0]) {","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"            case \"T\":","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"ryanongra"},"content":"                newTask \u003d new Task.ToDo(name, done);","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"                break;","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"ryanongra"},"content":"            case \"D\":","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"ryanongra"},"content":"                newTask \u003d new Task.Deadline(name, LocalDateTime.parse(taskDetails[3]), done);","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"ryanongra"},"content":"                break;","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"            case \"E\":","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"                newTask \u003d new Task.Event(name, LocalDateTime.parse(taskDetails[3]), done);","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"                break;","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"            default:","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"                throw new DukeException.NoNameException(\"Duke.Task type invalid\");","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"        return newTask;","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":105}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.*;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to add a Deadline type task.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager, Ui, and Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"public class AddDeadlineCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    private final String input;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    private TaskManager tm;","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    private ResponseManager responseManager;","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    private Task addedDeadline;","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    private String reply;","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"     * Constructor for the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"     * @param input The user\u0027s input which triggered the creation of this command.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    public AddDeadlineCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     * Adds the deadline task by interacting with the","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"     * relevant instances as mentioned above.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"            addedDeadline \u003d tm.addDeadline(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"            this.tm \u003d tm;","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"            this.responseManager \u003d responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"            this.storage \u003d storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"            if (addedDeadline !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getTaskAdditionMessage(addedDeadline, tm.getTasks().size());","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"                storage.updateSave(tm.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"                throw new DukeException.NoTimeSpecifiedException(","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"                        \"Please use the format YYYY-MM-DD HH:MM when entering when the event is \\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"                        + \"E.g. 2021-08-28 18:30\");","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.NoNameException","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"                | DukeException.NoTimeSpecifiedException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getErrorMessage(e);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":61}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.*;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to add an event type task.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager, Ui, and Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"public class AddEventCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    private final String input;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    private TaskManager tm;","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    private ResponseManager responseManager;","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    private Task addedEvent;","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    private String reply;","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"     * Constructor for the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"     * @param input The user\u0027s input which triggered the creation of this command.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    public AddEventCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     * Adds the event task by interacting with the relevant instances as mentioned above.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"            Task addedEvent \u003d tm.addEvent(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"            this.tm \u003d tm;","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"            this.responseManager \u003d responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"            this.storage \u003d storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"            this.addedEvent \u003d addedEvent;","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"            if (addedEvent !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getTaskAdditionMessage(addedEvent, tm.getTasks().size());","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"                storage.updateSave(tm.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"                throw new DukeException.NoTimeSpecifiedException(","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"                        \"Please use the format YYYY-MM-DD HH:MM when entering when the event is \\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"                                + \"E.g. 2021-08-28 18:30\");","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.NoNameException","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"                | DukeException.NoTimeSpecifiedException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getErrorMessage(e);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":61}},{"path":"src/main/java/duke/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.*;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to add a To-Do type task.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager, Ui, and Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"public class AddToDoCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    private String input;","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    private String reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"     * Constructor for the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     * @param input The user\u0027s input which triggered the creation of this command.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    public AddToDoCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"     * Adds the to-do task by interacting with the relevant instances as mentioned above.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"            Task addedTask \u003d tm.addToDo(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getTaskAdditionMessage(addedTask, tm.getTasks().size());","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"            storage.updateSave(tm.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.NoNameException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getErrorMessage(e);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":46}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to cease the conversation with Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the Ui.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"public class ByeCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    private String reply;","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"     * Calls the Ui object to display the \u0027bye\u0027 message then ends the program.","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        reply \u003d responseManager.getByeMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        return getReply();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":31}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.*;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to delete a task.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager, Ui, and Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"public class DeleteCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    private String taskIndex;","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    private TaskManager tm;","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    private ResponseManager responseManager;","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    private Task deletedTask;","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    private String reply;","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"     * Constructor for the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"     * @param taskIndex The index of the task which the user wants deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    public DeleteCommand(String taskIndex) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"     * Deletes the desired task by interacting with the relevant instances as mentioned above.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"            deletedTask \u003d tm.deleteTask(taskIndex);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"            this.responseManager \u003d responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"            if (deletedTask \u003d\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getInvalidIndexMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getTaskDeletionMessage(deletedTask, tm.getTasks().size());","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"                storage.updateSave(tm.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.InvalidInputException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getErrorMessage(e);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":56}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.*;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to complete a task.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager, Ui, and Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"public class DoneCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    private String taskIndex;","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    private TaskManager tm;","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    private ResponseManager responseManager;","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    private Task completedTask;","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    private String reply;","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"     * Constructor for the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"     * @param taskIndex The index of the task which the user wants to mark completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    public DoneCommand(String taskIndex) {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     * Marks the desired task completed by interacting with the relevant instances as mentioned above.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"            completedTask \u003d tm.completeTask(taskIndex);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"            this.responseManager \u003d responseManager;","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"            this.tm \u003d tm;","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"            this.storage \u003d storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"            if (completedTask \u003d\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getInvalidIndexMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getTaskCompletionMessage(completedTask, tm.getTasks().size());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"                storage.updateSave(tm.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.InvalidInputException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getErrorMessage(e);","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":57}},{"path":"src/main/java/duke/command/FindTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to find a task.","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager, Ui, and Storage.","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"public class FindTasksCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    private String keyword;","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    private String reply;","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     * Constructor for a command to find a task, (i.e when a user attempts","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"     * to search for a task in the list of tasks.","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"     * @param input Search keyword entered by the user.","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    public FindTasksCommand(String input) {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        keyword \u003d input.substring(5);","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     * Filters the current task list and passes it to the response manager","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"     * to be displayed.","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager of this instance of Duke.","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The ResponseManager of this instance of Duke.","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage of this instance of Duke.","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"        ArrayList\u003cTask\u003e originalTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        originalTasks.addAll(tm.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d (ArrayList\u003cTask\u003e) originalTasks.stream()","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"                .filter(task -\u003e task.getName().contains(keyword)).collect(Collectors.toList());","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        reply \u003d responseManager.getListTasksMessage(filteredTasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":52}},{"path":"src/main/java/duke/command/ICommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":" * This interface is used by all commands and ensures that commands implement the execute() method.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"public interface ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    void execute(TaskManager tm, ResponseManager responseManager, Storage storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    String getReply();","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":16}},{"path":"src/main/java/duke/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the command to display the current tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" * It is triggered by the parser and uses the TaskManager and Ui.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"public class ListTasksCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    private String reply;","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"     * Calls the Ui object to display the current list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        reply \u003d responseManager.getListTasksMessage(tm.getTasks());","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":30}},{"path":"src/main/java/duke/command/SnoozeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.*;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"public class SnoozeCommand implements ICommand {","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    private final String input;","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    private TaskManager tm;","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    private ResponseManager responseManager;","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    private Task snoozedTask;","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    private String reply;","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"     * Constructor for the command.","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     * @param input The user\u0027s input which triggered the creation of this command.","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    public SnoozeCommand(String input) {","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"     * Changes the deadline/event time.","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"     * @param tm The TaskManager object controlling the tasks in Duke.","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"     * @param responseManager The Ui object managing Duke\u0027s user interface.","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     * @param storage The Storage object managing the local storing of tasks.","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"            snoozedTask \u003d tm.snoozeTask(input);","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"            this.responseManager \u003d responseManager;","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"            if (snoozedTask \u003d\u003d null) {","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getInvalidIndexMessage();","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"            } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"                reply \u003d responseManager.getSnoozeTaskMessage(snoozedTask);","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"                storage.updateSave(tm.getTasks());","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.InvalidInputException | DukeException.NoTimeSpecifiedException | DukeException.UnsnoozeableTaskException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"            reply \u003d responseManager.getErrorMessage(e);","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"ryanongra":51}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.command;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":" * This class is used when an input is not understood.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"public class UnknownCommand implements ICommand {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    private String reply;","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    public UnknownCommand() {}","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    public void execute(TaskManager tm, ResponseManager responseManager, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"        this.reply \u003d responseManager.getUnknownCommandMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    public String getReply() {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        return reply;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":25}},{"path":"src/main/java/duke/io/DukeDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.io;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":" * The class which controls the creation of DukeDialogBoxes.","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"public class DukeDialogBox extends HBox {","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    private DukeDialogBox(String text, Image img) {","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DukeDialogBox.fxml\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"     * Creates the dialog box containing The Duke\u0027s response and image.","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"     * @param text The Duke\u0027s response","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"     * @param img The Duke\u0027s image (\"profile picture\")","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"     * @return The DukeDialogBox with the relevant components set.","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"    public static DukeDialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"        var db \u003d new DukeDialogBox(text, img);","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":62}},{"path":"src/main/java/duke/io/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.io;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import java.awt.*;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import java.net.URL;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Jesse.jpg\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"     * Creates the main window and filled the dialog container with The Duke\u0027s welcome message when the application","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"     * starts up.","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"        String welcomeMsg \u003d \"Hello I\u0027m The Duke \\uD83D\\uDE0A \\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"                DukeDialogBox.getDukeDialog(welcomeMsg, dukeImage)","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"                UserDialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"                DukeDialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"     * @author Daniel Barral","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"     * Redirects the user to the project\u0027s website and user guide.","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"     * Reused from https://stackoverflow.com/questions/10967451 with minor modifications.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"    private void showHelpMessage() {","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"        String userGuideUrl \u003d \"https://ryanongra.github.io/ip/\";","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"            Desktop.getDesktop().browse(new URL(userGuideUrl).toURI());","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"    //@author","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":78}},{"path":"src/main/java/duke/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.io;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the understanding of commands.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":" * It calls the relevant command depending on the user\u0027s input.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"public class Parser {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"     * Gets the user\u0027s input and return the relevant command to execute.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"     * @return A command which determines how the program should react.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    public ICommand getInput(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"        assert(input !\u003d null \u0026\u0026 input !\u003d \"\");","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"        // Exit","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"        // List out tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"            return new ListTasksCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"done\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"            return new DoneCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"        // Delete tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        // Add to-do task","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"            return new AddToDoCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"        // Add deadline task","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"            return new AddDeadlineCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        // Add event task","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"event\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"            return new AddEventCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        // Searches list of tasks","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"find\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"            return new FindTasksCommand(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        // Reschedules a Deadline or Event task","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"        } else if (input.split(\" \")[0].equals(\"snooze\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"            return new SnoozeCommand(input);","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"        // Unknown command","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"            return new UnknownCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":58}},{"path":"src/main/java/duke/io/ResponseManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.io;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":" * This class encapsulated the management of the user interface.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"public class ResponseManager {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"     * Goodbye message when the user enters the \"bye\" command.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    public String getByeMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     * Prints out the list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     * @param tasks The current list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"     * @return The message listing out the tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    public String getListTasksMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"        StringBuilder message \u003d new StringBuilder(","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"                \"Here is your list of tasks\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"            message.append(","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"                    \"Looks like you don\u0027t have any pending tasks!\\nMust be nice (-_-;)\");","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"            message.append(generateTasksMessage(tasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        return message.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    private StringBuilder generateTasksMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"            String newTask \u003d i + 1 + \".\"","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"                    + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"            message.append(newTask);","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        return message;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"     * Prints confirmation that a task was added successfully.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"     * @param task The task that was added.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"     * @param numTasks The new total number of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"     * @return The confirmation message.","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"    public String getTaskAdditionMessage(Task task, int numTasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"        return \"I\u0027ve added the task: \\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"                + \"     \" + task.toString() + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"                + \"You now have \" + numTasks + \" tasks, jiayouz!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"     * Prints confirmation that a task was successfully deleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"     * @param numTasks The new total number of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"     * @return The confirmation message.","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"    public String getTaskDeletionMessage(Task task, int numTasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"        return \"I\u0027ve deleted the task: \\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"                + \"     \" + task.toString() + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"                + \"You now have \" + numTasks + \" tasks, jiayouz!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"     * Prints confirmation that a task was successfully completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"     * @param task The task that was completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"     * @param numTasks The current total number of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"     * @return The confirmation message.","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"    public String getTaskCompletionMessage(Task task, int numTasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"        return \"You\u0027ve completed the task: \\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"                + \"     \" + task.toString() + \" Well done!\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"                + \"You now have \" + numTasks + \" tasks, jiayouz!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"     * Prints confirmation that a task was successfully snoozed.","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"     * @param task The task which has been snoozed.","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"     * @return The confirmation message.","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"ryanongra"},"content":"    public String getSnoozeTaskMessage(Task task) {","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"        return \"The task: \\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"ryanongra"},"content":"                + \"     \" + task.toString() + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":95,"author":{"gitId":"ryanongra"},"content":"                + \"has been snoozed\\n\";","lastModifiedDate":"2021-09-09"},{"lineNumber":96,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"     * Prints an error message to the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"     * @param msg The error that was thrown.","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"    public String getErrorMessage(Exception msg) {","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"        return msg.getMessage();","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"ryanongra"},"content":"     * Prints a message to tell the user that Duke does not understand their input.","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"ryanongra"},"content":"    public String getUnknownCommandMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"ryanongra"},"content":"        return \"\\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\n\" +","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"                \"Sorry I don\u0027t understand what that means\";","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"ryanongra"},"content":"     * Prints a message to tell the user that the task number they are trying to complete/delete does not exist.","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"ryanongra"},"content":"    public String getInvalidIndexMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"ryanongra"},"content":"        return \"\\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\n\" +","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"ryanongra"},"content":"                \"You don\u0027t have that many tasks!\";","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":122}},{"path":"src/main/java/duke/io/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.io;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"public class UserDialogBox extends HBox {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    private UserDialogBox(String text, Image img) {","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"     * Creates the dialog box containing the user\u0027s response and image.","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"     * @param text The user\u0027s input.","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"     * @param img The user\u0027s image (\"profile picture\")","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"     * @return The UserDialogBox with the relevant components set.","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"    public static UserDialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"        return new UserDialogBox(text, img);","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"     * Creates the dialog box containing The Duke\u0027s response and image.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"     * @param text The Duke\u0027s response","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"     * @param img The Duke\u0027s image (\"profile picture\")","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"     * @return The DukeDialogBox with the relevant components set.","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"    public static UserDialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"        var db \u003d new UserDialogBox(text, img);","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":75}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.task;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":" * This class encapsulates the tasks: To-do, Deadline, and Event.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"public class Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    private final String name;","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    private final String taskType;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"     * Constructor for newly added tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"     * @param name The name of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"     * @param taskType The type of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"     * @throws DukeException.NoNameException Throws then the task name passed in is empty.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"    public Task(String name, String taskType) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"        if (name.replaceAll(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.NoNameException(\"Duke.Duke says: Duke.Task cannot have no name\");","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"     * Constructor for tasks created from storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"     * @param name The name of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"     * @param taskType The type of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"     * @param done Whether the task has been completed or not.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"     * @throws DukeException.NoNameException Throws then the task name passed in is empty.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"    public Task(String name, String taskType, boolean done) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"        if (name.replaceAll(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.NoNameException(\"Duke.Duke says: Duke.Task cannot have no name\");","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"    public String getName() {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"        return name;","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"    public void snoozeTask(LocalDateTime time) throws DukeException.UnsnoozeableTaskException {","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"        throw new DukeException.UnsnoozeableTaskException(\"This task cannot be snoozed!\");","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"        return (taskType + (isDone ? \" (done) \" : \" (not done) \") + name);","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"     * Returns a string representing the task in the save file format.","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"    public String toStringSave() {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"        int doneData \u003d isDone ? 1 : 0;","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"        char taskTypeData \u003d taskType.equals(\"#ToDo\")","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"                ? \u0027T\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"                : taskType.equals(\"#Deadline\")","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"                ? \u0027D\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"                : \u0027E\u0027;","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"        return taskTypeData + \"\u003e\" + doneData + \"\u003e\" + name;","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"     * This class encapsulates a to-do type task.","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"    public static class ToDo extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"        public ToDo(String name) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#ToDo\");","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"        public ToDo(String name, boolean done) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#ToDo\", done);","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"ryanongra"},"content":"     * This class encapsulates a task with a deadline.","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"        private LocalDateTime deadline;","lastModifiedDate":"2021-09-09"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"        /**","lastModifiedDate":"2021-09-09"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"         * Constructor for a new deadline.","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"         *","lastModifiedDate":"2021-09-09"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"         * @param name The name of the deadline task.","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"         * @param deadline When the deadline task is due.","lastModifiedDate":"2021-09-09"},{"lineNumber":106,"author":{"gitId":"ryanongra"},"content":"         */","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"        public Deadline(String name, LocalDateTime deadline) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#Deadline\");","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"ryanongra"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"ryanongra"},"content":"            assert (deadline !\u003d null);","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"ryanongra"},"content":"        /**","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"ryanongra"},"content":"         * Constructor for a deadline from the save file.","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"ryanongra"},"content":"         *","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"ryanongra"},"content":"         * @param name The name of the deadline task.","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"ryanongra"},"content":"         * @param deadline When the deadline task is due.","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"ryanongra"},"content":"         * @param done Whether the deadline task has been completed.","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"ryanongra"},"content":"         */","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"ryanongra"},"content":"        public Deadline(String name, LocalDateTime deadline, boolean done) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#Deadline\", done);","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"ryanongra"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"ryanongra"},"content":"            assert (deadline !\u003d null);","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"ryanongra"},"content":"        /**","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"ryanongra"},"content":"         * Changes the deadline of the task to the dateTime specified.","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"ryanongra"},"content":"         *","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"ryanongra"},"content":"         * @param time The new dateTime for this task.","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"ryanongra"},"content":"         */","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"ryanongra"},"content":"        public void snoozeTask(LocalDateTime time) {","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"ryanongra"},"content":"            this.deadline \u003d time;","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"ryanongra"},"content":"        public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"ryanongra"},"content":"            return super.toString() + \" (\" + deadline.toString().replace(\u0027T\u0027, \u0027 \u0027) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"ryanongra"},"content":"        /**","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"ryanongra"},"content":"         * Returns a string representing the task in the save file format.","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"ryanongra"},"content":"         */","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"ryanongra"},"content":"        public String toStringSave() {","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"ryanongra"},"content":"            return super.toStringSave() + \"\u003e\" + deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"ryanongra"},"content":"     * This class encapsulates an event type task.","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"ryanongra"},"content":"    public static class Event extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":152,"author":{"gitId":"ryanongra"},"content":"        private LocalDateTime when;","lastModifiedDate":"2021-09-09"},{"lineNumber":153,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"ryanongra"},"content":"        /**","lastModifiedDate":"2021-09-09"},{"lineNumber":155,"author":{"gitId":"ryanongra"},"content":"         * Constructor for a new event.","lastModifiedDate":"2021-09-09"},{"lineNumber":156,"author":{"gitId":"ryanongra"},"content":"         *","lastModifiedDate":"2021-09-09"},{"lineNumber":157,"author":{"gitId":"ryanongra"},"content":"         * @param name The name of the event.","lastModifiedDate":"2021-09-09"},{"lineNumber":158,"author":{"gitId":"ryanongra"},"content":"         * @param when When the event is happening.","lastModifiedDate":"2021-09-09"},{"lineNumber":159,"author":{"gitId":"ryanongra"},"content":"         */","lastModifiedDate":"2021-09-09"},{"lineNumber":160,"author":{"gitId":"ryanongra"},"content":"        public Event(String name, LocalDateTime when) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#Event\");","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"ryanongra"},"content":"            this.when \u003d when;","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"ryanongra"},"content":"            assert (when !\u003d null);","lastModifiedDate":"2021-09-09"},{"lineNumber":164,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"ryanongra"},"content":"        /**","lastModifiedDate":"2021-09-09"},{"lineNumber":167,"author":{"gitId":"ryanongra"},"content":"         * Constructor for an event from the save file.","lastModifiedDate":"2021-09-09"},{"lineNumber":168,"author":{"gitId":"ryanongra"},"content":"         *","lastModifiedDate":"2021-09-09"},{"lineNumber":169,"author":{"gitId":"ryanongra"},"content":"         * @param name The name of the event.","lastModifiedDate":"2021-09-09"},{"lineNumber":170,"author":{"gitId":"ryanongra"},"content":"         * @param when When the event is happening.","lastModifiedDate":"2021-09-09"},{"lineNumber":171,"author":{"gitId":"ryanongra"},"content":"         * @param done Whether the event has been completed.","lastModifiedDate":"2021-09-09"},{"lineNumber":172,"author":{"gitId":"ryanongra"},"content":"         */","lastModifiedDate":"2021-09-09"},{"lineNumber":173,"author":{"gitId":"ryanongra"},"content":"        public Event(String name, LocalDateTime when, boolean done) throws DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"ryanongra"},"content":"            super(name, \"#Event\", done);","lastModifiedDate":"2021-08-27"},{"lineNumber":175,"author":{"gitId":"ryanongra"},"content":"            this.when \u003d when;","lastModifiedDate":"2021-08-27"},{"lineNumber":176,"author":{"gitId":"ryanongra"},"content":"            assert (when !\u003d null);","lastModifiedDate":"2021-09-09"},{"lineNumber":177,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"ryanongra"},"content":"        /**","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"ryanongra"},"content":"         * Changes the date and time of when the event is happening to the dateTime specified.","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"ryanongra"},"content":"         *","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"ryanongra"},"content":"         * @param time The new dateTime for this event.","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"ryanongra"},"content":"         */","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"ryanongra"},"content":"        public void snoozeTask(LocalDateTime time) {","lastModifiedDate":"2021-09-09"},{"lineNumber":185,"author":{"gitId":"ryanongra"},"content":"            this.when \u003d time;","lastModifiedDate":"2021-09-09"},{"lineNumber":186,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":187,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":188,"author":{"gitId":"ryanongra"},"content":"        public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":189,"author":{"gitId":"ryanongra"},"content":"            return super.toString() + \" (\" + when.toString().replace(\u0027T\u0027, \u0027 \u0027) + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":190,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":191,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":192,"author":{"gitId":"ryanongra"},"content":"        /**","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"ryanongra"},"content":"         * Returns a string representing the task in the save file format.","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"ryanongra"},"content":"         */","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"ryanongra"},"content":"        public String toStringSave() {","lastModifiedDate":"2021-08-27"},{"lineNumber":196,"author":{"gitId":"ryanongra"},"content":"            return super.toStringSave() + \"\u003e\" + when;","lastModifiedDate":"2021-08-27"},{"lineNumber":197,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":198,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":199,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":200,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":201}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"package duke.task;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"    public TaskManager(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"        return tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"     * Creates a To-Do task.","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"     * @param input The input entered by the user containing the name of the task.","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"     * @return The created To-Do task.","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"    public Task addToDo(String input) throws DukeException.NoNameException {","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"        if (input.length() \u003c 5) {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.NoNameException(\"Duke says: You can\u0027t add a task with no name\");","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        Task.ToDo newToDo \u003d new Task.ToDo(input.substring(5));","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        tasks.add(newToDo);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"        return newToDo;","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"     * Creates a Deadline task.","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"     * @param input The input entered by the user containing the name of the task","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"     *              and its deadline.","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"     * @return The created Deadline task.","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"    public Task addDeadline(String input) throws DukeException.NoTimeSpecifiedException, DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"        Task addedDeadline \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"            Task.Deadline newDeadline \u003d new Task.Deadline(input.substring(9).split(\" /\")[0],","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"                    LocalDateTime.parse(input.substring(9).split(\" /\")[1],","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"            addedDeadline \u003d newDeadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"        } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.NoTimeSpecifiedException(\"Duke.Duke says: Please include a deadline\");","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"            System.out.println(\"Duke says: Please use the format YYYY-MM-DD HH:MM when entering deadline \\n \"","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"                    + \"E.g. 2021-08-28 18:30\");","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"        return addedDeadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"     * Creates a Event task.","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"     * @param input The input entered by the user containing the name of the task","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"     *              and its time.","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"     * @return The created Event task.","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"    public Task addEvent(String input) throws DukeException.NoTimeSpecifiedException, DukeException.NoNameException {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"        Task addedEvent \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"            Task.Event newEvent \u003d new Task.Event(input.substring(6).split(\" /\")[0],","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"                    LocalDateTime.parse(input.substring(6).split(\" /\")[1],","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"            addedEvent \u003d newEvent;","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"        } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.NoTimeSpecifiedException(\"Duke says: Please include a time\");","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"            System.out.println(\"Duke says: Please use the format YYYY-MM-DD HH:MM when entering when the event is \\n \"","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"                    + \"E.g. 2021-08-28 18:30\");","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"        return addedEvent;","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"     * Sets a task to be marked as completed/done.","lastModifiedDate":"2021-09-09"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"     * @param input The input entered by the user including the index of the task to","lastModifiedDate":"2021-09-09"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"     *              be marked as done.","lastModifiedDate":"2021-09-09"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"     * @return The task which has been marked as completed.","lastModifiedDate":"2021-09-09"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"ryanongra"},"content":"    public Task completeTask(String input) throws DukeException.InvalidInputException {","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"        Task completedTask \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"ryanongra"},"content":"            int taskIndex \u003d Integer.parseInt(String.valueOf(input.charAt(5)));","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"ryanongra"},"content":"            if (!(taskIndex \u003e tasks.size())) {","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"                completedTask \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"                completedTask.completeTask();","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.InvalidInputException(\"Duke says: Please enter the index of the completed task\");","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"        return completedTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"     * Deletes a task.","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"ryanongra"},"content":"     * @param input The input entered by the user including the index of the task to","lastModifiedDate":"2021-09-09"},{"lineNumber":110,"author":{"gitId":"ryanongra"},"content":"     *              be deleted.","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"ryanongra"},"content":"     * @return The task which has been deleted.","lastModifiedDate":"2021-09-09"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"ryanongra"},"content":"    public Task deleteTask(String input) throws DukeException.InvalidInputException {","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"ryanongra"},"content":"        Task deletedTask \u003d null;","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"ryanongra"},"content":"            int taskIndex \u003d Integer.parseInt(String.valueOf(input.charAt(7)));","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"ryanongra"},"content":"            if (!(taskIndex \u003e tasks.size())) {","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"ryanongra"},"content":"                System.out.println(\"Duke says: You have deleted the task \"","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"ryanongra"},"content":"                        + tasks.get(taskIndex - 1).getName());","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"ryanongra"},"content":"                deletedTask \u003d tasks.remove(taskIndex - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"ryanongra"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.InvalidInputException(","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"ryanongra"},"content":"                    \"Duke says: Please enter the index of the task you want to delete\");","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"ryanongra"},"content":"        return deletedTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"ryanongra"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"ryanongra"},"content":"     * Changes the dataTime for a specified deadline or event type task.","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"ryanongra"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"ryanongra"},"content":"     * @param input The user\u0027s input.","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"ryanongra"},"content":"     * @return The task which has been updated.","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"ryanongra"},"content":"     * @throws DukeException.NoTimeSpecifiedException Occurs when the user does not provide a dateTime.","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"ryanongra"},"content":"     * @throws DukeException.InvalidInputException Occurs when the user does not enter the date in the correct format","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"ryanongra"},"content":"     *                                             or when the task index entered it invalid.","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"ryanongra"},"content":"     * @throws DukeException.UnsnoozeableTaskException Occurs when the user attempts to snooze a to-do type task.","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"ryanongra"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"ryanongra"},"content":"    public Task snoozeTask(String input) throws DukeException.NoTimeSpecifiedException, DukeException.InvalidInputException,","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"ryanongra"},"content":"            DukeException.UnsnoozeableTaskException {","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"ryanongra"},"content":"        Task snoozedTask \u003d null;","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"ryanongra"},"content":"            int taskIndex \u003d Integer.parseInt(String.valueOf(input.charAt(7)));","lastModifiedDate":"2021-09-09"},{"lineNumber":144,"author":{"gitId":"ryanongra"},"content":"            if (!(taskIndex \u003e tasks.size())) {","lastModifiedDate":"2021-09-09"},{"lineNumber":145,"author":{"gitId":"ryanongra"},"content":"                snoozedTask \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"ryanongra"},"content":"                snoozedTask.snoozeTask(LocalDateTime.parse(input.substring(6).split(\" /\")[1],","lastModifiedDate":"2021-09-09"},{"lineNumber":147,"author":{"gitId":"ryanongra"},"content":"                        DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2021-09-09"},{"lineNumber":148,"author":{"gitId":"ryanongra"},"content":"            } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"ryanongra"},"content":"                throw new DukeException.InvalidInputException(\"You don\u0027t have that many tasks!\");","lastModifiedDate":"2021-09-09"},{"lineNumber":150,"author":{"gitId":"ryanongra"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":151,"author":{"gitId":"ryanongra"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.NoTimeSpecifiedException(\"Duke says: Please include a time\");","lastModifiedDate":"2021-09-09"},{"lineNumber":153,"author":{"gitId":"ryanongra"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":154,"author":{"gitId":"ryanongra"},"content":"            throw new DukeException.InvalidInputException(\"Duke says: Please use the format YYYY-MM-DD HH:MM when entering when the event is \\n \"","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"ryanongra"},"content":"                    + \"E.g. 2021-08-28 18:30\");","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":157,"author":{"gitId":"ryanongra"},"content":"        return snoozedTask;","lastModifiedDate":"2021-09-09"},{"lineNumber":158,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":159,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":159}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ryanongra":16}},{"path":"src/main/resources/view/DukeDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: dimgrey;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"            \u003cFont name\u003d\"Courier New Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ryanongra":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: black;\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.io.MainWindow\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"259.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"        \u003cButton id\u003d\"helpButton\" fx:id\u003d\"sendButton\" layoutX\u003d\"259.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"86.0\" style\u003d\"-fx-border-radius: 25;\" stylesheets\u003d\"@DarkTheme.css\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"      \u003cButton fx:id\u003d\"helpButton\" layoutX\u003d\"345.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#showHelpMessage\"  prefHeight\u003d\"42.0\" prefWidth\u003d\"55.0\" style\u003d\"-fx-border-radius: 40;\" stylesheets\u003d\"@DarkTheme.css\" text\u003d\"?\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"      \u003c/Button\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"57.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: black;\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"            \u003cTextField editable\u003d\"false\" prefHeight\u003d\"58.0\" prefWidth\u003d\"310.0\" style\u003d\"-fx-background-color: black; -fx-text-fill: white\" text\u003d\"The Duke\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"                  \u003cFont name\u003d\"Arial Black\" size\u003d\"26.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"            \u003c/TextField\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"56.0\" prefHeight\u003d\"502.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: red; -fx-border-color: black;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"502.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: black;\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ryanongra":38}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: black;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"            \u003cFont name\u003d\"Comic Sans MS\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ryanongra":20}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"import duke.*;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"import duke.io.ResponseManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"import duke.command.AddToDoCommand;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"    TaskManager tm \u003d new TaskManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"    Storage storage \u003d new Storage(\"docs\\\\testSave.txt\");","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"    ResponseManager responseManager \u003d new ResponseManager();","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"ryanongra"},"content":"    public void addEventCommand_validInput_eventAdded() {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"ryanongra"},"content":"        String addEvent \u003d \"event test event /2020-02-02 20:20\";","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ryanongra"},"content":"        AddEventCommand command \u003d new AddEventCommand(addEvent);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ryanongra"},"content":"        command.execute(tm, responseManager, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"#Event (not done) test event (2020-02-02 20:20)\", tm.getTasks().get(0).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ryanongra"},"content":"    public void addDeadline_validInput_deadlineAdded() {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"ryanongra"},"content":"        String addDeadline \u003d \"deadline test deadline /2020-02-02 20:20\";","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"ryanongra"},"content":"        AddDeadlineCommand command \u003d new AddDeadlineCommand(addDeadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ryanongra"},"content":"        command.execute(tm, responseManager, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"#Deadline (not done) test deadline (2020-02-02 20:20)\", tm.getTasks().get(0).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ryanongra"},"content":"    public void addToDo_valid_input_todoAdded() {","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"ryanongra"},"content":"        String addDeadline \u003d \"todo test todo\";","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ryanongra"},"content":"        AddToDoCommand command \u003d new AddToDoCommand(addDeadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ryanongra"},"content":"        command.execute(tm, responseManager, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"#ToDo (not done) test todo\", tm.getTasks().get(0).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"ryanongra"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"ryanongra"},"content":"    public void testResponseManager_anyInput_correctResponseGiven() {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"ryanongra"},"content":"        TaskManager tm \u003d new TaskManager(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"ryanongra"},"content":"        ResponseManager rm \u003d new ResponseManager();","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"ryanongra"},"content":"        // Dummy tasks to be used for testing","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"ryanongra"},"content":"        Task.ToDo dummyTodo;","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"ryanongra"},"content":"        Task.Deadline dummyDeadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"ryanongra"},"content":"        Task.Event dummyEvent;","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"ryanongra"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"ryanongra"},"content":"            dummyTodo \u003d (Task.ToDo) tm.addToDo(\"todo todo\");","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"ryanongra"},"content":"            dummyDeadline \u003d (Task.Deadline) tm","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"ryanongra"},"content":"                    .addDeadline(\"deadline deadline /2020-12-15 18:20\");","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"ryanongra"},"content":"            dummyEvent \u003d (Task.Event) tm","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"ryanongra"},"content":"                    .addEvent(\"event event /2020-12-15 18:20\");","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"ryanongra"},"content":"        } catch (DukeException.NoNameException | DukeException.NoTimeSpecifiedException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"ryanongra"},"content":"            assertEquals(\"Tasks successfully created\", \"Tasks encountered error\");","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"ryanongra"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"ryanongra"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tm.getTasks();","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"ryanongra"},"content":"        int numTasks \u003d tm.getTasks().size();","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"Bye. Hope to see you again soon!\", rm.getByeMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"Here is your list of tasks\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"ryanongra"},"content":"                \"1.#ToDo (not done) todo\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"ryanongra"},"content":"                \"2.#Deadline (not done) deadline (2020-12-15 18:20)\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"ryanongra"},"content":"                \"3.#Event (not done) event (2020-12-15 18:20)\\n\", rm.getListTasksMessage(tm.getTasks()));","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"I\u0027ve added the task: \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"ryanongra"},"content":"                + \"     #ToDo (not done) todo\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"ryanongra"},"content":"                + \"You now have 3 tasks, jiayouz!\",","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"ryanongra"},"content":"                rm.getTaskAdditionMessage(tasks.get(0), numTasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"I\u0027ve added the task: \\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"ryanongra"},"content":"                        \"     #Deadline (not done) deadline (2020-12-15 18:20)\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"ryanongra"},"content":"                        \"You now have 3 tasks, jiayouz!\",","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"ryanongra"},"content":"                rm.getTaskAdditionMessage(tasks.get(1), numTasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"I\u0027ve added the task: \\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"ryanongra"},"content":"                        \"     #Event (not done) event (2020-12-15 18:20)\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"ryanongra"},"content":"                        \"You now have 3 tasks, jiayouz!\",","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"ryanongra"},"content":"                rm.getTaskAdditionMessage(tasks.get(2), numTasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"I\u0027ve deleted the task: \\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"ryanongra"},"content":"                        \"     #ToDo (not done) todo\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"ryanongra"},"content":"                        \"You now have 2 tasks, jiayouz!\",","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"ryanongra"},"content":"                rm.getTaskDeletionMessage(tasks.get(0), numTasks - 1));","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"You\u0027ve completed the task: \\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"ryanongra"},"content":"                        \"     #Deadline (not done) deadline (2020-12-15 18:20) Well done!\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"ryanongra"},"content":"                        \"You now have 3 tasks, jiayouz!\",","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"ryanongra"},"content":"                rm.getTaskCompletionMessage(tasks.get(1), numTasks));","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"The task: \\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"ryanongra"},"content":"                        \"     #Event (not done) event (2020-12-15 18:20)\\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"ryanongra"},"content":"                        \"has been snoozed\\n\",","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"ryanongra"},"content":"                rm.getSnoozeTaskMessage(tasks.get(2)));","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"\\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"ryanongra"},"content":"                \"Sorry I don\u0027t understand what that means\", rm.getUnknownCommandMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"ryanongra"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"ryanongra"},"content":"        assertEquals(\"\\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\u26A0 \\n\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"ryanongra"},"content":"                \"You don\u0027t have that many tasks!\", rm.getInvalidIndexMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"ryanongra"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"ryanongra"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ryanongra":113}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ryanongra"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ryanongra"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"ryanongra"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"ryanongra"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"ryanongra"},"content":"todo get some sleep","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"ryanongra"},"content":"event dinner","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"ryanongra"},"content":"event dinner /thurs","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"ryanongra"},"content":"deadline homework","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"ryanongra"},"content":"deadline homework /monday","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ryanongra"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ryanongra"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ryanongra"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ryanongra"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"ryanongra"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"ryanongra"},"content":"remove 1","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"ryanongra"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"ryanongra"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"ryanongra"},"content":"list","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"ryanongra":18}}]
